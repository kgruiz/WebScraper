

= *Typst Docs Markdown*



= *main.md*

/*[ Learn what's new in Typst 0.12 ](https://typst.app/blog/2024/typst-0.12/)/*[ /*![Typst](/assets/images/typst.svg)*/*/svg) ](/#star/*[ GitHub  ](https://github.com/typst/)*///*[ Discord  ](https://discord.gg/2uDybryKPe)*///*[ Mastodon  ](https://mastodon.social/@typst)*/n/*[ Bluesky  ](https://bsky.app/profile/typst.app)*/p/*[ LinkedIn  ](https://www.linkedin.com/company/typst/)*/e/*[ Pricing ](/pricing/)*/)/*[ Docs ](/docs/)*/(/*[ Universe ](/universe/)*///*[ Forum ](https://forum.typst.app)*/)/*[ Sign in ](/signin/)*///*[ Sign up ](/signup)*/- [ Sign in ](/signin/)
  - [ Sign up ](/signup)

=  Compose  
papers  
faster

Focus on your text/*[ Sign up for free and try it now! ](/signup/*[ View on GitHub
](https://github.com/typst/typst)*/*[A mockup of the Typst editor.](/assets/images/mockup.png/*![A mockup of the Typst editor.](/assets/images/mockup.png)*/png)

A more productive workflow for science.

Eduardo

â  First time testing/*[User image of _submersion_](/assets/images/submersion-avatar.png)/*[ _submersion_
](https://www.reddit.com/r/LaTeX/comments/zyuyfc/comment/j2ddt10/?utm_source=share&utm_medium=web2x&context=3)*/zyuyfc/comment/j2ddt10/?utm_source=share&utm_medium=web2x&context=3/*[User image of Alistair](/assets/images/alistair-avatar.jpg)*/ â/*![User image of Alistair](/assets/images/alistair-avatar.jpg)*/tar.jpg)

A/*[User image of BlueTJ](/assets/images/bluetj-avatar.jpg)*/pst so /*![User image of BlueTJ](/assets/images/bluetj-av/*[User image of Vallaris](/assets/images/vallaaris-avatar.png)*/-avatar.png)/*[ Vallaris
](https://www.reddit.com/r/LaTeX/comments/zyuyfc/comment/j2d8for/?utm_source=share&utm_medium=web2x&context=3)*//LaTeX/comments/zyuyfc/comment/j2d8for/?utm_source=share&utm_medium=web2x&context=3)

â  My first impression is: It's really great!  â

Louis

â  UI: Ultra clean â¨, Docs: Very comprehensive.  â

==  Team Up With Templates

Typst supercharges templates: They react to yo/*[ community templates
](/universe)*/nstantly while you type. Select from a wide range of  [ community templates
](/universe) or creat/*![A paper in the IEEE double column style, set in the TeX Gyre Termes
typeface.](/assets/images/ieee.png)*/images/ieee.png)*/the IEEE doubl/*![A
paper in the Oxford Genetics double column style, set in the TeX Gyre Heros
typeface.](/assets/images/oxford.png)*/s/images/oxford.png)*/rd Genetics /*![A
paper in the MDPI single column style with an information gutter. It is set in
the TeX Gyre Pagella typeface.](/assets/images/mdpi.png)*//assets/images/mdpi.png)*/le with an information gutter. It is set in
the TeX /*[A paragraph of text with colorful cursors, each applying different edits.
Below, there are the profile pictures of the three users who are logged
in.](/assets/images/collab.png)*/
Below, there are the profile pictures of the three users who are logged
in.](/assets/images/collab.png)

==  Work With Your Peers

Whether in the classroom, the faculty office, or at home: Typst runs in your
browser, so everyone on the team can just start writing.

===  Level up your team.

Store shared documents in team workspaces to bring everyone in your working
group on the same page.

==  Why should I use Typst instead of ...

  - LaTeX 
  - Word 
  - Google Docs 

  - Typst... 
    - previews your changes instantly. 
    - provides clear, understandable error messages. 
    - has a consistent styling system for configuring everything from fonts and margins to the look of headings and lists. 
    - uses familiar programming constructs instead of hard-to-understand macros. 
  - With Typst, you can... 
    - easily collaborate in teams. 
    - use and create powerful templates that automatically format everything as you write. 
    - just change formatting later without going over the whole document by hand. 
    - enjoy higher-quality typographical output, including improved justification. 
  - With Typst, you... 
    - can create professional-looking documents. 
    - have a lot more functionality, including better math support, figure handling, and a proper table of contents. 
    - profit from powerful templates that automat/*![A page with a rocket taking of on the left and a essay on rocket
propulsion on the right.](/assets/images/rocket.png)*/](/assets/images/rocket.png)*/th a rocket taking of on the left and a essay on rocket
propulsion on the right.](/assets/images/rocket.png) ](/assets/images/rocket-
large.png)

==  For Rocket Scientists.  
And the rest of us, too.

Most preview users learned/*[ 4-step tutorial ](/docs/tutorial/)*/stands between
you and stunning papers.

===  Get started quickly

with the [ 4-step tutorial ](/docs/tutorial/) . With human-friendly error
messages, Typst always helps you out if there is a problem.

==  Need Full Control?

Anything templates can do, you can do yourself.

Leverage professional typesetting features to write and design any document.

  - One language for markup and code 
  - Powerful style recipes 
  - Stack and Grid layouts 
  - Sophisticated typography 
  - Regex-powered text transformation 
  - CSV and JSON capabilities 

Learn more...

==  Ready for Science

Wi/*[Examples of various elements frequently seen in scientific publications:
References and a Bibliography, a chart created from a CSV file, a sine wave
chart, a mathematical formula, and a
table.](/assets/images/readyforscience.png)*/reated from a CSV file, a sine wave
chart, a mathematical formula, and a
table.](/ass/*![](/assets/images/readyforscience.png)*/sets/images/readyforscience.png)

==  Writing Formulas has Never Been Easier

Say goodbye to fidgety formula editors and antiquated syntax.

  - ` lim  _  (  x  -> oo  )  1  /  x = 0   
Â `

  - ` vec  (  1  ,  2  )  dot  vec  (  3  ,  4  )  = 11  `
  - ` { x  in  RR  | x  "is natural"  and  x < 10 }  `

Arrow from code to rendered equation.

  - Formula: Limes from x to infinity of 1 over x equals 0. 
  - Formula: Dot product of vector 1,2 and vector 3,4 equals 11. 
  - Formula: A set of al/*[Typst + GitHub](/assets/images/typst-github.svg)*/ 10. 

First example  Second example  Third example

==  Open Sour/*[ GitHub
](https://github.com/typst/typst)*/-github.svg)

Typst is /*[ Discord server.
](https://discord.gg/2uDybryKPe)*/ment on/*[ command line compiler
](https://github.com/typst/typst/releases)*/our  [ Discord server.
](https://discord.gg/2uDybryKPe) With the  [ command line compiler
](https://*[ so much more ](/docs/roadmap)*/s) , you can always compile your
documents locally. No lock-in, ever.

==  There's more!

There is still [ so much more ](/docs/roadmap) we want to do with Typst.
Coming soon:

  - HTML/*[ Sign up for free and try it now! ](/signup/*[ View on GitHub
](https://github.com/typst/typst)*/he command line tool to start writing
locally.

[ Sign up for free and try it now! ](/signup) [ View on GitHub
](https://github.com/typst/typst)

We are two graduates from Berlin with a passion for software. Typs/*[ Read our story.
](/about/)*/at/*[ Home ](/#start)*/o/*[ Pricing ](/pricing/)*/ /*[ Documentation ](/docs/)*/e/*[ Universe ](/universe/)*/n/*[ About Us ](/about/)*/n/*[ Contact Us ](/contact/)*/a/*[ Privacy ](/privacy/)*/#/*[ Terms and Conditions ](https://typst.app/terms)*/t/*[ Legal (Impressum) ](/legal/)*/(//*[ Forum ](https://forum.typst.app)*///*[ Tools ](/tools/)*/ /*[ Blog ](/blog/)*/ /*[ GitHub ](https://github.com/typst/)*/d/*[ Discord ](https://discord.gg/2uDybryKPe)*/ /*[ Mastodon ](https://mastodon.social/@typst)*/]/*[ Bluesky ](https://bsky.app/profile/typst.app)*/)/*[ LinkedIn ](https://www.linkedin.com/company/typst/)*/o/*[ Instagram ](https://instagram.com/typstapp/)*/uDybryKPe)
  - /*[Previous image](/assets/icons/16-arrow-right.svg)*/ Blues/*[Next image](/assets/icons/16-arr/*![Docs](/assets/icons/16-docs-dark.svg)*/ocs](/assets/icons/16-docs-dark.svg)*/ Instagram ](https://instagram.com/typstapp/)

Made /*[ Overview ](/docs/)*/s image](/a/*![Next image](/assets/icons/16-arrow-right.svg)*/image](/assets/icon/*![Docs](/assets/icons/16-docs-dark.svg)*/ - [ ![Doc/*![](/assets/icons/16-arrow-right.svg)*//docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Overview ](/docs/)

=  Overview

Welcome to Typst's documentation! Typst is a new markup-based typesetting
system for the sciences. It is designed to be an alternative both to advanced
tools like LaTeX and simpler tools like Word and Google Docs. Our goal with
Typst is to build a typesetting tool that is highly capable _and_ a pleasure
to use.

This documentation is split into two parts: A beginner-friendly tut/*![Circled play Icon](/assets/icons/32-tutorial-c.svg)*/[Circled play Icon](/assets/icons/32-tutorial-c.svg)*/l of Typst's concept/*![Circled information
icon](/assets/icons/32-reference-c.svg)*/cled information
icon](/assets/icons/32-reference-/*![Circled play Icon](/assets/icons/32-tutorial-c.svg)*/le.

[ ![Cir/*![Docs](/assets/icons/16-docs-dark.svg)*/al-c.svg) *Tutorial* /*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ed.  ](/docs/tutorial) [ ![Circled information
icon]/*[ Reference ](/docs/reference/)*/vg) *Reference* Details about all
syntax, concepts, types,/*![Docs](/assets/icons/16-docs-dark.svg)*/= *docs/re/*![](/assets//*[ tutorial ](/docs/tutorial/ "tutorial")*/svg) ](/docs)
  - ![](/assets//*[ tutorial ](/docs/tutorial/ "tutorial")*/e ](/docs/reference/)

=  Reference

This reference documentation is a comprehensive guide to all of Typst's
syntax, concepts, types, and functions. If you are completely new /*[
Typst's syntax ](/docs/reference/syntax/)*/tutorial ](/docs/tutorial/ "tutorial") and then
c/*[ styling documents, ](/docs/reference/styling/)*/Typ/*[
Typst's scripting capabilities. ](/docs/reference/scripting/)*/arts with a language part that gives an overview over [
Typst's syntax ](/docs/reference/syntax/) and contains information about
concepts involved in [ styling documents, ](/docs/reference/styling/) using [
Typst's scripting capabilities. ](/docs/reference/scripting/)

==  Functions

The second part includes chapters on all functions used to insert, style,
transform, and layout content in Typst documents. Each function is documented
with a description of its pu/*![â](/assets/icons/16-arrow-right.svg)*/mples of
how to use it.

The fin/*[ ![â](/assets/icons/16-arrow-rig/*![â](/assets/icons/16-arrow-
right.svg)*/'s code mode to manipulate and tran/*[ ![â](/assets/icons/16-arrow-
right/*![Docs](/assets/icons/16-docs-dark.svg)*/a desc/*![â](/assets/icons/16-arrow-right.svg)*/[Docs](/assets/icons/16-docs-dark.svg)*/ it.

[ ![â](/assets/icons/16-a/*![â](/assets/icons/16-arrow-
right.svg)*/community/)*/(/docs/tutorial/making-a-template/) [ ![â](/assets/icons/16-/*![Docs](/assets/icons/16-docs-dark.svg)*//docs/refe/*![](/assets/icons/16-arrow-right.svg)*/d*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Community ](/docs/community/)

=  Community

Hey and welcome to the Community page! We're so glad you're here. Typst is
developed by an early-stage startup and it is still /*[ Forum ](https://forum.typst.app/)*/ss without people like you who are interested in it.

We would love to not only hear from you but to also provide spaces where you
can discuss any topic around Typst, typesetting, writing, the sciences, and
typograp/*[ Discord server
](https://discord.gg/2uDybryKPe)*/ttps://forum.typst.app/) is the best place to get answers for
questions on Typst and to show off your creations. * If you would like to
chat with the community and shape the future development of Typst, we would
like to also invite you to our [ Discord server
](https://discor/*[ Mastodon ](https://mastodon.social/@typst)*/*[ Bluesky
](https://bsky.app/profile/typst.app)*/*[ Instagram
](https://instagram.com/typstapp/)*/*[ LinkedIn
](https://linkedin.com/company/typst)*/e D/*[ GitHub
](https://github.com/typst)*/ Of course, you are also very welcome to connect with us on social
media ( [ Mastodon ](https://mastodon.social/@typst) , [ Bluesky
](https://bsky.app/profile/typst.app) , [ Instagram
](https://instagram.com/typstapp/) , [ LinkedIn
](https://linkedin.com/company/typst) , and [ GitHub
](https://github.com/typst) ).

==  What to share?

For our community, we want to foster versatility and inclusivity. You are
welcome to post about any topic that you think would interest other community
members, but if you need a little inspiration, here are a few ideas:

  - Share and discuss your thoughts and ideas for new features or improvements you'd like to see in Typst 
  - Showcase documents you've created with Typst, or share any unique or creative ways you'v/*[ GitHub
](https://github.com/typst/typst)*/files or templates that you use to style your documents 
  - Alert us of bugs you encounter while using Typst 

==  Following the development

Typst is still under very active development and breaking changes can occur at
any point. The compiler is developed in the open on [ GitHub
](h/*[
contribute to the code ](https://github.com/typst/typst)*//*[ translate the
strings in Typst
](https://github.com/search?q=repo%3Atypst%2Ftypst+impl+LocalName+for&type=code)*/ on the
development progress of large features.

==  How to support Typs/*[
subscribing to the paid tier of our web app ](https://typst.app/pricing)*//*[
sponsoring our Open Source efforts! ](https://github.com/sponsors/typst)*/te the
strings in Typst
](https://github.com/search?q=repo%3Atypst%2Ftypst+impl+LocalName+for&type=code)
to your native language if it's not supported yet. You can also help us by [
subscribing to the paid tier of our web app ](https://typst.app/pricing) or [
sponsoring our Open Source efforts! ](https://github.com/sponsors/typst)
Multiple recurring sponsorship tiers are available and all of them come with a
set of goodies. No matter how you contribute, thank you for your suppor/*[ Contact us ](https://typst.app/contact/)*/ur community a safe and inclusive space for everyone.
Therefore, we will not tolerate any sexual harassment, sexism, political
attacks, derogatory language or/*[ privacy policy ](https://typst.app/privacy/)*/nappropriate behaviour. We pledge to remove members that are in violation of
these rules. [ Contact us ](https://typst.app/contact/) if you think another
community member acted inappropriately towards you. All complaints will be
/*![â](/assets/icons/16-arrow-right.svg)*/airly.
/*[ Discord server ](https://discord.gg/2uDybryKPe)*//*[ ![â]/*![Docs](/assets/icons/16-docs-dark.svg)*/es operated by us, such as the Discord server. Please also note
t/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/cies of the respective services
apply.

==  See you /*[ Changelog ](/docs/changelog/)*/g mo/*![â](/assets/icons/16-arrow-right.svg)*/ meet you
on our [ Discord server ](https://discord.gg/2uDybryKPe) !

[ ![â](/assets/icons/16-arrow-right.svg) Roadmap  Previous page
](/docs/roadma/*[ Typst 0.12.0 ](/docs/changelog/0.12.0/)*/s/*[ Typst 0.11.1 ](/docs/changelog/0.11.1/)*/)/*[ Typst 0.11.0 ](/docs/changelog/0.11.0/)*/)/*[ Typst 0.10.0 ](/docs/changelog/0.10.0/)*/C/*[ Typst 0.9.0 ](/docs/changelog/0.9.0/)*/ /*[ Typst 0.8.0 ](/docs/changelog/0.8.0/)*/u/*[ Typst 0.7.0 ](/docs/changelog/0.7.0/)*/l/*[ Typst 0.6.0 ](/docs/changelog/0.6.0/)*/b/*[ Typst 0.5.0 ](/docs/changelog/0.5.0/)*/ /*[ Typst 0.4.0 ](/docs/changelog/0.4.0/)*/ /*[ Typst 0.3.0 ](/docs/changelog/0.3.0/)*/
/*[ Typst 0.2.0/*![â](/assets/icons/16-arrow-right.svg)*/.1.0 ](/docs/changelog/0.1.0/)*/l/*[ Earlier ](/docs/ch/*![â](/assets/icons/16-arrow-right.svg)*/s/16-arrow-right.svg)*/docs/changelog/0.8.0/)
  - [ Typst 0.7.0 ](/docs/c/*![Docs](/assets/icons/16-docs-dark.svg)*/ght.svg)*/angelog/0.6.0/)
  - [ Typst 0.5.0 ](/docs/changelog/0.5.0/)
  - [ Typst/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/pst 0.3.0 ](/docs/changelog/0.3.0/)
  - [ Typ/*![â](/assets/icons/16-arrow-right.svg)*/ - [ Typst 0.1.0 ](/docs/changelog/0.1.0/)
  - [ Earlie/*![â](/assets/icons/16-arrow-right.svg)*//assets/icons/16-arrow-right.svg) Table guide  Previous page
](/docs/guid/*![Docs](/assets/icons/16-docs-dark.svg)*//16-arrow-/*![](/assets/icons/16-arrow-right.svg)*/changelog/0.12.0/)



= *docs/tutorial.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Tutorial ](/docs/tutorial/)

=  Tutorial

Welcome to Typst's tutorial! In this tutorial, you will learn how to write and
format documents in Typst. We will start with everyday tasks and gradually
introdu/*[ open-source CLI ](https://github.com/typst/typst)*/ssume prior
knowledge of Typst, other markup languages, or programming. We do assume that
you know how to edit a text file.

The best way to start is to sign up to the Typst app for free and follow along
with the steps below. The app gives you instant preview, syntax highlighting
and helpful autocompletions. Alternatively, you can follow along in your local
text editor with the [ open-source CLI ](https://github.com/typst/typst) .

==  When to use Typst

Before we get started, let's check what Typst is and when to use it. Typst is
a markup language for typesetting documents. It is designed to be easy to
learn, fast, and versatile. Typst takes text files with markup in them and
outputs PDFs.

Typst is a good choice for writing any long form text such as essays,
articles, scientific papers, books, reports, and homework assignments.
Moreover, Typst is a/*[ Writing in Typst: ](/docs/tutorial/writing-in-typst/)*/tation, such as papers in the math, physics, and engineering fields.
Finally,/*[ Formatting: ](/docs/tutorial/formatting/)*/eatures, it is an excellent
choice for any set of documents that share a common style, such as a book
s/*[ Advanced Styling: ](/docs/tutorial/advanced-styling/)*/ chapters. Each chapter builds on the previous one. Here
is what you will learn in each of them:

  1. [ Writing in Typst: ](/*[ Making a Template: ](/d/*![â](/assets/icons/16-arrow-right.svg)*/nsert images, equations, and other/*![â](/assets/icons/16-arrow-right.svg)*/utorial/formatting/) Learn/*[ ![â](/assets/icons/16-arrow-right.svg)*/ment, including fon/*![Docs](/assets/icons/16-docs-dark.svg)*/6-arrow-right.svg)*/ing: ](/docs/tutorial/advanced-styling/) Create a complex page layout for a scientific pa/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/author list and run-in headings. 
  4. [ Making a Te/*[ /*![â](/assets/icons/16-arrow-right.svg)*/te/) Build a reusable template fro/*![â](/assets/icons/16-arrow-right.svg)*/chapter. 

We hope you'll enjoy Typst!

[ ![â](/assets/icons/16-arrow-right.svg) Overview/*![Docs](/assets/icons/16-docs-dark.svg)*/sets/icons/*![](/assets/icons/16-arrow-right.svg)*/  Next page
](/docs/tutorial/writing-in-typst/)



= *docs/roadmap.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Roadmap ](/docs/roadmap/)

=  Roadmap

This page lists planned features for the Typst language, compiler, libr/*[ GitHub ](https://github.com/typst/typst/issues)*/ realities change, this roadmap is
not/*[ community ](https://typst.app/docs/community)*/ll not necessarily be
implemented and features that will be implemented might be missing here.
Moreover, this roadmap only lists larger, more fundamental features and bugs.

Are you missing something on the roadmap? Typst relies on your feedback as a
user to plan for and prioritize new features. Get started by filing a new
issue on [ GitHub ](https://github.com/typst/typst/issues) or discuss your
feature request with the [ community ](https://typst.app/docs/community) .

==  Language and Compiler

  - *Styling*

    - Support for revoking style rules 
    - Ancestry selectors (e.g., within) 
    - ~~Fix show rule recursion crashes~~
    - ~~Fix show-set issues~~
  - *Scripting*

    - Function for debug logging 
    - Fix issues with paths being strings 
    - Custom types (that work with set and show rules) 
    - Type hints 
    - Function hoisting (if feasible) 
    - ~~Data loading functions~~
    - ~~Support for compiler warnings~~
    - ~~Types as first-class values~~
    - ~~More fields and methods on primitives~~
    - ~~WebAssembly plugins~~
    - ~~Get values of set rules~~
    - ~~Replace locate, etc. with unified context system~~
    - ~~Allow expressions as dictionary keys~~
    - ~~Package management~~
  - *Model*

    - Fix issues with numbering patterns 
    - Support a path or bytes in places that currently only support paths, superseding ` .decode ` scoped functions 
    - Better support for custom referenceable things 
    - Richer built-in outline customization 
    - Enum continuation 
    - ~~Bibliography and citation customization via CSL (Citation Style Language)~~
    - ~~Relative counters, e.g. for figure numbering per section~~
  - *Text*

    - Font fallback warnings 
    - Bold, italic, and smallcaps synthesis 
    - Variable fonts support 
    - Ruby and Warichu 
    - Kashida justification 
    - ~~Support for basic CJK text layout rules~~
    - ~~Fix SVG font fallback~~
    - ~~Themes for raw text and more/custom syntaxes~~
  - *Math*

    - Fix syntactic quirks 
    - Fix single letter strings 
    - Fix font handling 
    - Fix attachment parsing priorities 
    - Provide more primitives 
    - Improve equation numbering 
    - Big fractions 
  - *Layout*

    - Fix footnote issues 
    - Fix issues with list (in particular baselines & alignment) 
    - Support for "sticky" blocks that stay with the next one 
    - Improve widow & orphan prevention 
    - Expand floating layout (e.g. over two columns) 
    - Support for side-floats and other "collision" layouts 
    - Better support for more canvas-like layouts 
    - Unified layout primitives across normal content and math 
    - Page adjustment from within flow 
    - Chained layout regions 
    - Grid-based typesetting 
    - Balanced columns 
    - Drop caps 
    - End notes, maybe margin notes 
    - ~~Footnotes~~
    - ~~Basic floating layout~~
    - ~~Row span and column span in table~~
    - ~~Per-cell table stroke customization~~
  - *Visualize*

    - Arrows 
    - Better path drawing, possibly path operations 
    - Color management 
    - ~~More configurable strokes~~
    - ~~Gradients~~
    - ~~Patterns~~
  - *Introspection*

    - Support for freezing content, so that e.g. numbers in it remain the same if it appears multiple times 
  - *Export*

    - PDF/A support 
    - HTML export 
    - Tagged PDF for Accessibility 
    - PDF/X support 
    - EPUB export 
    - ~~PNG export~~
    - ~~SVG export~~
    - ~~Support for transparency in PDF~~
    - ~~Fix issues with SVGs in PDF~~
    - ~~Fix emoji export in PDF~~ (not yet released) 
    - ~~Selectable text in SVGs in PDF~~ (not yet released) 
    - ~~Better font subsetting for smaller PDFs~~ (not yet released) 
  - *CLI*

    - Support for downloading fonts on-demand automatically 
    - ~~` typst query ` for querying document elements ~~
    - ~~` typst init ` for creating a project from a template ~~
    - ~~` typst update ` for self-updating the CLI ~~
  - *Tooling*

    - Documentation generator and doc comments 
    - Autoformatter 
    - Linter 
  - *Performance*

    - Reduce memory usage 
    - ~~Optimize runtime of optimal paragraph layout~~ (not yet released) 
    - ~~Parallelize layout engine~~ (not yet released) 
  - *Development*

    - Benchmarking 
    - Better contributor documentation 

==  Web App

  - *Editing*

    - Smarter & more action buttons 
    - Inline documentation 
    - Preview autocomplete entry 
    - Color Picker 
    - Symbol picker 
    - Basic, built-in image editor (cropping, etc.) 
    - GUI inspector for editing function calls 
    - Cursor in preview 
    - ~~Hover tooltips for debugging~~
    - ~~Scroll to cursor position in preview~~
    - ~~Folders in projects~~
    - ~~Outline panel~~
    - ~~More export options~~
    - ~~Preview in a separate window~~
    - ~~Sync literature with Zotero and Mendely~~
    - ~~Paste modal~~
    - ~~Improve panel~~
  - *Writing*

    - Word count 
    - Structure view 
    - Text completion by LLM 
    - ~~Spell check~~
  - *Collaboration*

    - Change tracking 
    - Version history 
    - ~~Chat-like comments~~
    - ~~Git i/*![â](/assets/icons/16-arrow-right.svg)*/   - Drag-and-drop for projects 
    - Template ge/*![â](/assets/icons/16-arrow-right.svg)*/rkdown import~~
    - ~~Thumbnails for/*[ ![â](/assets/icons/16-ar/*![Docs](/assets/icons/16-docs-dark.svg)*/n 
    - Better project s/*[ ![â](/assets/icons/16-arrow-right.svg)*/stem Theme setting~~
  - *Other*

    - Offline PWA 
    - Mobile /*[ ![Docs](/assets/icons/16-docs-dark.svg)*/tion 
    - Advanced search in projects 
    - Priva/*[ Gui/*![â](/assets/icons/16-arrow-right.svg)*/ign-on~~
    - ~~Compiler version picker~~
    - ~/*![â](/assets/icons/16-arrow-right.svg)*/ On-Premises deployment~~
    - ~~Typst Universe~~

[ ![â](/assets/icons/16-arrow-right.svg) Earlier  Previous page
](/docs/changelog/earlier/) [ ![â](/assets/icons/16/*![â](/assets/icons/16-arrow-right.svg)*/users ](/docs/guides/guide-for-latex-users/)*/
/*[ Page s/*![â](/assets/icons/16-arrow-
right.svg)*/e/)*/s/*[ Table guide ](/docs/guides/table-guide/)/*[ ![â](/assets/icons/16-arrow-right.svg)*/es

Welcome to the Guid/*![Docs](/assets/icons/16-docs-dark.svg)*/](/assets/icons/16-arrow-
right.svg)*/use cases. Currently, two guides are available: An introduction
to Typst for LaTeX users, and a detailed look at page/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ for guides!/*![â](/assets/icons/16-arrow-right.svg)*//*[ Tutorial ](/docs/tutorial/)*/e-for-latex-users/)
  - /*![â](/assets/icons/16-arrow-
right.svg)*/(/docs/tutorial/writing-in-typst/)*//docs/guides/table-guide/)

[ ![â](/assets/icons/16-arrow-right.svg) YAML  Previo/*![Docs](/assets/icons/16-docs-dark.svg)*/yaml/) [ !/*![](/assets/icons/16-arrow-right./*[Typst app screenshot](/assets/docs/1-writing-app.png)*//guide-for-latex-
users/)



= *docs/tutorial/writing-in-typst.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right./*[Typst app screenshot](/assets/docs/1-writing-app.png)*//icons/16-arrow-right.svg)
  - [ Writing in Typst ](/docs/tutorial/writing-in-typst/)

=  Writing in Typst

Let's get started! Suppose you got assigned to write a technical report for
university. It will contain prose, maths, headings, and figures. To get
started, you create a new project on the Typst app. You'll be taken to the
editor where you see two panels: A source panel where you compose your
document and a prev/*[Preview](/assets/docs/ePl1U-2a7w8qkmb3CLl_oAAAAAAAAAAA.png)*/screenshot](/assets/docs/1-writing-app.png)

You already have a good angle for your report in mind. So let's start by
writing the introduction. Enter some text in the editor panel. You'll notice
that the text immediately appears on the previewed p/*![Preview](/assets/docs/ePl1U-2a7w8qkmb3CLl_oAAAAAAAAAAA.png)*/arious factors that influence fluid
    dynamics in glaciers and how they
    contribute to the formation and
    behaviour of these natural structures.
    

![Preview](/assets/docs/ePl1U-2a7w8qkmb3CLl_oAAAAAAAAAAA.png)

_Throughout this tutorial, we'll show code examples like this one. Just like
in the app, the first panel contains markup and the second panel shows a
preview. We shrunk the page t/*[Preview](/assets/docs/p75v-z7QqVChplB2N8HZfwAAAAAAAAAA.png)*/t step is to add a heading and emphasize some text. Typst uses simple
markup for the most common formatting tasks. To add a heading, enter the ` = `
character and to emphasize some text with italics, enclose it in `
_underscores_  ` .

    
    
 /*![Preview](/assets/docs/p75v-z7QqVChplB2N8HZfwAAAAAAAAAA.png)*/ various factors that influence _fluid
    dynamics_ in glaciers and how they
    contribute to the formation and
    behaviour of these natural structures.
    

![Preview](/assets/docs/p75v-z7QqVChplB2N8HZfwAAAAAAAAAA.png)

That was easy! To add a new paragr/*[Preview](/assets/docs/U3IHQbhSNQ8ndkXIv_gPrgAAAAAAAAAA.png)*/that paragraph needs a subheading, produce it by typing ` ==
` instead of ` = ` . The number of ` = ` characters determines the nesting
level of the heading.

Now we want to list a few of the circumstances that influence glacier
dynamics. To do that, /*![Preview](/assets/docs/U3IHQbhSNQ8ndkXIv_gPrgAAAAAAAAAA.png)*/` + ` character at/*[Preview](/assets/docs/xmS-BPiM_gDHkWk9_uhE_gAAAAAAAAAA.png)*/the items.

    
    
    + The climate
    + The topography
    + The geology
    

![Preview](/assets/docs/U3IHQbhSNQ8ndkXIv_gPrgAAAAAAAAAA.png)

If we wanted to add a bulleted list, we would use the ` - ` character instead
of the ` + ` characte/*![Preview](/assets/docs/xmS-BPiM_gDHkWk9_uhE_gAAAAAAAAAA.png)*/t to the first item of the list above by indenting it.

    
    
    + The climate
      - Temperature
      - Precipitation
    + The topography
    + The geology
    

![Preview](/assets/docs/xmS-BPiM_gDHkWk9_uhE_gAAAAAAAAAA.png)

==  Adding a figure

You think that your report would be/*[Upload dialog](/assets/docs/1-writing-upload.png)*/ images in the formats PNG, JPEG, GIF, and SVG. To add an image file
to your project, first open the _file panel_ by clicking the box icon in the
left sidebar. Here, you can see a list of all files in your project.
Currently, there is only one: The main Typ/*![Uploa/*[ ` image `
](/docs/reference/visualize/image/ "`image`")*/on with the arrow in the top-right corner.
This opens the upload dialog, in which you can pick files to upload from your
computer. Select an image file for your report.

![Uploa/*[ ` image `
](/docs/reference/visualize/image/ "`image`")*/n before that specific symbols (called _markup_ ) h/*[Preview](/assets/docs/KwKlYCVb2uFZqZ8abt3-ggAAAAAAAAAA.png)*/+ ` , and ` _ ` to create
headings, lists and emphasized text, respectively. However, having a special
symbol for everything we want to insert into our document would soon become
cryptic and unwieldy. For this reason, Typst reserves markup symbols onl/*![Preview](/assets/docs/KwKlYCVb2uFZqZ8abt3-ggAAAAAAAAAA.png)*/h _functions._ For our
image to show up on the page, we use Typst's [ ` image `
](/docs/reference/visualize/image/ "`image`") function.

    
    
    #image("glacier.jpg")
    

![Preview](/assets/docs/KwKlYCVb2uFZqZ8abt3-ggAAAAAAAAAA.png)

In genera/*[ string of text
](/docs/reference/foundations/str/)*/uments_ . When
you _call_ a function within markup, you provide the arguments and Typst
inserts the result (the function's _return value_ ) into the document. In our
case, the ` image ` function takes one argument: The path to the image file.
To call a function in markup, we first need to type the ` # ` character,
immediately followed by the name of the function. Then, we enclose the
arguments in parentheses. /*[Preview](/assets/docs/lpadKIOzcEsf_MGoSeZghAAAAAAAAAAA.png)*/ists. Our file path is a s/*[ relative length
](/docs/reference/layout/relative/)*/tr/) , so we need to enclose it in double
quotes.

The inserted image uses the whole width of the page. To change that, pass the
` width ` argument to the ` image ` function. This /*![Preview](/assets/docs/lpadKIOzcEsf_MGoSeZghAAAAAAAAAAA.png)*/lue ` pair. If there are multiple
arguments, they are separated by commas, so we first/*[ figure
](/docs/reference/model/figure/ "figure")*/   #image("glacier.jpg", width: 70%)
    

![Preview](/assets/docs/lpadKIOzcEsf_MGoSeZghAAAAAAAAAAA.png)

The ` width ` argument is a [ relative length
](/docs/reference/layout/relative/) . In our case, we specified a percentage,
determining that the image shall take up ` 70%  ` of the page's width. We also
could have specified an absolute value like ` 1cm  ` or ` 0.7in  ` .

Just like text, the image is now aligned at the left side of the page by
default. It's also lacking a caption. Let's fix that by using the [ figure
](/docs/reference/model/figure/ "figure") function. This function takes the
figure's contents as a positional argument and an optional caption as a named
argument.

Within the/*[Preview](/assets/docs/v5OnReUO8fD5Rfj2aJZVyQAAAAAAAAAA.png)*/in code
mode. This means, you now have to remove the hash before the image function
call. The hash is only needed directly in markup (to disambiguate text from
function calls).

The caption consists of arbitrary markup. To give markup to a function, we
enclose it/*![Preview](/assets/docs/v5OnReUO8fD5Rfj2aJZVyQAAAAAAAAAA.png)*/k._

    
    
    #figure(
      image("glacier.jpg", width: 70%),
      caption: [
        _Glaciers_ form an important part
        of the earth's climate system.
      ],
    )
    

![Preview](/assets/docs/v5OnReUO8fD5Rfj2aJZVyQAAAAAAAAAA.png)

You continue to write your report and now want to reference the figure. To do
that, first attach a label to figure. A label uniquely id/*[Preview](/assets/docs/cwZ12iQ39B4L-_wQwhO2TAAAAAAAAAAA.png)*/re by enclosing some name in angle
brackets. You can then reference the figure in your text by writing an ` @  `
symbol followed by that name. Headings and equations can also be labelled to
make them referenceable.

    
    
    Glaciers as the one shown in
    /*![Preview](/assets/docs/cwZ12iQ39B4L-_wQwhO2TAAAAAAAAAAA.png)*/n!
    
    #figure(
      image("glacier.jpg", width: 70%),
      caption: [
        _Glaciers_ form an important part
        of the earth's climate system.
      ],
    ) <glaciers>
    

![Preview](/assets/docs/cwZ12iQ39B4L-_wQwhO2TAAAAAAAAAAA.png)

So far, we've passed content blocks (markup in square brackets) and strings
(text in double quotes) to our functions. Both seem to contain text. What's
the difference?

A content block can contain text, but also any other kind /*[ ` bibliography `
](/docs/reference/model/bibliography/ "`bibliography`")*/quence of characters_
and nothing else.

For example, the image function expects a path to an image/*[ Hayagriva
](https://github.com/typst/hayagriva/blob/main/docs/file-format.md)*/age as the image's
path parameter. That's why only strings are allowed here. On the contrary,
strings work wherever content is expected because text is a valid kind of
content.

==  Adding a bibliography

As you write up your report, you need to back up some of your claims. You can
add a bibliography to your document with the [ ` bibliography `
](/docs/reference/model/bibliography/ "`bibliography`") function. This
function expects a path to a bibliography file.

Typst's native bibliography format is [ Hayagriva
](https://github/*[ reference ](/docs/reference/model/bibliography/#parameters-style)*/tibility you can also use BibLaTeX files. As your classmate has already
done a literature survey and sent you a ` .bib ` file, you'll use that one.
Upload the/*[Preview](/assets/docs/QGPHT14ksdea0r_8vy01WAAAAAAAAAAA.png)*/e document contains a bibliography, you can start citing from it.
Citations use the same syntax as references to a label. As soon as you cite a
source for the first time, it will appear in the bibliography section of your
document. Typst supports different citation and bibliogra/*![Preview](/assets/docs/QGPHT14ksdea0r_8vy01WAAAAAAAAAAA.png)*/ibliography/#parameters-style) for
more details.

    /*[Preview](/assets/docs/_u5BjLoMFBZU2zg1OWULdgAAAAAAAAAA.png)*/
    established in @glacier-melt.
    
    #bibliography("works.bib")
    

![Preview](/assets/docs/QGPHT14ksdea0r_8vy01WAAAAAAAAAAA.png)

==  Maths

After fleshing out the methods section, you move on to the meat of the
document: Your equations. Typst has built-in mathematical/*![Preview](/assets/docs/_u5BjLoMFBZU2zg1OWULdgAAAAAAAAAA.png)*/QwAAAAAAAAAA.png)*/ion. We wrap it in ` $ `
signs to let Typst know it should expect a mathematical expression:

    
    
    The equation $Q = rho A v + C$
    defines the glacial flow rate.
    

![Preview](/assets/docs/_u5BjLoMFBZU2zg1OWULdgAAAAAAAAAA.png)

The equation is typeset inline, /*![Preview](/assets/docs/GXI0mvGOqqSC165/*[Preview](/assets/docs/JSaojGBiKH-FLbIYqeWSgAAAAAAAAAAA.png)*/insert a single space
at its start and end:

    
    
    The flow rate of a glacier is
    defined by the following equation:
    
    $ Q = rho A v + C $
    

![Preview](/assets/docs/GXI0mvGOqqSC165/*[Preview](/assets/docs/JSaojGBiKH-FLbIYqeWSgAAAAAAAAAAA.png)*/single letters ` Q ` , ` A ` , ` v ` , and
` C ` as-is, while it translated ` rho ` into a Greek letter. Math mode will
always show single letters verbatim. Multiple letters, however, are
interpreted as symbols, variables, or function names. To imply a
multip/*[Preview](/assets//*![Preview](/assets/docs/JSaojGBiKH-FLbIYqeWSgAAAAAAAAAAA.png)*/e a variable that consists of multiple letters, you can
enclose it in quotes:

    
    
    The flow rate of a glacier is given
    by the following equation:
    
    $ Q = rho A v + "time offset" $
    

![Preview](/assets/docs/JSaojGBiKH-FLbIYqeWSgAAAAAA/*![Preview](/assets/docs/rTDyTGxJlXKPRHJub3ALRgAAAAAAAAAA.png)*/can use the ` sum ` symbol
and then specify the range of the summation in sub- and superscripts:

    
    
    Total displaced soil by glacial flow:
    
    $ 7.32 beta +
      sum_(i=0)^nabla Q_i / 2 $
    

![Preview](/assets/docs/rTDyTGxJlXKPRHJub3ALRgAAAAAAAAAA.png)

To add a subscript to a symbol or variable, type a ` _ ` character and then
the subscript. Similarly, use the ` ^ ` character for a superscri/*[Preview](/assets/docs/HgeB2Bx5Lh3a5NPfF6WEdwAAAAAAAAAA.png)*/ you must enclose them in
round parentheses.

The above example also showed us how to insert fractions: Simply put a ` / `
character between the numerator and the denominator and /*[ ` vec ` ](/docs/reference/math/vec/)*/a fraction. Parentheses are smartly resolved, so
you can enter you/*![Preview](/assets/docs/HgeB2Bx5Lh3a5NPfF6WEdwAAAAAAAAAA.png/*[ math section of the
reference ](/docs/reference/math/)*/AAAAAAAAA.png)*/   
    
    Total displaced soil by glacial flow:
    
    $ 7.32 /*[ ` cal `
](/docs/reference/math/variants/#functions-cal)*/) / 2 $
    

![Preview](/assets/docs/HgeB2Bx5Lh3a5NPfF6WEdwAAAAAAAAAA.png/*[ math section of the
reference ](/docs/reference/math/)*/ we use functions, just
like the ` image ` function we have seen before. For example, to insert a
column vector, we can use the [ ` vec ` ](/docs/reference/math/vec/) function.
Within math mode, function calls don't need to start with the ` # ` character.

    
    
    $ v := vec(x_1/*[Preview](/assets/docs/0GgQitNz41j-75F3FS6iAwAAAAAAAAAA.png)*/_x6YKwAAAAAAAAAA.png)

Some functions are only available within math mode. For example, the [ ` cal `
](/docs/ref/*[ symbols section
](/docs/reference/symbols/sym/)*/used to typeset
calligraphic letters commonly used for sets. The [ math section of the
reference ](/docs/reference/math/) provides a complete list of all functions
that math mode makes available.

One more thing: Many symbols, such as the arrow, have a lot of variants. You
can select among these variants by appending a dot and a modifier name to a
symbo/*[ tables ](/docs/reference/model/table/)*/*[ shapes
](/docs/reference/visualize/)*//0G/*[ code blocks ](/docs/reference/text/raw/)*/notation is also a/*[ reference ](/docs/reference/ "reference")*/e must be
preceded with ` #sym. ` there. See the /*![â](/assets/icons/16-arrow-right.svg)*/ols/sym/) for a list of all available symb/*![â](/assets/icons/16-arrow-right.svg)*/to write a basic document in Typst. You learned how to
emphasize text, write lists, insert images,/*![Docs](/assets/icons/16-docs-dark.svg)*/l expressions. Yo/*[ ![â](/assets/icons/16-arrow-right.svg)*/ere are
many more kinds of content that /*[ ![â](/assets/icons/16-arrow-right.svg)*/such
as [ tables ](/docs/reference/model/table/) , [ shapes
](/docs/reference/visualize/) , and /*[ ![Docs](/assets/icons/16-docs-dark.svg)*/)
. You can peruse the [ reference ](/docs/reference/*[ Tutorial ](/docs/tutorial/)*/about these and other featur/*![â](/assets/icons/16-arrow-right.svg)*/ocs/tutorial/advanced-styling/)*/ already /*![â](/assets/icons/16-arrow-right.svg)*/button in the top right corner. However, you
think the report could look a bit less plain. In the /*![Docs](/assets/icons/16-docs-dark.svg)*/ize the lo/*![](/assets/icons/16-arrow-right.svg)*//icons/16-arrow-right.svg) Tutorial/*![](/assets/icons/16-arrow-right.svg)*/![â](/assets/icons/16-arrow-right.svg) Formatting  Next
page  ](/docs/tutorial/formatting/)



= *docs/tutorial/advanced-styling.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Tutorial ](/docs/tutorial/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Advanced Styling ](/docs/tutorial/advanced-styling/)

=  Advanced Styling

In the previous two chapters of this tutorial, you have learned how to write a
document in Typst and how to c/*[The team settings](/assets/docs/3-advanced-team-settings.png)*/ two chapters got a straight A and your supervisor wants to
base a conference paper on it! The report will of course have to comply with
the conference's style guide. Let's see how we can achieve that.

Before we start, let's create a team, invite your supervisor and add them to
the team. You can do this/*![The team settings](/assets/docs/3-advanced-team-settings.png)*/he top left corner of the editor. Then, choose the plus icon in the
left toolbar and create a team. Finally, click on the new team and go to its
settings by clicking 'manage team' next to the team name. Now you can invite
your supervisor by email.

![The team settings](/assets/docs/3-advanced-team-settings.png)

Next, move your project into the team: Open it, going to its settings by
choosing the gear icon in the left toolbar and selecting your new team from
the owners dropdown. Don't forget to save your changes!

Now, your supervisor can also edit the project and you can both see the
changes in real time. You can join our [ Discord server
](https://discord.gg/2uDybryKPe) to find other users and try teams with them!

==  The conference guidelines

The layout guidelines are available on the conference website. Let's take a
look at them:

  - The font should be an 11pt serif font 
  - The title should be in 17pt and bold 
  - The paper contains a single-column abstract and two-column main text 
  - The abstract should be centered 
  - The main text should be justified 
  - First level section headings should be 13pt, centered, and rendered in small capitals 
  - Second level headings are run-ins, italicized and have the same /*[Preview](/assets/docs/p6Vtj1ockTIzscSwa5_kewAAAAAAAAAA.png)*/etter sized, numbered in the center of the footer and the top right corner of each page should contain the title of the paper 

We already know how to do many of these things, but for some of them, we'll
need to learn some new tricks.

==  Writing the right set rules

Let's start by writing some set rules for /*![Preview](/assets/docs/p6Vtj1ockTIzscSwa5_kewAAAAAAAAAA.png)*/er",
      header: align(right)[
        A fluid dynamic model for
        glacier flow
      ],
      numbering: "1",
    )
    #set par(justify: true)
    /*[
numbering pattern ](/docs/reference/model/numbering/)*/11pt,
    )
    
    #lorem(600)
    

![Preview](/assets/docs/p6Vtj1ockTIzscSwa5_kewAAAAAAAAAA.png)

You are already familiar with most of what is going on here. We set the text
size to ` 11pt  ` and the font to Libertinus Serif. We also enable paragraph
justification and set the page size to US letter.

The ` header ` argument is new: With it, we can provide content to fill the
top margin of every page. In the header, we specify our paper's title as
requested by the conference style guide. We use the ` align ` function to
align the text to the right.

Last but not least is the ` numbering ` argument. Here, we/*[Preview](/assets/docs/EYkMw9AAwHWkDqrGblkKBgAAAAAAAAAA.png)*/umbering/) that defines how to
number the pages. By setting into to ` "1"  ` , Typst only displays the bare
page number. Setting it to ` "(1/1)"  ` would have displayed the current page
and total number of pages surrounded by parentheses. And we could even have
provided a completely custom function here to format things to our liking.

==  Creating a title and abstract

Now, let's add a title and an abstract. We'll start with the title. We center
align it and increase its font weight by enclosing it in ` _stars_  ` .

    
    
    #align(center, text(17pt)[
      *A fluid/*[Preview](/assets/docs/Iwl_3LT7ijX6dcpL71YOWAAAAAAAAAAA.png)*/w](/assets/docs/EYkMw9AAwHWkDqrGblkKBgAAAAAAAAAA.png)

This look/*[ ` grid `
](/docs/reference/layout/grid/ "`grid`")*/the previous text
set rule locally, increasing the size to 17pt for the function's argument.
Let's also add the author list: Since we are writing this paper together with
ou/*[ relative lengths
](/docs/refere/*![Preview](/assets/docs/Iwl_3LT7ijX6dcpL71YOWAAAAAAAAAAA.png)*//fraction/)*/  align(center)[
        Therese Tungsten \
        Artos Institute \
        #link("mailto:tung@artos.edu")
      ],
      align(center)[
        Dr. John Doe \
        Artos Institute \
        #link("mailto:doe@artos.edu")
      ]
    )
    

![Preview](/assets/docs/Iwl_3LT7ijX6dcpL71YOWAAAAAAAAAAA.png)

The two author blocks are laid out next to each other. We use the [ ` grid `
](/docs/reference/layout/grid/ "`grid`") function to create this layout. With
a grid, we can control exactly how large each column is and which content goes
into which cell. The ` columns ` argument takes an array of [ relative lengths
](/docs/reference/layout/relative/) or [ fractions
](/docs/reference/layout/fraction/) . In this case, we p/*[Preview](/assets/docs/4IdrVTeq86rbgvB-RNog6gAAAAAAAAAA.png)*/ available space into two equal
columns. We then passed two content arguments to the grid function. The first
with our own details, and the second with our supervisors'. We again use the `
align ` function to center the content within the column. The grid takes an
arbitrary number of content arguments specifying the cells. Ro/*![Preview](/assets/docs/4IdrVTeq86rbgvB-RNog6gAAAAAAAAAA.png)*/ed with the ` rows ` argument.

Now, let's add the abstract. Remember that the conference wants the abstract
to be set ragged and centered.

    
    
    ...
    
    #align(center)[
      #set par(justify: false)
      _Abstract_ \
      #lorem(80)
    ]
    

![Preview](/assets/docs/4IdrVTeq86rbgvB-RNog6gAAAAAAAAAA.png)

Well done! One notable thing is that we used a set rule within the content
argument of ` align ` to turn off /*[Preview](/assets/docs/ZKsZ2Eei-RUgPTLeJrMEYgAAAAAAAAAA.png)*/ainder of the document even though it was specified after
the first set rule because content blocks _scope_ styling. Anything set within
a content block will only affect the content within that block.

Another tweak could be to save the paper title in a variable, so that we do
not have to type it twice, for header and title. /*![Preview](/assets/docs/ZKsZ2Eei-RUgPTLeJrMEYgAAAAAAAAAA.png)*/title = [
      A fluid dynamic model
      for glacier flow
    ]
    
    ...
    
    #set page(
      header: align(
        right + horizon,
        title
      ),
      ...
    )
    
    #align(center, text(17pt)[
      *#title*
    ])
    
    ...
    
    

![Preview](/assets/docs/ZKsZ2Eei-RUgPTLeJrMEYgAAAAAAAAAA.png)

After we bound the cont/*[ ` place ` ](/docs/reference/layout/place/)*/ in
functions and also within markup (prefixed by ` # ` , like functions). This
way, if we decide on another title, we can easily change it in one place.

==  Adding columns and headings

The paper above unfortunately looks like a wall of lead. To fix that, let's
add some headings and switch our paper to a two-column layout. Fortunately,
that's easy to do: We just need to amend our ` page ` set rule with the `
columns ` argument.

By adding ` columns:  2  ` to the argument list, we have wrapped the whole
document in two columns. However, that would/*[Preview](/assets/docs/30s7cU9X36lW286rJXE3RwAAAAAAAAAA.png)*/anning the whole page, we can wrap them in a function
call to [ ` place ` ](/docs/reference/layout/place/) . Place expects an
alignment and the content it should place as positional arguments. Using the
named ` scope ` argument, we can decide if the items should be placed relative
to the current column or its parent (the page). T/*![Preview](/assets/docs/30s7cU9X36lW286rJXE3RwAAAAAAAAAA.png)*/e provided, ` place ` takes its content out
of the flow of the document and positions it over the other content without
affecting the layout of other content in its container:

    
    
    #place(
      top + center,
      rect(fill: black),
    )
    #lorem(30)
    

![Preview](/assets/docs/30s7cU9X36lW286rJXE3RwAAAAAAAAAA.png)

If we hadn't used ` place ` here, the square would be in its own line, but
here it overlaps the few lines of/*[Preview](/assets/docs/dAJVP8paZmMvnK23cMA_0AAAAAAAAAAA.png)*/e was no square. To change this behavior, we can pass the
argument ` float:  true  ` to ensure that the space taken up by the placed
item at the to/*[ `
v ` ](/docs/reference/layout/v/)*/ied by any other content.

    
    
    #set page(
      paper: "us-letter",
      header: align(
        right + horizon,
        title
      ),
 /*![Preview](/assets/docs/dAJVP8paZmMvnK23cMA_0AAAAAAAAAAA.png)*/
      top + center,
      float: true,
      scope: "parent",
      clearance: 2em,
    )[
      ...
    
      #par(justify: false)[
        _Abstract_ \
        #lorem(80)
      ]
    ]
    
    = Introduction
    #lorem(300)
    
    = Related Work
    #lorem(200)
    

![Preview](/assets/docs/dAJVP8paZmMvnK23cMA_0AAAAAAAAAAA.png)

In this exa/*[Preview](/assets/docs/ZJxJWdUySZNKlj1_Vn1NWgAAAAAAAAAA.png)*/ `
function to provide the space between it and the body instead of using the [ `
v ` ](/docs/reference/layout/v/) function. We can also remove the explicit `
align  (  center  ,  ..  )  ` calls around the various parts since they
inherit the center alignment from the placement.

Now there is only one thing left to do: Style our headings/*![Preview](/assets/docs/ZJxJWdUySZNKlj1_Vn1NWgAAAAAAAAAA.png)*/se the `/*[ ` smallcaps ` ](/docs/reference/text/smallcaps/
"`smallcaps`")*/need to write our own heading show
rule.

    
    
    #show heading: it => [
      #set align(center)
      #set text(13pt, weight: "regular")
      #block(smallcaps(it.body))
    ]
    
    ...
    

![Preview](/assets/docs/ZJxJWdUySZNKlj1_Vn1NWgAAAAAAAAAA.png)

This looks great! We used a show rule that applies to all headings. We give it
a functio/*[
method ](/docs/reference/scripting/#methods)*/ That parameter can be
used as content but it also has some fields like ` title ` , ` numbers ` , and
` level ` from which we can compose a custom look. Here, we are center-
aligning, setting the font weight to ` "regular"  ` because headings are bold
by default, and use the [ ` smallcaps ` ](/docs/reference/text/smallcaps/
"`smallcaps`") function to render the heading's title in small capitals.

The only remaining problem is that all headings look the same now. The
"Motivation" and "Problem Statement/*[Preview](/assets/docs/eBNymJDskGFkYVAXkF9cuAAAAAAAAAAA.png)*/ow, they look indistinguishable from the section headings.
We can fix that by using a ` where ` selector on our set rule: This is a [
method ](/docs/reference/scripting/#methods) we can call on headings (and
other elements) that allows us to filter them by their level. We can use it to
differentiate between section and subsection headings:

/*![Preview](/assets/docs/eBNymJDskGFkYVAXkF9cuAAAAAAAAAAA.png)*/> block(width: 100%)[
      #set align(center)
      #set text(13pt, weight: "regular")
      #smallcaps(it.body)
    ]
    
    #show heading.where(
      level: 2
    ): it => text(
      size: 11pt,
      weight: "regular",
      style: "italic",
      it.body + [.],
    )
    

![Preview](/assets/docs/eBNymJDskGFkYVAXkF9cuAAAAAAAAAAA.png)

This looks great! We wrote two show rules that each selectively apply to the
first and second level headings. We used a ` where ` selector to filter the
headings by their level. We then rendered the subsection headings as run-ins.
We also automatically add a period to the end of the subsection headings.

Let's review the confe/*[The finished paper](/assets/docs/3-advanced-paper.png)*/rif font â 
  - The title should be in 17pt and bold â 
  - The paper contains a single-column abstract and two-column main text â 
  - The abstract should be cente/*[ ` grid ` ](/docs/reference/layout/grid/ "`grid`")*/
  - First level section headings should be centered, rendered in small caps and in 13pt â 
  - Second level headi/*[ ` where ` s/*![The finished paper](/assets/docs/3-advanced-paper.png)*/ â 
  - Finally, the pages should be US letter sized, numbered in the center and the top right corner of each page should contain the title of the paper â 

We are now in compliance with all of these styles an/*![â](/assets/icons/16-arrow-right.svg)*/! The finished paper looks like this:

![The finished p/*![â](/assets/icons/16-arrow-right.svg)*/

==  Review

You have now learned how to create headers and footers, how to use functions
and scopes to locally /*![Docs](/assets/icons/16-docs-dark.svg)*/plex layouts with
the [ ` grid ` ](/docs/reference/layout/gri/*[ ![â](/assets/icons/16-arrow-right.svg)*/w rules for individual functions, and the whole docum/*[ ![â](/assets/icons/16-arrow-right.svg)*/here ` selector ](/docs/reference/styling/#show-
rules) to filter the headings by their level.

The paper was a/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/minded researchers at
the conference and are plannin/*[ Tutorial ](/docs/tutorial/)*/ publish at the
same venue next year/*![â](/assets/icons/16-arrow-right.svg)*/orial/making-a-template/)*/hough, so maybe now you want/*![â](/assets/icons/16-arrow-right.svg)*/u
and your team?

In the next section, we will learn how to create templates that can be reused
in multiple docum/*![Docs](/assets/icons/16-docs-dark.svg)*/ feel free/*![](/assets/icons/16-arrow-right.svg)*/t feel up to it right now.

[ ![â/*![](/assets/icons/16-arrow-right.svg)*/ormatting  Previous page
](/docs/tutorial/formatting/) [ ![â](/assets/icons/16-arrow-right.svg)
Making a Template  Next page  ](/docs/tutorial/making-a-template/)



= *docs/tutorial/making-a-template.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Tutorial ](/docs/tutorial/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Making a Template ](/docs/tutorial/making-a-template/)

=  Making a Template

In the previous three chapters of this tutorial, you have learned how to write
a document in Typst, apply basic styles, and customize its appearance in-dep/*[Preview](/assets/docs/hf-0MuyTNtENvqMuqT5IlgAAAAAAAAAA.png)*/er you wrote in the
previous chapter was a tremendous success, you have been asked to write a
follow-up article for the same conference. This time, you want to take the
style you created in the previous chapter and turn it into a reusable
template. In this chapter you will learn how to create a template that you and
your team can use with just one show rule. Let's get started!

==  A toy template

In Typst, templates are functions in which you can wrap your whole document.
To learn how to do that, let's first review how to write your very own
functions. They can do anything you want them to, so why not go a bit crazy?

    
    
    #let amazed(term) = box[â¨ #term â/*[Preview](/assets/docs/DeOx9bmyxPapZywkKVbTFwAAAAAAAAAA.png)*/sets/docs/hf-0MuyTNtENvqMuqT5IlgAAAAAAAAAA.png)

This function takes a single argument, ` term ` , and returns a content block
with the ` term ` surrounded by sparkles. We also put the whole thing in a box
so that the term we are amazed by cannot be separated from its sparkles by a
line break.

Many functions that come with Typst have option/*![Preview](/assets/docs/DeOx9bmyxPapZyw/*[Preview](/assets/docs/gIv_i_LbdQ0VPwrL8LD78QAAAAAAAAAA.png)*/s
us choose the color of the text. We need to provide a default color in case
the parameter isn't given.

    
    
    #let amazed(term, color: blue) = {
      text(color, box[â¨ #term â¨])
    }
    
    You are #amazed[beautiful]!
    I am #amazed(color: purple)[amazed]!
    

![Preview](/assets/docs/DeOx9bmyxPapZyw/*[Preview](/assets/docs/gIv_i_LbdQ0VPwrL8LD78QAAAAAAAAAA.png)*/hole document in a custom function like `
amazed ` . But wrapping a whole document in a giant function call would be
cumbersome! Instead, we can use an "everything" show rule to achieve the same
with cleaner code. To write such a show rule, put a colon directly behind the
show keyword and then provide a function. This function is given the rest of
the document as a parameter. The function can then do anything with this
content. Since the ` amazed ` function can be called with a single content
argument, we can just pass it by name to the show rule. Let's try it:

    
    
    #show: amazed
    I choose to focus on the good
    in my life and let go of any
    negative thoughts o/*[Preview](/assets/docs/A-HDnb3ZV5ZLdSR0m_DP1QAAAAAAAAAA.png)*/ts/docs/gIv_i_LbdQ0VPwrL8LD78QAAAAAAAAAA.png)

Our whole document will now be passed to the ` amazed ` function, as if we
wrapped it around it. Of course, this is not especially useful with this
particular function, but when combined with set rules and named arguments, it
can be very powerful.

==  Embedding set and show rules

To apply some set/*![Preview](/assets/docs/A-HDnb3ZV5ZLdSR0m_DP1QAAAAAAAAAA.png)*/w ` within a content block in our function and then insert the document
into that content block.

    
    
    #let template(doc) = [
      #set text(font: "Inria Serif")
      #show "something cool": [Typst]
      #doc
    ]
    
    #show: template
    I am learning something cool today.
    It's going great so far!
    

![Preview](/assets/docs/A-HDnb3ZV5ZLdSR0m_DP1QAAAAAAAAAA.png)

Just like we already discovered in the previous chapter, set rules will apply
to everything within their content block. /*[Preview](/assets/docs/Zq1nZR6oWo-01oCtP5oKDAAAAAAAAAAA.png)*/the ` template ` function, the text set rule and
string show rule in our template will apply to the whole document. Let's use
this knowledge to create a template that reproduces the body style of the
paper we wrote in the previous chapter.

    
    
    #let conf(title, doc) = {
      set page(
        paper: "us-letter",
        header: align(/*![Preview](/assets/docs/Zq1nZR6oWo-01oCtP5oKDAAAAAAAAAAA.png)*/  columns: 2,
        ...
      )
      set par(justify: true)
      set text(
        font: "Libertinus Serif",
        size: 11pt,
      )
    
      // Heading show rules.
      ...
    
      doc
    }
    
    #show: doc => conf(
      [Paper title],
      doc,
    )
    
    = Introduction
    #lorem(90)
    
    ...
    

![Preview](/assets/docs/Zq1nZR6oWo-01oCtP5oKDAAAAAAAAAAA.png)

We copy-pasted most of that code from the previous chapter. The two
differences are this:

  1. We wrapped everything in the function ` conf ` using an everything show rule. The function applies a few set and show rules and echoes the content it has been passed at the end. 

  2. Moreover, we used a curly-braced code block instead of a content block. This way, we don't need to prefix all set rules and function calls with a ` # ` . In exchange, we cannot write markup directly in the code block anymore. 

Also note where the title comes from: We previously had it inside of a
variable. Now, we are receiving it as the first parameter of the template
function. To do so, we passed a closure (that's a function without a name that
is used right away) to the everything show rule. We did that because the `
conf ` function expects two positional arguments, the title and the body, but
the show rule will only pass the body. Therefore, we add a new function
definition that allows us to set a paper title and use the single parameter
from the show rule.

==  Templates with named arguments

Our paper in the previous chapter had a title and an author list. Let's add
these things to our template. In addition to the title, we want our template
to accept a list of authors with their affiliations and the paper's abstract.
To keep things readable, we'll add those as named arguments. In the end, we
want it to work like this:

    
    
    #show: doc => conf(
      title: [Towards Improved Modelling]/*[ array
](/docs/reference/foundations/array/ "array")*//*[ dictionaries
](/docs/reference/foundations/dictionary/)*/       email: "tung@artos.edu",
        ),
        (
          name: "Eugene Deklan",
          affiliation: "Honduras State",
          email: "e.deklan@hstate.hn",
        ),
      ),
      abstract: lorem(80),
      doc,
    )
    
    ../*[ ` .len() `
](/docs/reference/foundations/array/#definitions-len)*/fault value to the `
title ` argument. This way, we can call the template without specifying a
title. We also add the named ` authors ` and ` abstract ` parameters with
empty defaults. Next, we copy the code that generates title, abstract and
authors from the previous chapter into the template, replacing the fixed
details with the parameters.

The new ` authors ` parameter expects an [ array
](/docs/reference/foundations/array/ "array")/*[ field access syntax
](/docs/reference/scripting/#fields)*/y/) with the keys ` name ` , `
affiliation ` and ` email ` . Because we can have an arbitrar/*[ ` map ` method
](/docs/reference/foundations/array/#definitions-map)*/hree columns for the
author list. First, we determine the number of authors using the [ ` .len() `
](/docs/reference/foundations/array/#definitions-len) method on the ` authors
` array. Then, we set the number of columns as the minimum of this count and
three, so that we never create more than three columns. If there are more /*[
` spread ` operator ](/docs/reference/foundations/arguments/)*/s purpose, we have
also added a ` row-gutter ` parameter to the ` grid ` function. Otherwise, the
rows would be too close together. To extract the details about the authors
from the dictionary, we use the [ field access syntax
](/docs/reference/scripting/#fields) .

We still have to provide an argument to the grid for each author: Here is
where the array's [ ` map ` method
](/docs/reference/foundations/array/#definitions-map) comes in handy. It takes
a function as an argument that gets called with each item of the array. We
pass it a function that formats the details for each author and returns a new
array containing content values. We've now got one array of values that we'd
like to use as multiple arguments for the grid. We can do that by using the [
` spread ` operator ](/docs/reference/foundations/arguments/) . It takes an
array and applies each of its items as a separate argument to the function.

The resulting template function looks like this:

    
    
    #let conf(
      title: none,
      authors: (),
      abstract: [],
      doc,
    ) = {
      // Set and show rules from before.
      ...
    
      set align(center)
      text(17pt, title)
    
      let count = authors.len()
      let ncols = calc.min(count, 3)
      grid(
        columns: (1fr,) * ncols,
        row-gutter: 24pt,
        ..authors.map(author => [
          #author.name \
          #author.affiliation \
          #link("mailto:" + author.em/*[ ` .with `
](/docs/reference/foundations/function/#definitions-with)*/tract_ \
        #abstract
      ]
    
      set align(left)
      doc
    }
    

==  A separate file

Most of the time, a template is specified in a different file and then
imported into /*[ Typst Universe ](https://typst.app/universe/)*/ in is kept
clutter free and your template is easily reused. Create a new text file in the
file panel by clicking the plus button and name it ` conf.typ ` . Move the `
conf ` function definition inside of that new file. Now you can access it from
your main file by adding an import before the show rule. Specify the path of
the file between the ` import  ` keyword and a colon, then name the function
that you want to import.

Another thing that you can do to make applying templates just a bit more
elegant is to use the [ ` .with `
](/docs/reference/foundations/function/#definitions-with) method on functions
to pre-populate all the named arguments. This way, you can/*[Preview](/assets/docs/BxllQV4yc0ikxppO7QP73AAAAAAAAAAA.png)*/ment at the bottom of your template
list. Templates on [ Typst Universe ](https://typst.app/universe/) are
desi/*[ Forum ](https://forum.typst.app/)*/cti/*[ Typst's Discord server ](https://discord.gg/2uDybryKPe)*/w: conf.with(
      title: [
        Towards Improved Modelling
      ],
      authors: (
        (
          name: "Theresa Tungsten",
          affiliation: "Artos Institute",
          email: "tung@artos.edu",
        ),
        (
          name: "Eugene Deklan",
          affiliation: "Honduras State",
          email: "e.deklan@hstate.hn",
        ),
      ),
      abstract: lorem(80),
    )
    
    = Int/*![â](/assets/icons/16-arrow-right.svg)*/ivation
    #lorem(140)
    
    == Problem Stateme/*[
Forum ](http/*![â](/assets/icons/16-arrow-right.svg)*/ server
](https://discord.gg/2uDybryKPe)*/ll/*[ GitHub
](https://github.com/typst/*![Docs](/assets/icons/16-docs-dark.svg)*/paper into a reusable template for that
conference! Why not share it in /*[ Sign up ](https://typst.app)*/pst.app/) or on
[ T/*[ ![â](/assets/icons/16-arrow-right.svg)*//2uDybryKPe) so that others can
use it too?

==  Review

Congratu/*[ ![â](/assets/icons/16-arrow-right.svg)*/al! In this section, you
have learned how to define your own functions and how /*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ reusable document styles. You've made it far and le/*[ Tutorial ](/docs/tutorial/)*/Typst to write your own documents and share/*[ Formatting ](/docs/tutorial/formatting/)*/oung project and are lo/*![â](/assets/icons/16-arrow-right.svg)*/tions, suggestions or you found a bug, please let us know in the [
Foru/*![â](/assets/icons/16-arrow-right.svg)*/ Discord server
](https://discord.gg/2uDybryKPe) , on [ GitHub
](https://github.com/typst/typst/) , or via the web app's feedback form
(al/*![](/assets/icons/16-arrow-right.svg)*/ what are you waiting for? [ Sign u/*![](/assets/icons/16-arrow-right.svg)*/thing!

[ ![â](/assets/icons/16-arrow-right.svg) Advanced /*[ ` image ` ](/docs/reference/visualize/image/ "`image`")*/) [ ![â](/assets/icons/16-arrow-right.svg)
Reference  Next page  ](/docs/reference/)/*[ ` align ` ](/docs/reference/layout/align/ "`align`")*/sets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Tutorial ](/docs/tutorial/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Formatting ](/docs/tutorial/formatting/)

=  Formatting

So far, you have written a report with some text, a few equations and images.
However, it still looks very plain. Your teaching assistant does not yet know
that you are using a new typesetting system, and you want your report to fit
in with the other student's submissions. In this chapter, we will /*[Preview](/assets/docs/Dijg8l-irnssXE7n_oJpJQAAAAAAAAAA.png)*/
==  Set rules

As we have seen in the previous chapter, Typst has functions that _insert_
content (e.g. the [ ` image ` ](/docs/reference/visualize/image/ "`image`")
function) and others that _manipulate_ content that they received as arguments
(e.g. the [ ` align ` ](/docs/reference/layout/align/ "`align`") function).
The first impulse you might have when you want, for example, to justify the
report, could/*![Preview](/assets/docs/Dijg8l-irnssXE7n_oJpJQAAAAAAAAAA.png)*/[ ` par ` ](/docs/reference/model/par/ "`par`")*/y: true)[
      = Background
      In the case of glaciers, fluid
      dynamics principles can be used
      to understand how the movement
      and behaviour of the ice is
      influenced by factors such as
      temperature, pressure, and the
      presence of other fluids (such as
      water).
    ]
    

![Preview](/assets/docs/Dijg8l-irnssXE7n_oJpJQAAAAAAAAAA.png)

Wait, shouldn't all arguments of a function be specified within parentheses?
Why is there a second set of square brackets with content _after_ the
parentheses? The answer is that, as passing content to a function is such a
common thing to do in Typst, there is special syntax for it: Instead of
putting the content inside of the argument list, you can write it in square
brackets directly after the normal arguments, saving on /*[Preview](/assets/docs/JHqbSYpLaF9kuNFQoo1lAgAAAAAAAAAA.png)*/cs/reference/model/par/ "`par`")
function justifies all paragraphs within it. However, wrapping the document in
countless functions and applying styles selectively and in-situ can quickly
become cumbersome.

Fortunately, Typst has a more elegant solution. With _set rules,_ you can
apply style properties to all occurrences of some kind of content. You write a
set rule by entering the ` set  ` keyword, followe/*![Preview](/assets/docs/JHqbSYpLaF9kuNFQoo1lAgAAAAAAAAAA.png)*/t, and a list of arguments in
parentheses.

    
    
    #set par(justify: true)
    
    = Background
    In the case of glaciers, fluid
    dynamics principles can be used
    to understand how the movement
    and behaviour of the ice is
    influenced by factors such as
    temperature, pressure, and the
    presence of other fluids (such as
    water).
    

![Preview](/assets/docs/JHqbSYpLaF9kuNFQoo1lAgAAAAAAAAAA.png)

Want to know in more techn/*[Autocomplete panel](/assets/docs/2-formatting-autocomplete.png)*/zed as setting default values for some of the
parameters of a function for all future uses of that function.

==  The autocomplete panel

If you followed along and tried a few things in the app, you might have
n/*[ ` text ` ](/docs/reference/text/text/ "`text`")*/ter, a panel pops up to show
you the available functions, and, w/*[ ` page ` ](/docs/reference/layout/page/ "`page`")*/hat's the autocomplete panel. It can be very/*![Autocomplete panel](/assets/docs/2-formatting-autocomplete.png)*// "`par`")*/s by hitting the Return key
or navigate to the desir/*[ ` heading ` ](/docs/reference/model/heading/ "`heading`")*/ed by hitting the Escape key and opened again by typing `/*[ ` document ` ](/docs/reference/model/document/ "`document`")*/anel to discover the
right arguments for functions. Most suggestions come with a small description
of what they do.

![Autocomplete panel](/assets/docs/2-formatting-autocomplete.png)

==  Set up the page

Back to set rules: When writing a rule, you choose the function depending on
what type of element you want to style. Here is a list of some functions that
are commonly used in set rules:

  - [ ` text ` ](/docs/reference/text/text/ "`text`") to set font family, size, color, and other properties of text 
  - [ ` page ` ](/docs/reference/layout/page/ "`page`") to set the page size, margins, headers, enable columns, and footers 
  - [ ` par ` ](/docs/reference/model/par/ "`par`") to justify paragraphs, set line spacing, and more 
  - [ ` heading ` ](/docs/reference/model/heading/ "`heading`") to set the appearance of headings and enable numbering 
  - [ ` document ` ](/docs/reference/model/document/ "`document`") to set the metadata contained in the PDF output, such as title and author 

Not all function parameters can be set. In general, only parameters that tell
a function _how_ to/*[Preview](/assets/docs/vXvjGwfGgpk5eo7U4CVWMQAAAAAAAAAA.png)*/o it with. The function reference pages indicate /*[ ` page ` ](/docs/reference/layout/page/ "`page`")*/e styles to our document. We want larger margins and a
serif font. For the purposes of the example, we'll also set /*[ many standard page sizes,
](/docs/reference/layout/page/#parameters-paper)*/: (x: 1.8cm, y: 1.5cm),
    )
    #set text(
      font: "New Computer Mo/*[ dictionary.
](/docs/reference/foundations/dictionary/)*/y: true,
      /*![Preview](/assets/docs/vXvjGwfGgpk5eo7U4CVWMQAAAAAAAAAA.png)*/port, we will explore the
    various factors that influence fluid
    dynamics in glaciers and how they
    contribute to the formation and
    behaviour of these natural structures.
    
    ...
    
    #align(center + bottom)[
      #image("glacie/*[ ` text ` ](/docs/reference/text/text/ "`text`")*/important
      part of the earth's climate
      system._
    ]
    

![Preview](/assets/docs/vXvjGwfGgpk5eo7U4CVWMQAAAAAAAAAA.png)

There are a few things of note here.

First is the [ ` page ` ](/docs/reference/layout/page/ "`page`") set rule. It
receives two arguments: the page size and margins for the page. The page size
is a string. Typst accepts [ many sta/*[ length ](/docs/reference/layout/length/ "length")*/rameters-paper) but you can also specify a
custom page size. The margins are specified as a [ dictionary.
](/docs/reference/foundations/dictionary/) Dictionaries are a collection of
key-value pairs. In this case, the keys are ` x ` and ` y ` , and the values
are the horizontal and vertical margins, respectively. We could also have
specified separate margins for each side by passing a dictionary with the keys
` left ` , ` right ` , ` top ` , and ` bottom ` .

Next is the set [ ` text ` ](/docs/reference/text/text/ "`text`") set rul/*[ ` heading `
](/docs/reference/model/heading/ "`heading`")*/to ` "New Computer
Modern"  ` . The Typst app comes with many fonts that you can try for your
document. When you are in the text function's argument list, you can discover/*[Preview](/assets/docs/4WtF0u81AczurIYrwpRdcwAAAAAAAAAA.png)*/o set the spacing between lines (a.k.a. leading): It is specified
as a [ length ](/docs/reference/layout/length/ "length") value, and we used
the ` em ` unit to specify the leading relativ/*[ letters, roman numerals, and symbols
](/docs/reference/model/numbering/)*/(which defaults to ` 11pt  ` ).

Finally, we have bottom aligned our image by adding a vertical alignment to
our center alignment. Vertical and horizontal alignments can be combine/*[Preview](/assets/d/*![Preview](/assets/docs/4WtF0u81AczurIYrwpRdcwAAAAAAAAAA.png)*/ion

To/*[ ` lorem ` ](/docs/reference/text/lorem/
"`lorem`")*/ number our headings. We
can do this by setting the ` numbering ` parameter of the [ ` heading `
](/docs/reference/model/heading/ "`heading`") function.

    
    
    #set heading(numbering: "1.")
    
    = Introduction
    #lorem(10)
    
    == Background
    #lorem(12)
    
    == Methods
    #lorem(15)
    

![Preview](/assets/docs/4WtF0u81AczurIYrwpRdcwAAAAAAAAAA.png)

We /*![Preview](/assets/docs/Llv0DrZ6U-QKf1vju2wP4QAAAAAAAAAA.png)*/is tells Typst
to number the headings with arabic numerals and to put a dot between the
number of each level. We can also use [ letters, roman numerals, and symbols
](/docs/reference/model/numbering/) for our headings:

    
    
    #set heading(numbering: "1.a")
    
    = Introduction
    #lorem(10)
    
    == Background
    #lorem(12)
    
    == Methods
    #lorem(15)
    

![Preview](/assets/docs/Llv0DrZ6U-QKf1vju2wP4QAAAAAAAAAA.png)

This example also uses the [ ` lorem ` ](/docs/reference/text/lorem/
"`lorem`") function to generate some placeholder text. This functi/*[ define a custom function
](/docs/reference/foundations/function/#defining-functions)*/
Did you wonder why the headings and text set rules apply to all text and
headings, even if they are not produced with the respective functions?

Typst internally calls the ` heading ` function every time you write ` =
Conclusion  ` . In fact, the function call ` #  heading  [  Conclusion  ]  `
is equivalent to the heading markup above. Other markup elements work
similarly, they are only _syntax sugar_ for the corresponding function calls.

==  Show rules

You are already pretty happy with how this turned out. But one last thing
needs to be fixed: The report you are writing is/*[Preview](/assets/docs/349_Itx4-rTeNxzJmNofvgAAAAAAAAAA.png)*/d always be accompanied by a logo, even in prose.

You consider your options. You could add an ` #  image  (  "logo.svg"  )  `
call before every instance of the logo using search and replace. That sounds
very tedious. Instead, you could maybe [ define a custom function
](/docs/reference/foundations/function/#defining-functions) that always yields
the logo with its image. However, there is an even easier way:

With show rules, you can redefine how Typst displays c/*![Preview](/*[ code blocks ](/docs/reference/scripting/)*/ show differently and how they should look.
Show rules can be applied to instances of text, many functions, and even the
whole document.

    
    
    #show "ArtosFlow": name => box[
      #box(image(
        "logo.svg",
        height: 0.7em,
      ))
      #name
    ]
    
    This report is embedded in the
    ArtosFlow project. ArtosFlow is a
    project of the Artos Institute.
    

![Preview](/*[ code blocks ](/docs/reference/scripting/)*/AA.png)

There is a lot of new syntax in this example: We write the ` show  ` keyword,
followed by a string of /*![â](/assets/icons/16-arrow-right.svg)*/olon. Then, we
write a function that takes the content that shall b/*![â](/assets/icons/16-arrow-right.svg)*/that argument ` name ` . We can now use the ` name ` variable
in the function's body to print the Art/*![Docs](/assets/icons/16-docs-dark.svg)*/o image in front of the name and puts the result into a box to prevent
linebreaks from occurring between logo and name. The image is also put inside
of a box, so/*[ ![â](/assets/icons/16-arrow-right.svg)*/aph.

The calls to the first box function and the image function /*[ ![â](/assets/icons/16-arrow-right.svg)*/ey were not embedded directly in markup. When Typst
expects code instead of markup, the leading ` #/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/words, and variables. This can be observed in parame/*[ Changelog ](/docs/changelog/)*/, and [ code blocks ](/docs/reference/scrip/*[ 0.11.1 ](/docs/changelog/0.11.1/)*/how to apply basic formatting to your Typst documents. You
learned how to set the font, justify your paragraphs, change the page
dimensions, and add numbering to your headings with set rules. You also
learned how to use a basic show rule to change how text appears throughout
your document.

You have handed in your report. Your supervisor /*![Docs](/assets/icons/16-docs-dark.s/*[ ` path ` ](/docs/reference/visualize/path/ "`path`")*/, we will learn
how to format your docu/*![](/*[ ` raw ` ](/docs/reference/text/raw/ "`raw`")*/-indent ` ](/docs/reference/model/par/#parameters-first-line-indent)*/y/*[ ` outline ` ](/docs/reference/model/outline/ "`outline`")*/â](/assets/icons/16-arrow-right.svg)
Advanced Styling  Next page  ](/docs/tutorial/adva/*[ rectangles ](/docs/reference/visualize/rect/)*/
  - [ ![Docs](/assets/icons/16-docs-dark.s/*[ ` path ` ](/docs/reference/visualize/path/ "`path`")*/
  - [ Changelog ](/docs/changelog/)
  - ![](/*[ ` raw ` ](/docs/reference/text/raw/ "`raw`")*/ ](/docs/changelog/0.11.1/)

=  Version 0.11.1 (May 17, 2024)

==  Security

  - Fixed a vulnerability where image files at known paths could be embedded into the PDF even if they were outside of the project directory 

==  Bibliography

  - Fixed et-al handling in subsequent citations 
  - Fixed suppression of title for citations and /*[ equations ](/docs/reference/math/equation/)*/ixed handling of initials in citation styles/*[ blackboard bold ](/docs/reference/math/variants/#functions-bb)*/

==  Text and Layout

  - Fixed interaction of [ ` first-line-indent ` ](/docs/reference/mo/*[ ` mid ` ](/docs/reference/math/lr/#functions-mid)*/ine ` ](/docs/reference/model/outline/ "`outline`")
  - Fixed compression of CJK punctuation marks at line start and end 
  - Fixed /*[ smart quotes ](/docs/reference/text/smartquote/)*/ze/rect/) with negative/*[ patterns ](/docs/reference/visualize/pattern/)*/ocs/reference/visualize/path/ "`path`") in explicitly s/*[ page numbering ](/docs/reference/layout/page/#parameters-numbering)*// "`raw`") text in right-to-left paragraphs 
  - Fixed tab rendering in ` raw ` text with language ` typ ` or ` typc `
  - Fixed highlighting of multi-line ` raw `/*[ ` str  .  trim  (  regex  ,  at  :  end  )  ` ](/docs/reference/foundations/str/#definitions-trim)*/- Fixed extra space when ` raw ` text ends with a backtick 

==  Math

  - Fixed broken [ equations ](/docs/reference/math/equation/) in right-to-left paragrap/*![GitHub avatar of Leedehai](https://avatars.githubusercontent.com/u/18319900?s=64&v=4)*/letters 
  - Fixed error on empty /*![GitHub avatar of elegaanz](https://avatars.githubusercontent.com/u/16254623?s=64&v=4)*/e/math/lr/#functions-mid) for vari/*![GitHub avatar of frozolotl](https://avatars.githubusercontent.com/u/44589151?s=64&v=4)*/gn  (  ..  )  `

==  Export

  - Fi/*![GitHub avatar of A-Walrus](https://avatars.githubusercontent.com/u/58790821?s=64&v=4)*/erns ](/docs/ref/*[ ![GitHub avata/*![GitHub avatar of MDLC01](https://avatars.githubusercontent.com/u/57839069?s=64&v=4)*/ithub.com/Leedehai*/en/*[ ![GitH/*![GitHub avatar of Myriad-Dreamin](https://avatars.githubusercontent.com/u/35292584?s=64&v=4)*/ithub.com/elegaanz*/ow/*[ ![GitHub avata/*![GitHub avatar of 3w36zj6](https://avatars.githubusercontent.com/u/52315048?s=64&v=4)*/ithub.com/frozolotl*/ a/*[ ![GitH/*![GitHub avatar of Enter-tainer](https://avatars.githubusercontent.com/u/25521218?s=64&v=4)*//github.com/A-Walrus*/an/*[ ![GitHub a/*![GitHub avatar of EpicEricEE](https://avatars.githubusercontent.com/u/7191192?s=64&v=4)*/thub.com/MDLC01*/Th/*[ ![GitHub avat/*![GitHub avatar of Jocs](https://avatars.githubusercontent.com/u/9712830?s=64&v=4)*/*https://github.com/Myriad-Dre/*![GitHub avatar of PgBiel](https://avatars.githubusercontent.com/u/9021226?s=64&v=4)*/5048?s=64&v=4)*/*https://github./*![GitHub avatar of QuarticCat](https://avatars.githubusercontent.com/u/70888415?s=64&v=4)*//u/25521218?s=64&v=4)*/*https://gith/*![GitHub avatar of Tom4sCruz](https://avatars.githubusercontent.com/u/103905440?s=64&v=4)*/nt.com/u/7191192?s=64&v=4)*/*https:/*![GitHub avatar of bluebear94](https://avatars.githubusercontent.com/u/2975203?s=64&v=4)*/t.com/u/9712830?s=64&v=4)*/*https:///*![GitHub avatar of etiennecollin](https://avatars.githubusercontent.com/u/99756528?s=64&v=4)*/21226?s=64&v=4)*/*https://github.com/Pg/*![GitHub avatar of gabriel-araujjo](https://avatars.githubusercontent.com/u/3980936?s=64&v=4)*/=64&v=4)*/*https://github.com/QuarticCat*/*![GitHub avatar of joserlopes](https://avatars.githubusercontent.com/u/95137505?s=64&v=4)*/64&v=4)*/*https://github.com/Tom4sCr/*![GitHub avatar of rikhuijzer](https://avatars.githubusercontent.com/u/20724914?s=64&v=4)*/s=64&v=4)*/*https://github.com/blueb/*![GitHub avatar of wrzian](https://avatars.githubusercontent.com/u/133046678?s=64&v=4)*//99756528?s=64&v=4)*/*https://*![â](/assets/icons/16-arrow-right.svg)*/b avata/*![GitHub avatar of PgBiel](https://av/*[ ![â](/assets/icons/16-arrow-right.svg)*/*https://github.com/gabriel-araujjo*/://*![GitHub avatar of QuarticCat](https:/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/505?s=64&v=4)*/*https://github.com/joserlopes*/](/*[ ![GitHub avatar of rikhuijzer](https://avatars.githubusercontent.com/u/20724914?s=64&v=4)*/*https://github.com/rikhuijzer*/=6/*[ ![G/*![GitHub avatar of bluebear94](https://avatars.githubusercontent.com/u/2975203?s=/*[ CSL ](https://citationstyles.org/)*/](/asse/*![GitHub avatar of etiennecollin](https://avatars.githubusercontent.com/u/99756528?s=64&v=4)*/ts/icons/16-arrow-right.svg)*/&v=4) ](https://github.com/PgBiel)
  - [ ![GitHub avatar of QuarticCat](https:/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/5?s=64&v=4) ](https://github/*![GitHub avatar of joserlopes](https://avat/*[ ` cite ` ](/docs/reference/model/cite/ "`cite`")*/u/10390/*[ 0.9.0 ](/docs/changelog/*![GitHub avatar of rikhuijzer](https://avatars.githubusercontent.com/u/20724914?s=64&v=4)*/ntent.com/u/2975203?s=/*[ CSL ](http/*![GitHub avatar of wrzian](https://avatars.githubusercontent.com/u/133046678?s=64&v=4)*/.githubusercontent.com/u/9975/*![â](/assets/icons/16-arrow-/*[ label ](/docs/reference/foundations/label/ "label")*/eters-f/*![â](/assets/icons/16-arrow-right.sv/*[ ` full ` ](/docs/reference/model/bibliography/#parameters-full)*/[ ![GitHub avatar o/*![Docs](/assets/icons/16-docs-dark.svg)*/](/docs/re/*![](/assets/icons/16-arrow-right.svg)*//github.com/joserlopes)
  - [ ![GitHu/*![](/assets/icons/16-arrow-right.svg)*/rs.githubusercontent.com/u/20724914?s=64&v=4) ](https://github.com/rikhuijzer)
  - [ ![GitHub avatar of wrzian](https://avatars.githubusercontent.com/u/133046678?s=64&v=4) ](https://github.com/wrzian)

[ ![â](/assets/icons/16-arrow-/*[ label ](/docs/reference/foundations/label/ "label")*/12.0/) [ ![â](/assets/icons/16-arrow-right.sv/*[ ` full ` ](/docs/reference/model/bibliography/#parameters-full)*/log/0.9.0.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Changelog ](/docs/changelog/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ 0.9.0 ](/docs/changelog/0.9.0/)

=  Version 0.9.0 (October 31, 2023)

==  Bibliography management

  - New bibliogr/*[ changelog ](https://github.com/typst/hayagriva/blob/main/CHANGELOG.md)*/e Language). Ships with about 100 commonly used citation styles and can load custom ` .csl ` files. 
  - Added new [ ` form ` ](/docs/reference/model/cite/#parameters-form) argument to the ` cite ` function to produce dif/*[ @Dherse ](https://github.com/Dherse)*/oducing a citation suita/*[ gradients ](/docs/reference/visualize/gradient/)*//docs/reference/model/cite/ "`cite`") function now takes only a single label/key instead of allowing multiple. Adjacent citations are merged /*[ Oklab ](/docs/reference/visualize/color/#definitions-oklab)*/*[ Linear RGB(A) ](/docs/reference/visualize/color/#definitions-linear-rgb)*/*[ HSL ](/docs/reference/visualize/color/#definitions-hsl)*/ ` /*[ HSV ](/docs/reference/visualize/color/#definitions-hsv)*/s/label/ /*[ ` saturate ` ](/docs/reference/visualize/color/#definitions-saturate)*/*[ ` desaturate ` ](/docs/reference/visualize/color/#definitions-desaturate)*/aph/*[ ` rotate ` ](/docs/reference/visualize/color/#definitions-rotate)*/e cited 
  - Bibliography entr/*[ ` color.map ` ](/docs/reference/visualize/color/#predefined-color-maps)*/n markup), this works both for ` .yml ` and ` .bib ` bibliographies 
  - The hayagriva YAML format was impro/*[ ` space ` ](/docs/reference/visualize/color/#definitions-space)*/b/main/CHANGELOG.md) for more details. *(Breaking change)*
  - A few bugs with ` .b/*[ ` components ` ](/docs/reference/visualize/color/#definitions-components)*/ function in favor of ` form `

=/*[ rectangles ](/docs/reference/visualize/rect/)*/nks to [ @Dherse ](https://github.com/Dherse) ) 
    - Added support for [ gradient/*[ boxes ](/docs/reference/layout/box/#parameters-clip)*/ /*[ blocks ](/docs/reference/layout/block/#parameters-clip)*/
    - Added support for defining colors in more color sp/*[ ` overline ` ](/docs/reference/text/overline/ "`overline`")*/*[ ` underline ` ](/docs/reference/text/underline/ "`underline`")*/col/*[ ` strike ` ](/docs/reference/text/strike/ "`strike`")*/isualize/color/#definitions-hsl) , and [ HSV ](/docs/reference/visualize/color/#definitions-hsv)
    - Added [ ` saturate ` ](/docs/reference/visualize/color/#definitions-saturate) , [ `/*[ spacing ](/docs/reference/text/text/#parameters-cjk-latin-spacing)*/ate) , and [ ` rotate ` ](/docs/reference/visualize/color/#definitions-rotate) functions on colors 
    - Added [ ` color.ma/*[ ` quote ` ](/docs/reference/model/quote/ "`quote`")*/or-maps) module with predefined color maps that can be used with gradients 
    -/*[ ` raw.line ` ](/docs/reference/text/raw/#definitions-line)*/eference/visualize/color/#definitions-space)
    - Removed ` to-rgba ` , ` to-cmyk ` , and ` to-luma ` functions in favor of a new [ ` components ` ](/docs/referenc/*[ inset ](/docs/reference/model/table/#parameters-inset)*/ Improved rendering of [ rectangles ](/docs/reference/visualize/rect/) with corner radius and varying stroke widths 
  - Added support for properly clippin/*[ smart quotes ](/docs/reference/text/smartquote/)*/-clip) and [ /*[ figure separator ](/docs/reference/model/figure/#definitions-caption-separator)*/ Added ` background ` parameter to [ ` overline ` ](/docs/reference/text/overline/ "`overline`") , [ ` underline ` ](/docs/reference/text/underline/ "`underline`") , and [ ` strike ` ](/docs/reference/text/strike/ "`strike`") functions 
  - Fixed inaccurate color embedding in PDFs 
  - Fixed ICC profile handling for images embedded in PDFs 

==  Text and Layout

  - Added support for automatically adding proper [ spacing ](/docs/reference/text/text/#parameters-cjk-latin-spacing) between CJK and Latin text (enabled by default) 
  - Added support for automatic adjustment of more CJK punctuation 
  - Added [ ` quote ` ](/docs/reference/model/quote/ "`quote`") element for inserting inline and block quotes with optional attribu/*[ ` to ` ](/docs/reference/layout/pagebreak/#parameters-to)*/#definitions-line) element for customizing the display of individual lines of raw text, e.g. to add line numb/*[ placed ](/docs/reference/layout/place/)*/ing 
  - Added support for per-/*[ ` above ` ](/docs/reference/layout/block/#parameters-above)*/ /*[ ` below ` ](/docs/reference/layout/block/#parameters-below)*/nian translations 
  - Added support for Czech hyphenation 
  - Added support for setting custom [ /*[ ` underline ` ](/docs/reference/text/underline/ "`underline`")*/*[ ` overline ` ](/docs/reference/text/overline/ "`overline`")*/ons/*[ ` strike ` ](/docs/reference/text/strike/ "`strike`")*/guage and region 
  - Improv/*[ floating placed elements ](/docs/reference/layout/place/#parameters-float)*/ many URLs) 
  - Improved handling of consecutive hyphens in justification algorithm 
  - Fixed interaction of justification and han/*[ ` vec ` ](/docs/reference/math/vec/#parameters-gap)*/*[ ` mat ` ](/docs/reference/math/mat/#parameters-gap)*/ed /*[ ` cases ` ](/docs/reference/math/cases/#parameters-gap)*/ion 
  - Fixed handling of word joiner /*[ ` abs ` ](/docs/reference/math/lr/#functions-abs)*/*[ ` norm ` ](/docs/reference/math/lr/#functions-norm)*/*[ ` floor ` ](/docs/reference/math/lr/#functions-floor)*/*[ ` ceil ` ](/docs/reference/math/lr/#functions-ceil)*/Fix/*[ ` round ` ](/docs/reference/math/lr/#functions-round)*/` ](/docs/referenc/*[ ` reverse ` ](/docs/reference/math/cases/#parameters-reverse)*/nction 
  - Fixed ` set  align  (  ..  )  ` for equations 
  - Fixed spacing/*[ ` binom ` ](/docs/reference/math/binom/)*/place/) elements 
  - Fixed coalescing of [ /*[ ` cancel ` ](/docs/reference/math/cancel/)*/rameters-above) and [ ` below ` ](/docs/reference/layout/block/#parameters-below) spacing if given in em units and the font sizes differ 
  - Fixed handling of ` extent ` parameter of [ /*[ operators ](/docs/reference/math/op/)*/derline/ "`underline`") , [ ` overline ` ](/docs/reference/tex/*[ accents ](/docs/reference/math/accent/)*/e ` ](/docs/reference/text/strike/ "`strike`") functions 
  - Fixed crash for/*[ symbols ](/docs/reference/symbols/sym/)*/ence/layout/place/#parameters-float) with no specif/*[ augmentation ](/docs/reference/math/mat/#parameters-augment)*/ns in footnotes 

==  Math

  - Added ` gap ` argument for [ ` vec ` ](/d/*[ augmentation ](/docs/reference/math/mat/#parameters-augment)*/ference/math/mat/#parameters-gap) , and [ ` cases ` ](/docs/reference/math/cases/#parameters-gap)/*[ baseline ](/docs/reference/text/text/#parameters-baseline)*//reference/math/lr/#functions-abs) , [ ` norm ` ](/docs/reference/math/lr/#functions-norm) , [ ` floor ` ](/docs/reference/math/lr/#functions-floor) , [ ` ceil ` ](/docs/reference/math/lr/#functions-ceil) , and [ ` round ` ](/docs/reference/math/lr/#functions-round) functions 
  - Added [ ` reverse ` ](/docs/reference/math/cases/#parameters-reverse) parameter to cases function 
  - Added support for multinomial coefficients to [ ` binom ` ](/docs/reference/math/binom/) function 
  - Removed ` rotation ` argument on [ ` cancel ` ](/docs/reference/math/cancel/) function in favor of a new and more flexible ` angle ` argument *(Breaking change)*
  - Added ` wide ` constant, which inserts twice the spacing of ` quad `
  - Added ` cs/*[ labels ](/docs/reference/foundations/label/)*/e/math/op/)
  - ` â¼ ` , ` â ` , ` â ` , and ` â· ` can now be used as [ accents ](/docs/reference/math/accent/)
  - Added ` integral.dash ` , ` integral.dash.double ` , and ` integral.slash ` [ symbols ](/docs/reference/symbols/sym/)
  - Added support for specifying negative indices for [ augmentation ](/docs/reference/math/mat/#parameters-augment) lines to position the line from the back 
  - Fixed default color of matrix [ augmentation ](/docs/reference/math/mat/#parameters-augment) lines 
  - Fixe/*[ ` array.sorted ` ](/docs/reference/foundations/array/#definitions-sorted)*/ the text [ baseline ](/docs/reference/text/text/#parameters-baseline) setting 

==  Performance

  - Fixed a bug related to show rules in templates/*[ ` date ` ](/docs/reference/model/document/#parameters-date)*/ffected documents 
  - Micro-optimized code in several hot paths, which brings substantial performance gains, in particular in incremental compilations 
  - Imp/*[ ` keywords ` ](/docs/reference/model/document/#parameters-keywords)*/ation pipeline 
  - Added support for incremental parsing in the CLI 
  - Added support for incremental SVG encoding during PDF export, which greatly improves export performance for documents with many SVG 

==  Tooling and Diagnostics

  - Improved autocompletion for variables that are in-scope 
  - Added autocompletion for package imports 
  - Added autocompletion for [ labels ](/docs/reference/foundations/label/)
  - Added tooltip that shows which variables a function captures (when hovering over the equals sign or arrow of the function) 
  - Diagnostics are now deduplicated 
  - Improved diagnostics when trying to apply unary ` + ` or ` - ` to types that only support binary ` + ` and ` - `
  - Error messages now state which label or citation key isn't present in the do/*[ ` version ` ](/docs/reference/foundations/version/ "`version`")*/nt parsing errors were shadowed by function execution errors (e.g. when trying to call [ ` array.sorted ` ](/docs/reference/foundations/array/#definitions-sorted) and passing the key function as a positio/*[ ` repr ` ](/docs/reference/foundations/repr/ "`repr`")*/Added support for configuring the document's creation [ ` date ` ](/docs/reference/model/document/#parameters-date) . If the ` date ` is set to ` auto  ` (the default), the PDF's creation date will be set to the current date and time. 
  - Added support for configu/*[ array ](/docs/reference/foundations/array/#definitions-remove)*/a/*[ dictionary ](/docs/reference/foundations/dictionary/#definitions-remove)*/e PDF creator tool metadata now includes the Typst version 

==  Web app

  - Added version picker to pin a project to an older compiler version (with support f/*[ ` array.zip ` ](/docs/reference/foundations/array/#definitions-zip)*/mproved overall stability 
  - The app now continues to highlight the document when typing while the document is bei/*![GitHub avatar of Dherse](https://avatars.githubusercontent.com/u/9665250?s=64&v=4)*/s through fontconfig 
  - Now cl/*![GitHub avatar of EpicEricEE](https://avatars.githubusercontent.com/u/7191192?s=64&v=4)*/ile extension for selected output fo/*![GitHub avatar of tingerrr](https://avatars.githubusercontent.com/u/137803093?s=64&v=4)*/PNG or SVG export 

==  Miscellane/*![GitHub avatar of LuxxxLucy](https://avatars.githubusercontent.com/u/19356905?s=64&v=4)*/on`") type and ` sys.version ` cons/*![GitHub avatar of bluebear94](https://avatars.githubusercontent.com/u/2975203?s=64&v=4)*/ versions. 
  - The U+2/*[ ![GitHub /*![GitHub avatar of MDLC01](https://avatars.githubusercontent.com/u/57839069?s=64&v=4)*//github.com/Dherse*/pr/*[ ![GitH/*![GitHub avatar of Jollywatt](https://avatars.githubusercontent.com/u/24970860?s=64&v=4)*/ps://github.com/EpicEricEE*/rt/*[ !/*![GitHub avatar of SekoiaTree](https://avatars.githubusercontent.com/u/51149447?s=64&v=4)*/*https://github.com/tingerrr*/st/*[ /*![GitHub avatar of DVDTSB](https://avatars.githubusercontent.com/u/66365801?s=64&v=4)*/=4)*/*https://github.com/LuxxxLu/*![GitHub avatar of HydroH](https://avatars.githubusercontent.com/u/14823453?s=64&v=4)*/203?s=64&v=4)*/*https://github.c/*![GitHub avatar of KillTheMule](https://avatars.githubusercontent.com/u/4117685?s=64&v=4)*/7839069?s=64&v=4)*/*https://github.co/*![GitHub avatar of LaurenzV](https://avatars.githubusercontent.com/u/47084093?s=64&v=4)*/4970860?s=64&v=4)*/*https://github/*![GitHub avatar of frozolotl](https://avatars.githubusercontent.com/u/44589151?s=64&v=4)*/om/u/51149447?s=64&v=4)*/*https://g/*![GitHub avatar of peng1999](https://avatars.githubusercontent.com/u/12483662?s=64&v=4)*/t.com/u/66365801?s=64&v=4)*/*https/*![GitHub avatar of 0scvr](https://avatars.githubusercontent.com/u/71343264?s=64&v=4)*/tent.com/u/14823453?s=64&v=4)*//*![GitHub avatar of 7sDream](https://avatars.githubusercontent.com/u/7822577?s=64&v=4)*/hubusercontent.com/u/4117685?s=64/*![GitHub avatar of 8LWXpg](https://avatars.githubusercontent.com/u/105704427?s=64&v=4)*/tars.githubusercontent.com/u/470/*![GitHub avatar of Enter-tainer](https://avatars.githubusercontent.com/u/25521218?s=64&v=4)*/avatars.githubusercontent.com/u/445891/*![GitHub avatar of FlyinPancake](https://avatars.githubusercontent.com/u/36113055?s=64&v=4)*/tars.githubusercontent.com/u/12483662?/*![GitHub avatar of Myriad-Dreamin](https://avatars.githubusercontent.com/u/35292584?s=64&v=4)*/ubusercontent.com/u/71343264?s=64&v=4)*//*![GitHub avatar of T0mstone](https://avatars.githubusercontent.com/u/39707032?s=64&v=4)*/content.com/u/7822577?s=64&v=4)*/*https://github.com/7sDream*/ub/*[ ![GitHub avatar of 8LWXpg](https://avatars.githubusercontent.com/u/105704427?s=64&v=4)*/*https://github./*![GitHub avatar of WannesMalfait](https://avatars.githubusercontent.com/u/46323945?s=64&v=4)*/5521218?s=64&v=4)*/*https://github.com//*![GitHub avatar of WeetHet](https://avatars.githubusercontent.com/u/43210583?s=64&v=4)*/.com/u/36113055?s=64&v=4)*/*https/*![GitHub avatar of Weissnix4711](https://avatars.githubusercontent.com/u/42943391?s=64&v=4)*/usercontent.com/u/35292584?s=64&v=4)*//*![GitHub avatar of Zheoni](https://avatars.githubusercontent.com/u/38019254?s=64&v=4)*/s.githubusercontent.com/u/397070/*![GitHub avatar of antonWetzel](https://avatars.githubusercontent.com/u/59712243?s=64&v=4)*/://avatars.githubusercontent.com/u/14/*![GitHub avatar of arnaudgolfouse](https://avatars.githubusercontent.com/u/53786772?s=64&v=4)*/](https://avatars.githubusercontent.com//*![GitHub avatar of drupol](https://avatars.githubusercontent.com/u/252042?s=64&v=4)*/eetHet](https://avatars.githubus/*![GitHub avatar of dxniel-19](https://avatars.githubusercontent.com/u/33750461?s=64&v=4)*/f Weissnix4711](https://avatars.git/*![GitHub avatar of extua](https://avatars.githubusercontent.com/u/66693681?s=64&v=4)*/itHub avatar of Zheoni](https://*![GitHub avatar of fritzrehde](https://avatars.githubusercontent.com/u/80471265?s=64&v=4)*/GitHub avatar of antonWetzel](https:/*![GitHub avatar of johannes-wolf](https://avatars.githubusercontent.com/u/519002?s=64&v=4)*/*[ ![GitHub avatar of arnaudgolfouse](h/*![GitHub avatar of qrnch-jan](https://avatars.githubusercontent.com/u/60492138?s=64&v=4)*/fouse*/th/*[ ![GitHub avatar of dru/*![GitHub avatar of toddlerer](https://avatars.githubusercontent.com/u/74579078?s=64&v=4)*/l*/tt/*[ ![GitHub avatar of dxni/*![â](/assets/icons/16-arrow-right.svg)*/.com/u/33750461?s=64&v=4)*/*https://github.com/d/*![â](/assets/icons/16-arrow-right.svg)*/](https://avatars.githubusercontent.com/u/66693681?s=64&v=4)*/*https://github.c/*![Docs](/assets/icons/16-docs-dark.svg)*/zrehde](https://avatars.githubusercontent.com/u/80471265?s=64&v=4)*/*https://github.com/fritzrehde*/en/*[ ![GitHub avata/*![GitHub/*[ 0.10.0 ](/docs/changelog/0.10.0/)*/rcontent.com/u/519002?s=64&v=4)*/*https://github.com/johannes-wolf*/ub/*[ ![GitHub avata/*![GitHub avatar of Zheoni](https://avatars.githubusercontent.com/u/38019254?s=64&v=4)*/github.com/qrnch-jan*/av/*[ ![Gi/*![GitHub avatar of antonWetzel](https://avatars.githubusercontent.com/u/59712243?s=64&v=4)*/ps://github.com/toddlerer*/*[ ![â](/*![GitHub avatar of arnaudgolfouse](https://avatars.githubusercontent.com/u/53786772?s=64&v=4)*/assets/icons/16-arrow-right.svg)*/nesMal/*![GitHub avatar of drupol](https://avatars.githubusercontent.com/u/252042?s=64&v=4)*//assets/icons/16-docs-dark.svg)*/*![GitHub avatar of dxniel-19](https://avatars.githubusercontent.com/u/33750461?s=64&v=4)*/(https://github.com/WeetHet)
  - [ /*![GitHub avatar of extua](https://avatars.githubusercontent.com/u/66693681?s=64&v=4)*/1?s=64&v=4) ](https://github.co/*![GitHub avatar of fritzrehde](https://avatars.githubusercontent.com/u/80471265?s=64&v=4)*/38019254?s=64&v=4) ](https://github./*![GitHub avatar of johannes-wolf](https://avatars.githubusercontent.com/u/519002?s=64&v=4)*/59712243?s=64&v=4) ](https://github.com/*![GitHub avatar of qrnch-jan](https://avatars.githubusercontent.com/u/60492138?s=64&v=4)*/.com/u/53786772?s=64&v=4) ](https://*![GitHub avatar of toddlerer](https://avatars.githubusercontent.com/u/74579078?s=64&v=4)*/ontent.com/u/252042?s=64&v=4) ](/*![â](/assets/icons/16-arrow-right.svg)*/b avatar of dxniel-19](https://avatars.githubusercontent.com/u/33750461?s=64&v=4) ](https://github.com/dxniel-19)
  - [ ![GitHub avatar of extua](https://avatars.githubusercontent.com/u/66693681?s=64&v=4) ](https://github.com/extua)/*![](/assets/icons/16-arrow-right.svg)*/(https://avatars.githubusercontent.com/u/80471265?s=64&v=4) ](https://github.com/fritzrehde)
  - [ ![GitHub avatar of johannes-wolf](https://avatars.githubusercontent.com/u/519002?s=64&v=4) ](https://github.com/johannes-wolf)
  - [ ![GitHub avatar of qrnch-jan](https://avatars.githubusercontent.com/u/60492138?s=64&v=4) ](https://github.com/qrnch-jan)
  - [ ![GitHub avatar of toddlerer](https://avatars.githubusercontent.com/u/74579078?s=64&v=4) ](https://github.com/toddlerer)

[ ![â](/assets/icons/16-arrow-right.svg) 0.10.0  Previous page
](/docs/changel/*[ patterns ](/docs/reference/visualize/pattern/)*/t.svg) 0.8.0
Next page  ](/docs/changelog/0.8.0/)



=/*[ ` components ` ](/docs/reference/visualize/color/#definitions-components)*/](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Changelog ](/docs/changelog/)
/*[ Oklch ](/docs/reference/visualize/color/#definitions-oklch)*/s/changelog/0.10.0/)

=  Version 0.10.0 (December 4, 2023)

==  Bibliography management

  - Added suppor/*[ Oklab ](/docs/reference/visualize/color/#definitions-oklab)*/ [2], [3] ` ) if requeste/*[ clipping ](/docs/reference/layout/block/#parameters-clip)*/ould appear after a group of citations 
  - Fixed link/*[ gradients ](/docs/reference/visualize/gradient/)*/ed show-set rules on citations 
  - Fixed bibliography-related crashes that happened on some systems 
  - Corrected name of the GB/T 7714 family of styles from 7114 to 7714 
  - Fixed missing title in some bibliography styles 
  - Fixed printing of volumes in some styles 
  - Fixed delimiter order for contributors in some styles (e.g. APA) 
  - Fixed behavior/*[ figure caption separator ](/docs/reference/model/figure/#definitions-caption-separator)*/in Hayagriva values 
  - Fixed crashes with empty d/*[ figure supplement ](/docs/reference/model/figure/#parameters-supplement)*/- Fixed title case formatting afte/*[ CJK-Latin-spacing ](/docs/reference/text/text/#parameters-cjk-latin-spacing)*/arbitrary strings 
  - /*[ ` locate ` ](/docs/reference/introspection/locate/ "`locate`")*/- Entry keys in ` .bib ` files now allow more characters 
  - Fixed er/*[ ` mid ` ](/docs/reference/math/lr/#functions-mid)*/Added support for years of lengths other than 4 without leading ze/*[ ` lr ` ](/docs/reference/math/lr/#functions-lr)*/.g. for quot/*[ ` op ` ](/docs/reference/math/op/)*/les 

==  Visualization

  - Added support for [ patterns ](/docs/reference/visua/*[ math alignment ](/docs/reference/math/#alignment)*/a ` parameter of the [ ` components ` ](/docs/reference/visualize/color/#definitions-components) function on colors is now a named parameter *(Breaking change)*
  - Added support for the [ Oklch ](/docs/reference/visualize/color/#definitions-oklch) color space 
  - Improved conversions betwe/*[ ` stroke ` ](/docs/reference/visualize/stroke/ "`stroke`")*/s on [ Oklab ](/docs/reference/visualize/color/#definitions-oklab) chroma component 
  - Fixed [ clipping ](/docs/r/*[ ` arguments ` ](/docs/reference/foundations/arguments/ "`arguments`")*/troke 
  - Fi/*[ ` calc.div-euclid ` ](/docs/reference/foundations/calc/#functions-div-euclid)*/x/*[ ` calc.rem-euclid ` ](/docs/reference/foundations/calc/#functions-rem-euclid)*/F 
  - Fixed relative base of /*[ ` arguments ` ](/docs/reference/foundations/arguments/ "`arguments`")*/ut

  -/*[ ` repr ` ](/docs/reference/foundations/repr/ "`repr`")*//*[ ` cmyk ` ](/docs/reference/visualize/color/#definitions-cmyk)*/ Greek and Estonian 
  - Improved default [ figure caption separator ](/docs/reference/model/figure/#definitions-caption-separator) for Chinese, French, and Russian 
  - Changed default [ figure supplement ](/docs/reference/model/figure/#parameters-supplement) for Russian to short form 
  - Fixed [ CJK-Latin-spacing ](/docs/reference/text/text/#parameters-cjk-latin-spacing) before line breaks and in [ ` locate ` ](/docs/reference/introspection/locate/ "`locate`") calls 
  - Fixed line breaking at the end of links 

==  Math

  - Added [ ` mid ` ](/docs/reference/math/lr/#functions-mid) function for scaling a delimiter up to the height of the surrounding [ ` lr ` ](/docs/reference/math/lr/#functions-lr) group 
  - The [ ` op ` ](/docs/reference/math/op/) function can now take any content, not just strings/*[ ` date ` ](/docs/reference/model/document/#parameters-date)*/erence/math/#alignment)
  - Fixed swallowing of trailing comma when a symbol is used in a/*[ authors ](/docs/reference/model/document/#parameters-author)*/ny non-identifier dictionary key is now interpreted as an expression: For instance, ` (  (  key  )  :  value  )  ` will create a dictionary with a dynamic key 
  - The [ ` stroke ` ](/docs/reference/visualize/stroke/ "`stroke`") type now has a constructor that converts a value to a stroke or creates one from its parts 
  - Added constructor for [ ` arguments ` ](/docs/reference/foundations/arguments/ "`arguments`") type 
  - Added [ ` calc.div-euclid ` ](/docs/reference/foundations/calc/#functions-div-euclid) and [ ` calc.rem-euclid ` ](/docs/reference/foundations/calc/#functions-rem-euclid) functions 
  - Fixed equality of [ ` arguments ` ](/docs/reference/foundations/arguments/ "`arguments`")
  - Fixed [ ` repr ` ](/docs/reference/foundations/repr/ "`repr`") of [ ` cmyk ` ](/docs/*[ document title ](/docs/reference/model/document/#parameters-title)*/hes with provided elements like figure captions, outline ent/*[ ` number-align ` ](/d/*![GitHub avatar of Dherse](https://avatars.githubusercontent.com/u/9665250?s=64&v=4)*/ow produce an appropriate error /*![GitHub avatar of frozolotl](https://avatars.githubusercontent.com/u/44589151?s=64&v=4)*/ 
  - Too highly or infinitely nest/*![GitHub avatar of Leedehai](https://avatars.githubusercontent.com/u/18319900?s=64&v=4)*/dentifiers 
  - Added hint when tr/*![GitHub avatar of Andrew15-5](https://avatars.githubusercontent.com/u/37143421?s=64&v=4)*/ls to autocompletions for types 
  -/*![GitHub avatar of MDLC01](https://avatars.githubusercontent.com/u/57839069?s=64&v=4)*/ted 
  - Jump from click now wor/*![GitHub avatar of danieleades](https://avatars.githubusercontent.com/u/33452915?s=64&v=4)*/reproducible if the document's [ ` da/*![GitHub avatar of tingerrr](https://avatars.githubusercontent.com/u/137803093?s=64&v=4)*/f Dherse](https://avatars.githubus/*![GitHub avatar of Jollywatt](https://avatars.githubusercontent.com/u/24970860?s=64&v=4)*/frozolotl](https://avatars.githubus/*![GitHub avatar of cmoog](https://avatars.githubusercontent.com/u/7585078?s=64&v=4)*/vatar of Leedehai](https://avat/*![GitHub avatar of peng1999](https://avatars.githubusercontent.com/u/12483662?s=64&v=4)*/itHub avatar of Andrew15-5](https:/*![GitHub avatar of Enter-tainer](https://avatars.githubusercontent.com/u/25521218?s=64&v=4)*/ ![GitHub avatar of MDLC01](https://av/*![GitHub avatar of JakobSachs](https://avatars.githubusercontent.com/u/28728963?s=64&v=4)*/Hub avatar of danieleades](https://a/*![GitHub avatar of KronosTheLate](https://avatars.githubusercontent.com/u/61620837?s=64&v=4)*/GitHub avatar of tingerrr](https://avat/*![GitHub avatar of MyrtleTurtle22](https://avatars.githubusercontent.com/u/82775864?s=64&v=4)*/ avatar of Jollywatt](https://avatars.gi/*![GitHub avatar of T0mstone](https://avatars.githubusercontent.com/u/39707032?s=64&v=4)*/ avatar of cmoog](https://avatars./*![GitHub avatar of TheJosefOlsson](https://avatars.githubusercontent.com/u/143743179?s=64&v=4)*/ peng1999](https://avatars.githubusercon/*![GitHub avatar of antonWetzel](https://avatars.githubusercontent.com/u/59712243?s=64&v=4)*/r-tainer](https://avatars.githubuserc/*![GitHub avatar of denkspuren](https://avatars.githubusercontent.com/u/4160411?s=64&v=4)*/ of JakobSachs](https://avatars.gith/*![GitHub avatar of kokkonisd](https://avatars.githubusercontent.com/u/18401822?s=64&v=4)*/vatar of KronosTheLate](https://ava/*![GitHub avatar of lihe07](https://avatars.githubusercontent.com/u/53819558?s=64&v=4)*/e/*[ ![GitHub avatar of MyrtleTu/*![GitHub avatar of mattfbacon](https://avatars.githubusercontent.com/u/58113890?s=64&v=4)*/yrtleTurtle22*/df/*[ ![GitHub avatar/*![GitHub avatar of rezzubs](https://avatars.githubusercontent.com/u/57254926?s=64&v=4)*/hub.com/T0mstone*/n /*[ ![GitHub /*![GitHub avatar of samueltardieu](https://avatars.githubusercontent.com/u/44656?s=64&v=4)*/ttps://github.com/TheJosefOlsson*/rs/*[/*![GitHub avatar of xalbd](https://avatars.githubusercontent.com/u/119540449?s=64&v=4)*/4&v=4)*/*https://github.com//*![â](/assets/icons/16-arrow-right.svg)*/nkspuren](https://avatars.githubusercontent.com//*![â](/assets/icons/16-arrow-right.svg)*//denkspuren*/ L/*[ ![Git/*![GitHub avatar of peng1999](https://avatars.githu/*[ ![Docs](/assets/icons/16-docs-dark.svg)*//github.com/kokkonisd*/ta/*[ ![G/*![GitHub avatar of/*[ Changelog ](/docs/changelog/)*/ontent.com/u/53819558?s=64&v=4)*/*https://github.com/lihe07*/- /*[ ![GitHub avatar of /*![GitHub avatar of JakobSachs](https://avatars.githubu/*[ ` raw ` ](/docs/reference/text/raw/ "`raw`")*/*/- /*[ ![GitHub avatar of /*![GitHub avatar of KronosTheLate](https:///*[ numbering ](/docs/reference/model/numbering/ "numbering")*/ ![GitHub avatar of samueltardie/*![GitHub avatar of MyrtleTurtle22](https://avatars.githubusercontent.com/u/82775864?s=64&v=4)*/*/b./*[ ![GitHub avatar of xalbd](https://avatars.githubusercontent.com/u/119540449?s=64&v=4)*/*https://github.com/xalbd*/*[ ![â](/assets/icons/16-arrow-right.svg)*/tHub avatar of cmoog](https://avatars.githubus/*[ ![â](/assets/icons/16-arrow-right.svg)*///github.com/cmoog)
  - [ ![GitHub avatar of peng199/*![GitHub avatar of antonWetzel](https://avatars.githubusercontent.com/u/59712243?/*[ ` line ` ](/docs/reference/visualize/line/ "`line`")*//docs/changelog/)*/githubusercontent.com/u/25521218?s=64&v=4) /*[ 0.5.0 ](/docs/changelog/0.5.0/)*/)
  - [ ![GitHub avatar of JakobSachs](https://avatars.githubu/*[ ` raw ` ](/docs/reference/text/raw/ "`raw`")*/github.com/JakobSachs)
  - [ ![GitHub avat/*![GitHub avatar of lihe07](https://avatars.githubusercontent.com/u/53819558?s=64&v=4)*/ing")*///github.com/KronosTheLate)
  - [ ![GitHub avatar of MyrtleTurtle22](https://avatars.githubusercontent.com/u/82775864?s=64&v=4) ](https://github.com/*[ ` indent ` ](/docs/reference/model/outline/#parameters-indent)*/ars.githubusercontent.com/u/39707032?s=64&v=4) ](https://github.com/T0mst/*[ footnotes ](/docs/reference/model/footnote/)*/https://avatars.githubusercontent.com/u/143743179?s=64&v=4) ](https://github.com/TheJosefOlsso/*![GitHub avatar of xalbd](https://avatars.githubusercontent.com/u/119540449?s=64&v=4)*/2243?/*[ ` line ` ](/docs/re/*![â](/a/*[ ` attach ` ](/docs/reference/math/attach/#functions-attach)*/atars.githubusercont/*![â](/assets//*[ ` datetime ` ](/docs/reference/foundations/datetime/ "`datetime`")*/r of kokkonisd](https://avatars.githubusercontent.com/u/18401822?s=64&v=4) ](https://github.co/*![](/assets/icons/16-arrow-rig/*[ ` str.from-unicode ` ](/docs/reference/foundations/str/#definitions-from-unicode)*/ced size ](/docs/reference/math/sizes/)*/tar of mattfbacon](htt/*[ ` display ` ](/docs/reference/math/sizes/#functions-display)*/s://github/*[ ` supplement ` ](/docs/reference/math/equation/#parameters-supplement)*/buserconte/*[ ` equation ` ](/docs/reference/math/equation/)*//rezzub/*[ references ](/docs/reference/model/ref/)*/(http/*[ symbols ](/docs/reference/symbols/sym/)*/?s=64&v=4) ](https://github.com/samueltardieu)
  - [ ![GitHub avatar of xalbd](https://avatars.githubusercontent.com/u/119540449?s=64&v=4) ](https://github.com/xalbd)

[ ![â](/a/*[ ` attach ` ](/docs/reference/math/attach/#functions-attach)*//changelog/0.11.0/) [ ![â](/assets//*[ ` datetime ` ](/docs/reference/foundations/datetime/ "`datetime`")*/



= /*[ ` datetime.today ` ](/docs/reference/foundations/datetime/#definitions-today)*/s)
  - ![](/assets/icons/16-arrow-rig/*[ ` str.from-unicode ` ](/docs/reference/foundations/str/#definitions-from-unicode)*/g/*[ ` str.to-unicode ` ](/docs/reference/foundations/str/#definitions-to-unicode)*/ext and Layout

  /*[ ` fields ` ](/docs/reference/foundations/content/#definitions-fields)*/ing for many more languages 
  - Added support f/*[ ` str ` ](/docs/reference/foundations/str/ "`str`")*/ng/ "numbering")
/*[ ` calc.exp ` ](/docs/reference/foundations/calc/#functions-exp)*/m/*[ ` calc.ln ` ](/docs/reference/foundations/calc/#functions-ln)*/ctionality of outline /*[ ` calc.pow ` ](/docs/reference/foundations/calc/#functions-pow)*/p/*[ ` calc.log ` ](/docs/reference/foundations/calc/#functions-log)*/bugs with [ footnotes ](/do/*[ removal ](/docs/reference/foundations/dictionary/#definitions-remove)*/in lists, tables, and figures 
  - Fixed a bug with CJ/*[ strings ](/docs/reference/foundations/str/#definitions-at)*/t/*[ content ](/docs/reference/foundations/content/#definitions-at)*/alize/line/ "`line`") elements 

==  Math

  - *Breaking change:* The syntax rules for mathematical [ a/*![GitHub avatar of EpicEricEE](https://avatars.githubusercontent.com/u/7191192?s=64&v=4)*/s  (  3  )  $  ` now parses as ` $  /*![GitHub avatar of LaurenzV](https://avatars.githubusercontent.com/u/47084093?s=64&v=4)*/, add a space: ` $  f  ^  zeta  (3/*![GitHub avatar of PgBiel](https://avatars.githubusercontent.com/u/9021226?s=64&v=4)*/(e.g., [ ` display ` ](/docs/ref/*![GitHub avatar of SUPERCILEX](https://avatars.githubusercontent.com/u/9490724?s=64&v=4)*/th/equation/#parameters-supplement) /*![GitHub avatar of figsoda](https://avatars.githubusercontent.com/u/40620903?s=64&v=4)*/(/docs/reference/model/ref/)
  - /*![GitHub avatar of lynn](https://avatars.githubusercontent.com/u/16232127?s=64&v=4)*/` , ` sigma./*[ ` hide ` ](/do/*![GitHub avatar of peng1999](https://avatars.githubusercontent.com/u/12483662?s=64&v=4)*//reference/model/ref/#parameters-s/*![GitHub avatar of sandalbanditten](https://avatars.githubusercontent.com/u/45170745?s=64&v=4)*/Added new [ /*[ ![GitHub avatar of EpicEr/*![GitHub avatar of BasixKOR](https://avatars.githubusercontent.com/u/7413880?s=64&v=4)*/picEricEE*/nd/*[ ![GitHub avatar o/*![GitHub avatar of JettChenT](https://avatars.githubusercontent.com/u/45888395?s=64&v=4)*/com/LaurenzV*/e//*[ ![GitHub avatar/*![GitHub avatar of Leedehai](https://avatars.githubusercontent.com/u/18319900?s=64&v=4)*/com/PgBiel*/io/*[ ![GitHub avatar /*![GitHub avatar of MDLC01](https://avatars.githubusercontent.com/u/57839069?s=64&v=4)*/thub.com/SUPERCILEX*/co/*[ ![Git/*![GitHub avatar of StrangeGirlMurph](https://avatars.githubusercontent.com/u/62220780?s=64&v=4)*/hub.com/figsoda*/[ /*[ ![GitHub avatar of /*![GitHub avatar of alixmacdonald10](https://avatars.githubusercontent.com/u/52908801?s=64&v=4)*//*[ ![GitHub avatar of peng1999](https:///*![GitHub avatar of coughmedicine](https://avatars.githubusercontent.com/u/72562074?s=64&v=4)*/tHub avatar of sandalbanditten](https://*![GitHub avatar of epbuennig](https://avatars.githubusercontent.com/u/103939966?s=64&v=4)*//da/*[ ![GitHub avatar of BasixKOR]/*![GitHub avatar of erikwastaken](https://avatars.githubusercontent.com/u/46598911?s=64&v=4)*/f/*[ ![GitHub avatar of JettChenT](htt/*![GitHub avatar of glocq](https://avatars.githubusercontent.com/u/16959183?s=64&v=4)*/nT*/d /*[ ![GitHub avatar of Le/*![GitHub avatar of howjmay](https://avatars.githubusercontent.com/u/13924801?s=64&v=4)*/m/Leedehai*/ed/*[ ![GitHub avatar/*![GitHub avatar of jassler](https://avatars.githubusercontent.com/u/24298790?s=64&v=4)*/b.com/MDLC01*/en/*[ ![GitHub avat/*![GitHub avatar of lino-levan](https://avatars.githubusercontent.com/u/11367844?s=64&v=4)*/s://github.com/StrangeGirlMurph*/re//*![GitHub avatar of lucifer1004](https://avatars.githubusercontent.com/u/13583761?s=64&v=4)*/64&v=4)*/*https://github.com/alixmacd/*![GitHub avatar of matthiasGmayer](https://avatars.githubusercontent.com/u/28257008?s=64&v=4)*/2074?s=64&v=4)*/*https://github.com/coug/*![GitHub avatar of naim94a](https://avatars.githubusercontent.com/u/227396?s=64&v=4)*//u/103939966?s=64&v=4)*/*https:///*![GitHub avatar of ollema](https://avatars.githubusercontent.com/u/31876997?s=64&v=4)*/ercontent.com/u/46598911?s=64&v=/*![GitHub avatar of sbatial](https://avatars.githubusercontent.com/u/46973479?s=64&v=4)*/githubusercontent.com/u/16959183?/*![GitHub avatar of sitandr](https://avatars.githubusercontent.com/u/60141933?s=64&v=4)*/s.githubusercontent.com/u/1392480/*![GitHub avatar of xiongmao86](https://avatars.githubusercontent.com/u/1770218?s=64&v=4)*/ars.githubusercontent.com/u/24298/*![â](/assets/icons/16-arrow-right.svg)*/er*////*[ ![GitHub avatar of lino-levan](https/*![â](/assets/icons/16-arrow-right.svg)*/844?s=64&v=4)*//*![GitHub avatar of Leedehai](https://avatars.githubusercont/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/t.com/u/13583761?s=64&v/*![GitHub avatar of MDLC01](/*[ Changelog ](/docs/changelog/)*/of matthiasGmayer](https://avatars.githubusercontent.com/u/28257008?s=64&v=4)*/*https://github.com/matthiasGmayer*//a/*[ ![GitHub avatar of naim94a](https://avatars.githubusercontent.com/u/227396?s=64&v=4)*/*https://github.com/naim94a*/ht/*[ ![GitHub avatar of ollema](https://avatars.githubusercontent.com/u/31876997?s=64&v=4)*/*https://github.com/olle/*![GitHub avatar of coughmedicine](https://avatars.githubusercontent.com/u/725/*[ citation style ](/docs/reference/model/cite/#parameters-style)*/vatar of sitandr](https://avatars.githubusercontent.com/u/60141933?s=64&v=4)*/*https://github.com/sitandr*/it/*[ ![GitHub av/*![GitHub avatar of erikwastaken](https://avatars.githubusercontent.com/u/46598911?s=64&v=4)*/hub.com/xiongmao86*/*[ ![â](/assets//*![GitHub avatar of glocq](https:///*[ outline ](/docs/reference/model/outline/ "outline")*//icons/16-arrow-right.svg)*/Je/*![GitHub avatar of howjmay](https://avatars.githubusercontent.com/u/13924801?s=64&v=4)*//assets/icons/16-docs-dark.svg)*//*![GitHub avatar of jassler](https://avatars.githubusercontent.com/u/24298790?s=64&v=4)*//nt.com/u/57839069?s=64&v=4) ](ht/*![GitHub avatar of lino-levan](https://avatars.githubusercontent.com/u/11367844?s=64&v=4)*/ithubusercontent.com/u/62220780?s=64/*![GitHub avata/*[ ` attachment ` ](/docs/reference/math/attach/#functions-attach)*//onald10](https://avatars.githubuse/*[ ` footnote./*![GitHub avatar of m/*[ canceled ](/docs/reference/math/cancel/)*/ [ ![GitHub avatar of coughmedicine](https://avatars.githubusercontent.co/*![GitHub avatar of naim94a](https://avatars.githubusercont/*[ symbols ](/docs/reference/symbols/sym/)*/tps://avatars.github/*![GitHub avatar of ollema](https://avatars.githubusercontent.com/u/31876997?s=64&v=4)*/Hub avatar of erikwastaken](http/*![GitHub avatar of sbatial](https://avatars.githubusercontent.com/u/46973479?s=64&v=4)*/en)
  - [ ![GitHub avatar of gloc/*![GitHub avatar of sitandr](https://avatars.githubuserc/*[ ` assert.eq ` ](/docs/reference/foundations/assert/#definitions-eq)*/](https://avatars.githubusercontent.com/u/13924801?s=64&v=4) ](https://github.com/howjmay)
  - [ ![GitHub avatar of jassler](h/*![â](/assets/icons/16-arrow-right.svg)*/4298790?s=64&v=4) ](https://github.com/jassler)
  - [ ![GitHub avatar of lino-levan](https://avatars.githubusercontent.com/u/11367844?s=64&v=4) ](https://github.com/lino-levan)
  - [ ![GitHub avata/*[ ` attachment ` ](/docs/refer/*![](/assets/icons/16-arrow-right.svg)*/1?s=64&v=4) ](https://github.com/lucifer1004)
  - [ ![GitHub avatar of m/*[ canceled ](/docs/reference/math/cancel/)*/ontent.com/u/28257008?s=64&v=4) ](https://github.com/matthiasGmayer)
  - [ ![GitHub avatar of naim94a](https://avatars.githubusercont/*[ symbols ](/docs/reference/symbols/sym/)*/ub.com/naim94a)
  - [ ![GitHub avatar of ollema](https://avatars.githubusercontent.com/u/31876997?s=64&v=4) ](https://github.com/ollema)
  - [ ![GitHub avatar of sbatial](https://avatars.githubusercontent.com/u/46973479?s=64&v=4) ](https://github.com/sbatial)
  - [ ![GitHub avatar of sitandr](https://avatars.githubuserc/*[ ` assert.eq ` ](/docs/reference/foundations/assert/#definitions-eq)*/[GitHub avatar of xiongmao86](https:/*[ ` assert ` ](/docs/reference/foundations/assert/ "`assert`")*/github.com/xiongmao86)

[ ![â](/assets/icons/16-arrow-right.svg) 0.6.0  Previous page
](/docs/changelog/*[ ` assert.eq ` ](/docs/reference/foundations/assert/#definitions-eq)*/]/*[ ` assert.ne ` ](/docs/reference/foundations/assert/#definitions-ne)*/](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Changelog/*[ list ](/docs/reference/model/list/#definitions-item)*/*[ enum ](/docs/reference/model/enum/#definitions-item)*/rsi/*[ term list ](/docs/reference/model/terms/#definitions-item)*/ort for footnotes 
  - The [ ` footnote ` ](/docs/reference/model/f/*[ strings ](/docs/reference/foundations/str/#definitions-at)*/*[ arrays ](/docs/reference/foundations/array/#definitions-at)*/*[ dictionaries ](/docs/reference/foundations/dictionary/#definitions-at)*/ - /*[ content ](/docs/reference/foundations/content/#definitions-at)*/l/cite/#parameters-style) is now available 

==  Documentation

  - Added a [ Gui/*[ ` replace ` ](/docs/reference/foundations/str/#definitions-replace)*/ws default values for optional arguments/*[ replacement ](/docs/reference/foundations/str/#definitions-replace)*/ort for search keywords: "Table of Contents" will now find the [ outline ](/docs/reference/model/outline/ "outline") function. Suggestions for more keywords are welcome! 
  - Fixed issue with search result ranking 
  - Fixed many more small issues 

==  Math

  - *Breaking change* : Alignment points ( ` & ` ) in equations now alternate between left and right alignment 
  - Added suppo/*[ integer ](/docs/reference/foundations/int/)*//*[ float ](/docs/reference/foundations/float/)*/ written as ` $  â  (  x+y  )  $  `
  - Fixed uneven vertical [ ` attachment ` ](/docs/referenc/*[ overhang ](/docs/reference/text/text/#parameters-overhang)*/g on decorated elements (e.g., spacing around a [ canceled ](/docs/reference/math//*[ alignment ](/docs/reference/text/raw/#parameters-align)*/bols 
  - Added ` tack.r.double ` , ` tack.l.double ` , ` dotless.i ` and ` dotless.j ` [ symbols ](/docs/reference/symbols/sym/)
  - Fixed show rules on symbols (e.g. ` show  sym  .  tack  :  set  t/*[ alignment ](/docs/reference/model/table/#parameters-align)*/ /*[ fill ](/docs/reference/model/table/#parameters-fill)*/ease 

==  Scripting

  - Added func/*[ ` kind ` ](/docs/reference/model/figure/#parameters-kind)*/ its own scope, similar to a m/*[ enum numbers ](/docs/reference/model/enum/#parameters-number-align)*/definitions-eq) function, for instance, is part of the [ ` assert ` ](/docs/reference/foundations/assert/ "`assert`") function's scope. Note that function scopes are currently only available for built-in functions. 
  - Added [ ` assert.eq ` ](/docs/reference/foundations/assert/#definitions-eq) and [ ` assert.ne ` ](/docs/reference/foundations/assert/#definitions-ne) functions for simpler equality and inequality assertions with more helpful error messages 
  - Exposed [ list ](/docs/reference/model/list/*![GitHub avatar of Leedehai](https://avatars.githubusercontent.com/u/18319900?s=64&v=4)*/rm list ](/docs/reference/model/te/*![GitHub avatar of PgBiel](https://avatars.githubusercontent.com/u/9021226?s=64&v=4)*/thods on [ strings ](/docs/refer/*![GitHub avatar of Marmare314](https://avatars.githubusercontent.com/u/49279081?s=64&v=4)*/initions-at) , [ dictionaries ](/doc/*![GitHub avatar of SUPERCILEX](https://avatars.githubusercontent.com/u/9490724?s=64&v=4)*/undations/content/#definitions-at) n/*![GitHub avatar of peng1999](https://avatars.githubusercontent.com/u/12483662?s=64&v=4)*/replace ` ](/docs/reference/founda/*![GitHub avatar of sitandr](https://avatars.githubusercontent.com/u/60141933?s=64&v=4)*/nt ](/docs/reference/foundations//*![GitHub avatar of stevenskevin](https://avatars.githubusercontent.com/u/48657161?s=64&v=4)*/porting the previous (unintended) magi/*![GitHub avatar of AlistairKeiller](https://avatars.githubusercontent.com/u/43255248?s=64&v=4)*/patterns 
  - Fixed bug with underscore i/*![GitHub avatar of HarmoGlace](https://avatars.githubusercontent.com/u/23212967?s=64&v=4)*/ invalid pattern 
  - Better error m/*![GitHub avatar of LaurenzV](https://avatars.githubusercontent.com/u/47084093?s=64&v=4)*/8319900?s=64&v=4)*/*https://github/*![GitHub avatar of MultisampledNight](https://avatars.githubusercontent.com/u/80128916?s=64&v=4)*/s=64&v=4)*/*https://github.com/PgBiel*//r/*[ ![GitHub avatar of Marmare314](https://avatars.githubusercontent.com/u/49279081?s=64&v=4)*/*https://github.com/Marmare314*/ F/*[ ![Gi/*![GitHub avatar of dvdvgt](https://avatars.githubusercontent.com/u/40773635?s=64&v=4)*//*https://github.com/SUPERCILEX*/*![GitHub avatar of emme1444](https://avatars.githubusercontent.com/u/23585909?s=64&v=4)*/64&v=4)*/*https://github.com/peng1/*![GitHub avatar of goggle](https://avatars.githubusercontent.com/u/1856425?s=64&v=4)*/933?s=64&v=4)*/*https://github.c/*![GitHub avatar of jannisko](https://avatars.githubusercontent.com/u/40455076?s=64&v=4)*/m/u/48657161?s=64&v=4)*/*https://g/*![GitHub avatar of jassler](https://avatars.githubusercontent.com/u/24298790?s=64&v=4)*/ubusercontent.com/u/43255248?s=64/*![GitHub avatar of johannes-wolf](https://avatars.githubusercontent.com/u/519002?s=64&v=4)*/vatars.githubusercontent.com/u/23212967/*![GitHub avatar of liferooter](https://avatars.githubusercontent.com/u/54807745?s=64&v=4)*/atars.githubusercontent.com/u/470840/*![GitHub avatar of maciemesser](https://avatars.githubusercontent.com/u/34891249?s=64&v=4)*/tps://avatars.githubusercontent.com/u/*![GitHub avatar of mattfbacon](https://avatars.githubusercontent.com/u/58113890?s=64&v=4)*/rtothedev](https://avatars.githubuse/*![GitHub avatar of maxwell-thum](https://avatars.githubusercontent.com/u/119913396?s=64&v=4)*/of dvdvgt](https://avatars.githubuserc/*![GitHub avatar of maybechris](https://avatars.githubusercontent.com/u/103339277?s=64&v=4)*/1444](https://avatars.githubusercont/*![GitHub avatar of michidk](https://avatars.githubusercontent.com/u/3979930?s=64&v=4)*/goggle](https://avatars.githubuse/*![GitHub avatar of naim94a](https://avatars.githubusercontent.com/u/227396?s=64&v=4)*/of jannisko](https://avatars.gith/*![GitHub avatar of owiecc](https://avatars.githubusercontent.com/u/6896639?s=64&v=4)*/ avatar of jassler](https://avat/*![GitHub avatar of pan93412](https://avatars.githubusercontent.com/u/28441561?s=64&v=4)*/tHub avatar of johannes-wolf](http/*![GitHub avatar of szdytom](https://avatars.githubusercontent.com/u/33175397?s=64&v=4)*/f*/ov/*[ ![GitHub avatar of li/*![â](/assets/icons/16-arrow-right.svg)*/ent.com/u/54807745?s=64&v=4)*/*https://github./*![â](/assets/icons/16-arrow-right.svg)*/ maciemesser](https://avatars.githubusercontent.com/u/34891249?s=64&v=4)*/*http/*![Docs](/assets/icons/16-docs-dark.svg)*/Hub avatar of /*![GitHub avatar of HarmoGlace](https/*[ Changelog ](/docs/changelog/)*/)*/*https://github.com/mattfbacon*/ha/*[ ![GitHub avatar of maxwell-thum](https://avatars.githubusercontent.com/u/119913396?s=64&v=4)*/*https://github.com/maxwell-thum*//1/*[ ![GitHub avatar of maybechris](https://avatars.githubusercontent.com/u/103339277?s=64&v=4)*/*https://github.com/maybechris*/u//*[ ![GitHub avatar of michidk](https://*![GitHub avatar of albertothedev](https://avatars.githubus/*[ columns ](/docs/reference/model/table/#definitions-cell-colspan)*/tars.githubusercontent.com/u/227396?s=64&v=4)*/*https://github.com/naim94a*/ar/*[ ![GitHub avatar of owiecc](https://avatars.githubusercon/*![GitHub avatar of emme1444](https://avatars.git/*[ ` align ` ](/docs/reference/model/table/#parameters-align)*/ithubusercontent.com/u/28441561?s=64&v=4)*/*https://github.com/pan93412*/si/*[ ![GitHub avatar of szdytom](https://avatars.githubuserconten/*![GitHub avat/*[ ` table.hline ` ](/docs/reference/model/table/#definitions-hline "`table.hline`")*/g)*/hubusercontent.com/u/48657161?s=64&v=4) ](ht/*[ ![â](/assets/icons/16-arrow-right.svg)*/Hub avatar of AlistairKeiller](https://avatars.githubusercontent.com/u/432552/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/rKeiller)
  - [ ![GitHub avatar of HarmoGlace](https/*[ Changelog ](/docs/changelog/)*/m/u/23212967?s=64&v=4) ](https://github.com/*[ 0.11.0 ](/docs/changelog/0.11.0/)*/of LaurenzV](https://avatars.githubuser/*![GitHub avatar of maciemesser](https://avatars.gith/*[ grids ](/docs/reference/layout/grid/)*/able-guide/)*/ght](https://avatars.gi/*[ ` table.cell ` ](/docs/reference/model/table/#definitions-cell "`table.cell`")*/
  - [ ![GitHub avatar of albertothedev](https://a/*![GitHub avatar of maxwell-thum](https://avatars.githubusercontent.com/u/119913396?s=64&v=4)*/s ](/docs/reference/model/table/#defin/*![GitHub avatar of maybechris](https://a/*[ browse the available templates here ](https://typst.app/universe/search/?kind=templates)/*![GitHub avatar of michidk](https://avatars.githubusercontent.com/u/3979930?s=64&v=4)*/nset ` ](/docs/reference/model/ta/*![GitHub avatar of naim94a](https://avatars.githubusercontent.com/u/22739/*[ package repository ](https://github.com/typst/packages)*/ ](/docs/reference/model/table/#definitions-hline "`table.hline`")*///*[ ` table.vline ` ](/docs/reference/mo/*![GitHub avatar of pan93412](https://avatars.githubusercontent.com/u/28441561?s=64&v=4)*////*[ ` table.header ` ](/docs/ref/*![GitHub avatar of szdytom](https://avatars.githubusercontent.com/u/33175397?s=64&v=4)*/4) ](https://github.com/johannes/*[ ` table.footer ` ](/docs/reference/model/table/#definitions-footer "`table.footer`")*/807745?s=64&v=4) ](https://github.com/liferooter)
  - [ ![GitHub avatar of maciemesser](https://avatars.gith/*[ grids ](/docs/reference/layout/grid/)*/](https://github.com/maciemesser)
 /*![](/assets/icons/16-arrow-right.svg)*/PgBiel)*///avatars.githubusercontent./*![](/assets/icons/16-arrow-right.svg)*/thub.com/mattfbacon)
  - [ ![GitHub avatar of maxwell-thum](https://avatars.githubusercontent.com/u/119913396?s=64&v=4) ](https://github.com/maxwell-thum)
  - [ ![GitHub avatar of maybechris](https://a/*[ browse the available templates here ](https://typst.app/universe/search/?kind=templates)*/![GitHub avatar of michidk](https://avatars.githubusercontent.com/u/3979930?s=64&v=4) ](https://github.com/michidk)
  - [ ![GitHub avatar of naim94a](https://avatars.githubusercontent.com/u/22739/*[ package repository ](https://github.com/typst/packages)*/avatar of owiecc](https://avatars.githubusercontent.com/u/6896639?s=64&v=4) ](https://github.com/owiecc)
  - [ ![GitHub avatar of pan93412](https://avatars.githubusercontent.com/u/28441561?s=64&v=4) ](https://github.com/pan93412)
  - [ ![GitHub avatar of szdytom](https://avatars.githubusercontent.com/u/33175397?s=64&v=4) ](https://github.c/*[ categories ](https://github.com/typst/packages/blob/main/CATEGORIES.md)*/a/*[ disciplines ](https://github.com/typst/packages/blob/main/DISCIPLINES.md)*/.0
Next page  ](/docs/changelog/0.3.0/)



= *docs/changelog/0.11.0/*[ context ](/docs/reference/context/ "context")*/svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Changelog ](/docs/changelog/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ 0.11.0 ](/docs/changelog/0.11.0/)

=  Version 0.11.0 (March 15, 2024)

==  Tables

  - Tab/*[ ` query ` ](/docs/reference/introspection/query/ "`query`")*/*[ ` locate ` ](/docs/reference/introspection/locate/ "`locate`")*/*[ ` measure ` ](/docs/reference/layout/measure/ "`measure`")*/*[ ` counter.display ` ](/docs/reference/introspection/counter/#definitions-display "`counter.display`")*/*[ ` counter.at ` ](/docs/reference/introspection/counter/#definitions-at "`counter.at`")*/*[ ` counter.final ` ](/docs/reference/introspection/counter/#definitions-final "`counter.final`")*/*[ ` state.at ` ](/docs/reference/introspection/state/#definitions-at "`state.at`")*/nce/*[ ` state.final ` ](/docs/reference/introspection/state/#definitions-final "`state.final`")*/nset) arguments of the tab/*[ ` counter.get ` ](/docs/reference/introspection/counter/#definitions-get "`counter.get`")*/(/*[ ` state.get ` ](/docs/reference/introspection/state/#definitions-get "`state.get`")*/ ](/docs/reference/model/table/#definitions-vline "`table.vline`") for convenient line customiz/*[ ` here ` ](/docs/reference/introspection/here/ "`here`")*/l/table/#defi/*[ location ](/docs/reference/introspection/location/ "location")*/repeat on every page 
  - Add/*[ ` locate ` ](/docs/reference/introspection/locate/ "`locate`")*/-footer "`table.footer`") element for table footers that repeat on every page 
  - All the new table functionality is also available for [ grids ](/docs/reference/layout/grid/)
  - Fixed/*[ ` counter.at ` ](/docs/reference/introspection/counter/#definitions-at "`counter.at`")*/t/*[ ` state.at ` ](/docs/reference/introspection/state/#definitions-at "`state.at`")*/ new projects. Click _Start from template_ on the web app's d/*[ locatable ](/docs/reference/introspection/location/#locatable)*/nit <template> ` command in the CLI. You can [ browse the available templates here ](https://typst./*[ ` counter.display ` ](/docs/reference/introspection/counter/#definitions-display "`counter.display`")*/an just import a styling function from a different template package. 
  - Package authors can now submit their own templates to the [ package repository ](https://github/*[ ` state.display ` ](/docs/reference/introspection/state/#definitions-display "`state.display`")*/p the community get a head start on th/*[ ` state.get ` ](/docs/reference/introspection/state/#definitions-get "`state.get`")*/e. Filter packages by either taxonomy in the _Start from temp/*[ ` query ` ](/docs/reference/introspection/query/ "`query`")*/*[ ` counter.final ` ](/docs/reference/introspection/counter/#definitions-final "`counter.final`")*/ an/*[ ` state.final ` ](/docs/reference/introspection/state/#definitions-final "`state.final`")*/xt

  - Added _context expressions:_ Read the chapter o/*[ ` styles ` ](/docs/reference/layout/measure/#parameters-styles)*/
  - With context, you can access settable properties, e.g. ` context  text  .  lang ` to ac/*[ ` style ` ](/docs/reference/foundations/style/ "`style`")*/ `
  - The following existing functions have been made contextual: [ ` query ` ](/docs/reference/introspection/query/ "`query`") , [ ` locate ` ](/docs/reference/introspection/locate/ "`locate`") , [ ` measure ` ](/docs/reference/layout/measure/ "`measure`") , [ ` counter.display ` ](/docs/r/*[ show-set rules ](/docs/reference/styling/#show-rules)*/ounter.display`") , [ ` counter.at ` ](/docs/reference/introspection/counter/#definitions-at "`counter.at`") , [ ` counter.final ` ](/docs/reference/introspection/counter/#definitions-final "`counter.final`") , [ ` state.at ` ](/docs/reference/introspection/state/#definitions-at "`state.at`") , and [ ` state.final ` ](/docs/reference/introspection/state/#definitions-final "`state.final`")
  - Added contextual methods [ ` counter.get ` ](/docs/reference/introspection/counter/#definitions-get "`counter.get`") and [ ` state.get ` ](/docs/reference/introspection/state/#definitions-get "`state.get`") to retrieve the value of a counter or state in the current context 
  - Added contextual function [ ` here ` ](/docs/reference/introspection/here/ "`here`") to retrieve the [ locatio/*[ where ](/docs/reference/foundations/function/#definitions-where)*/rent context/*[ And ](/docs/reference/foundations/selector/#definitions-and)*/ /*[ or ](/docs/reference/foundations/selector/#definitions-or)*/s unique match. Its old behavior has been replaced by context expressions and only remains temporarily available for compatibility. 
  - The [ ` counter.at ` ](/docs/reference/introspection/c/*[ ` locate ` ](/docs/reference/introspection/locate/ "`locate`")*/s/reference/introspection/state/#definitions-at "`state.at`") methods are now more flexible: They directly accep/*[ ` rotate ` ](/docs/reference/layout/rotate/)*/t/*[ ` scale ` ](/docs/reference/layout/scale/)*/h a unique match (e.g. a label) instead of just locati/*[ floating placement ](/docs/reference/layout/place/#parameters-float)*//*[ floating figures ](/docs/reference/model/figure/#parameters-placement)*/w directly returns the result of applying the numbering instead of yielding opaque content. It should not be used anymore witho/*[ ` hide ` ](/docs/reference/layout/hide/ "`hide`")*/e.display ` ](/docs/reference/introspection/state/#definitio/*[ ` h ` ](/docs/reference/layout/h/ "`h`")*/u/*[ ` v ` ](/docs/reference/layout/v/ "`v`")*//*[ stacks ](/docs/reference/layout/stack/)*/definitions-get "`state.get`") instead (Deprecation planned) 
  - The ` location ` argument of [ ` query ` ](/docs/reference/introspection/query/ "`query`") , [ ` counter.final ` ](/docs/reference/introspection/counter/#definitions-final "`counter./*[ ` stroke ` ](/docs/reference/text/text/#parameters-stroke)*/tion/state/#definitions-final "`state.final`") should not be used anymore (Deprecation planned) 
  - The [/*[ numbering ](/docs/reference/model/numbering/ "numbering")*/yles) argument of the ` measure ` function should not be used anymore (Deprec/*[ text direction ](/docs/reference/text/text/#parameters-dir)*/ions/style/ "`style`") function should not be used anymo/*[ smart quotes ](/docs/reference/text/smartquote/)*/ The correct context is now also provided in various other places where it is available, e.g. in show rules, layout callbacks, and numbering functions in the outline 

==  Styling

  - Fixed priority of multiple [ show-set rules ](/docs/reference/stylin/*[ features ](/docs/reference/text/text/#parameters-features)*/set rules would 
  - Show-set rules on the same element (e.g. ` show /*[ ` depth ` ](/docs/reference/model/heading/#parameters-depth)*/b/*[ ` offset ` ](/docs/reference/model/heading/#parameters-offset)*/ on an element within a transformational show rule (e.g. ` show  heading  :  it  => {  set  heading  (  ..  )  ;  it  }  ` ) is *not* supported anymore (previously it also o/*[ markers ](/docs/reference/model/list/#parameters-marker)*/ng change)*
  - Text show r/*[ ` quote ` ](/docs/reference/model/quote/ "`quote`")*/.g. ` show  "cmd"  :  `cmd`  ` ) 
  - The elements passed to show rules and returned by queries now contain all fields of their respective e/*[ terms ](/docs/reference/model/terms/ "terms")*/ 
  - All settable properties can now be used in [ where ](/docs/reference/foundations/fun/*[ ` number-align ` ](/docs/reference/math/equation/#parameters-number-align)*//selector/#definitions-and) and [ or ](/docs/reference/f/*[ ` size ` ](/docs/reference/math/accent/#parameters-size)*/used with show rules 
  - Errors within show rules and context expression/*[ Primes ](/docs/reference/math/primes/)*/trospection iteration, i/*[ scripts ](/docs/reference/math/attach/#functions-scripts)*/ference/introspection/*[ ` math.primes ` ](/docs/reference/math/primes/ "`math.primes`")*/e allowed after content 

==  Layout

  - Added ` reflow ` argument to [ ` rotate ` ](/*[ ` strong ` ](/docs/reference/model/strong/ "`strong`")*/r/*[ ` emph ` ](/docs/reference/model/emph/ "`emph`")*/ layout 
  - Fix/*[ ` attach ` ](/docs/reference/math/attach/#functions-attach)*/pla/*[ fractions ](/docs/reference/math/frac/)*/es ](/docs/r/*[ ` math.class ` ](/docs/reference/math/class/ "`math.class`")*/of order 
  - Fixed overlap of text and figure for full-page /*[ ` lr ` ](/docs/reference/math/lr/#functions-lr)*/he [ ` hide ` ](/docs/reference/layout/hide/ "`hide`") function didn't hide its contents properly 
  - Fixed usage of [ ` h ` ](/docs/reference/layout/h/ "`h`") and [ ` v ` ](/docs/reference/layout/v/ "`v`") in [ stacks ](/docs/reference/layout/stack/)
  - Invisible content like a counter update will no longer force a visible block for just itself 
  - Fixed a bug with horizontal spacing followed by invisible content (like a counter update) directly at the start of a paragraph 

==  Text

  - Added [ ` stroke ` ](/docs/reference/text/text/#parameters-stroke) property for text 
  - Added basic i18n for Serbian and Catalan 
  - Added support for contemporary Japanese [ numbering ](/docs/reference/model/numbering/ "numbering") method 
  - Added patches fo/*[ ` to-absolute ` ](/docs/reference/layout/length/#definitions-to-absolute)*/s/reference/text/te/*[ ` calc.root ` ](/docs/reference/foundations/calc/#functions-root)*/ixed Da/*[ ` int.signum ` ](/docs/reference/foundations/int/#definitions-signum "`int.signum`")*/o/*[ ` float.signum ` ](/docs/reference/foundations/float/#definitions-signum "`float.signum`")*/sh translation o/*[ ` float.is-nan ` ](/docs/reference/foundations/float/#definitions-is-nan "`float.is-nan`")*/ /*[ ` float.is-infinite ` ](/docs/reference/foundations/float/#definitions-is-infinite "`float.is-infinite`")*/n in consecutive/*[ ` int.bit-not ` ](/docs/reference/foundations/int/#definitions-bit-not "`int.bit-not`")*/*[ ` int.bit-and ` ](/docs/reference/foundations/int/#definitions-bit-and "`int.bit-and`")*/*[ ` int.bit-or ` ](/docs/reference/foundations/int/#definitions-bit-or "`int.bit-or`")*/*[ ` int.bit-xor ` ](/docs/reference/foundations/int/#definitions-bit-xor "`int.bit-xor`")*/*[ ` int.bit-lshift ` ](/docs/reference/foundations/int/#definitions-bit-lshift "`int.bit-lshift`")*/ocs/*[ ` int.bit-rshift ` ](/docs/reference/foundations/int/#definitions-bit-rshift "`int.bit-rshift`")*/language and nes/*[ ` array.chunks ` ](/docs/reference/foundations/array/#definitions-chunks "`array.chunks`")*/del/terms/ "terms")

==  Math

  - Inline equations now automati/*[ dictionary constructor ](/docs/reference/foundations/dictionary/#constructor)*/erence/math/equation/#parameters-number-ali/*[ ` row-type ` ](/docs/reference/data-loading/csv/#parameters-row-type)*/ ` ](/docs/reference/math/accent/#parameters-size) of accents relative to/*[ XML parsing ](/docs/reference/data-loading/xml/)*/  - [ Primes ](/docs/reference/math/primes/) are now always attached as [ scripts ](/docs/r/*[ ` str ` ](/docs/reference/foundations/str/)*/e/*[ ` repr ` ](/docs/reference/foundations/repr/)*/ference/math/primes/ "`math.prim/*[ bytes ](/docs/reference/foundations/bytes/ "bytes")*/in math 
  - Math mode is not affected by [ ` strong ` ](/docs/reference/model/strong/ "`strong/*[ ` .  fields  (  )  ` ](/docs/reference/foundations/content/#definitions-fields)*/ attach ` ](/docs/reference/math/attach/#functions-attach) under [ fractions ](/docs/reference/math/frac/)
  - Fixed that [ ` math.class ` ](/docs/reference/math/class/ "`math.cla/*[ destructuring patterns ](/docs/reference/scripting/#bindings)*/ing in [ ` lr ` ](/docs/reference/math/lr/#functions-lr) groups 
  - Fixed layout of large operators for Cambria Math font 
  - Fixed math styling of Hebrew symbol codepoints 

==  Symbols

  - Added ` gradient ` as an alias for ` nabla `
  -/*[ ` context ` ](/docs/reference/context/ "`context`")*/` will be deprecated in the future 
  - Added ` colon.double ` , ` gt.approx ` , ` gt.napprox ` , ` lt.approx ` , and ` lt.napprox `
  - Added ` arrow.r.tilde ` and ` arrow.l.tilde `
  - Added ` tilde.dot `
  - Added ` forces ` and ` forces.not `
  - Added ` space.nobreak.narrow `
  - Added ` lrm ` (Left-to-Right Mark) and ` rlm ` (Right-to-Left Mark) 
  - Fixed ` star.stroked ` symbol (which previously had the wrong codepoint) 

==  Scripting

  - Arrays can now be compared lexicographically 
  - Added contextual met/*[ ` raw ` ](/docs/reference/text/raw/ "`raw`")*//length/#definitions-to-absolute) to lengths 
  - Added [ ` calc.root ` ](/docs/reference/foundations/calc/#functions-root)
  - Added [ ` int.signum ` ](/docs/reference/foundations/int/#definitions-signum "`int.signum`") and [ ` float.signum ` ](/docs/reference/foundations/float/#definitions-signum "`float.signum`") methods 
  - Added [ ` float.is-nan ` ](/docs/reference/foundations/float/#definitions-is-nan "`float.is-nan`") and [ ` float.is-infinite ` ](/docs/reference/foundations/float/#definitions-is/*[ ` image ` ](/docs/reference/visualize/image/ "`image`")*/nt.bit-not ` ](/docs/reference/foundations/int/#definitions-bit-not "`in/*[ ` image ` ](/docs/reference/visualize/image/ "`image`")*/tions/int/#definitions-bit-and "`int.bit-and`") , [ ` int.bit-or ` ](/docs/reference/foundations/int/#definitions-bit/*[ ` luma ` ](/docs/reference/visualize/color/#definitions-luma)*/ations/int/#def/*[ ` color.transparentize ` ](/docs/reference/visualize/color/#definitions-transparentize "`color.transparentize`")*/ /*[ ` color.opacify ` ](/docs/reference/visualize/color/#definitions-opacify "`color.opacify`")*/-bit-rshift "`int.b/*[ ` color.negate ` ](/docs/reference/visualize/color/#definitions-negate "`color.negate`")*/finitions-chunks /*[ ` stroke ` ](/docs/reference/text/highlight/#parameters-stroke)*/d/*[ ` radius ` ](/docs/reference/text/highlight/#parameters-radius)*/ndations/dictionary/#constructor) to access its conten/*[ ` highlight ` ](/docs/reference/text/highlight/ "`highlight`")*/loading/csv/#parameters-row-type) argument to ` csv ` function to configure how rows will be represented 
  - [ XML parsing ](/docs/reference/data-loading/xml/) now allows DTDs (document type definitions) 
  - Improved formatting of negative numbers with [ ` str ` ](/docs/reference/foundations/str/) and [ ` repr ` ](/docs/referen/*[ ` color.components ` ](/docs/reference/visualize/color/#definitions-components "`color.components`")*/"bytes")
  - Fixed a bug with pattern matching in for loops 
  - Fixed a bug with labels not being part of [ ` .  fields  (  )  ` ](/docs/reference/foundations/content/#definitions-fields) dictionaries 
  - Fixed a bug where unnamed argument sinks wouldn't capture excess arguments 
  - Fixed typo in ` repr ` output of strokes 

==  Syntax

  - Added support for nested [ destructuring patterns ](/docs/reference/scripting/#bindings)
  - Special spaces (like thin or non-breaking spaces) are now parsed literally instead of being collapsed into normal spaces *(Breaking change)*
  - Korean text can now use emphasis syntax without adding spaces *(Breaking change)*
  - The token [ ` context ` ](/docs/reference/context/ "`context`") is now a keyword and cannot be used as an identifier anymore *(Breaking change)*
  - Nested line comments aren't allowed anymore in block comments *(Breaking change)*
  - Fixed a bug where ` x.) ` would be treated as a field access 
  - Text elements/*![GitHub avatar of Leedehai](https://avatars.githubusercontent.com/u/18319900?s=64&v=4)*/function name is parenthesized 
  /*![GitHub avatar of PgBiel](https://avatars.githubusercontent.com/u/9021226?s=64&v=4)*/s 

==  Tooling & Diagnostics

 /*![GitHub avatar of frozolotl](https://avatars.githubusercontent.com/u/44589151?s=64&v=4)*/) text 
  - Added suggestion for ac/*![GitHub avatar of Dherse](https://avatars.githubusercontent.com/u/9665250?s=64&v=4)*/stored in a dictionary 
  - Impr/*![GitHub avatar of MDLC01](https://avatars.githubusercontent.com/u/57839069?s=64&v=4)*/r message when calling construct/*![GitHub avatar of Andrew15-5](https://avatars.githubusercontent.com/u/37143421?s=64&v=4)*/ies for strokes on different sides 
/*![GitHub avatar of Enter-tainer](https://avatars.githubusercontent.com/u/25521218?s=64&v=4)*/ 

==  Visualization

  - The [ ` imag/*![GitHub avatar of Myriad-Dreamin](https://avatars.githubusercontent.com/u/35292584?s=64&v=4)*/r natural size anymore 
  - The [ ` imag/*![GitHub avatar of peng1999](https://avatars.githubusercontent.com/u/12483662?s=64&v=4)*/ in EXIF metadata 
  - Added suppo/*![GitHub avatar of EpicEricEE](https://avatars.githubusercontent.com/u/7191192?s=64&v=4)*/color/#definitions-luma) colors 
  -/*![GitHub avatar of jcbhmr](https://avatars.githubusercontent.com/u/61068799?s=64&v=4)*/ub avatar of Leedehai](https://a/*![GitHub avatar of Heinenen](https://avatars.githubusercontent.com/u/37484430?s=64&v=4)*/![GitHub avatar of PgBiel](https://*![GitHub avatar of tingerrr](https://avatars.githubusercontent.com/u/137803093?s=64&v=4)*/GitHub avatar of frozolotl](https:/*![GitHub avatar of Jollywatt](https://avatars.githubusercontent.com/u/24970860?s=64&v=4)*/*[ ![GitHub avatar of Dherse](https/*![GitHub avatar of LaurenzV](https://avatars.githubusercontent.com/u/47084093?s=64&v=4)*/ ![GitHub avatar of MDLC01](https:/*![GitHub avatar of YDX-2147483647](https://avatars.githubusercontent.com/u/73375426?s=64&v=4)*/Hub avatar of Andrew15-5](https://avatar/*![GitHub avatar of k-84mo10](https://avatars.githubusercontent.com/u/115140693?s=64&v=4)*/tHub avatar of Enter-tainer](https/*![GitHub avatar of s-cerevisiae](https://avatars.githubusercontent.com/u/28475392?s=64&v=4)*//*[ ![GitHub avatar of Myriad-Dreamin]/*![GitHub avatar of 01mf02](https://avatars.githubusercontent.com/u/864342?s=64&v=4)*/riad-Dreamin*/en/*[ ![GitHub ava/*![GitHub avatar of A-Walrus](https://avatars.githubusercontent.com/u/58790821?s=64&v=4)*/ithub.com/peng1999*/ea/*[ ![GitHub/*![GitHub avatar of C0ffeeCode](https://avatars.githubusercontent.com/u/27804482?s=64&v=4)*///github.com/EpicEricEE*/tr/*[ ![Git/*![GitHub avatar of CosmicHorrorDev](https://avatars.githubusercontent.com/u/30302768?s=64&v=4)*/hub.com/jcbhmr*/ul/*[ ![GitHub avatar of /*![GitHub avatar of DavidMazarro](https://avatars.githubusercontent.com/u/22799724?s=64&v=4)*/einenen*/DF/*[ ![GitHub avatar of ting/*![GitHub avatar of Hofer-Julian](https://avatars.githubusercontent.com/u/30049909?s=64&v=4)*/errr*/Fi/*[ ![GitHub avatar of Jollywa/*![GitHub avatar of Jocs](https://avatars.githubusercontent.com/u/9712830?s=64&v=4)*/m/Jollywatt*/DF/*[ ![GitHub av/*![GitHub avatar of Midbin](https://avatars.githubusercontent.com/u/5499764?s=64&v=4)*/://github.com/LaurenzV*/on/*[ ![/*![GitHub avatar of Quaqqer](https://avatars.githubusercontent.com/u/29512047?s=64&v=4)*/&v=4)*/*https://github.com/YDX-21/*![GitHub avatar of artemist](https://avatars.githubusercontent.com/u/1226638?s=64&v=4)*/15140693?s=64&v=4)*/*https://githu/*![GitHub avatar of astrale-sharp](https://avatars.githubusercontent.com/u/53686698?s=64&v=4)*//u/28475392?s=64&v=4)*/*https://github./*![GitHub avatar of cmoog](https://avatars.githubusercontent.com/u/7585078?s=64&v=4)*/t.com/u/864342?s=64&v=4)*/*http/*![GitHub avatar of drupol](https://avatars.githubusercontent.com/u/252042?s=64&v=4)*/rcontent.com/u/58790821?s=64&v=4/*![GitHub avatar of dyc3](https://avatars.githubusercontent.com/u/1808807?s=64&v=4)*/ars.githubusercontent.com/u/27/*![GitHub avatar of eltociear](https://avatars.githubusercontent.com/u/22633385?s=64&v=4)*/ev](https://avatars.githubuserconte/*![GitHub avatar of emilyyyylime](https://avatars.githubusercontent.com/u/40892795?s=64&v=4)*/DavidMazarro](https://avatars.githubus/*![GitHub avatar of emmett-rayes](https://avatars.githubusercontent.com/u/109030944?s=64&v=4)*/of Hofer-Julian](https://avatars.githu/*![GitHub avatar of espinielli](https://avatars.githubusercontent.com/u/891692?s=64&v=4)*/ avatar of Jocs](https://avatars.git/*![GitHub avatar of evfinkn](https://avatars.githubusercontent.com/u/6924485?s=64&v=4)*/ar of Midbin](https://avatars.git/*![GitHub avatar of f3rn0s](https://avatars.githubusercontent.com/u/1351279?s=64&v=4)*/vatar of Quaqqer](https://avatar/*![GitHub avatar of freundTech](https://avatars.githubusercontent.com/u/9515067?s=64&v=4)*/b avatar of artemist](https://avatar/*![GitHub avatar of geekvest](https://avatars.githubusercontent.com/u/126322776?s=64&v=4)*/b avatar of astrale-sharp](https://*![GitHub avatar of h-arry-smith](https://avatars.githubusercontent.com/u/69302535?s=64&v=4)*/*[ ![GitHub avatar of cmoog](https://a/*![GitHub avatar of istudyatuni](https://avatars.githubusercontent.com/u/43654815?s=64&v=4)*/b avatar of drupol](https://avatars.g/*![GitHub avatar of jaroeichler](https://avatars.githubusercontent.com/u/88505041?s=64&v=4)*/ of dyc3](https://avatars.githubuserc/*![GitHub avatar of jbirnick](https://avatars.githubusercontent.com/u/6528009?s=64&v=4)*/ociear](https://avatars.githubuser/*![GitHub avatar of kg583](https://avatars.githubusercontent.com/u/41345727?s=64&v=4)*/ar of emilyyyylime](https://ava/*![GitHub avatar of mattfbacon](https://avatars.githubusercontent.com/u/58113890?s=64&v=4)*/![GitHub avatar of emmett-rayes](htt/*![GitHub avatar of max397574](https://avatars.githubusercontent.com/u/81827001?s=64&v=4)*/es*/av/*[ ![GitHub avatar of espini/*![GitHub avatar of mkpoli](https://avatars.githubusercontent.com/u/3502597?s=64&v=4)*/espinielli*/n)/*[ ![GitHub avata/*![GitHub avatar of mkroening](https://avatars.githubusercontent.com/u/28776973?s=64&v=4)*/.com/evfinkn*/co/*[ ![GitHub avatar/*![GitHub avatar of muzimuzhi](https://avatars.githubusercontent.com/u/6376638?s=64&v=4)*/com/f3rn0s*/tt/*[ ![GitHub avatar o/*![GitHub avatar of nathaniel-brough](https://avatars.githubusercontent.com/u/7277663?s=64&v=4)*/reundTech*/) /*[ ![GitHub avatar of geekve/*![GitHub avatar of natsukagami](https://avatars.githubusercontent.com/u/9061737?s=64&v=4)*/vest*/4&/*[ ![GitHub avatar of h-arry/*![GitHub avatar of nvarner](https://avatars.githubusercontent.com/u/17197562?s=64&v=4)*/m/h-arry-smith*/64/*[ ![GitHub av/*![GitHub avatar of onerandomusername](https://avatars.githubusercontent.com/u/71233171?s=64&v=4)*/.com/istudyatuni*/?s/*[ ![GitHub avatar of /*![GitHub avatar of pineapplehunter](https://avatars.githubusercontent.com/u/8869894?s=64&v=4)*/jaroeichler*/09/*[ ![GitHub avatar of jbi/*![GitHub avatar of t-rapp](https://avatars.githubusercontent.com/u/20061583?s=64&v=4)*//jbirnick*/en/*[ ![GitHub avatar/*![GitHub avatar of tertsdiepraam](https://avatars.githubusercontent.com/u/11643477?s=64&v=4)*/g583*/at/*[ ![GitHub avatar of mattfbac/*![GitHub avatar of uetcis](https://avatars.githubusercontent.com/u/25654046?s=64&v=4)*/attfbacon*/tt/*[ ![GitHub avatar/*![GitHub avatar of violetfauna](https://avatars.githubusercontent.com/u/44212740?s=64&v=4)*/.com/max397574*/1m/*[ ![GitHub avatar/*![GitHub avatar of voidiz](https://avatars.githubusercontent.com/u/29259387?s=64&v=4)*/b.com/mkpoli*/ar/*[ ![GitHub ava/*![GitHub avatar of xTeamStanly](https://avatars.githubusercontent.com/u/68441372?s=64&v=4)*/hub.com/mkroening*/b /*[ ![GitHub ava/*![GitHub avatar of xalbd](https://avatars.githubusercontent.com/u/119540449?s=64&v=4)*//github.com/muzimuzhi*/- /*[ ![/*![GitHub avatar of xkevio](https://avatars.githubusercontent.com/u/13004777?s=64&v=4)*/64&v=4)*/*https://github.com/nat/*![GitHub avatar of zica87](https://avatars.githubusercontent.com/u/59327276?s=64&v=4)*/t.com/u/9061737?s=64&v=4)*/*h/*![â](/assets/icons/16-arrow-right.svg)*/itHub avatar of nvarner](https://avatars.githubu/*![â](/assets/icons/16-arrow-right.svg)*/tps://github.com/nvarner*/(h/*[ ![GitHub avatar of onerandomusername](https://av/*![Docs](/assets/icons/16-docs-dark.svg)*/s=64&v=4)*/*https://github.com/onerandomusername*/th/*[ ![GitHub avatar of pineapplehunter](h/*![GitHub avatar of f3rn0s](https:///*[ 0.8.0 ](/docs/changelog/0.8.0/)*/hub.com/pineapplehunter*/bi/*[ ![GitHub avatar of /*![GitHub avatar of freu/*[ @astrale-sharp ](https://github.com/astrale-sharp)*/github.com/t-rapp*/b./*[ ![GitHub avatar of tertsdiepraam](https://avatars.githubusercontent.com/u/11643477?s=64&v=4)*/*https://github.com/tertsdiepraam*/m//*[ ![GitHub avatar of uetcis/*![GitHub avatar of h-arry-smith](https://avatars.githubusercontent.com/u/69302535?s=64&v=4)*/t/*[ ![GitHub avatar of violetfauna](h/*![GitHub avatar of istudyatuni](https://avatars.gith/*[ packages ](/docs/reference/scripting/#packages)*/Hub avatar of voidiz](https:/*![GitHub avatar of jaroeichler](https://avatars.githubusercontent.com/u/88505041?/*[ type ](/docs/reference/foundations/type/ "type")/*![GitHub avatar of jbirnick](https://avatars.githubusercontent.com/u/6528009?s=64&v=4)*/[ ![GitHub avatar of xalbd](https://avatars.githubusercontent.com/u/119540449?s=64&v=4)*/*https://github.com/xalbd*/?s/*[ ![GitHub avatar of xkevio](https://avat/*![GitHub avatar of mattfbacon](https://avatars.githubusercontent.com/u/58113890?s=64&v=/*[ Compatibility ](/docs/reference/foundations/type/#compatibility)*/76?s=64&v=4)*/*https://github.com/zica87*/*[ ![â](/assets/icons/16-arrow-right.svg)*/64&v=4) ](http/*![GitHub avatar of mkpoli](https://avatars.githubusercontent.com/u/3502597?s=64&v=4)*/s.githubusercontent.com/u/891692/*![GitHub avatar of mkroening](https://avatars.githubusercontent.com/u/28776973?s=6/*[ ` import ` ](/docs/reference/scripting/#modules)*/&v=/*[ Changelog ](/docs/changelog/)*/)
  - [ ![GitHub avatar of f3rn0s](https:///*[ 0.8.0 ](/docs/changelog/0.8.0/)*/35127/*![/*[ CBOR ](/docs/reference/data-loading/cbor/)*/[GitHub avatar of freu/*[ @astrale-sharp ](https://github.com/astrale-sharp)*/0/*[ @arnaudgo/*![Gi/*[ ` json.decode ` ](/docs/reference/data-loading/json/#definitions-decode)*/s ](/docs/reference/foundations/plugin/)*/776?s=64&v=4) ](https://github.com/geekvest)
  - [ ![GitHub avatar of h-arry-smith](https://avatars.githubusercontent.com/u/69302535?s=64&v=4) ](https://github.com/h-arry-smith)
  - [ ![GitHub avatar of istudyatuni](https://avatars.gith/*[ packages ](/docs/reference/scripting/#packages/*![GitHub avatar of pi/*[ bytes ](/docs/reference/foundations/bytes/ "bytes")*/tars.githubusercontent.com/u/88505041?/*[ type ](/docs/reference/foundations/type/ "type")*/![GitHub avatar of jbirnick](https://avatars.githubusercontent.com/u/6528009?s=64&v=4) ](https://github./*[ ` int ` ](/docs/reference/foundations/int/ "`int`")*///*[ ` str ` ](/docs/reference/foundations/str/ "`str`")*/https://github.com//*![GitHub avatar of uetcis](https://avatars.githubusercontent.com/u/25654046?s=64&v=4)*/8113890?s=64&v=/*[ Compatibility/*![Git/*[ hyperbolic functions ](/docs/reference/foundations/calc/#functions-cosh)*/usercontent.com/u/81827001?s=64&v=4) ](https://git/*![GitHub avatar of voidiz](https://avatars.githubusercontent.com/u/29259387?s=64&v=4)*/.com/u/3502597?s=64&v=4) ](https/*![GitHub avatar of xTeamStanly](https://avatars.githubusercontent.com//*[ @Enter-tainer ](https://github.com/Enter-tainer)*/ ` ](/doc/*![GitHub avatar of xalbd](https://avatars.githubusercontent.com/u/119540449?s=64/*[ page numbering ](/docs/reference/layout/page/#parameters-numbering)*/
  - [ ![/*[ CBOR ](/docs/reference/data-loading/cbor/)*/vatars.githubusercontent.com/u/7277663?s=64&v=4) ](https://github.com/nathaniel-brough)
  - [ ![Gi/*[ ` json.decode ` ](/docs/reference/data-loading/json/#definitions-decode)*/*[ ` json.encode ` ](/docs/reference/data-loading/json/#definitions-encode)/*![â](/assets/ico/*[ ` raw ` ](/docs/reference/text/raw/ "`raw`")*/tersperse ` ](/docs/reference/foundations/array/#definitions-intersperse)*/ame](https://avat/*[ ` str.rev ` ](/docs/*![](/assets/icons/16-arrow-right.svg)*/ns-rev)*/om/onerandomusername)
  - [ /*![](/assets/icons/16-arrow-right.svg)*/s/reference/foundations/bytes/ "bytes")*/u/8869894?s=64&v=4) ](https:/*[ ` array.zip ` ](/docs/reference/foundations/array/#definitions-zip)*///avatars.githubusercontent.com/u/2/*[ ` eval ` ](/docs/reference/foundations/eval/ "`eval`")*/itHub avatar of tertsdiepraam](https://avatars.githubuser/*[ ` ends-with ` ](/docs/reference/foundations/str/#definitions-ends-with)*/[ ![GitHub avatar of uetcis](https://avatars.githubusercontent.com/u/25654046?s=64&v=4) ](https://github.com/uetcis)
  - [ ![Git/*[ hyperbolic functions ](/docs/reference/foundations/calc/#functions-cosh)*/0?s=64&v=4) ](https://github.com/violetfauna)
  - [ ![GitHub avatar of voidiz](https://avatars.githubusercontent.com/u/29259387?s=64&v=4) ](https://github.com/voidiz)
  - [ ![GitHub avatar of xTeamStanly](https://avatars.githubusercontent.com//*[ @Enter-tainer ](https://github.com/Enter-tainer)*/nly)
  - [ ![GitHub avatar of xalbd](https://avatars.githubusercontent.com/u/119540449?s=64/*[ page numbering ](/docs/reference/layout/page/#parameters-numbering)*/tps://avatars.githubusercontent.com/u/13004777?/*[ ` highlight ` ](/docs/reference/text/highlight/ "`highlight`")*/zica87](https://avatars.githubusercontent.com/u/59327276?s=64&v/*[ ` polygon.regular ` ](/docs/reference/visualize/polygon/#definitions-regular)*/11.1  Previous page
](/docs/changelog/0.11.1/) [ ![â](/assets/ico/*[ ` raw ` ](/docs/reference/text/raw/ "`raw`")*/cs/changelog/0.1/*[ ` tab-width ` ](/docs/reference/text/raw/#parameters-tab-size)*/s/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Changelog ](/docs/changelog/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ 0.8.0 ](/docs/changelog/0.8.0/)

=  Version 0.8.0 (September 13, 2023)

==  Scripting

  - Plugins (thanks to [ @astrale-sharp ](h/*[ ` number-align ` ](/docs/reference/layout/page/#parameters-number-align)*/m/arnaudgolfouse) ) 
    - Typst can now load [ plugins ](/docs/reference/foundations/plugin/) that are compiled to WebAssembly 
    - Anything that can be compiled to WebAssembly can thus be loaded as a plugin 
    - These plugins are fully encapsulated (no access to file system or network) 
    - Plugins can be shipped as part of [ packages ](/docs/reference/scripting/#packages)
    - Plugins work just the same in the web app 
  - Types are now first-class values *(Breaking change)*
    - /*[ augmented matrices ](/docs/reference/math/mat/#parameters-augment)*/ value 
    - Some types can be called like functions (those that have a constructor), e.g. [ ` int ` ](/docs/reference/foundations/int/ "`/*[ ` abs ` ](/docs/reference/math/lr/#functions-abs)*//*[ ` norm ` ](/docs/reference/math/lr/#functions-norm)*/ type  (  10/*[ ` lr ` ](/docs/reference/math/lr/#functions-lr)*/)  ==  "integer"  ` . [ Compatibility ](/docs/reference/foundations/type/#compatibility) with the old way will remain for a while to give package authors time to upgrade, but it will be removed at some point. 
    - Methods are now syntax sugar for calling a function scoped to a type, meaning that ` "hello"  .  len  (  )  ` is equivalent to ` str  .  len  (  "hello"  )  `
  - Added support for [ ` import ` ](/docs/reference/scripting/#modules) renaming with ` as `
  - Added a [ ` duration ` ](/docs/reference/foundations/duration/ "`duration`") type 
  - Added support for /*[ @jimvdl ](https://github.com/jimvdl)*/cbor/) encoding and decoding 
  - Added encoding and decoding functions from and to bytes for data formats: [ ` json.decode ` ](/doc/*![GitHub avatar of Beiri22](https://avatars.githubusercontent.com/u/8210233?s=64&v=4)*/nce/data-loading/json/#definition/*![GitHub avatar of bluebear94](https://avatars.githubusercontent.com/u/2975203?s=64&v=4)*/(/docs/reference/foundations/array/#/*![GitHub avatar of jimvdl](https://avatars.githubusercontent.com/u/26407533?s=64&v=4)*/de/)*/s/str/#/*[ ` figure.captio/*![GitHub avatar of LuxxxLucy](https://avatars.githubusercontent.com/u/19356905?s=64&v=4)*/ons/bytes/ "bytes") joinable and ad/*![GitHub avatar of mattfbacon](https://avatars.githubusercontent.com/u/58113890?s=64&v=4)*/ction variadic 
  - Fixed bug with [/*![GitHub avatar of sitandr](https://avatars.githubusercontent.com/u/60141933?s=64&v=4)*/ "math"  `
  - Fixed bug with [ `/*![GitHub avatar of xkevio](https://avatars.githubusercontent.com/u/13004777?s=64&v=4)*/*/strings 
  - Fixed bug with de/*![GitHub avatar of Dherse](https://avatars.githubusercontent.com/u/9665250?s=64&v=4)*/(/docs/reference/foundations/sel/*![GitHub avatar of Enter-tainer](https://avatars.githubusercontent.com/u/25521218?s=64&v=4)*/t/packages#package-format)*/ed some co/*![GitHub avatar of SimonRask](https://avatars.githubusercontent.com/u/33556894?s=64&v=4)*/becomes ` to-luma ` *(Breaking chan/*![GitHub avatar of Andrew15-5](https://avatars.githubusercontent.com/u/37143421?s=64&v=4)*/ter-tainer) ) 
  - Fixed bugs with P/*![GitHub avatar of KillTheMule](https://avatars.githubusercontent.com/u/4117685?s=64&v=4)*//docs/reference/layout/page/#paramete/*![GitHub avatar of LaurenzV](https://avatars.githubusercontent.com/u/47084093?s=64&v=4)*//reference/text/highlight/ "`highl/*![GitHub avatar of MDLC01](https://avatars.githubusercontent.com/u/57839069?s=64&v=4)*/of Beiri22](https://avatars.gith/*![GitHub avatar of NeillJohnston](https://avatars.githubusercontent.com/u/16545367?s=64&v=4)*/ bluebear94](https://avatars.githubuser/*![GitHub avatar of PgBiel](https://avatars.githubusercontent.com/u/9021226?s=64&v=4)*/ar of jimvdl](https://avatars.gi/*![GitHub avatar of SillyFreak](https://avatars.githubusercontent.com/u/1029192?s=64&v=4)*/tar of LuxxxLucy](https://avatars.gi/*![GitHub avatar of abramchikd](https://avatars.githubusercontent.com/u/32370126?s=64&v=4)*/vatar of mattfbacon](https://avatars/*![GitHub avatar of antonWetzel](https://avatars.githubusercontent.com/u/59712243?s=64&v=4)*/b avatar of sitandr](https://avatars./*![GitHub avatar of arj0019](https://avatars.githubusercontent.com/u/92353079?s=64&v=4)*/b avatar of xkevio](https://avata/*![GitHub avatar of astrale-sharp](https://avatars.githubusercontent.com/u/53686698?s=64&v=4)*/atar of Dherse](https://avatars.githubu/*![GitHub avatar of damaxwell](https://avatars.githubusercontent.com/u/918465?s=64&v=4)*/of Enter-tainer](https://avatars.gi/*![GitHub avatar of dikkadev](https://avatars.githubusercontent.com/u/64754924?s=64&v=4)*/Hub avatar of SimonRask](https://a/*![GitHub avatar of frozolotl](https://avatars.githubusercontent.com/u/44589151?s=64&v=4)*/![GitHub avatar of Andrew15-5](http/*![GitHub avatar of kiviktnm](https://avatars.githubusercontent.com/u/65563192?s=64&v=4)*// |/*[ ![GitHub avatar of KillTheM/*![GitHub avatar of klMse](https://avatars.githubusercontent.com/u/61806749?s=64&v=4)*/KillTheMule*/s)/*[ ![GitHub ava/*![GitHub avatar of lolstork](https://avatars.githubusercontent.com/u/137357423?s=64&v=4)*/thub.com/LaurenzV*/on/*[ ![GitHub /*![GitHub avatar of lukas-loering](https://avatars.githubusercontent.com/u/52287649?s=64&v=4)*/b.com/MDLC01*/g /*[ ![GitHub avatar of /*![GitHub avatar of owiecc](https://avatars.githubusercontent.com/u/6896639?s=64&v=4)*/github.com/NeillJohnston*/Di/*[ /*![GitHub avatar of pavelzw](https://avatars.githubusercontent.com/u/29506042?s=64&v=4)*/*https://github.com/PgBiel*/- /*[/*![GitHub avatar of raphCode](https://avatars.githubusercontent.com/u/15750438?s=64&v=4)*/4)*/*https://github.com/SillyFreak/*![GitHub avatar of sudormrfbin](https://avatars.githubusercontent.com/u/23398472?s=64&v=4)*/64&v=4)*/*https://github.com/abramchi/*![GitHub avatar of t-rapp](https://avatars.githubusercontent.com/u/20061583?s=64&v=4)*/12243?s=64&v=4)*/*https://github/*![GitHub avatar of zicklag](https://avatars.githubusercontent.com/u/25393315?s=64&v=4)*/com/u/92353079?s=64&v=4)*/*https:/*![GitHub avatar of zyoshoka](https://avatars.githubusercontent.com/u/107108195?s=64&v=4)*/content.com/u/53686698?s=64&v=4/*![â](/assets/icons/16-arrow-right.svg)*//*[ ![GitHub avatar of /*![GitHub avatar of /*[ ![â](/assets/icons/16-arrow-right.svg)*/v=4)*/*https://github.com/damaxwell*/ag/*[ ![GitHub avatar/*![GitHub avatar /*[ ![Docs](/assets/icons/16-docs-dark.svg)*/924?s=64&v=4)*/*https://github.com/dikkadev*/an/*[ ![GitHub avatar of frozolotl](https://avatars.githubusercontent.com/u/44589151?s=64&v=4)*/*https://github.com/frozolotl*/h /*[ ![GitHub avatar of kiviktnm/*![GitHub avatar of sitandr](https://avatars.githubusercontent.com/u/60141933?s=64&v=4)*/ktnm*/ti/*[ ![GitHub avatar of kl/*![GitHub avatar of xkevio](https://avatars.githubusercontent.com/u/130047/*[ ` rem ` ](/docs/reference/foundations/calc/#functions-rem)*/avatars.githubusercontent.com/u/137357423?s=64&v=4)*/*https://github.com/lolstork*/ a/*[ ![GitHub avatar o/*![GitHub avatar of Enter-tainer](https://avatars.githubusercontent.com/u/25521218?s=64&v=4)*/b.com/lukas-loering*/n /*[ ![GitHub av/*![GitHub avatar of Si/*[ ` query ` ](/docs/reference/introspection/query/ "`query`")*/github.com/owiecc*/ll/*[ ![GitHub avatar of pavelzw](https://avatars.githubusercontent.com/u/29506042?s=64&v=4)*/*https://github.com/pavelzw*/se/*[ ![GitHub avatar of raphCode](https://avatars.githubusercontent.com/u/15750438?s=64&v=4)*/*https://github.com/raphCode*/gr/*[ ![GitHub avatar of sudormrfbin](https/*![GitHub avatar of LaurenzV](https://avatars.githubusercontent.c/*[ strokes ](/docs/reference/visualize/stroke/)*/ t-rapp](http/*![GitHub avatar of MDLC01](https://avat/*[ ` cancel ` ](/docs/reference/math/cancel/)*/v/*[ ![GitHub avatar of zicklag](htt/*![Git/*[ destructuring ](/docs/reference/scripting/#bindings)*/ps://github.com/zicklag*/u//*[ ![GitHub avatar of zyoshoka](https://avatars.githubusercontent.com/u/107108195?s=64&v=4)*/*https://github.com/zyoshoka*/*[ ![â](/assets/icons/16-arrow-right.svg)*/ub.com/bluebear94)
  - [ ![GitHub avatar of /*[ ![â](/assets/icons/16-arrow-right.svg)*/com/u/26407533?s=64&v=4) ](https://github.com/jimvdl)
  - [ ![GitHub avatar /*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ontent.com/u/19356905?s=64&v=4) ](https://github.com/*[ Changelo/*![GitHub avatar of antonWetzel](https://avatars.githubusercontent.com/u/59712243?s=64&v=4)*/log/0.3.0/)*/ ](https://github.com/mattfbacon)
  - [ ![GitHub avatar of sitandr](https://avatars.githubusercontent.com/u/60141933?s=64&v=4) ](https://github.com/sit/*![GitHub avatar of astrale-sharp](https/*[ References ](/docs/reference/model/ref/)*/47/*[ ` rem ` ](/docs/reference/foundations/calc/#fu/*![GitHub avatar of damaxwell](https://avatars.githubusercontent.com/u/918465?s=64&v=4)*/ ](https://github.com/Dherse)
  - [/*![GitHub avatar of dikkadev](https://avatars.githubusercontent.com/u/64754924?s=/*[ ` selector ` ](/docs/reference/foundations/selector/ "`selector`")*/of Si/*[ ` query ` ](/docs/reference/introspection/query/ "`query`")*/4&v=4) ](https://github.com/Simo/*![GitHub avatar of kiviktnm](https://avatars.githubusercontent.com/u/65563192?s=64&v=4)*//37143421?s=/*[ attachments ](/doc/*![GitHub avatar of klMse](https://avatars.githubusercontent.com/u/61806749?s=64&v=4)*/sercontent.com/u/4117685?s=64&v/*![GitHub avatar of lolstork](https://avatars.githubusercontent.com/u/13735742/*[ argument sinks ](/docs/reference/foundations/arguments/)*//visualize/stroke/)*/aurenzV)
  - [ ![GitHub avatar of MDLC01](https://avat/*[ ` cancel ` ](/docs/reference/math/cancel/)*/4/*![GitHub avatar of owiecc](https://avatars.githubusercontent.com/u/6896639?s=64&v=4)*/ing/#bindings)*/rcontent.com/u/1/*![GitHub avatar of pavelzw](https://avatars/*[ path ](/docs/reference/visualize/path/)*/t)*/(https://avatars.githubuserconten/*![GitHub avatar of raphCode](https://avatars.githubusercontent.com/u/15750438?s=64&v=4)*/lyFreak](https://avatars.githubu/*[ ` zip ` ](/docs/reference/foundations/array/#definitions-zip)*/*[ ` sum ` ](/docs/reference/foundations/array/#definitions-sum)*//*![GitHub avatar of t-rapp](https://avatars.githubusercontent.com/u/20061583?s=64&v=4)*/itHub avatar of antonWetzel](htt/*![GitHub avatar of zicklag](https://avatars.githubusercontent.com/u/25393315?s=64&v=4)*/el)
/*[ calculation ](/docs/refer/*![GitHub avatar of zyoshoka](https://avatars.githubusercontent.com/u/107108195?s=64&v=4)*//arj0019)
  - [ ![GitHub avatar/*![â](/assets/icons/16-arrow-right.svg)*/(/doc/*![GitHub avatar of SUPERCILEX](https://avatars.githubusercontent.com/u/9490724?s=64&v=4)*/avatar of damaxwell](https://avatars/*![GitHub avatar of HarmoGlace](https://avatars.githubusercontent.com/u/23212967?s=64&v=4)*/avatar of dikkadev](https://avatars./*![GitHub avatar of Marmare314](https://avatars.githubusercontent.com/u/49279081?s=64&v=4)*/r/ "`selector`")*/olotl](https://ava/*![GitHub avatar of PgBiel](https://avatars.githubusercontent.com/u/9021226?s=64&v=4)*/[ ![GitHub avatar of kiviktnm](h/*![GitHub avatar of barvirm](https://avatars.githubusercontent.com/u/15948420?s=64&v=4)*/m)
  - [ ![GitHub avatar of klMse/*![GitHub avatar of Dherse](https://avatars.githubusercontent.com/u/9665250?s=64&v=4)*/Mse)
  - [ ![GitHub avatar of lo/*![GitHub avatar of Leedehai](https://avatars.githubusercontent.com/u/18319900?s=64&v=4)*/rence/foundations/arguments/)*/ava/*![GitHub avatar of joeldierkes](https://avatars.githubusercontent.com/u/8125678?s=64&v=4)*///github.com/lukas-loering)
  - [ ![G/*![GitHub avatar of peng1999](https://avatars.githubusercontent.com/u/12483662?s=64&v=4)*/ps://github.com/owiecc)
  - [ ![Gi/*![GitHub avatar of AlistairKeiller](https://avatars.githubusercontent.com/u/43255248?s=64&v=4)*/://github.com/pavelzw)
  - [ ![GitHub ava/*![GitHub avatar of LaurenzV](https://avatars.githubusercontent.com/u/47084093?s=64&v=4)*/ithub.com/raphCode)
  - [ ![GitHub/*![GitHub avatar of Luis-Licea](https://avatars.githubusercontent.com/u/48164786?s=64&v=4)*/s://github.com/sudormrfbin)
  - [ ![/*![GitHub avatar of SekoiaTree](https://avatars.githubusercontent.com/u/51149447?s=64&v=4)*/ps://github.com/t-rapp)
  - [ ![GitH/*![GitHub avatar of astrale-sharp](https://avatars.githubusercontent.com/u/53686698?s=64&v=4)*/ithub.com/zicklag)
  - [ ![GitHub avata/*![GitHub avatar of birktj](https://avatars.githubusercontent.com/u/2932651?s=64&v=4)*//github.com/zyoshoka)

[ ![â](/*![GitHub avatar of dccsillag](https://avatars.githubusercontent.com/u/15617291?s=64&v=4)*/.githubusercontent.com/u/9490724?s=/*![GitHub avatar of goggle](https://avatars.githubusercontent.com/u/1856425?s=64&v=4)*///avatars.githubusercontent.com//*![GitHub avatar of johannes-wolf](https://avatars.githubusercontent.com/u/519002?s=64&v=4)*/(https://avatars.githubusercontent.com//*![GitHub avatar of mattfbacon](https://avatars.githubusercontent.com/u/58113890?s=64&v=4)*/tps://avatars.githubusercontent.com//*![GitHub avatar of michidk](https://avatars.githubusercontent.com/u/3979930?s=64&v=4)*/tps://avatars.githubusercontent.c/*![GitHub avatar of neunenak](https://avatars.githubusercontent.com/u/311545?s=64&v=4)*/](https://avatars.githubuserconten/*![GitHub avatar of pan93412](https://avatars.githubusercontent.com/u/28441561?s=64&v=4)*/i](https://avatars.githubuserconte/*![GitHub avatar of rpitasky](https://avatars.githubusercontent.com/u/111201305?s=64&v=4)*/dierkes](https://avatars.githubuse/*![GitHub avatar of thinety](https://avatars.githubusercontent.com/u/51510921?s=64&v=4)*/ar of peng1999](https://avatars.g/*![GitHub avatar of tranzystorekk](https://avatars.githubusercontent.com/u/5671049?s=64&v=4)*/tar of AlistairKeiller](https://avatars/*![GitHub avatar of werifu](https://avatars.githubusercontent.com/u/53432474?s=64&v=4)*/*[ ![GitHub avatar of Laurenz/*![â](/assets/icons/16-arrow-right.svg)*//u/47084093?s=64&v=4)*/*https://github.com/Lau/*![â](/assets/icons/16-arrow-right.svg)*/ea](https://avatars.githubusercontent.com/u/48164786?s=64&v=4)*/*https://githu/*![Docs](/assets/icons/16-docs-dark.svg)*/ of SekoiaTree](https://avatars.githubusercontent.com/u/51149447?s=64&v=4)*/*https://github.com/SekoiaTree*/at/*[ ![GitHub avatar of astrale-sharp](https://avatars.githubusercontent.com/u/53686698?s=64&v=4)*/*https://github.com/astrale-sharp*/ed/*[ ![GitHub avatar of birktj](https://avatars.githubusercontent.com/u/2932651?s=64&v=4)*/*https://github.com/birktj*/om/*[ ![GitHub avatar of dccsillag](https://avatars.githubusercontent.com/u/15617291?s=64&v=4)*/*https://github.com/dccsillag*//d/*[ ![GitHub avatar of goggle](https://avatars.githubusercontent.com/u/1856425?s=64&v=4)*/*https://github.com/goggle*/-s/*[ ![GitHub avatar of johannes-wolf](https://avatars.githubusercontent.com/u/519002?s=64&v=4)*/*https://github.com/johannes-wolf*/` /*[ ![GitHub avatar of mattfbacon](https://avatars.githubusercontent.com/u/58113890?s=64&v=4)*/*https://github.com/mattfbacon*/e//*[ ![GitHub avatar of michidk](https://avatars.githubusercontent.com/u/3979930?s=64&v=4)*/*https://github.com/michidk*/ a/*[ ![GitHub avatar of neunenak](https://avatars.githubusercontent.com/u/311545?s=64&v=4)*/*https://github.com/neunenak*/ld/*[ ![GitHub avatar of pan93412](https://avatars.githubusercontent.com/u/28441561?s=64&v=4)*/*https://github.com/pan93412*/d /*[ ![GitHub avatar of rpitasky](https/*![GitHub avatar of Marmare314](https://avatars.githubusercontent.com/u/49279081?s=64&v=4)*/*[ ![GitHub avatar of thinety](https/*![GitHub avatar of PgBiel](https://avatars.githubusercontent.com/u/9021226?s=64&v=4)*/ c/*[ ![GitHub avatar of tranzys/*![GitHub avatar of barvirm](https://avatars.githubusercontent.com/u/15948420?s=64&v=4)*//tranzystorekk*/ed/*[ ![GitHub av/*![GitHub avatar of Dherse](https://avatars.githubusercontent.com//*[ operator ](/docs/reference/math/op/)*/[ ![â](/asset/*![GitHub avatar of Leedehai](h/*[ ` hide ` ](/docs/reference/layout/hide/ "`hide`")*/(/assets/icons/16-arrow-right.svg)*/ argum/*![GitHub avatar of joeldierkes](https://avatars.githubusercontent/*[ ` cal ` ](/docs/reference/math/variants/#functions-cal)*/es in math 
  - Fixed alignment in matrices/*[ Changelog ](/docs/changelog/)*/ in equations 
  - Fixed grid cell alignmen/*[ 0.2.0 ](/d/*![GitHub avatar of AlistairKeiller](https://avatars.githubusercontent.com/u/43255248?s=64&v/*[ Ratios ](/docs/reference/layout/ratio/)*/th/*[/*![GitHub avatar of LaurenzV](https://avatars.git/*[ floats ](/docs/reference/foundations/float/)*/is now ignored in ma/*[ ` map ` ](/docs/reference/foundations/array/#definitions-map)*/th and com/*[ Dictionaries ](/docs/reference/foundations/dictionary/*![GitHub avatar of Marmare314](https://avatars.githubusercontent.com/u/49279081?s=64&v=4)*/udes/*[ unpacking syntax ](/docs/ref/*![GitHub avatar of dccsillag](https://avatars.githubusercontent.com/u/15617291?s=64&v=4)*/e ` flag and ` UPDATE_EX/*[ ` enume/*![GitHub avatar of Dherse](https://avatars.githubusercontent.com/u/9665250?s=64&v=4)*/*[ ` path ` ](/docs/reference/vi/*![GitHub avatar of EpicEricEE](https://avatars.githubusercontent.com/u/7191192?s=64&v=4)*/cs/reference/layout/layout/ "`layout/*![GitHub avatar of Leedehai](https://avatars.githubusercontent.com/u/18319900?s=64&v=4)*/=4) ](https:/*[ ` sorted ` ](/docs/*![GitHub avatar of G1gg1L3s](https://avatars.githubusercontent.com/u/43041209?s=64&v=4)*/12967?s=64&v=4) ](https://github.c/*![GitHub avatar of PgBiel](https://avatars.githubusercontent.com/u/9021226?s=64&v=4)*/t.com/u/49279081?s=64&v=4) ](htt/*![GitHub avatar of RLangendam](https://avatars.githubusercontent.com/u/1749390?s=64&v=4)*/ontent.com/u/9021226?s=64&v=4) ](htt/*![GitHub avatar of Raphael-CV](https://avatars.githubusercontent.com/u/95867256?s=64&v=4)*/nt.com/u/15948420?s=64&v=4) ](https:/*![GitHub avatar of SekoiaTree](https://avatars.githubusercontent.com/u/51149447?s=64&v=4)*/com//*[ operator ](/docs/reference/m/*![GitHub avatar of SteamedFish](https://avatars.githubusercontent.com/u/69167?s=64&v=4)*//layout/hide/ "`hide`")*/4&v=4) ](htt/*![GitHub avatar of asayers](https://avatars.githubusercontent.com/u/877109?s=64&v=4)*/ubusercontent/*[ ` cal ` ](/docs//*![GitHub avatar of asibahi](https://avatars.githubusercontent.com/u/17417266?s=64&v=4)*//#functions-frak)*/sercontent.com/*![GitHub avatar of astrale-sharp](https://avatars.githubusercontent.com/u/53686698?s=64&v=4)*/r](https://avatars.githubusercontent.co/*![GitHub avatar of classabbyamp](https://avatars.githubusercontent.com/u/5366828?s=64&v=4)*/LaurenzV](https://avatars.git/*[ float/*![GitHub avatar of cmoog](https://avatars.githubusercontent.com/u/7585078?s=64&v=4)*/dations/float/ "`float`")*/ps://*![GitHub avatar of felipeacsi](https://avatars.githubusercontent.com/u/1522083?s=64&v=4)*/Hub avatar of Marmare314](https://av/*![GitHub avatar of figsoda](https://avatars.githubusercontent.com/u/40620903?s=64&v=4)*/[ ![GitHub avatar of dccsillag](h/*![GitHub avatar of ichxorya](https://avatars.githubusercontent.com/u/26222301?s=64&v=4)*/g*/tp/*[ ![GitHub avatar of Dherse/*![GitHub avatar of jakobrs](https://avatars.githubusercontent.com/u/10761079?s=64&v=4)*/e*/?s/*[ ![GitHub avatar of EpicE/*![GitHub avatar of michidk](https://avatars.githubusercontent.com/u/3979930?s=64&v=4)*//EpicEricEE*/72/*[ ![GitHub avata/*![GitHub avatar of radimsuckr](https://avatars.githubusercontent.com/u/2447438?s=64&v=4)*/ub.com/Leedehai*//u/*[ ![GitHub avat/*![GitHub avatar of rqy2002](https://avatars.githubusercontent.com/u/22741844?s=64&v=4)*/ithub.com/G1gg1L3s*/on/*[ ![GitHu/*![GitHub avatar of s-zymon](https://avatars.githubusercontent.com/u/12126978?s=64&v=4)*///github.com/PgBiel*/va/*[ ![GitH/*![GitHub avatar of tbethe](https://avatars.githubusercontent.com/u/58276357?s=64&v=4)*/https://github.com/RLangendam*/p/*![GitHub avatar of teenjuna](https://avatars.githubusercontent.com/u/53595243?s=64&v=4)*/64&v=4)*/*https://github.com/Rapha/*![GitHub avatar of viddrobnic](https://avatars.githubusercontent.com/u/5161200?s=64&v=4)*/9447?s=64&v=4)*/*https://github.c/*![â](/assets/icons/16-arrow-right.svg)*/SteamedFish](https://avatars.githubusercontent/*![â](/assets/icons/16-arrow-right.svg)*/com/SteamedFish*/as/*[ ![GitHub avatar of asayers](https://avatars.githubuserc/*![Docs](/assets/icons/16-docs-dark.svg)*//github.com/asayers*/va/*[ ![GitHub avatar of asibahi](https://avatars.githubusercontent.com/u/17417266?s=64&v=4)*/*https://github.com/asibahi*/Gi/*[ ![GitHub avatar of astrale-sharp](https://avatars.githubusercontent.com/u/53686698?s=64&v=4)*/*https://github.com/astrale-sharp*/ -/*[ ![GitHub avatar of classabbyamp](https://avatars.githubusercontent.com/u/5366828?s=64&v=4)*/*https://github.com/classabbyamp*/[â/*[ ![GitHub avatar of cmoog](https://avatars.githubusercontent.com/u/7585078?s=64&v=4)*/*https://github.com/cmoog*/16/*[ ![GitHub avatar of felipeacsi](https://avatars.githubusercontent.com/u/1522083?s=64&v=4)*/*https://github.com/felipeacsi*/ns/*[ ![GitHub avatar of figsoda](https://avatars.githubusercontent.com/u/40620903?s=64&v=4)*/*https://github.com/figsoda*/(//*[ ![GitHub avatar of ichxorya](https://avatars.githubusercontent.com/u/26222301?s=64&v=4)*/*https://github.com/ichxorya*/ki/*[ ![GitHub avatar of jakobrs](https://avatars.githubusercontent.com/u/10761079?s=64&v=4)*/*https://github.com/jakobrs*/op/*[ ![GitHub avatar of michidk](https://avatars.githubusercontent.com/u/3979930?s=64&v=4)*/*https://github.com/michidk*/s//*[ ![GitHub avatar of radimsuckr](https://avata/*![GitHub avatar of Marmare314](https://avatars.githubusercontent.com/u/49279081?s=64&v=4)*/Hub avatar of rqy2002](https://avatars.githubusercontent.com/u/22741844?s=64&v=4)*/*https://github.com/rqy2002*//#/*[ ![GitHub avatar of s-zymon](https://avatars.githu/*![GitHub avatar of Dherse](https://avatars.githubusercontent.com/u/9665250?s=64&v=4)*/vatar of tbethe](https://avatars/*![GitHub avatar of EpicEricEE](https://avatars.githubusercontent.com/u/7191192?s=64&v=4)*/avatar of teenjuna](https://avatars./*![GitHub avatar of Leedehai](https:/*[ ` polygon ` ](/docs/reference/visualize/polygon/ "`polygon`")*/iddrobnic](https://avatar/*![GitHub avatar of G1gg1L3s](https:/*[ boxes ](/docs/reference/layout/box/#parameters-clip)*/ets/icons/16-arrow-right.svg)*/ons-sorted) method 

==  Command line interf/*[ ![â](/assets/icons/16-arrow-right.svg)*/e program 
  - New Computer Modern fo/*![GitHub avatar of RLangendam](https://avatars.githubusercontent.com/u/1749390?s=64&v=4)*/enerated by setting the ` GEN_ARTIFA/*![GitHub avatar of Raphael-CV](https://avatars.githubusercontent.com/u/95867256?s=64&v=4)*/l/*[ 0.1.0 ](/docs/changelog/0.1.0/)/*![GitHub avatar /*[ ` yaml ` ](/docs/reference/data-loading/yaml/ "`yaml`")*/R, NB, CS, NN, PL, SL, ES, UA, VI) 
  - Added a few nu/*![GitHub avatar of SteamedFish](https://avatars.githubusercontent.com/u/69167?s=64&v=4)*//op/)
  - Fixed bug where math could not be hidden with [ ` hide ` ](/docs/reference/layout/hide/ "`hide`")
  - Fixed sizing issues with box, block, and shapes 
/*[ here ](/docs/reference/introspection/counter/)*/ of "R" in [ ` cal ` ](/*[ bibliography styles ](/docs/reference/model/bibliogra/*![GitHub avatar of astrale-sharp](https://avatars.githubusercontent.com/u/53686698?s=64&v=4)*/es in math 
  - Fixed supplements of re/*![GitHub avatar of classabbyamp](https://avatars.githubusercontent.com/u/5366828?s=64&v=4)*/ - [ Ratios ](/docs/reference/layout/r/*![Git/*[ ` first-line-indent ` ](/docs/reference/model/par/#parameters-first-line-indent)*/ce/foundations/float/) with t/*![GitHub avatar of felipeacsi](https://avatars.githubusercontent.com/u/1522083?s=64&v=4)*/rs

Thanks to everyone who contribut/*![GitHub avatar of figsoda](https://avatars.githubusercontent.com/u/40620903?s=64&v=4)*/ntent.com/u/49279081?s=64&v=4) ](/*![GitHub avatar of ichxorya](https://avatars.githubusercontent.com/u/26222301?s=64&v=4)*/githubusercontent.com/u/15617291?s/*![GitHub avatar of jakobrs](https://ava/*[ ` symbol ` ](/docs/reference/symbols/symbol/ "`symbol`")*/rcontent.com/u/9665250?s/*![GitHub avatar of michidk](https://avatars.githubusercontent.com/u/3979930?s=64&v=4)*/atars.githubusercontent.com/u/719/*![GitHub avatar of radimsuckr](https://avatars.githubusercontent.com/u/2447438?s=64&v=4)*/:/*[ ` polygon ` ](/docs/reference/v/*![GitHub avatar of rqy2002](https://avatars.githubuserc/*[ ![GitHub avatar of Dherse](https://avatars.githubusercontent.com/u/9665250?s=64&v=4)*/s-clip)*/(/*[ blocks ](/docs/ref/*![GitHub avatar of barvirm](https://avatars.githubusercontent.com/u/15948420?s=64&v=4)*/21226?s=64&v=4) ](https://github./*![GitHub avatar of HarmoGlace](https://avatars.githubusercontent.com/u/23212967?s=64&v=4)*/1749390?s=64&v=4) ](https://github.c/*![GitHub avatar of figsoda](https://avatars.githubusercontent.com/u/40620903?s=64&v=4)*/com/u/95867256?s=64&v=4) ](https:/*![GitHub avatar of frozolotl](https://avatars.githubusercontent.com/u/44589151?s=64&v=4)*/ng/yaml/ "`yaml`")*/149447?s=64&v=4/*![GitHub avatar of johannes-wolf](https://avatars.githubusercontent.com/u/519002?s=64&v=4)*/ithubusercontent.com/u/69167?s=64&v=4) /*![GitHub avatar of naim94a](https://avatars.githubusercontent.com/u/227396?s=64&v=4)*/ars.githubusercontent.com/u/87710/*![GitHub avatar of CGMossa](https://avatars.githubusercontent.com/u/1063624?s=64&v=4)*/ "`link`")*/ithubusercontent.c/*[/*![GitHub avatar of FilipAndersson245](https://avatars.githubusercontent.com/u/17986183?s=64&v=4)*/ttps://avatars.githubusercontent.com/u/5368/*![GitHub avatar of GabrielDertoni](https://avatars.githubusercontent.com/u/13651052?s=64&v=4)*/ps://avatars.githubusercontent.com/u/536/*![GitHub avatar of P-Andersson](https://avatars.githubusercontent.com/u/17784951?s=64&v=4)*/docs/reference/model/par/#parameters-/*![GitHub avatar of SekoiaTree](https://avatars.githubusercontent.com/u/51149447?s=64&v=4)*//avatars.githubusercontent.com/u/152/*![GitHub avatar of asayers](https://avatars.githubusercontent.com/u/877109?s=64&v=4)*/tps://avatars.githubusercontent.c/*![GitHub avatar of birktj](https://avatars.githubusercontent.com/u/2932651?s=64&v=4)*/rya](https://avatars.githubuserc/*![GitHub avatar of frungl](https://avatars.githubusercontent.com/u/82895777?s=64&v=4)*/of jakobrs](https://ava/*[ ` sym/*![GitHub avatar of jinhao-huang](https://avatars.githubusercontent.com/u/80573215?s=64&v=4)*/tar of michidk](https://avatars.github/*![GitHub avatar of loewenheim](https://avatars.githubusercontent.com/u/7622248?s=64&v=4)*/of radimsuckr](https://avatars.githu/*![GitHub avatar of lvignoli](https://avatars.githubusercontent.com/u/97944962?s=64&v=4)*/atar of rqy2002](https://avatars.g/*![GitHub avatar of lxndio](https://avatars.githubusercontent.com/u/1679267?s=64&v=4)*/5250?s=64&v=4)*/*https://github./*![GitHub avatar of marcoradocchia](https://avatars.githubusercontent.com/u/74802223?s=64&v=4)*/0?s=64&v=4)*/*https://github.com/barvirm/*![GitHub avatar of mateusfccp](https://avatars.githubusercontent.com/u/4605213?s=64&v=4)*/s=64&v=4)*/*https://github.com/Harmo/*![GitHub avatar of ollelogdahl](https://avatars.githubusercontent.com/u/37961475?s=64&v=4)*/s=64&v=4)*/*https://github.com/figsod/*![GitHub avatar of samlich](https://avatars.githubusercontent.com/u/1349989?s=64&v=4)*/51?s=64&v=4)*/*https://github.com/*![GitHub avatar of user202729](https://avatars.githubusercontent.com/u/25191436?s=64&v=4)*//u/519002?s=64&v=4)*/*https://github/*![GitHub avatar of utilForever](https://avatars.githubusercontent.com/u/5622661?s=64&v=4)*/om/u/227396?s=64&v=4)*/*https://githu/*![GitHub avatar of wrenger](https://avatars.githubusercontent.com/u/20145354?s=64&v=4)*//u/1063624?s=64&v=4)*/*https://gi/*![GitHub avatar of yichenchong](https://avatars.githubusercontent.com/u/40590448?s=64&v=4)*/ntent.com/u/17986183?s=64&v=4)*/*http/*![GitHub avatar of zrr1999](https://avatars.githubusercontent.com/u/46243324?s=64&v=4)*/tars.githubusercontent.com/u/1/*![â](/assets/icons/16-arrow-right.svg)*/abrielDertoni*/ty/*[ ![GitHub avatar of P-Ande/*![â](/assets/icons/16-arrow-right.svg)*/.com/u/17784951?s=64&v=4)*/*https://github.com/P-Andersson*/at/*[ ![GitHub avatar o/*![Docs](/assets/icons/16-docs-dark.svg)*/rcontent.com/u/51149447?s=64&v=4)*/*https://github.com/SekoiaTree*/io/*[ ![GitHub avatar of asayers](https://avatars.githubusercontent.com/u/877109?s=64&v=4)*/*https://github.com/asayers*/` /*[ ![GitHub avatar of birktj](https://avatars.githubusercontent.com/u/2932651?s=64&v=4)*/*https://github.com/birktj*/es/*[ ![GitHub avatar of frungl](https://avatars.githubusercontent.com/u/82895777?s=64&v=4)*/*https://github.com/frungl*/au/*[ ![GitHub avatar of jinhao-huang](https://avatars.githubusercontent.com/u/80573215?s=64&v=4)*/*https://github.com/jinhao-huang*/ n/*[ ![GitHub avatar of loewenheim](https://avatars.githubusercontent.com/u/7622248?s=64&v=4)*/*https://github.com/loewenheim*/au/*[ ![GitHub avatar of lvignoli](https://avatars.githubusercontent.com/u/97944962?s=64&v=4)*/*https://github.com/lvignoli*/oc/*[ ![GitHub avatar of lxndio](https://avatars.githubusercontent.com/u/1679267?s=64&v=4)*/*https://github.com/lxndio*/  /*[ ![GitHub avatar of marcoradocchia](https://avatars.githubusercontent.com/u/74802223?s=64&v=4)*/*https://github.com/marcoradocchia*/ts/*[ ![GitHub avatar of mateusfccp](https://avatars.githubusercontent.com/u/4605213?s=64&v=4)*/*https://github.com/mateusfccp*/AP/*[ ![GitHub avatar of ollelogdahl](https://avatars.githubusercontent.com/u/37961475?s=64&v=4)*/*https://github.com/oll/*![GitHub avatar of Dherse](https://avatars.githubusercontent.com/u/9665250?s=64&v=4)*/1349989?s=64&v=4)*/*https://gith/*![GitHub avatar of barvirm](https://avatars.githubusercontent.com/u/15948420?s=64&v=4)*/.com/u/25191436?s=64&v=4)*/*https/*![GitHub avatar of HarmoGlace](https://avatars.githubusercontent.com/u/2321296/*[ ` place.scope ` ](/docs/reference/layout/place/#parameters-scope "`place.scope`")*/[GitHub avatar of wrenger](https://avatars.githubusercontent.com/u/20145354?s=64&v=4)*/*https/*![GitHub avatar of frozolotl](https://avatars.githubusercontent.com/u/44589151?s=64&v=4)*/ontent.com/u/40590448?s=64&v=4)*/*https://github.com/yichenchong*/di/*[ ![GitHub avatar of zrr1999](https://avatars.githubusercontent.com/u/46243324?s=64&v=4)*/*https://github.com/zrr1999*/*[ ![â](/assets/icons/16-arrow-right.svg)*/for Hebrew 
  - Added support for [ integers/*[ ![â](/assets/icons/16-arrow-right.svg)*/base 2, 8, and 16 
  - Added symbols for double bracket and laplace operator 
  -/*[ ![Docs](/asset/*![GitHub avatar of FilipAndersson245](https://avatars.githubusercontent.com/u/17986183?s=64&v=4)*/docs/changelog/)*/  - The link syntax now a/*![GitHub avatar of GabrielDertoni](https://avatars.githubusercontent.com/u/13651052?s=64&v=4)*/lation functions behave more consistently w.r.t to non-real /*[ placement ](/docs/reference/layout/place/#parameters-scope)*/m/*[ figures ](/docs/reference/model/figure/#parameters-scope)*/rst-line-indent ` ](/docs/ref/*[ line numbering ](/docs/reference/model/par/#definitions-line)*/ed when a paragraph sta/*![GitHub avatar of asayers](https:/*[ ` skew ` ](/docs/reference/layout/skew/ "`skew`")*/ Fixed block spacing, e.g. in ` bl/*![/*[ ` page.header ` ](/docs/reference/layout/page/#parameters-header "`page.header`")*/s in math 
  - Fixed invalid parsing of language tag in raw block with a single backtick 
  - Fixed bugs with displaying counters and state 
  - Fixed crash r/*![GitHub avatar of jinhao-huang](https://avatars.githubusercontent.com/u/80573215?s=64&v=4)*/m/LaurenzV)*/`") function was called without arguments 
  - Fixed crash in bibliography generation 
  - Fixed access to label of certain content elements 
  - Fixed line number in error message for CSV parsing 
  - Fixed invalid autocompletion after certain markup elements 

==  Contributors

Thanks to everyone who contributed to this release!

  - [ ![GitHub avatar of Dherse](https://avatars.githubusercontent.com/u/966/*![GitHub avatar of marcoradocchia](https://av/*[ fractional units ](/docs/reference/layout/fraction/)*/sercontent.com/u/15948420?s=64&v=4) ](https://github.com/barvirm)
  - [ ![GitHub avatar of HarmoGlace](https://avatars.githubusercontent.com/u/2321296/*[ ` place.scope /*![GitHub avatar of ollelogdahl](https://avatars.githubusercontent.com/u/37961475?s=64&v=4)*/ ](/docs/reference/model/figure/#para/*![GitHub avatar of samlich](https://avatars.githubusercontent.com/u/1349989?s=64&v=4)*/thubusercontent.com/u/44589151?s=/*![GitHub avatar of user202729](https://avatars.githubusercontent.com/u/25191436?s=64&v=4)*/uide/#columns)*/busercontent.com/u/5/*![GitHub avatar of utilForever](https://avatars.githubusercontent.com/u/5622661?s=64&v=4)*/(https://avatars.githubusercont/*[ ` /*![GitHub avatar of wrenger](https:///*[ context ](/docs/reference/context/ "context")*/sa](https://avatars.githubusercontent./*![GitHub avatar of yichenchong](https://avatars.githubusercontent.com/u/40590448?s=64&v=4)*/son245](https://avatars.githubusercon/*![/*[ ` rotate ` ](/docs/reference/layout/rotate/ "`rotate`")*/sson245)
  - [ ![GitHub avatar of GabrielDertoni](https://avata/*![â](/assets/icons/16-arrow-right.svg)*/&v=4) ](https://github./*[ ` block.sticky ` ](/*![â](/assets/icons/16-arrow-right.svg)*/-sticky "`block.sticky`")*/ntent.com/u/17784951?s=64&v=4) ](https://github.com/P-An/*![Docs](/assets/icons/16-docs-dark.svg)*/e/layout/p/*![](/as/*[ weak spacing ](/docs/reference/layout/h/#parameters-weak)*///github.c/*![](/assets/icons/16-arrow-right.svg)*/of asayers](https:/*[ ` skew ` ](/docs/reference/layout/skew/ "`skew`")*/](https://github.com/asayers)
  - [ ![/*[ ` page.header ` ](/docs/reference/layout/page/#parameters-header "`page.header`")*/]/*[ ` page.footer ` ](/docs/reference/layout/page/#parameters-footer "`page.footer`")*/usercontent.com/u/82895777?s=64&v=4) ](https://github.com/frungl)
  - [ ![GitHub avatar of jinhao-huang](https://avatars.githubusercontent.com/u/80573215?s=64&v=4) /*[ ` repeat ` ](/docs/reference/layout/repeat/ "`repeat`")*/of loewenheim](https://avatars.githubusercontent.com/u/76222/*[ ` measure ` ](/docs/reference/layout/measure/ "`measure`")*/ avatar of lvignoli](https://avatars.githubusercontent.com/u/97944962?s=64&v=4) ](https://github.com/lvig/*[ ` layout ` ](/docs/reference/layout/layout/ "`layout`")*/thubusercontent.com/u/1679267?s=64&v=4) ](https://github.com/lxndio)
  - [ ![GitHub avatar of marcoradocchia](https://av/*[ fractional units ](/docs/reference/layout/fraction/)*/ps:///*[ ` scale ` ](/docs/reference/layout/scale/ "`scale`")*/teusfccp](https://avatars.githubusercontent.com/u/4605213?s=64&v=4) ](https://github.com/mateusfccp)
  - [ ![GitHub avatar of ollelogdahl](https://avatars.githubusercontent.com/u/37961475?s=64&v=4) ](https://github.com/ollelogdahl)
  - [ ![GitHub avatar of samlich](https://avatars.githubusercontent.com/u/1349989?s=64&v=4) ](https://github.com/samlich)
  - [ ![GitHub avatar of user202729](https://avatars.githubusercontent.com/u/25191436?s=64&v=4) ](https://github.com/user202729)
  - [ ![GitHub avatar of utilForever](https://avatars.githubusercontent.com/u/5622661?s=64&v=4) ](https://github.com/utilForever)
  - [ ![GitHub avatar of wrenger](https:///*[ context ](/docs/reference/context/ "context")*/=4) ](https://github.com/wrenger)
  - [ ![GitHub avatar of yichenchong](https://avatars.githubusercontent.com/u/40590448?s=64&v=4) ](https://github.com/yichenchong)
  - [ ![/*[ ` rotate ` ](/docs/reference/layout/rotate/ "`rotate`")*/n/*[ ` scale ` ](/docs/reference/layout/scale/ "`scale`")*/9)

[ ![â](/assets/icons/16-arrow-right.svg) 0.2.0  Previous page
](/docs/changelog/0.2.0/) [ ![â](/assets/icons/16-arrow-right.svg) Earlier
Next page  ](/docs/changelog/earlier/)



= *docs/changelog/0.12.0.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/as/*[ weak spacing ](/docs/reference/layout/h/#parameters-weak)*/gelog/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ 0.12.0 ](/docs/changelog/0.12.0/)

=  Version 0.12.0 (October 18, 2024)

==  Highlights

  -/*[ ` pagebreak.to ` ](/docs/reference/layout/pagebreak/#parameters-to "`pagebreak.to`")*/arameters-scope) and [ figures ](/docs/reference/model/figure/#parameters-sc/*[ padding ](/docs/reference/layout/pad/)*/ine numbering ](/docs/reference/model/par/#definitions-line) (often used in academic papers) 
  - Typst's layout engine is now multithreaded. Typical speedups are 2-3x for larger documents. The multithreading operates on page break boundaries, so explicit page breaks are necessary for it to kick in. 
  - Paragraph justification was optimized with a new two-pass algorithm. Speedups are larger for shorter paragraphs and go up to 6x. 
  - Highly reduced PDF file sizes due to better font subsetting (thanks to [ @LaurenzV ](http/*[ ` text.costs ` ](/docs/reference/text/text/#parameters-costs "`text.costs`")*/ded initial support for PDF/A. For now, only the PDF/A-2b profile is supported, but more is planned for the future. 
  - Added various options for config/*[ raw blocks ](/docs/reference/text/raw/#parameters-lang)*/
  - Text show rules now match across multiple text elements 
  - Block-level equations can now optionally break over multiple pages 
  - Fixed a bug where some fonts would not print correctly /*[ ` smallcaps ` ](/docs/reference/text/smallcaps/ "`smallcaps`")*/uld cause headings to be orphaned at the bottom of the page 

==  Layout

  - Added sup/*[ ` raw.theme ` ](/docs/reference/text/raw/#parameters-theme "`raw.theme`")*/](/docs/reference/layout/place/#parameters-scope "`place.scope`") and [ ` figure.scope ` ](/docs/reference/model/figure/#parameters-scope "`figure.scope`"/*[ stylistic sets ](/docs/reference/text/text/#parameters-stylistic-set)*/2  )  ` over ` show  :  column  .  with  (  2  )  ` (see the [ page setup guide ](/docs/guides/page-setup-guide/#columns) ). 
  - Added support for automatic [ line numbering ](/docs/reference/model/par/#definitions-line) (often used in academic papers) 
  - Added [ ` par.spacing ` ](/docs/reference/model/par/#parameters-spacing "`par.spacing`") property for configuring paragraph spacing. This should now be used instead of ` s/*[ ` text.historical-ligatures ` ](/docs/reference/text/text/#parameters-historical-ligatures "`text.historical-ligatures`")*/ now show themselves as blocks and are thus affected by all block properties (e.g. ` stroke ` ) rather than just ` spacing /*[ smart quotes ](/docs/reference/text/smartquote/)*/ ](/docs/reference/layout/block/#parameters-sticky "`block.sticky`") property which prevents a page break after a block 
  - Added [ ` place.flush ` ](/docs/reference/layout/place/#definitions-flush "`place.flush`") function which forces all floating figures to be placed before any further content 
  - Added [ ` skew ` ](/docs/reference/layout/skew/ "`skew`") function 
  - Added ` auto  ` option f/*[ ` stretch ` ](/docs/reference/math/stretch/)*/page/#parameters-header "`page.header`") and [ ` page.footer ` ](/docs/reference/layout/page/#parameters-footer "`page.footer`") which results in an automatic header/footer based on the numbering (which was previously inaccessible after a change) 
  - Added ` gap ` and ` justify ` parameters to [ ` repeat ` ](/docs/reference/layout/repeat/ "`repeat`") function 
  - Added ` width ` and ` height ` parameters to the [ ` measure ` ](/docs/reference/layout/measure/ "`measure`") function to define the space in which the content should be measured. Especially useful in combination with [ ` layout ` ](/docs/reference/layout/layout/ "`layout`") . 
  - The height of a ` block ` , ` image ` , ` rect `/*[ ` mat.delim ` ](/docs/reference/math/mat/#parameters-delim)*/*[ ` vec.delim ` ](/docs/reference/math/vec/#parameters-delim)*/)
 /*[ ` cases.delim ` ](/docs/reference/math/cases/#parameters-delim)*/ction now supports absolute lengths for ` x ` , ` y ` , ` factor ` . This way an element of unknown size can be scaled to a fixed size. 
  - The values of ` block.above ` and ` block.below ` can now be retrieved in context expressions. 
  - /*[ ` vec.align ` ](/docs/reference/math/vec/#parameters-align)*/ /*[ ` mat.align ` ](/docs/reference/math/mat/#parameters-align)*/ orphaned at the bo/*[ ` underparen ` ](/docs/reference/math/underover/#functions-underparen)*/*[ ` overparen ` ](/docs/reference/math/underover/#functions-overparen)*/*[ ` undershell ` ](/docs/reference/math/underover/#functions-undershell)*/foo/*[ ` overshell ` ](/docs/reference/math/underover/#functions-overshell)*/docs/reference/context/ "context") expression wraps whole pages 
  - Fixed ` set  block  (  spacing  :  x  )  ` behaving differently from ` set  block  (  above  :  x  ,  below  :  x  )  `
  - Fixed behavior of [ ` rotate ` ](/docs/reference/layout/rotate/ "`rotate`") and [ ` scale ` ](/docs/reference/layout/scale/ "`scale`") with ` reflow:  true  `
  - Fixed interaction of ` align  (  horizon  )  ` and ` v  (  1fr  )  `
/*[ ` metadata ` ](/docs/reference/introspection/metadata/ "`metadata`")*/g results 
  - Fixed a bug where widow/orphan prevention would unnece/*[ ` lr.size ` ](/docs/reference/math/lr/#functions-lr-size)*/acing ](/docs/reference/layout/h/#/*[ ` mid ` ](/docs/reference/math/lr/#functions-mid)*/ end of lines in a paragraph (only at the start and end of paragraphs) 
  - Fixed interaction of weak page break and [ `/*[ text edge ](/docs/reference/text/text/#parameters-top-edge)*/s-to "`pagebreak.to`")
  - Fixed compilation output of a single weak page break 
  - Fixed crash when [ padding ](/docs/reference/layout/pad/) by ` 100%  `

==  Text

  - Tuned hyphenation: It is less eager by default and hyphenations close to the edges of words are now discouraged more strongly *(May lead to larger layout reflows)*
  - New default font: Libertinus Serif. This is the maintained successor to the old default font Linux Libertine. *(May lead to smaller reflows)*
  - Setting the font to an unavailable family will now result in a warning 
  - Implemented a new smart quote algorithm, fixing various bugs where smart quotes were/*[ ` here().position() ` ](/docs/reference/introspection/here/)*/ce/*[ ` place ` ](/docs/reference/layout/place/ "`place`")*/ for tweaking various parameters that affect the choices of the layout engine during text layout 
  - Added ` typm ` highlighting mode for math in [ raw blocks ](/docs/reference/text/raw/#parameters-lang)
  - Added basic i18n for Galician, Catalan, Latin, Icelandic, Hebrew 
  - Implemented hyphenation duplication for Czech, Croatian, Lower Sorbian, Polish, Portuguese, Slovak, and Spanish. 
  - The [ ` smallcaps ` ](/docs/reference/text/smallcaps/ "`smallcaps`") function is now an element function and can thereby be used in show(-set) rules. 
  - The [ ` raw.theme ` ](/docs/reference/text/raw/#parameters-theme "`raw.theme`") parameter ca/*[ lists ](/docs/reference/model/list/#parameters-spacing)*/*[ enumerations ](/docs/reference/model/enum/#parameters-spacing)*/he /*[ term lists ](/docs/reference/model/terms/#parameters-spacing)*/ext/#parameters-stylistic-set) can now be enabled at once 
  - Fixed the Chinese translation for "Equation" 
  - Fixed that hyphenation could occu/*[ ` quote ` ](/docs/reference/model/quote/ "`quote`")*/irectional text in edge cases 
  - Fixed layout of paragraphs with explicit trailing whitespace 
  - Fixed bugs related to empty paragraphs created via ` #"" `
  - Fixed accidental trailing spaces for line b/*[ numbering ](/docs/reference/model/numbering/ "numbering")*/ ` text.historical-ligatures ` ](/docs/reference/text/text/#parameters-his/*[ ` hanging-indent ` ](/docs/reference/model/heading/#parameters-hanging-indent)*/d accidental repetition of Thai characters around line breaks in some circumstances 
  - Fixed [ smart quotes ](/docs/reference/text/smartquote/) for Swiss French 
  - New font metadata exceptions for Archivo, Kaiti SC, and Kaiti TC 
  - Updated bundled New Computer Modern fonts to version 6.0 

==  Math

  - Block-level equations can now break over multiple pages if enabled via ` show  math  .  equation  :  set  block  (  breakable  :  true  )  ` . 
  - Matrix and vector sizing is now more consistent across different cell contents 
  - Added [ ` stretch ` ](/docs/reference/math/stretch/) function for manually or automatically stretching characters like arrows or parentheses horizontally or vertically 
  - Improved layout of attachments on parenthesized as well as under- or overlined expressions 
  - Improved layout of nested attachments resulting from code like ` #  let  a0  =  $  a  _  0  $  ;  $  a0  ^  1  $  `
  - Improved layout of primes close to superscripts 
  - Improved layout of fractions 
  - Typst now makes use of math-specific height-dependent kerning information in some fonts for better attachment layout 
  - The ` floor ` and ` ceil ` functions in math are now callable symbols, such that ` $  floor  (  x  )  =  lr  (  floor  .  l  x  floor  .  r  )  $  `
  - The [ ` mat.delim ` ](/docs/reference/math/mat/#parameters-delim) , [ ` vec.delim ` ](/docs/reference/math/vec/#parameters-delim) , and [ ` cases.delim ` ](/docs/reference/math/cases/#parameters-delim) parameters now allow any character that is considered a delimi/*[ ` path ` ](/docs/reference/visualize/path/#parameters-fill-rule)*/ /*[ ` polygon ` ](/docs/reference/visualize/polygon/#parameters-fill-rule)*/uble ` *(Minor breaking change)*
  - Added [ ` ve/*[ Luma colors ](/docs/reference/visualize/color/#definitions-luma)*/t.align ` ](/docs/reference/math/mat/#parameters-align) parameters 
  - Added [ ` underparen ` ](/docs/reference/math/underover/#functions-underparen) , [ ` overparen ` ](/docs/reference/math/underover/#functions-overparen) , [ ` undershell ` ](/docs/reference/math/underover/#functions-undershell) , and [ ` overshell ` ](/docs/reference/math/underover/#functions-overshell)
  - Added ` ~ ` shorthand for ` tilde.op ` in math mode *(Minor breaking change)*
  - Fixed baseline alignment of equation numbers 
  - Fixed positioning of corner brackets (â, â, â, â) 
  - Fixed baseline of large roots 
  - Fixed multiple minor layout bugs with attachments 
  - Fixed that alignment points could affect line height in math 
  - Fixed that spaces could show/*[ ` decimal ` ](/docs/reference/foundations/decimal/ "`decimal`")*/cs/reference/introspection/metadata/ "`metadata`") in math 
  - Fixed a crash with recursive show rules in math 
  - Fixed [ ` lr.size ` ](/docs/reference/math/lr/#functions-lr-size) not affecting characters enclosed in [ ` mi/*[ ` array.to-dict ` ](/docs/reference/foundations/array/#definitions-to-dict "`array.to-dict`")*/*[ ` array.reduce ` ](/docs/reference/foundations/array/#definitions-reduce "`array.reduce`")*/*[ ` array.windows ` ](/docs/reference/foundations/array/#definitions-windows "`array.windows`")*/mplemented a new system by which Typst/*[ ` array.zip ` ](/docs/reference/foundations/array/#definitions-zip "`array.zip`")*/ior in /*[ ` arguments.at ` ](/docs/reference/foundations/arguments/#definitions-at "`arguments.at`")*/mplex layout si/*[ ` int.from-bytes ` ](/docs/reference/foundations/int/#definitions-from-bytes "`int.from-bytes`")*/*[ ` int.to-bytes ` ](/docs/reference/foundations/int/#definitions-to-bytes "`int.to-bytes`")*/*[ ` float.from-bytes ` ](/docs/reference/foundations/float/#definitions-from-bytes "`float.from-bytes`")*/ing/*[ ` float.to-bytes ` ](/docs/reference/foundations/float/#definitions-to-bytes "`float.to-bytes`")*/cs/reference/introspection/here/) when [ ` place ` ](/docs/reference/layo/*[ ` calc.round ` ](/docs/reference/foundations/calc/#functions-round "`calc.round`")*/of elements (in particular, headings) whose show rule emits an invisible/*[ ` int ` ](/docs/reference/foundations/int/ "`int`")*//*[ ` float ` ](/docs/reference/foundations/float/ "`float`")*/han its current state has 
  - Fixed citation formatting not working in table headers and a few other places 
  - Displaying the footnote counter will now respect the footnote numbering style 

==  Model

  - Document set rules do not need to be at the very start of the document anymore. The only /*[ ` floor ` ](/docs/reference/math/lr/#functions-floor)*/t/*[ ` ceil ` ](/docs/reference/math/lr/#functions-ceil)*/ ](/docs/refe/*[ ` repr ` ](/docs/reference/foundations/repr/ "`repr`")*/(/docs/reference/model/enum/#parameters-spacing) , and [ term lists ](/docs/reference/model/terms/#parameters-spacing) is now also respected for tight lists 
  - Tight lists now only attach (with tighter spacin/*[ ` calc.round ` ](/docs/reference/foundations/calc/#functions-round "`calc.round`")*/nce/model/quote/ "`quote`") element is now locatable (can be used in queries) 
  - The bibliography heading now uses ` depth ` instead of ` level ` so that its level can still be configured via a show-set rule 
  - Added support for more [ numbering ](/docs/reference/model/numbering/ "numbering") formats: Devanagari, Eastern Arabic, Bengali, and circled numbers 
  - Added [ ` hanging-indent ` ](/docs/reference/model/heading/#parameters-hanging-indent) parameter to heading function to tweak the appearance of multi-line headings and improved default appearance of multi-line headings 
  - Improved handling of bidirectional text in outline entry 
  - Fixed document set rules being ignored in an otherwise empty document 
  - Fixed document set rules not being usable in context expressions 
  - Fixed bad interaction between ` set  document ` and ` set  page `
  - Fixed ` show  figure  :  set  align  (  ..  )  `/*[ ` page.fill ` ](/docs/reference/layout/page/#parameters-fill "`page.fill`")*/ed by ` show  figure  :  it  => it  .  body ` anymore. *(Minor breaking change)*
  - Fixed numbering of footnote references 
  - Fixed spacing after bibliography heading 

==  Bibliography

  - The Hayagriva YAML ` publisher ` field can now accept a dictionary with a ` location ` key. The top-level ` location ` key is now p/*[ boxes ](/docs/reference/layout/box/)*/o/*[ blocks ](/docs/reference/layout/block/)*/refixes and suffixes are now allowed 
  - Added ` director ` and catch-all editor types to BibLaTeX parsing 
  - Added support for disambiguation to alphanumeric citation style 
  - The year 0 will now render as 1BC 
  - Fixes for sorting of bibliography entries 
  - Fixed pluralization of page range labels 
  - Fixed sorting of citations by their number 
  - Fixed how citation number ranges collapse 
  - Fixed when the short form of a title is used 
  - Fixed parsing of unbalanced dollars in BibLaTeX ` url ` field 
  - Updated built-in citation styles 

==  Visualization

  - Added ` fill-rule ` parameter to [ ` path ` ](/docs/reference/visualize/path/#parameters-fill-rule) and [ ` polygon ` ](/docs/reference/visualize/polygon/#parameters-fill-rule) functions 
  - Fixed color mixing and gradients for [ Luma colors ](/docs/reference/visualize/color/#definitions-luma)
  - Fixed conversion from Luma to CMYK colors 
  - Fixed offset gradient strokes in PNG export 
  - Fixed unintended cropping of some SVGs 
  - SVGs with foreign objects now produce a warning as they will likely not render correctly in Typst 

==  Syntax

  - Added support for nested imports like ` import  "file.typ"  :  module  .  item `
  - Added support for parenthesized imports like ` import  "file.typ"  :  (  a  ,  b  ,  c  )  ` . With those, the import list can break over multiple lines. 
  - Fixed edge case in parsing of reference syntax 
  - Fixed edge case in parsing of heading, list, enum, and term markers immediately followed by comments 
  - Fixed rare crash in parsing of parenthesized expressions 

==  Scripting

  - Added new fixed-point [ ` decimal ` ](/docs/reference/foundations/decimal/ "`decimal`") number type for highly precise arithmetic on numbers in base 10, as needed for finance 
  - Added ` std ` module for accessing standard library definitions even when a variable with the same name shadows/overwrites it 
  - Added [ ` array.to-dict ` ](/docs/reference/foundations/array/#definitions-to-dict "`array.to-dict`") , [ ` array.reduce ` ](/docs/reference/foundations/array/#definitions-reduce "`array.reduce`") , [ ` array.windows ` ](/docs/reference/foundations/array/#definitions-windows "`array.windows`") methods 
  - Added ` exact ` argument to [ ` array.zip ` ](/docs/reference/foundations/array/#definitions-zip "`array.zip`")
  - Added [ ` arguments.at ` ](/docs/reference/foundations/arguments/#definitions-at "`arguments.at`") method 
  - Added [ ` int.from-bytes ` ](/docs/reference/foundations/int/#definitions-from-bytes "`int.from-bytes`") , [ ` int.to-bytes ` ](/docs/reference/foundations/int/#definitions-to-bytes "`int.to-bytes`") , [ ` float.from-bytes ` ](/docs/reference/foundations/float/#definitions-from-bytes "`float.from-bytes`") , and [ ` float.to-bytes ` ](/docs/reference/foundations/float/#definitions-to-bytes "`float.to-bytes`")
  - Added proper support for negative values of the ` digits ` parameter of [ ` calc.round ` ](/docs/reference/foundations/calc/#functions-round "`calc.round`") (the behaviour existed before but was subtly broken) 
  - Conversions from [ ` int ` ](/docs/reference/foundations/int/ "`int`") to [ ` float ` ](/docs/reference/foundations/float/ "`float`") will now error instead of saturating if the float is too large *(Minor breaking change)*
  - Added ` float.nan ` and ` float.inf ` , removed ` calc.nan ` *(Minor breaking change)*
  - Certain symbols are now generally callable like functions and not only specifically in math. Examples are accents or [ ` floor ` ](/docs/reference/math/lr/#functions-floor) and [ ` ceil ` ](/docs/reference/math/lr/#functions-ceil) . 
  - Improved [ ` repr ` ](/docs/reference/foundations/repr/ "`repr`") of relative values, sequences, infinities, NaN, ` type  (  none  )  ` and ` type  (  auto  )  `
  - Fixed crash on whole packages (rather than just files) cyclically importing each other 
  - Fixed return type of [ ` calc.round ` ](/docs/reference/foundations/calc/#functions-round "`calc.round`") on integers when a non-zero value is provided for ` digits `

==  Styling

  - Text show rules now match across multiple text elements 
  - The string ` " ` in a text show rule now matches smart quotes 
  - Fixed a long-standing styling bug where the header and footer would incorrectly inherit styles from a lone element on the page (e.g. a heading) 
  - Fixed ` set  page ` not working directly after a counter/state update 
  - Page fields configured via an explicit ` page  (  ..  )  [  ..  ]  ` call can now be properly retrieved in context expressions 

==  Export

  - Highly reduced PDF file sizes due to better f/*![GitHub avatar of Leedehai](https://avatars.githubusercontent.com/u/18319900?s=64&v=4)*/or PDF/A. For now, only the standa/*![GitHub avatar of MDLC01](https://avatars.githubusercontent.com/u/57839069?s=64&v=4)*/ndard a-2b ` in the CLI and via /*![GitHub avatar of Coekjan](https://avatars.githubusercontent.com/u/69834864?s=64&v=4)*/reference/layout/page/#parameters/*![GitHub avatar of bluebear94](https://avatars.githubusercontent.com/u/2975203?s=64&v=4)*/es in PNG and SVG. The new default o/*![GitHub avatar of mkorje](https://avatars.githubusercontent.com/u/97375244?s=64&v=4)*/opy-paste from PDF in complex sc/*![GitHub avatar of EpicEricEE](https://avatars.githubusercontent.com/u/7191192?s=64&v=4)*/lting from labelled [ boxes ](/docs//*![GitHub avatar of PgBiel](https://avatars.githubusercontent.com/u/9021226?s=64&v=4)*/ where some fonts would not prin/*![GitHub avatar of frozolotl](https://avatars.githubusercontent.com/u/44589151?s=64&v=4)*/docs/reference/introspection/counte/*![GitHub avatar of elegaanz](https://avatars.githubusercontent.com/u/16254623?s=64&v=4)*/nter.final ` ](/docs/reference/int/*![GitHub avatar of Dherse](https://avatars.githubusercontent.com/u/9665250?s=64&v=4)*/ate.final ` ](/docs/reference/in/*![GitHub avatar of knuesel](https://avatars.githubusercontent.com/u/2412819?s=64&v=4)*/display ` ](/docs/reference/intro/*![GitHub avatar of Andrew15-5](https://avatars.githubusercontent.com/u/37143421?s=64&v=4)*/introspection/query/ "`query`")*/ica/*![GitHub avatar of Enter-tainer](https://avatars.githubusercontent.com/u/25521218?s=64&v=4)*// "`locate`")*/ from 1-6x. 

==  Comma/*![GitHub avatar of LaurenzV](https://avatars.githubusercontent.com/u/47084093?s=64&v=4)*/ style ` ](/docs/reference/foundat/*![GitHub avatar of Myriad-Dreamin](https://avatars.githubusercontent.com/u/35292584?s=64&v=4)*/E_PATH ` environment variables for confi/*![GitHub avatar of rikhuijzer](https://avatars.githubusercontent.com/u/20724914?s=64&v=4)*/ystem-fonts ` flag to disable system/*![GitHub avatar of ssotoen](https://avatars.githubusercontent.com/u/68116836?s=64&v=4)*/ting the dependencies of the curr/*![GitHub avatar of tingerrr](https://avatars.githubusercontent.com/u/137803093?s=64&v=4)*/he default now being to minify (on/*![GitHub avatar of FlorentCLMichel](https://avatars.githubusercontent.com/u/56166507?s=64&v=4)*/ the previous version is backed up 
  - A/*![GitHub avatar of T0mstone](https://avatars.githubusercontent.com/u/39707032?s=64&v=4)*/pst ` for the first time/*[ ![GitH/*![GitHub avatar of drupol](https://avatars.githubusercontent.com/u/252042?s=64&v=4)*/*https://github.com/Leedehai*/ge/*![GitHub avatar of emilyyyylime](https://avatars.githubusercontent.com/u/40892795?s=64&v=4)*/*https://github.com/MDLC01*/fi/*[ ![Gi/*![GitHub avatar of A-Walrus](https://avatars.githubusercontent.com/u/58790821?s=64&v=4)*/tps://github.com/Coekjan*/nm/*[ ![/*![GitHub avatar of LuizAugustoPapa](https://avatars.githubusercontent.com/u/112978478?s=64&v=4)*///github.com/bluebear94*/` /*[ ![GitHub a/*![GitHub avatar of PepinhoJp](https://avatars.githubusercontent.com/u/24254834?s=64&v=4)*/thub.com/mkorje*/ a/*[ ![GitHub ava/*![GitHub avatar of freundTech](https://avatars.githubusercontent.com/u/9515067?s=64&v=4)*/ithub.com/EpicEricEE*/bu/*[ ![GitHub/*![GitHub avatar of gabriel-araujjo](https://avatars.githubusercontent.com/u/3980936?s=64&v=4)*/.com/PgBiel*/d /*[ ![GitHub avatar of fro/*![GitHub avatar of istudyatuni](https://avatars.githubusercontent.com/u/43654815?s=64&v=4)*/ozolotl*/re/*[ ![GitHub avatar of ele/*![GitHub avatar of jbirnick](https://avatars.githubusercontent.com/u/6528009?s=64&v=4)*//elegaanz*/be/*[ ![GitHub avatar o/*![GitHub avatar of jsoref](https://avatars.githubusercontent.com/u/2119212?s=64&v=4)*/.com/Dherse*/ca/*[ ![GitHub avat/*![GitHub avatar of mattfbacon](https://avatars.githubusercontent.com/u/58113890?s=64&v=4)*/.com/knuesel*/in/*[ ![GitHub avatar /*![GitHub avatar of mtoohey31](https://avatars.githubusercontent.com/u/36740602?s=64&v=4)*/ub.com/Andrew15-5*/il/*[ ![GitHub a/*![GitHub avatar of nz366](https://avatars.githubusercontent.com/u/180265222?s=64&v=4)*/ttps://github.com/Enter-tainer*/*![GitHub avatar of omniwrench](https://avatars.githubusercontent.com/u/44841357?s=64&v=4)*/&v=4)*/*https://github.com/LaurenzV*/*![GitHub avatar of shinyfelix](https://avatars.githubusercontent.com/u/101457412?s=64&v=4)*/?s=64&v=4)*/*https://github.com/Myri/*![GitHub avatar of tulio240](https://avatars.githubusercontent.com/u/113527485?s=64&v=4)*//20724914?s=64&v=4)*/*https://gith/*![GitHub avatar of 3w36zj6](https://avatars.githubusercontent.com/u/52315048?s=64&v=4)*/.com/u/68116836?s=64&v=4)*/*https/*![GitHub avatar of AnarchistHoneybun](https://avatars.githubusercontent.com/u/74085528?s=64&v=4)*/u/137803093?s=64&v=4)*/*https://github.com//*![GitHub avatar of Bzero](https://avatars.githubusercontent.com/u/64414289?s=64&v=4)*/t.com/u/56166507?s=64&v=4)*/*ht/*![GitHub avatar of Heinenen](https://avatars.githubusercontent.com/u/37484430?s=64&v=4)*/thubusercontent.com/u/39707032?s=6/*![GitHub avatar of HydroH](https://avatars.githubusercontent.com/u/14823453?s=64&v=4)*/s.githubusercontent.com/u/252042/*![GitHub avatar of JHenneberg](https://avatars.githubusercontent.com/u/6606609?s=64&v=4)*/vatars.githubusercontent.com/u/40892/*![GitHub avatar of Jacobgarm](https://avatars.githubusercontent.com/u/37753339?s=64&v=4)*/s://avatars.githubusercontent.com/u/*![GitHub avatar of Jocs](https://avatars.githubusercontent.com/u/9712830?s=64&v=4)*/gustoPapa](https://avatars.git/*![GitHub avatar of JonPichel](https://avatars.githubusercontent.com/u/47296456?s=64&v=4)*/itHub avatar of PepinhoJp](https:///*![GitHub avatar of JustForFun88](https://avatars.githubusercontent.com/u/100504524?s=64&v=4)*/itHub avatar of freundTech](https://av/*![GitHub avatar of LingkKang](https://avatars.githubusercontent.com/u/104191582?s=64&v=4)*/GitHub avatar of gabriel-araujjo](h/*![GitHub avatar of Lucy-73](https://avatars.githubusercontent.com/u/115893318?s=64&v=4)*/raujjo*/al/*[ ![GitHub avatar of /*![GitHub avatar of LuxxxLucy](https://avatars.githubusercontent.com/u/19356905?s=64&v=4)*/.com/istudyatuni*/ ,/*[ ![GitHub av/*![GitHub avatar of NiklasEi](https://avatars.githubusercontent.com/u/12236672?s=64&v=4)*/ithub.com/jbirnick*/.c/*[ ![GitHub/*![GitHub avatar of Orange149](https://avatars.githubusercontent.com/u/89233794?s=64&v=4)*/ithub.com/jsoref*/se/*[ ![GitHub av/*![GitHub avatar of QuarticCat](https://avatars.githubusercontent.com/u/70888415?s=64&v=4)*/github.com/mattfbacon*/ec/*[ ![GitHu/*![GitHub avatar of SillyFreak](https://avatars.githubusercontent.com/u/1029192?s=64&v=4)*/s://github.com/mtoohey31*/ve/*[ ![Gi/*![GitHub avatar of T1mVo](https://avatars.githubusercontent.com/u/94936637?s=64&v=4)*/https://github.com/nz366*/

/*[/*![GitHub avatar of Tom4sCruz](https://avatars.githubusercontent.com/u/103905440?s=64&v=4)*/)*/*https://github.com/omniwrench*//*![GitHub avatar of UARTman](https://avatars.githubusercontent.com/u/21099202?s=64&v=4)*/?s=64&v=4)*/*https://github.com/s/*![GitHub avatar of YDX-2147483647](https://avatars.githubusercontent.com/u/73375426?s=64&v=4)*/85?s=64&v=4)*/*https://github.com/tulio2/*![GitHub avatar of aaron-jack-manning](https://avatars.githubusercontent.com/u/86413837?s=64&v=4)*//*https://github.com/3w36zj6*/  /*[ ![GitHub/*![GitHub avatar of arbrauns](https://avatars.githubusercontent.com/u/89400397?s=64&v=4)*/)*/*https://github.com/AnarchistHo/*![GitHub avatar of astrale-sharp](https://avatars.githubusercontent.com/u/53686698?s=64&v=4)*/4&v=4)*/*https://github.com/Bzero*/as/*[ ![GitHub avatar of Heinenen](https://avatars.githubusercontent.com/u/37484430?s=64&v=4)*/*https://github.com/*![GitHub avatar of chicoferreira](https://avatars.githubusercontent.com/u/36338391?s=64&v=4)*/?s=64&v=4)*/*https://github.com/HydroH*/*![GitHub avatar of ctmbl](https://avatars.githubusercontent.com/u/79016298?s=64&v=4)*/9?s=64&v=4)*/*https://github.co/*![GitHub avatar of danielfleischer](https://avatars.githubusercontent.com/u/22022514?s=64&v=4)*/3339?s=64&v=4)*/*https://github.com/Jacob/*![GitHub avatar of etiennecollin](https://avatars.githubusercontent.com/u/99756528?s=64&v=4)*/4)*/*https://github.com/Jocs*/ `/*[ ![G/*![GitHub avatar of flauschpantoffel](https://avatars.githubusercontent.com/u/79235640?s=64&v=4)*//github.com/JonPichel*/ D/*[ ![GitHub avat/*![GitHub avatar of fynsta](https://avatars.githubusercontent.com/u/63241108?s=64&v=4)*/ps://github.com/JustForFun88*/ !/*![GitHub avatar of giannissc](https://avatars.githubusercontent.com/u/20277283?s=64&v=4)*/&v=4)*/*https://github.com/LingkKan/*![GitHub avatar of haenoe](https://avatars.githubusercontent.com/u/57222371?s=64&v=4)*/8?s=64&v=4)*/*https://github.com/*![GitHub avatar of hardlydearly](https://avatars.githubusercontent.com/u/167623323?s=64&v=4)*/05?s=64&v=4)*/*https://github.com/Luxx/*![GitHub avatar of hettlage](https://avatars.githubusercontent.com/u/11633365?s=64&v=4)*/672?s=64&v=4)*/*https://github.com/*![GitHub avatar of huajingyun01](https://avatars.githubusercontent.com/u/74996522?s=64&v=4)*/3794?s=64&v=4)*/*https://github.com/Or/*![GitHub avatar of inferiorhumanorgans](https://avatars.githubusercontent.com/u/871927?s=64&v=4)*/=64&v=4)*/*https://github.com/QuarticCat*/tp//*![GitHub avatar of jakobjpeters](https://avatars.githubusercontent.com/u/59785931?s=64&v=4)*/*/*https://github.com/SillyFreak*/](/*[ ![GitHub avatar of T1mVo](https://avatars.githubusercontent.com/u/94936637?s=64&v=4)*/*https://github.com/T1mVo*/51/*[ ![GitH/*![GitHub avatar of joserlopes](https://avatars.githubusercontent.com/u/95137505?s=64&v=4)*/ps://github.com/Tom4sCruz*/16/*[ ![G/*![GitHub avatar of kamack38](https://avatars.githubusercontent.com/u/64226248?s=64&v=4)*/ttps://github.com/UARTman*/t./*[ !/*![GitHub avatar of kimushun1101](https://avatars.githubusercontent.com/u/13430937?s=64&v=4)*/)*/*https://github.com/YDX-2147483647*/*![GitHub avatar of kravchenkoloznia](https://avatars.githubusercontent.com/u/32360199?s=64&v=4)*/s=64&v=4)*/*https://github.com/aaron-jack-/*![GitHub avatar of matze](https://avatars.githubusercontent.com/u/115270?s=64&v=4)*/u/89400397?s=64&v=4)*/*https:///*![GitHub avatar of niklasmohrin](https://avatars.githubusercontent.com/u/47574893?s=64&v=4)*/ent.com/u/53686698?s=64&v=4)*/*https://*![GitHub avatar of nishanthkarthik](https://avatars.githubusercontent.com/u/7759435?s=64&v=4)*//u/25031?s=64&v=4)*/*https://github.com/b/*![GitHub avatar of nixon-voxell](https://avatars.githubusercontent.com/u/43715558?s=64&v=4)*/?s=64&v=4)*/*https://github.com/chicof/*![GitHub avatar of saecki](https://avatars.githubusercontent.com/u/43008152?s=64&v=4)*/6298?s=64&v=4)*/*https://github./*![GitHub avatar of unclebean](https://avatars.githubusercontent.com/u/8064750?s=64&v=4)*/com/u/22022514?s=64&v=4)*/*https:///*![GitHub avatar of waywardmonkeys](https://avatars.githubusercontent.com/u/178582?s=64&v=4)*/sercontent.com/u/99756528?s=64&v=4)*/*ht/*![GitHub avatar of wrzian](https://avatars.githubusercontent.com/u/133046678?s=64&v=4)*/tars.githubusercontent.com/u/792/*![GitHub avatar of zombiepigdragon](https://avatars.githubusercontent.com/u/26581798?s=64&v=4)*///avatars.githubusercontent.com/u/6324/*![â](/assets/icons/16-arrow-right.svg)*/ta*/Hu/*[ ![GitHub avatar of giannissc](http/*![â](/assets/icons/16-arrow-right.svg)*/7283?s=64&v=4)*/*https://github.com/giannissc*/Hu/*[ ![GitHub avatar of haenoe](h/*![Docs](/assets/icons/16-docs-dark.svg)*/57222371?s=64&v=4)*/*https://github.com/haenoe*/yy/*[ ![GitHub avatar of hardlydearly](https://avatars.githubuserco/*![GitHub avat/*[ 0.7.0 ](/docs/changelog/0.7.0/)*/.com/hardlydearly*/Wa/*[ ![GitHub avatar of hettlage](https://avatar/*![GitHub avatar of JonPichel](https/*[ ` placement ` ](/docs/reference/model/figure/#parameters-placement)*/ngyun01](https://avat/*![GitHub avatar of JustForFun88](https://avatars.githubusercontent.c/*[ ` float ` ](/docs/reference/layout/place/#parameters-float)*/ps:/*![GitHub avatar of LingkKang](https://avatars.githubusercontent.com/u/104191582?s=64&v=4)*/ns*//g/*[ ![GitHub avatar of jakobjpeters](https://avatars.githubusercontent.com/u/59785931?s=64&v=4)*/*https://github.com/jakobjpeters*/(h/*[ ![GitHub avatar of jiricekcz](https://avatars.githubusercontent.com/u/36630605?s=64&v=4)*/*https://github.com/jiricekcz*/48/*[ ![GitHub avatar of joserlopes](https://avatars.githubusercontent.com/u/95137505?s=64&v=4)*/*https://github.com/joserlopes*//u/*[ ![GitHub avatar of kamack38]/*![GitHub avatar of Orange149](https://avatars.githubusercontent.com/u/89233794?s=64&v=4)*/8*/t./*[ ![GitHub avatar of kimushu/*![G/*[ ` script ` ](/docs/reference/text/text/#parameters-script)*/*/*https://github.com/kimushun1101*/.c/*[ ![GitHub avatar of kravchenkoloznia](https://avatars.githubusercontent.com/u/32360199?s=64&v=4)*/*https://github.com/kravchenkoloznia*/u//*[ ![GitHub avat/*![GitHub avatar of T1mVo](https://avatars.githubusercontent.com/u/94936637?s=64&v=4)*/ub.com/matze*/er/*[ ![GitHub avatar of niklasmohrin](https://avatars.githubusercontent.com/u/47574893?s=64&v=4)*/*https://github.com/niklasmohrin*/er/*[ ![GitHub a/*![GitHub avatar of UARTman](https://avatars.githubus/*[ @LaurenzV ](https://github.com/LaurenzV)*/thub.com/nishanthkarthik*/r/*![GitHub avatar of YDX-2147483647](https://avatars.githubusercontent.com/u/73375426?s=64&v=4)*/=4)*/*https://github.com/nixon-voxell*/u/*![GitHub avatar of aaron-jack-manning](https://avatars.githubusercontent.com/u/86413837?s=64&v=4)*/s://github.com/saecki*/at/*[ ![GitHub avatar/*![GitH/*[ roots ](/docs/reference/math/roots/#functions-root)*/0?s=64&v=4)*/*https://github.com/unclebean*/bu/*[ ![GitHub avatar of waywardmonkeys](https://avatars.githubusercontent.com/u/178582?s=64&v=4)*/*https://github.com/waywardmonkeys*/f /*[ ![GitHub avatar of/*![GitHub avatar o/*[ Boxes ](/docs/reference/layout/box/)*/8?s=64&v=4)*/*https://github.com/wrzian*/ta/*[ ![GitH/*![GitHub avatar of chicoferreira](https://avatars.githubus/*[ blocks ](/docs/reference/layout/block/)*/thub.com/zombiepigdragon*/*[ ![â/*![GitHub avatar of ctm/*[ weak spacing ](/docs/reference/layout/h/#parameters-weak)*/![â](/assets/icons/16-arrow-right./*![GitHub avatar of danielfleischer](https://avat/*[ math class ](/docs/reference/math/class/)*/cs](/assets/icons/16-docs-dark.svg)*/r of Jaco/*![GitHub avatar of etiennecollin](https://avatars.githubusercontent.com/u/99756528?s=64&v=4)*/acobgarm)
  - [ ![GitHub avat/*[ 0.7.0 /*![GitHub avatar of flauschpantoffel](https://avatars.githubusercontent.com/u/79235640?s=/*[ operators ](/docs/reference/math/op/)*/tps/*[ ` pla/*![GitHub avatar of fynsta](https://avatars.githubusercontent.com/u/63241108?s=64&v=4)*/[ ![GitHub avatar of JustForFun8/*![GitHub avatar of giannissc](https://avatars.githubusercontent.com/u/20277283?s=64&v=4)*/meters-float)*/ - [ ![GitHub avatar/*![GitHub avatar of haenoe](https://avatars.githubusercontent.com/u/57222371?s=64&v=4)*/syntaxes ](/docs/reference/text//*![GitHub avatar of hardlydearly](https://avatars.githubusercontent.com/u/167623323?s=64&v=4)*/tps://github./*[ themes ](/docs/refere/*![GitHub avatar of hettlage](https://avatars.githubusercontent.com/u/11633365?s=64&v=4)*/ge ` ](/docs/reference/text/text/#parameters-top-edge)*/r/*[ ` bottom-edge ` ](/docs/reference/text/text/#parameters-bottom-edge)*/4) ](https://github.com/NiklasEi)
  - [ ![Gi/*![GitHub avatar of inferiorh/*[ 2d alignments ](/docs/reference/layout/align/#parameters-alignment)*/ub.com/Orange149)
  - [ ![G/*[ ` script ` ](/d/*![GitHub avatar of jakobjpeters](https://avatars.g/*[ strokes ](/docs/reference/visualize/stroke/)*/ ](/docs/reference/text/smartquote//*![GitH/*[ ` dedup ` ](/docs/reference/foundations/array/#definitions-dedup)*/tps://github.com/SillyFreak)
  - [ ![GitHub avatar o/*![GitHub avatar of joserl/*[ lengths ](/docs/reference/layout/length/)*/https://g/*[ placed elements ](/docs/reference/layout/place/)*/z](https://avatars.githubusercontent.com/u/103905440?s=64&v=4) ](https://github.com/Tom4sCruz)
  - [ ![GitHub avatar of UARTman](https://avatars.githubus/*[ @LaurenzV ](https://github.com/LaurenzV)*/://github.com/UARTman)
  - [ ![GitHub avatar of YDX-2147483647](https://avatars.githubusercontent.com/u/73375426?s=64&v=4) ](https://github.com/YDX-2147483647)
  - [ ![GitHub avatar of aaron-jack-manning](https://avatars.githubusercontent.com/u/86413837?s=64&v=4) ](https://github.com/aaron-jack-manning)
  - [ ![GitH/*[ roots ](/docs/reference/math/roots/#functions-root)*/ent.com/u/89400397?s=64&v=4) ](https://git/*[ limits ](/docs/reference/math/attach/#functions-limits)*/(https://avatars.githubusercontent.com/u/53686698?s=64&v=4) ](https://github.com/astrale-sharp)
  - [ ![GitHub avatar o/*[ Boxes ](/docs/reference/layout/box/)*/t.com/u/25031?s=64&v=4) ](https://github.com/bk)
  - [ ![GitHub avatar of chicoferreira](https://avatars.githubus/*[ blocks ](/docs/reference/layout/block/)*/s://github.com/chicoferreira)
  - [ ![GitHub avatar of ctm/*[ weak spacing ](/docs/*![Gi/*[ ` image.decode ` ](/docs/reference/visualize/image/#definitions-decode)*/GitHub avatar of danielfleischer](https://avat//*![GitHub avatar of waywa/*[ ` bytes ` ](/docs/reference/foundations/bytes/ "`bytes`")*/r)
  - [ ![GitHub avatar of etiennecollin](https://*![GitHub avatar of wrzia/*[ ` array ` ](/docs/reference/foundations/array/ "`array`")*/n)
  - [ ![GitHub avatar of flauschpa/*![GitHub avatar of zombiepigdragon](https://avatars.githubusercontent.com/u/*[ ` str ` ](/docs/reference/foundations/str/ "`str`")*/ar of /*![â](/assets/icons/16-arrow-right.svg)*/t.com/u/63241108?s=64&v=4) ](https://github./*![â](/assets/icons/16-arrow-right.svg)*/nnissc](https://avatars.githubusercontent.com/u/20277283?s=64&v=4) ](https://gith/*![Docs](/assets/icons/16-docs-dark.svg)*/ of haenoe/*![](/assets/icons/16-arrow-right.svg)*/om/u/57222371?s=64&v=4) ](https://git/*![](/assets/icons/16-arrow-right.svg)*/ of hardlydearly](https://avatars.githubusercontent.com/u/167623323?s=64&v=4) ](https://github.com/hardlydearly)
  - [ ![GitHub avatar of hettlage](https://avatars.githubusercontent.com/u/11633365?s=64&v=4) ](https://github.com/het/*[ lengths ](/docs/reference/layout/length/)*/1](https://avatars.githubusercontent.com/u//*[ relative lengths ](/docs/reference/layout/relative/)*/  - [ ![GitHub avatar of inferiorh/*[ 2d alignments ](/docs/reference/layout/align/#parameters-alignment)*/](https://github.com/inferiorhumanorgans)
  - [ ![GitHub avatar of jakobjpeters](https://avatars.g/*[ strokes ](/docs/reference/visualize/stroke/)*/tps://github.com/jakobjpeters)
  - [ ![GitH/*[ ` dedup ` ](/docs/reference/foundations/array/#definitions-dedup)*/30605?s=64&v=4) ](https://github.com/jiricekcz)
  - [ ![GitHub avatar of joserl/*[ lengths ](/docs/reference/layout/length/)*//u/95137505?s=64&v=4) ](https://github./*[ angles ](/docs/reference/layout/angle/)*/kamack38](https://avatars.githubusercontent.com/u/64226248?s=64&v=4) ](http/*[ colors ](/docs/reference/visualize/color/)*/ar of kimushun1101](https://avatars.githubusercontent.com/u/1343/*[ directions ](/docs/reference/layout/stack/#parameters-dir)*/tHub avatar of kravchenkoloznia](https://*[ alignments ](/docs/reference/layout/align/#parameters-alignment)*/ub.com/kravchenkoloznia)
  /*[ 2d alignments ](/docs/reference/layout/align/#parameters-alignment)*//115270?s=64&v=4) ](https://git/*[ ` enumerate ` ](/docs/reference/foundations/array/#definitions-enumerate)*/busercontent.com/u/475748/*[ ` color.mix ` ](/docs/reference/visualize/color/#definitions-mix)*/ar of nishanthkarthik](https://avatars.githubusercont/*[ ` eval ` ](/docs/reference/foundations/eval/ "`eval`")*/hkarthik)
  - [ !/*[ ` bytes ` ](/docs/reference/foundations/bytes/ "`bytes`")*/ontent.com/u/43715558?s=64&v=4) ](https://gith/*[ ` encoding ` ](/docs/reference/data-loading/read/#parameters-encoding)*/thubusercontent.com/u/43008152?s=64&v=4) ](https://github.com/saecki)
  - [ ![Gi/*[ ` image.decode ` ](/docs/reference/visualize/image/#definitions-decode)*/?s=64&v=4) ](https://github.com/unclebean)
  - [ ![GitHub avatar of waywa/*[ ` bytes ` ](/docs/reference/foundations/bytes/ "`bytes`")*/=64&v=4) ](https://github.com/waywardmonkeys)
  - [ ![GitHub avatar of wrzia/*[ ` array ` ](/docs/reference/foundations/array/ "`array`")*/=4) ](https://github.com/wrzian)
  - [ ![GitHub avatar of z/*![GitHub avatar of damaxwell](https://avatars.githubusercontent.com/u/918465?s=64&v=4)*/oundations/str/ "`str`")*/gon)

[ !/*![GitHub avatar of bluebear94](https://avatars.githubusercontent.com/u/2975203?s=64&v=4)*/[â](/assets/icons/16-arrow-right.s/*![GitHub avatar of PgBiel](https://avatars.githubusercontent.com/u/9021226?s=64&v=4)*/- [ ![Docs](/assets/icons/16-doc/*![GitHub avatar of Beiri22](https://avatars.githubusercontent.com/u/8210233?s=64&v=4)*/s/changelog/)
  - ![](/assets/ico/*![GitHub avatar of Dherse](https://avatars.githubusercontent.com/u/9665250?s=64&v=4)*/st 7, 2023)

==  Text and Layout/*![GitHub avatar of LaurenzV](https://avatars.githubusercontent.com/u/47084093?s=64&v=4)*/model/figure/#parameters-placement/*![GitHub avatar of Mafii](https://avatars.githubusercontent.com/u/10061519?s=64&v=4)*/through the [ ` float ` ](/docs/*![GitHub avatar of adriandelgado](https://avatars.githubusercontent.com/u/11708972?s=64&v=4)*//reference/introspection/query/#command/*![GitHub avatar of lolstork](https://avatars.githubusercontent.com/u/137357423?s=64&v=4)*/blocks 
  - Added support for load/*![GitHub avatar of AlistairKeiller](https://avatars.githubusercontent.com/u/43255248?s=64&v=4)*/for raw blocks 
  - Added _bounds_ option/*![GitHub avatar of DVDTSB](https://avatars.githubusercontent.com/u/66365801?s=64&v=4)*/dge ` ](/docs/reference/text/tex/*![GitHub avatar of Enter-tainer](https://avatars.githubusercontent.com/u/25521218?s=64&v=4)*/ nonsensical top- and bottom-edge opti/*![GitHub avatar of EpicEricEE](https://avatars.githubusercontent.com/u/7191192?s=64&v=4)*/ocs/refe/*[ ` bookmarked ` ](/docs/r/*![GitHub avatar of Liamolucko](https://avatars.githubusercontent.com/u/43807659?s=64&v=4)*//smartquote/#parameters-alternative)/*![GitHub avatar of LingMan](https://avatars.githubusercontent.com/u/18645382?s=64&v=4)*/sition)*/ support for ` nb ` and /*![GitHub avatar of MDLC01](https://avatars.githubusercontent.com/u/57839069?s=64&v=4)*/on/metadata/ "`metadata`")*/ut/p/*![GitHub avatar of Myriad-Dreamin](https://avatars.githubusercontent.com/u/35292584?s=64&v=4)*/ ](/docs/reference/introspection/state/ /*![GitHub avatar of StrangeGirlMurph](https://avatars.githubusercontent.com/u/62220780?s=64&v=4)*/this. 
  - Add/*[ enumerations ](/docs/ref/*![GitHub avatar of T0mstone](https://avatars.githubusercontent.com/u/39707032?s=64&v=4)*/NG export 

==  Math

  - Improved/*![GitHub avatar of TheLukeGuy](https://avatars.githubusercontent.com/u/64972126?s=64&v=4)*/(e.g. in ` $  a  '  '  $  ` ) 
  - I/*![GitHub avatar of antonWetzel](https://avatars.githubusercontent.com/u/59712243?s=64&v=4)*/lations to show attachments as [ limi/*![GitHub avatar of epbuennig](https://avatars.githubusercontent.com/u/103939966?s=64&v=4)*/  $  ` ) 
  - Large operators and d/*![GitHub avatar of kg583](https://avatars.githubusercontent.com/u/41345727?s=64&v=4)*/hub.com/typst/typst/issues/1842/*![GitHub avatar of lynn](https://avatars.githubusercontent.com/u/16232127?s=64&v=4)*/not affect [ bloc/*[ ![GitHub /*![GitHub avatar of mattfbacon](https://avatars.githubusercontent.com/u/58113890?s=64&v=4)*/ithub.com/damaxwell*/do/*[ ![GitHub /*![GitHub avatar of mavaddat](https://avatars.githubusercontent.com/u/5055400?s=64&v=4)*/s://github.com/bluebear94*/mi/*[ !/*![GitHub avatar of neunenak](https://avatars.githubusercontent.com/u/311545?s=64&v=4)*/*https://github.com/PgBiel*/ `/*[ /*![GitHub avatar of pineapplehunter](https://avatars.githubusercontent.com/u/8869894?s=64&v=4)*/://github.com/Beiri22*/el/*[ ![GitHub ava/*![GitHub avatar of raphCode](https://avatars.githubusercontent.com/u/15750438?s=64&v=4)*/ub.com/Dherse*/rs/*[ ![GitHub avat/*![GitHub avatar of sitandr](https://avatars.githubusercontent.com/u/60141933?s=64&v=4)*/ithub.com/LaurenzV*/ct/*[ ![GitHu/*![GitHub avatar of sudormrfbin](https://avatars.githubusercontent.com/u/23398472?s=64&v=4)*/thub.com/Mafii*/e /*[ ![GitHub avatar/*![GitHub avatar of tretre91](https://avatars.githubusercontent.com/u/63788850?s=64&v=4)*//github.com/adriandelgado*/an/*[ ![GitHub avatar of lolstork](https://avatars.githubusercontent.com/u/137357423?s=64&v=4)/*![â](/assets/icons/16-arrow-right.svg)*/GitHub avatar of AlistairKeiller](https://avatars.githubusercontent.com/u/4325/*![Docs](/assets/icons/16-docs-dark.svg)*/stairKeiller*/pt/*[ ![GitHub avatar of DVDTSB](https://avatars.githubusercontent.com/u/66365801?s=64&v=4)*/*https://github.com/DVDTSB*/d /*[ ![GitHub avatar of Enter-tainer](https://avatars.githubusercontent.com/u/25521218?s=64&v=4)*/*https://github.com/Enter-tainer*/to/*[ ![GitHub avatar of EpicEricEE](https://avatars.githubusercontent.com/u/7191192?s=64&v=4)*/*https://github.com/EpicEricEE*/ ,/*[ ![GitHub avatar of Liamolucko](https://avatars.githubusercontent.com/u/43807659?s=64&v=4)*/*https://github.com/Liamolucko*/li/*[ ![GitHub avatar of LingMan](https://avatars.githubusercontent.com/u/18645382?s=64&v=4)*/*https://github.com/LingMan*/ -/*[ ![GitHub avatar of MDLC01](https://avatars.githubusercontent.com/u/57839069?s=64&v=4)*/*https://github.com/MDLC01*/de/*[ ![GitHub avatar of Myriad-Dreamin](https://avatars.githubusercontent.com/u/35292584?s=64&v=4)*/*https://github.com/Myriad-Dreamin*/, /*[ ![GitHub avatar of StrangeGirlMurph](https://avatars.githubusercontent.com/u/62220780?s=64&v=4)*/*https://github.com/StrangeGirlMurph*/ t/*[ ![GitHub avatar of T0mstone](https://avatars.githubusercontent.com/u/39707032?s=64&v=4)*/*https://github.com/T0mstone*/nt/*[ ![GitHub avatar of TheLukeGuy](https://avatars.githubusercontent.com/u/64972126?s=64&v=4)*/*https://github.com/TheLukeGuy*//l/*[ ![GitHub avatar of antonWetzel](https://avatars.githubusercontent.com/u/59712243?s=64&v=4)*/*https://github.com/antonWetzel*/#d/*[ ![GitHub avatar of epbuennig](https://avatars.githubusercontent.com/u/103939966?s=64&v=4)*/*https://github.com/epbuennig*/fu/*[ ![GitHub avatar of kg583](https://avatars.githubusercontent.com/u/41345727?s=64&v=4)*/*https://github.com/kg583*/) /*[ ![GitHub avatar of lynn](https://avatars.githubusercontent.com/u/16232127?s=64&v=4)*/*https://github.com/lynn*/ b/*[ ![GitHub avatar of mattfbacon](https://avatars.githubusercontent.com/u/58113890?s=64&v=4)*/*https://github.com/mattfbacon*/to/*[ ![GitHub avatar of mavaddat](https://avatars.githubusercontent.com/u/5055400?s=64&v=4)*/*https://github.com/mavaddat*/it/*[ ![GitHub avatar of neunenak](https://avatars.githubusercontent.com/u/311545?s=64&v=4)*/*https://github.com/neunenak*/re/*[ ![GitHub avatar of pineapplehunter](https://avatars.githubusercontent.com/u/8869894?s=64&v=4)*/*https://github.com/pineapplehunter*/do/*[ ![GitHub avatar of raphCode](https://avatars.githubusercontent.com/u/15750438?s=64&v=4)*/*https://github.com/raphCode*/rt/*[ ![GitHub avatar of sitandr](https://avatars.githubusercontent.com/u/601/*![GitHub avatar of bluebear94](https://avatars.githubusercontent.com/u/2975203?s=64&v=4)*/s://avatars.githubusercontent.com/u//*![GitHub avatar of PgBiel](https://avatars.githubusercontent.com/u/*[ ` outline.entry ` ](/docs/reference/model/outline/#definitions-entry)*/64&v=4)*/*https://github.com/tretre91*/*[ ![â](/assets/icons/16-arrow-right.svg)*/id field assignment/*![GitHub avatar/*[ ` raw ` ](/docs/reference/text/raw/ "`raw`")*/t.svg)*/ message when a keyword is used where an identifi/*![GitHub avatar of LaurenzV](/*[ footnotes ](/docs/reference/model/footnote/)*/ in modules 
  - Import autocompletion now only//*![GitHub avatar of Mafii](/*[ ` locate ` ](/docs/reference/introspection/locate/ "`locate`")*/cs/changelog/0.6.0/)*/ining/*![GitHub avatar of adriandelgado](https://a/*[ contribution guide ](https://github.com/typst/typst/blob/main/CONTRIBUTING.md)*/ing/#packa/*![GitHub avatar of lolstork](https://avatars.githubusercontent.com/u/137357423?s=64&v=4)*/d line 
  - Th/*[ system-local ](h/*![GitHub avatar of AlistairKeiller](https://avatars.githubusercontent.com/u/432552/*[ ![GitHub avatar of bluebear94](https://avatars.githubusercontent.com/u/2975203?s=64&v=4)*/pace}/{name}/{version} ` instead of /*![GitHub avatar of figsoda](https://avatars.githubusercontent.com/u/40620903?s=64&v=4)*/y given fonts (via ` --font-paths/*![GitHub avatar of sitandr](https://avatars.githubusercontent.com/u/60141933?s=64&v=4)*/ne ` ](/docs/reference/math/sizes/*![GitHub avatar of MDLC01](https://avatars.githubusercontent.com/u/57839069?s=64&v=4)*/provements

  - Added [ ` bookma/*![GitHub avatar of Mafii](https://avatars.githubusercontent.com/u/10061519?s=64&v=4)*/es ](/docs/reference/math/under/*![GitHub avatar of azerupi](https://avatars.githubusercontent.com/u/7647338?s=64&v=4)*/s-overline)*/definitions-caption-/*![GitHub avatar of damaxwell](https://avatars.githubusercontent.com/u/918465?s=64&v=4)*/tadata ` ](/docs/reference/introspe/*![GitHub avatar of AndyBarcia](https://avatars.githubusercontent.com/u/40731413?s=64&v=4)*/gins ](/docs/reference/layout/page/#/*![GitHub avatar of DVDTSB](https://avatars.githubusercontent.com/u/66365801?s=64&v=4)*/` (key, init) ` /*[ ` binding ` /*![GitHub avatar of Jollywatt](https://avatars.githubusercontent.com/u/24970860?s=64&v=4)*/layout/pagebreak/#parameters-to)*/e/*![GitHub avatar of Luis-Licea](https://avatars.githubusercontent.com/u/48164786?s=64&v=4)*/than the start of the marker. As a r/*![GitHub avatar of Myriad-Dreamin](https://avatars.githubusercontent.com/u/35292584?s=64&v=4)*//reference/text/underline/)*/ ](/docs/re/*![GitHub avatar of PgBiel](https://avatars.githubusercontent.com/u/9021226?s=64&v=4)*/evelopment

  - Extracted parser/*![GitHub avatar of SUPERCILEX](https://avatars.githubusercontent.com/u/9490724?s=64&v=4)*/ Typst dependents may need fixing if/*![GitHub avatar of TomBinford](https://avatars.githubusercontent.com/u/28466971?s=64&v=4)*/d had 

==  Contributors

Thanks to /*![GitHub avatar of abdulmelikbekmez](https://avatars.githubusercontent.com/u/61517310?s=64&v=4)*/ars.githubusercontent.com/u/918465?s=64&v=/*![GitHub avatar of alerque](https://avatars.githubusercontent.com/u/173595?s=64&v=4)*/ars.githubusercontent.com/u/29752/*![GitHub avatar of chicoferreira](https://avatars.githubusercontent.com/u/36338391?s=64&v=4)*/rs.githubusercontent.com/u/*[ ` outline/*![GitHub avatar of jskherman](https://avatars.githubusercontent.com/u/68434444?s=64&v=4)*/.githubusercontent.com/u/8210233?s=/*![GitHub avatar of lucifer1004](https://avatars.githubusercontent.com/u/13583761?s=64&v=4)*/ext/raw/ "`raw`")*/com/u/9665250?s=64/*![GitHub avatar of raphCode](https://avatars.githubusercontent.com/u/15750438?s=64&v=4)*/docs/reference/model/footnote/)*/9/*![GitHub avatar of thehydrogen](https://avatars.githubusercontent.com/u/34059898?s=64&v=4)*/](/docs/reference/introspection/locat/*![GitHub avatar of zach-capalbo](https://avatars.githubusercontent.com/u/1325621?s=64&v=4)*/[ contribution guide ](https://gith/*![â](/assets/icons/16-arrow-right.svg)*/G.md)*/gado)
  - [ ![GitHub avatar of lolstork/*![â](/assets/icons/16-arrow-right.svg)*/u/137357423?s=64&v=4) ](https://github.com/lolstork)
  - [ ![GitHub avatar of Al/*![Docs](/assets/icons/16-docs-dark.svg)*/ercontent.com/u/432552/*[ ![GitHub avatar of bluebear94](https://avatars.githubusercontent.com/u/2975203?s=64&v=4)*/*https://github.com/bluebear94*/co/*[ ![GitHub avatar of figsoda](https://avatars.githubusercontent.com/*![](/assets/icons/16-arrow-right.svg)*/b.com/figsoda*/us/*[ ![GitHub avatar of sitandr](https://avatars.githubusercontent.com/u/60141933?s=64&v=4)*/*https://github.com/sitandr*////*[ ![GitHub avatar of MDLC01](https://avatars.githubusercontent.com/u/57839069?s=64&v=4)*/*https://github.com/MDLC01*/mo/*[ ![GitHub avatar of Mafii](https://avatars.githubusercontent.com/u/10061519?s=64&v=4)*/*https://github.com/Mafii*/tH/*[ ![GitHub avatar of azerupi](https://avatars.githubusercontent.com/u/7647338?s=64&v=4)*/*https://github.com/azerupi*/ -/*[ ![GitHub avatar of damaxwell](https://avatars.githubusercontent.com/u/918465?s=64&v=4)*/*https://github.com/damaxwell*/1)/*[ ![GitHub avatar of AndyBarcia](https://avatars.githubusercontent.com/u/40731413?s=64&v=4)*/*https://github.com/AndyBarcia*/om/*[ ![GitHub avatar of DVDTSB](https://avatars.githubusercontent.com/u/66365801?s=64&v=4)*/*https://github.com/DVDTSB*/64/*[ ![GitHub avatar of Jollywatt](https://avatars.githubusercontent.com/u/24970860?s=64&v=4)*/*https://github.com/Jollywatt*//u/*[ ![GitHub avatar of Luis-Licea](https://avatars.githubusercontent.com/u/48164786?s=64&v=4)*/*https://github.com/Luis-Licea*/nt/*[ ![GitHub avatar of Myriad-Dreamin](https://avatars.githubusercontent.com/u/35292584?s=64&v=4)*/*https://github.com/Myriad-Dreamin*/en/*[ ![GitHub avatar of PgBiel](https://avatars.githubusercontent.com/u/9021226?s=64&v=4)*/*https://github.com/PgBiel*/rs/*[ ![GitHub avatar of SUPERCILEX](https://avatars.githubusercontent.com/u/9490724?s=64&v=4)*/*https://github.com/SUPERCILEX*/va/*[ ![GitHub avatar of TomBinford](https://avatars.githubusercontent.com/u/28466971?s=64&v=4)*/*https://github.com/TomBinford*/ar/*[ ![GitHub avatar of abdulmelikbekmez](https://avatars.githubusercontent.com/u/61517310?s=64&v=4)*/*https://github.com/abdulmelikbekmez*/us/*[ ![GitHub avatar of alerque](https://avatars.githubusercontent.com/u/173595?s=64&v=4)*/*https://github.com/alerque*/av/*[ ![GitHub avatar of chicoferreira](https://avatars.githubusercontent.com/u/36338391?s=64&v=4)*/*https://github.com/chicoferreira*/ta/*[ ![GitHub avatar of jskherman](https://avatars.githubusercontent.com/u/68434444?s=64&v=4)*/*https://github.com/*![GitHub avatar of figsoda](https://avatars.githubusercontent.com/u/40620903?s=64&v=4)*/m/u/13583761?s=64&v=4)*/*https:///*![GitHub avatar of loewenheim](https://avatars.githubusercontent.com/u/7622248?s=64&v=4)*/tent.com/u/15750438?s=64&v=4)*/*http/*![GitHub avatar of 7sDream](https://avatars.githubusercontent.com/u/7822577?s=64&v=4)*/usercontent.com/u/34059898?s=64&v/*![GitHub avatar of AlexanderEkdahl](https://avatars.githubusercontent.com/u/1409734?s=64&v=4)*/githubusercontent.com/u/1325621?s=64&v=4)/*![GitHub avatar of C284974](https://avatars.githubusercontent.com/u/67071431?s=64&v=4)*/sercontent.com/u/63788850?s=64&v=/*![GitHub avatar of Dragoncraft89](https://avatars.githubusercontent.com/u/11162205?s=64&v=4)*/vious page
](/docs/changelog/0.8.0/) [//*![GitHub avatar of Easyoakland](https://avatars.githubusercontent.com/u/97992568?s=64&v=4)*/
= *do/*[ Changelog ](/docs/changelog/*![GitHub avatar of KiruyaMomochi](https://avatars.githubusercontent.com/u/65301509?s=64&v=4)*/.svg)
  - [ Changelog ](/docs/changelog/*![GitHub avatar of LaurenzV](https://avatars.githubusercontent.com/u/47084093?s=64&v=4)*/Version 0.6.0 (June 30, 2023)

== /*![GitHub avatar of ModProg](https://avatars.githubusercontent.com/u/11978847?s=64&v=4)*/eference/model/terms/)*/)
  - You/*![GitHub avatar of RafDevX](https://avatars.githubusercontent.com/u/56204853?s=64&v=4)*/d use [ system-local ](https://gi/*![GitHub avatar of Tom-stack3](https://avatars.githubusercontent.com/u/76645845?s=64&v=4)*/n the web app 

==  Math

  - Added /*![GitHub avatar of arctic-penguin](https://avatars.githubusercontent.com/u/103587359?s=64&v=4)*/ctor ](/docs/reference/math/vec/)*/h/att/*![GitHub avatar of barvirm](https://avatars.githubusercontent.com/u/15948420?s=64&v=4)*/isplay ` ](/docs/reference/math/s/*![GitHub avatar of dreamlax](https://avatars.githubusercontent.com/u/4708805?s=64&v=4)*/erms/#parameters-separator)*/eq.sl/*![GitHub avatar of dvdvgt](https://avatars.githubusercontent.com/u/40773635?s=64&v=4)*/*/ode ( ` $  1  /  n!  $  ` work/*![GitHub avatar of flxo](https://avatars.githubusercontent.com/u/129436?s=64&v=4)*/ctions-underline) and [ overli/*![GitHub avatar of jakobrs](https://avatars.githubusercontent.com/u/10761079?s=64&v=4)*/ion ` ](/docs/reference/introspec/*![GitHub avatar of jdm204](https://avatars.githubusercontent.com/u/34479575?s=64&v=4)*/e breaks in equations 

==  Text/*![GitHub avatar of kianmeng](https://avatars.githubusercontent.com/u/134518?s=64&v=4)*/t/page/#parameters-margin) with th/*![GitHub avatar of liamsanft](https://avatars.githubusercontent.com/u/38260698?s=64&v=4)*/ ` ](/docs/reference/layout/page/#p/*![GitHub avatar of oskgo](https://avatars.githubusercontent.com/u/92018610?s=64&v=4)*/-to) argument to pagebreak func/*![GitHub avatar of rpitasky](https://avatars.githubusercontent.com/u/111201305?s=64&v=4)*/peat/ "`repeat`")*/  - Fixed bug w/*![GitHub avatar of thecaralice](https://avatars.githubusercontent.com/u/43097806?s=64&v=4)*//text/underline/)
 /*[ ` indent ` ](//*![GitHub avatar of user202729](https://avatars.githubusercontent.com/u/25191436?s=64&v=4)*/ed to text layout 

==  Command line/*![GitHub avatar of vxpm](https://avatars.githubusercontent.com/u/59714841?s=64&v=4)*/` directory to contain the input file because it designates the _p/*[ ![GitHub av/*![GitHub ava/*[ Bibliographies ](/docs/reference/model/bibliography/)*/4&v=4)*/*https://github.com/figsoda*/ag/*[ ![GitHub avatar of lo/*![GitHub avatar of abdulmelikbekmez](https://avatars.githubusercontent/*[ reference ](/docs/reference/model/ref/)*/ub avatar of 7sDream](https:/*![GitHub avatar of alerque](https://avatars.githubusercontent.com/u/173595?s=64&v=4)*//*[ ![GitHub avatar of AlexanderE/*![GitHub avatar of chicoferreira](https://avatars.githubusercontent.com/u/36338391?s=64&v=4)*/derEkdahl*/ry/*[ ![GitHub avatar of C28/*![GitHub avatar o/*[ ` counter ` ](/docs/reference/introspection/counter/ "`counter`")*/C284974*/me/*[ ![GitHub avatar of Dragonc/*![GitHub avatar of lucifer1004](https://avatars.githubusercontent.com/u/13583761?s=64&v=4)*/agoncraft89*/ -/*[ ![GitHub avatar of/*![GitHub avatar of raphCode](https://avatars.githubusercontent.com/u/15750438?s=64&v=4)*/ub.com/Easyoakland*/re/*[ ![GitHub/*![GitHub avatar of thehydrogen](https://avatars.githubusercontent.com/u/34059898?s=64&v=4)*/ps://github.com/KiruyaMomochi*/at/*[ ![GitHub avatar of LaurenzV](https://avatars.githubusercontent.com/u/47084093?s=64&v=4)*/*https://github.com/LaurenzV*/tp/*[ ![GitHub/*![â](/assets/icons/16-arrow-right.svg)*/ubusercontent.com/u/11978847?s=64&v=4)*/*https/*![â](/assets/icons/16-arrow-right.svg)*/atar of RafDevX](https://avatars.githubusercontent.com/u/56204853?s=64&v=4)*/*https:/*![Docs](/assets/icons/16-docs-dark.svg)*/atar of To/*![](/assets/icons/16-arrow-right.svg)*/ontent.com/u/76645845?s=64&v=4)*/*htt/*![](/assets/icons/16-arrow-right.svg)*/itHub avatar of arctic-penguin](https://avatars.githubusercontent.com/u/103587359?s=64&v=4)*/*https://github.com/arctic-penguin*/09/*[ ![GitHub avatar of barvirm](https://avatars.githubusercontent.com/u/15948420?s=64&v=4)*/*https://github.com/barvirm*/m//*[ ![GitHub avatar of dreamlax](https://avatars.githubusercontent.com/u/4708805?s=64&v=4)*/*https://github.com/dreamlax*/en/*[ ![GitHub avatar of dvdvgt](https://avatars.githubusercontent.com/u/40773635?s=64&v=4)*/*https://github.com/dvdvgt*/se/*[ ![GitHub avatar of flxo](https://avatars.githubusercontent.com/u/129436?s=64&v=4)*/*https://github.com/flxo*/va/*[ ![GitHub avatar of jakobrs](https://avatars.githubusercontent.com/u/10761079?s=64&v=4)*/*https://github.com/jakobrs*/ht/*[ ![GitHub avatar of jdm204](https://avatars.githubusercontent.com/u/34479575?s=64&v=4)*/*https://github.com/jdm204*/ A/*[ ![GitHub avatar of kianmeng](https://avatars.githubusercontent.com/u/134518?s=64&v=4)*/*https://github.com/kianmeng*/tH/*[ ![GitHub avatar of liamsanft](https://avatars.githubusercontent.com/u/38260698?s=64&v=4)*/*https://github.com/liamsanft*/Gi/*[ ![GitHub avatar of oskgo](https://avatars.githubusercontent.com/u/92018610?s=64&v=4)*/*https://github.com/oskgo*/ly/*[ ![GitHub avatar of rpitasky](https://avatars.githubusercontent.com/u/111201305?s=64&v=4)*/*https://github.com/rpitasky*/ub/*[ ![GitHub avatar of thecaralice](https://avatars.githubusercontent.com/u/43097806?s=64&v=4)*/*https://github.com/thecaralice*/tp/*[ ![GitHub avatar of user202729](https://avatars.githubusercontent.com/u/25191436?s=64&v=4)*/*https://github.com/user202729*/4)/*[ ![GitHub avatar of vxpm](https://avatars.githubusercontent.com/u/59714841?s=64&v=4)*/*https://github.com/vxpm*/9490724?s=64&v=4) ](https://github.com/SUPERCILEX)
  - [ ![GitHub ava/*[ Bibliographies ](/docs/reference/model/bibliography/)*/m/*[ citations ](/docs/reference/model/cite/)*//TomBinford)
  - [ ![GitHub avatar of abdulmelikbekmez](https://avatars.githubusercontent/*[ reference ](/docs/reference/model/ref/)*/b.com/abdulmelikbekmez)
  - [ ![GitHub avatar of alerque](https://avatars.githubusercontent.com/u/173595?s=64&v=4) ](https://github.com/alerque)
  - [ ![GitHub avatar of chicoferreira](https://avatars.githubusercontent.com/u/36338391?s=64&v=4) ](https://github.com/chicoferreira)
  - [ ![GitHub avatar o/*![GitHub avatar of fig/*[ ` footer-descent ` ](/docs/reference/layout/page/#parameters-footer-descent)*/rman)
  - [ ![GitHub avatar of lucifer1004](https://avatars.githubusercontent.com/u/13583761?s=64&v=4) ](https://github.com/lucifer1004)
  - [ ![GitHub a/*![GitHub avatar of 7sDream](https://avatars.githubusercontent.com/u/7822577?s=64&v=4)*/://github.com/raphCode)
  - [ ![GitHub avatar of thehydrogen](https://avatars.githubusercontent.com/u/34059898?s=64&v=4) ](https://github.com/thehydrogen)
  -/*[ ` state ` ](/docs/reference/introspection/state/ "`state`")*/rcontent.com/u/1325621?s=64&v=4) ](https://github.com/zach-capalbo)

[ ![â](/assets/icons/16-arrow-right.svg) 0.7.0  Previous page
](/docs/changelog/0.7.0/) [ ![â](/assets/icons/16-arrow-right.svg) 0.5.0
Next page /*[ ` query ` ](/docs/reference/introspection/query/ "`query`")*/  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Changelog ](/docs/changelog/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Earlier ](/docs/changelog/ea/*![GitHub avatar of LaurenzV](https://avatars.githubusercontent.com/u/47084093?s=64&v=4)*/ges:*

    - /*[ ` locate ` ](/doc/*![GitHub avatar of ModProg](https://avatars.githubusercontent.com/u/11978847?s=64&v=4)*/`
    - Changed default style for/*![GitHub avatar of RafDevX](https://avatars.githubusercontent.com/u/56204853?s=64&v=4)*/as a bit more indent 
  - Command/*![GitHub avatar of Tom-stack3](https://avatars.githubusercontent.com/u/76645845?s=64&v=4)*/nts in CLI binary 
    - Fixed build/*![GitHub avatar of arctic-penguin](https://avatars.githubusercontent.com/u/103587359?s=64&v=4)*/for disabling [ matrix ](/docs/reference/*![GitHub avatar of barvirm](https://avatars.githubusercontent.com/u/15948420?s=64&v=4)*/tyle`")*/math  .  mat  (  delim  /*![GitHub avatar of dreamlax](https://avatars.githubusercontent.com/u/4708805?s=64&v=4)*/)  $  ` . 
    - Added [ ` separat/*![GitHub avatar of dvdvgt](https://avatars.githubusercontent.com/u/40773635?s=64&v=4)*/ - Added [ ` round ` ](/docs/ref/*![GitHub avatar of flxo](https://avatars.githubusercontent.com/u/129436?s=64&v=4)*/ow zeros. To reset a counter, /*![GitHub avatar of jakobrs](https://avatars.githubusercontent.com/u/10761079?s=6/*[ ` smallcaps ` ](/docs/reference/text/smallcaps/ "`smallcaps`")*/on [ ` location ` ](/docs/reference/introspection/location/ "`location`") type 
    - Added symbols for double, triple, and quadruple dot accent 
    - Added smart quotes for Norwegian BokmÃ¥l 
    - Added Nix flake 
    - Fixed bibliography ordering in IEEE style 
    - Fixed pars/*[ ` figure ` ](/docs/reference/model/figure/ "`figure`")*/xed parsing of unba/*[ ` numbering ` ](/docs/reference/math/equation/#parameters-numbering)*/expected parsing of numbers as enumeratio/*[ ` n/*![GitHub avatar of rpitasky](https://avatars.githubusercontent.com/u/111201305?s=64&v=4)*/(/docs/reference/layout/page/#para/*![GitHub avatar of thecaralice](https://avatars.githubusercontent.com/u/43097806?s=64&v=4)*/(/docs/reference/layout/page/#paramet/*![GitHub avatar of user202729](https://avatars.githubusercontent.com/u/25191436?s=64&v=4)*/arameters-indent) property of term lists 
    - Numerous documentation fixes 
    - Links in bibli/*[ ` numbering ` ](/docs/reference/layout/page/#parameters-numbering)*/r comments/*[ ` counter ` ](/docs/reference/introspection/counter/ "`counter`")*/  - [ ![GitHub avatar of fig/*[ ` footer-descent ` ](/docs/reference/layout/page/#parameters-footer-descent)*/h/*[ ` header-ascent ` ](/docs/reference/layout/page/#parameters-header-ascent)*/sercontent.com/u/7622248?s=64&v=4) ](https://github.com/loewenheim)
  - [ ![GitHub avatar of 7sDream](https://avatars.githubusercontent.com/u/7822577?s=64&v=4) ](https://g/*[ ` math.equation ` ](/docs/reference/math/equation/)*/Ekdahl](https://avatars.githubusercontent.com/u/1409734?s=64&v=4) ](https://github.com/AlexanderEkdahl)
  - /*[ hanging indent ](/docs/reference/model/par/#parameters-hanging-indent)*/071431?s=64&v=4) ](https://github.c/*[ ` first-line-indent ` ](/docs/reference/model/par/#parameters-first-line-indent)*/ent.com/u/1116220/*[ logarithm ](/docs/reference/foundations/calc/#functions-log)*/ avatar of Easyoakland](https://avatars.githubusercontent.com/u/97992568?s=64&v=4) ]/*[ ` terms ` ](/docs/reference/model/terms/ "`terms`")*/r of KiruyaMomochi](https://avatars.githubusercontent.com/u/65301509?s=64&v=4) ](https://github.com/KiruyaMomochi)
  - [ ![GitHub avatar of LaurenzV](https://avatars.githubusercontent.com/u/47084093?s=64&v=4) ](https://github.com/LaurenzV)
  - [ ![GitHub avatar of ModProg](https://avatars.githubusercontent.com/u/11978847?s=64&v=4) ](https://github.com/ModProg)
  - [ ![GitHub avatar of RafDevX](https://avatars.githubusercontent.com/u/56204853?s=64&v=4) ](https://github.com/RafDevX)
  - [ ![GitHub avatar of Tom-stack3](https://avatars.githubusercontent.com/u/76645845?s=64&v=4) ](https://github.com/Tom-stack3)
  - [ ![GitHub avatar of arctic-penguin](https://avatars.githubusercontent.com/u/103587359?s=64&v=4) ](https://github.com/arctic-penguin)
  - [ ![GitHub avatar of barvirm](https://avatars.githubusercontent.com/u/15948420?s=64&v=4) ](https://github.com/barvirm)
  - [ ![GitHub avatar of dreamlax](https://avatars.githubusercontent.com/u/4708805?s=64&v=4) ](https://github.com/dreamlax)
  - [ ![GitHub avatar of dvdvgt](https://avatars.githubusercontent.com/u/40773635?s=64&v=4) ](https://github.com/dvdvgt)
  - [ ![GitHub avatar of flxo](https://avatars.githubusercontent.com/u/129436?s=64&v=4) ](https://github.com/flxo)
  - [ ![GitHub avatar of jakobrs](https://avatars.githubusercontent.com/u/10761079?s=6/*[ ` smallcaps ` ](/docs/reference/text/smallcaps/ "`smallcaps`")*/m204](https://avatars.githubusercontent.com/u/34479575?s=64&/*[ ` panic ` ](/docs/reference/foundations/panic/ "`panic`")*/kianmeng](https://*[ ` clusters ` ](/docs/reference/foundations/str/#definitions-clusters)*/k/*[ ` codepoints ` ](/docs/reference/foundations/str/#definitions-codepoints)*/ent.com/u/38260698?s=64&v=4) ](https://github.com/liam/*[ ` set document ` ](/docs/reference/model/document/#parameters-author)*/t.com/u/92018610?s=64&v=4) ](https://github.com/oskgo)
  - [ ![GitHub avatar of rpitasky](https://avatars.githubusercontent.com/u/111201305?s=64&v=4) ](https://github.com/rpitasky)
  - [ ![GitHub avatar of thecaralice](https://avatars.githubusercontent.com/u/43097806?s=64&v=4) ](https://github.com/thecaralice)
  - [ ![GitHub avatar of user202729](https://avatars.githubusercontent.com/u/25191436?s=64&v=4) ](https://github.com/user202729)
  -/*[ Box ](/docs/reference/layout/box/)*/a/*[ block ](/docs/reference/layout/block/ "block")*/) ](https://github.com/vxpm)

==  March 21, 2023

  - Reference and bibliography management 

    - [ Bibliographies ](/docs/reference/model/bibliography/) and [ citations ](/docs/reference/model/cite//*[ ` breakable ` ](/docs/reference/layout/block/#parameters-breakable)*/ MLA) 
  /*[ Numbering style ](/docs/reference/model/enum/#parameters-numbering)*/igures, formulas, and works from the bibl/*[ Markers ](/docs/reference/model/list/#parameters-marker)*/ferenceable with a label: 
      - ` = Introd/*[ ` eval ` ](/docs/reference/foundations/eval/ "`eval`")*/a> `
  - Introspection system for interactions between different parts of the document 

    - [ ` counter ` ](/docs/reference/introspection/counter/ "`counter`") function 
      - Access and modify counters for pages, headings, figures, and equations 
      - Define and use your own custom counters 
      - Time travel: Find out what the counter value was or will be at some other point in the document (e.g. when you're building a list of figures, you can determine the value of the figure counter at any /*[ ` box ` ](/docs/reference/layout/box/ "`box`")*/ order and not in code order 
    - [ ` state ` ](/docs/reference/introspection/state/ "`state`") function 
      - Manage arbitrary state across your document 
      - Time travel: Find out the value of your state at any position in the document 
      - State is modified in layout order and not in code order 
    - [ ` query ` ](/docs/reference/introspection/query/ "`quer/*[ RTL ](/docs/reference/text/text/#parameters-dir)*/element or a label, either in the whole document or before/after some location 
      - Link to elements, find out their position on the pages and access their fields 
      - Example use cases: Custom list of figures or page header with current chapter title 
    - [ ` locate ` ](/docs/reference/introspection/locate/ "`locate`") function 
      -/*[ ` place ` ](/docs/reference/layout/place/ "`place`")*/ 
      - Can be accessed to get the ` page ` and ` x ` , ` y ` coordinates 
      - Can be used with counters and state to find out their values at that location 
      - Can be used with queries to find elements before or after its location 
  - New [ ` measure ` ](/docs/reference/layout/measure/ "`measure`") funct/*[ ` baseline ` ](/docs/reference/layout/box/#parameters-baseline)*/ed in com/*[ ` box ` ](/docs/reference/layout/box/ "`box`")*/nce/fou/*[ ` tg ` ](/docs/reference/math/op/)*/t/*[ ` ctg ` ](/docs/reference/math/op/)*/nt based on the style context something is inser/*[ ` cases ` ](/docs/reference/math/cases/)*/d size of content) 
  - Exposed content representation 

    - Content is not opaque anymore 
    - Content can be compared for equality 
    - The tree of content elements can be traversed with code 
    - Can be observed in hover tooltips or with [ ` repr ` ](/docs/reference/foundations/repr/ "`repr`")
    - New [ methods ](/docs/reference/foundations/content/) on content: ` func ` , ` has ` , ` at ` , and ` location `
    - All optional fields on elements are now settable 
    - More uniform field names ( ` heading.title ` becomes ` heading.body ` , ` list.items ` becomes ` list.children ` , and a few more changes) 
  - Further improvements 

    - Added [ ` figure ` ](/docs/reference/model/figure/ "`figure`") function 
    - Added [ ` numbering ` ](/docs/reference/math/equation/#p/*[ Go to the announcement blog post. ](https://typst.app/blog/2023/january-
update)*/(/docs/reference/layout/page/#parameters-numbering) and [ ` number-align ` ](/docs/reference/layout/page/#parameters-number-align) parameters on page function 
    - The page function's [ ` header ` ](/docs/reference/layout/page/#parameters-header) and [ ` footer ` ](/docs/reference/layout/page/#parameters-footer) parameters do not take functions anymore. If you want to customize them based on the page number, use the new [ ` numbering ` ](/docs/reference/layout/page/#parameters-numbering) parameter or [ ` counter ` ](/docs/reference/introspection/counter/ "`counter`") function instead. 
    - Added [ ` footer-descent ` ](/docs/reference/layout/page/#parameters-footer-descent) and [ ` header-ascent ` ](/docs/reference/layout/page/#parameters-header-ascent) parameters 
    - Better default alignment in header and footer 
    - Fixed Arabic vowel placement 
    - Fixed PDF font embedding issues 
    - Renamed ` math.formula ` to [ ` math.equation ` ](/docs/reference/math/equation/)
    - Font family must be a named argument now: ` #  set  text  (  font  :  ".."  )  `
    - Added support for [ hanging indent ](/docs/reference/model/par/#parameters-hanging-indent)
    - Renamed paragraph ` indent ` to [ ` first-line-indent ` ](/docs/reference/model/par/#parameters-first-line-indent)
    - More accurate [ logarithm ](/docs/reference/foundations/calc/#functi/*![â](/assets/icons/16-arrow-right.svg)*/  - Improved some error messages 
    - Fixed /*![â](/assets/icons/16-arrow-right.svg)*/model/terms/ "`terms`") list 
  - Web app improvements 

    - Added template gal/*![Docs](/assets/icons/16-docs-dark.svg)*/dings, equations, raw blocks, and references 
    - Jump to the source of something by clicking on it in the preview panel (works for text, equations, images, and more) 
    - You can now upload your own fonts and use them in your project 
    - Hover debugging and autocompletion now takes multiple files into account and works in show rules 
    - Hover tooltips now automatically collapse multiple consecutive equal values 
    - The preview now automatically scrolls to the right place when you type 
    - Links are now clickable in the preview area 
    - Toolbar, preview, and editor can now all be hidden 
    - Added autocompletion for raw block language tags 
    - Added autocompletion in SVG files 
    - New back button instead of four-dots button 
    - Lots of bug fixes 

==  February 25, 2023

  - Font changes 
    - New default font: Linux Libertine 
    - New default font for raw blocks: DejaVu Sans Mono 
    - New default font for math: Book weight of New Computer Modern Math 
    - Lots of new math fonts available 
    - Removed Latin Modern fonts in favor of New Computer Modern family 
    - Removed unnecessary smallcaps fonts which are already accessible through the corresponding main font and the [ ` smallcaps ` ](/docs/reference/text/smallcaps/ "`smallcaps`") function 
  - Improved default spacing for headings 
  - Added [ ` panic ` ](/docs/reference/foundations/panic/ "`panic`") function 
  - Added [ ` clusters ` ](/docs/reference/foundations/str/#definitions-clusters) and [ ` codepoints ` ](/docs/reference/foundations/str/#definitions-codepoints) methods for strings 
  - Support for multiple authors in [ ` set document ` ](/docs/reference/model/document/#parameters-author)
  - Fixed crash when string is accessed at a position that is not a char boundary 
  - Fixed semicolon parsing in ` #  var  ; `
  - Fixed incremental parsing when inserting backslash at end of ` #  "abc"  `
  - Fixed names of a few font families (including Noto Sans Symbols and New Computer Modern families) 
  - Fixed autocompletion for font families 
  - Improved incremental compilation for user-defined functions 

==  February 15, 2023

  - [ Box ](/docs/reference/layout/box/) and [ block ](/docs/reference/layout/block/ "block") have gained ` fill ` , ` stroke ` , ` radius ` , and ` inset ` properties 
  - Blocks may now be explicitly sized, fixed-height blocks can still break across pages 
  - Blocks can now be configured to be [ ` breakable ` ](/docs/reference/layout/block/#parameters-breakable) or not 
  - [ Numbering style ](/docs/reference/model/enum/#parameters-numbering) can now be configured for nested enums 
  - [ Markers ](/docs/reference/model/list/#parameters-marker) can now be configured for nested lists 
  - The [ ` eval ` ](/docs/reference/foundations/eval/ "`eval`") function now expects code instead of markup and returns an arbitrary value. Markup can still be evaluated by surrounding the string with brackets. 
  - PDFs generated by Typst now contain XMP metadata 
  - Link boxes are now disabled in PDF output 
  - Tables don't produce small empty cells before a pagebreak anymore 
  - Fixed raw block highlighting bu/*[ ![â](/assets/icons/16-arrow-right.svg)*/ges, and transformations (move/rotate/scale//*[ ![â](/assets/icons/16-arrow-right.svg)*/them into a paragraph, use a [ ` box ` ](/docs/reference/layout/box/ "`box`") a/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/w required in an "everything" show rule: Write ` sho/*[ Guides ](/docs/guides/)*/ of ` show  it  => .. ` . This prevents int/*[ Page setup guide ](/docs/guides/page-setup-guide/)*/ Non-math content like a shape or table in a math formula is now centered vertically 
  - Support for widow and orphan prevention within co/*[ appearance
](https://practicaltypography.com/page-margins.html)*/m/*[ legibility
](https://designregression.com/article/line-length-revisited-following-the-
research)*/apes 
  - Support for fractional (i.e. ` 1fr  ` ) widths for boxes 
  - Fixed bug where columns jump to next page 
  - Fixed bug where list items have no leading 
  - Fixed relative sizing in lists, squares and grid auto columns 
  - Fixed relative displacement in [ ` place ` ](/docs/reference/layout/place/ "`place`") function 
  - Fixed that lines don't have a size 
  - Fixed bug where ` set  document  (  ..  ) /*[
` page ` ](/docs/reference/layout/page/)*/- Fixed parsing of ` not  in  ` operation 
  - Fixed hover tooltips in math 
  - Fixed bug where a heading show rule may not contain a pagebreak when an outline is present 
  - Added [ ` baseline ` ](/docs/reference/layout/box/#param/*[ ` page `
](/docs/reference/layout/page/)*/ocs/reference/layout/box/ "`box`")
  - Added [ ` tg ` ](/docs/reference/math/op/) and [ ` ctg ` ](/docs/reference/math/op/) operators in math 
  - Added delimiter setting for [ ` cases ` ](/docs/reference/math/cases/) function 
  - Parentheses are now included when accepting a function autocompletion 

==  February 2, 2023

  - Merged text and math/*[Preview](/assets/docs/f-lyLMO5vdXuAMoj28s3AgAAAAAAAAAA.png)*/finity ` with the alias ` oo ` ) 
  - Fixed missing italic mappings 
  - Math italics correction is now applied properly 
  - Parentheses now scale in ` $  zeta  (  x  /  2  )  $  `
  - Fixed placement of large root index 
  - Fixed spacing in ` $  abs  (  -  x  )  $  `
  - Fixed inconsistency between text and identifiers in math 
  - Accents are now ignored when positioning superscripts 
/*[ ` header-ascent ` ](/docs/reference/layout/page/#parameters-
header-ascent)*/w/*[ ` footer-descent `
](/docs/reference/layout/page/#parameters-footer-descent)*/rbitrary math directly in content 

==  January 30, 2023

[ Go to the announcement blog post. ](https://typst.app/blog/2023/january-
update)

  - New expression syntax in markup/math 
    - Blocks cannot be directly embedded in markup anymore 
    - Like other expressions, they now require a leadi/*[ ` page `
](/docs/reference/layout/page/)*/with hash, including literals ( ` #  "string"  ` ) as well as field access and method call without space: ` #  emoji  .  face  `
  - New import syntax 
    - ` #  import  "module.typ"  ` creates binding named ` module `
    - ` #  import  "module.typ"/*[ page's paper
argument ](/docs/reference/layout/page/#parameters-paper)*/  - ` #  import  emoji  :  face  ,  turtle ` to import from already bound module 
  - New symbol handling 
    - R/*[Preview](/assets/docs/Qkb9fYb5SMfDaJ63aYycTwAAAAAAAAAA.png)*/sym ` , ` emoji ` , and ` math `
    - Math module also reexports all of ` sym `
    - Modifie/*[ ` width ` ](/docs/reference/layout/page/#parameters-
width)*/n/*[ ` height ` ](/docs/reference/layout/page/#parameters-height)*/ymbol definitions with ` symbol ` function 
    - Symbols now listed in documentation 
  - New ` /*[Preview](/assets/docs/RltrP5jjKi_qENhy9B-HyQAAAAAAAAAA.png)*/  - Variables and function calls directly in math (without hash) access this modul/*[ Typographers consider
lines that fit between 45 and 75 characters best length for legibility
](http://webtypography.net/2.1.2)*/  vec  (  delim  :  "["  )  `
  - Delimiter matching in math 
    - Any opening delimiters matches any closing one/*![â](/assets/icons/16-arro/*[Preview](/assets/docs/8IFKrlz4CTSpYgWgKq02tAAAAAAAAAAA.png)*//*![â](/assets/icons/16-arrow-right.svg)*//use ` lr ` fu/*[ ` page `
](/docs/reference/layout/page/)*/n matched delimiters /*![Docs](/assets/ico/*[ ` align
` ](/docs/reference/layout/align/)*/the ` lr ` function to scale the brackets (or just one brack/*![](/assets/icons/16-arrow-right.svg)*/Multi-line math with alignment 
    - The ` \ ` character inserts a line break 
    - The ` & ` character defines an alignment point 
    - Ali/*[Preview](/assets/docs/yJb2DmVYA18DCHWDRA50QQAAAAAAAAAA.png)*/ matrices 
    - Multiple alignment points are supported 
  - More capable math function calls 
    - Function calls directly in math can now take code expressions with hash 
    - They can now also take named arguments 
    - Within math function calls, semicolons turn preceding arguments to arrays to support matrices: ` $  mat  (  1  ,  2  ;  3  ,  4  )  $  `
  - Arbitrary content in math 
    - Text, images, and other arbitrary content can now be embedded in math 
    - Math now also supports font fallback to support e.g. CJK and emoji 
  - More math features 
    - New text operators: ` op ` function, ` lim ` , ` max ` , etc. 
    - New matrix function: ` mat `
    - New n-ary roots with ` root ` function: ` $  root  (  3  ,  x  )  $  `
    - New under- and overbraces, -brackets, and -lines 
    - New ` abs ` and ` norm ` functions 
    - New shorthands: ` [| ` , ` |] ` , and ` || `
    - New ` attach ` function, overridable attachments with ` script ` and ` limit `
    - Manual spacing in math, with ` h ` , ` thin ` , ` med ` , ` thick ` and ` quad `
    - Symbols and other content may now be used like a function, e.g. ` $  zeta  (  x  )  $  `
    - Added Fira Math font, removed Noto Sans Math font 
    - Support for alternative math fonts through ` #  show  math  .  formula  :  set  text  (  "Fira Math"  )  `
  - More library improvements 
    - New ` calc ` module, ` abs ` , ` min ` , ` max ` , ` even ` , ` odd ` and ` mod ` moved there 
    - New ` message ` argument on ` assert ` function 
    - The ` pairs ` method on dictionaries now returns an array of length-2 arrays instead of taking a closure 
    - The method call ` dict  .  at  (  "key"  )  ` now always fails if ` "key" ` doesn't exist Previously, it was allowed in assignments. Alternatives are ` dict  .  key  =  x ` and ` dic/*[ `
binding ` ](/docs/reference/layout/page/#parameters-binding)*/nality 
    -/*[
` page ` ](/docs/reference/layout/page/)*/ Autocompletion for methods available on a value 
    - Autocompletion for symbols and modules 
    - Autocompletion for imports 
    - Hover over an identifier to see its value(s) 
  - Further editor improvements 
    - New Font menu with previews 
    - Single projects may now be shared with share links 
    - New dashboard experience if projects are shared with you 
    - Keyboard Shortcuts are now listed in the menus and there are more of them 
    - New Offline indicator 
    - Tooltips for all buttons 
    - Improved account pr/*[ ` header ` ](/docs/reference/layout/page/#parameters-
header)*/o/*[ ` footer ` ](/docs/reference/layout/page/#parameters-footer)*/ parser 
    -/*[ ` page ` ](/docs/reference/layout/page/*![Preview](/assets/docs/Qkb9fYb5SMfD/*[Preview](/assets/docs/tItTkMk79gxARzJosrxVsgAAAAAAAAAA.png)*/
    - Added redirection to the page originally navigated to after signin 

[ ![â](/assets/icons/16-arro/*[Preview](/assets/docs/8IFKrlz4CTSpYgWgKq02tAAAAAAAAAAA.png)*/[ ![â](/assets/icons/16-arrow-right.svg) Roadmap
Next page  ](/docs/roadmap/)



= *docs/guides/page-setup-guide.md**/*![Preview](/assets/docs/RltrP5jjKi_qENhy9B-HyQAAAAAAAAAA.png)*/yout/align/)*/s/icons/16-arrow-right.svg)
  - [ Guides ](/docs/guides/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Page setup guide ](/docs/guides/page-setup-guide/)

=  Page setup guide

Your page setup is a big part of the first impression your document gives.
Line lengths, margins, and columns influence [ appearance
](https://practicaltypography.com/page-margins.html) and [ legibility
](https://designregression.com/article/line-length-revisited-following-the-
research) while the right headers and footers will help your reader easily
navigate your document. This guide will help you to customize pages, margins,
headers, footers, and page numbers so that they are the right fit for your
c/*[ counter
](/docs/reference/introspection/counter/ "counter")*/page has a width, a height, and margins on all four sides. The
top and bottom margins may contain/*![Preview](/assets/docs/yJb2DmVYA18DCHWDRA50QQAAAAAAAAAA.png)*/reference/layout/page/) element is where you control all of
the page setup. If you make changes with this set rule, Typst will ensure that
there is a new and conforming empty page afterward, so it may insert a page
break. Therefore, it is best to specify your [ ` page `
](/docs/reference/layout/page/) set rule at the start of your document or in
your template.

    
    
    #set rect(
      width: 100%,
      height: 100%,
      inset: 4pt,
    )
    
    #set page(
      paper: "iso-b7",
      header: rect(fill: aqua)[Header],
      footer: rect(fill: aqua)[Footer],
  /*[ label ](/docs/reference/foundations/label/ "label")*/aqua.ligh/*[ query system ](/docs/reference/introspection/query/)*/oj28s3AgAAAAAAAAAA.png)

This example visualizes the dimensions for page content, headers, and footers.
The page content is the page size (ISO B7) minus each side's default margin.
In the top and the bottom margin, there are stroked rectangles visualizing the
header and footer. They do not touch the main content, instead, they are
offset by 30% of the respective margin. You can control this offset by
specifying the [ ` header-ascent ` ](/docs/reference/layout/page/#parameters-
header-ascent) and [ ` footer-descent `
](/docs/reference/layout/page/#parameters-footer-descent) arguments.

Below, the guide will go more into detail on how to accomplish common page
setup requirements with examples.

==  Customize page size and margins

Typst's default page size is A4 paper. Depending on your region and your use
case, you will want to change this. You can do this by using the [ ` page `
](/docs/reference/layout/page/) set rule and passing it a string argument to
use a common page size. Options include the complete ISO 216 series (e.g. /*[ ` numbering `
](/docs/reference/layout/page/#parameters-numbering)*/" ` or `
"us-/*[ ` page
` ](/docs/reference/layout/page/)*/nce for the [ page's p/*[ _numbering
pattern_ ](/docs/reference/model/numbering/#parameters-numbering)*/all
available options.

    
    
    #set page("us-letter")
    
    This page likes freedom.
    

![Preview](/assets/docs/Qkb9fYb5SMfD/*[Preview](/assets/docs/tItTkMk79gxARzJosrxVsgAAAAAAAAAA.png)*/e size to some dimensions, you can specify
the named arguments [ ` width ` ](/docs/reference/layout/page/#parameters-
width) and [ ` height ` ](/docs/reference/layout/page/#parameters-height)
instead.

    
    
    #set page(width: 12cm, height: 12cm)
    
    This page is a square.
    

![Preview](/assets/docs/RltrP5jjKi_qENhy9B-HyQAAAAAAAAAA.png)

===  Change the page's margins

Margins are a vital ingredient for good typography: [ Typographers consider
lines that fit betwee/*[Preview](/assets/docs/1_R2fSOS46hX8DevWO3SHwAAAAAAAAAA.png)*/ebtypography.net/2.1.2) and your margins and  columns  help define
line widths. By default, Typst will create margins proportional to the page
size of your document. To set custom margins/*[Preview](/assets/docs/y7IZgFjQvtyaq__YsS98MAAAAAAAAAAA.png)*/e/#param/*[ ` numbering ` function reference
](/docs/reference/model/numbering/#parameters-numbering)*/argin ` argument will accept a length if you want to set all margins to
the same width. However, you often want to se/*[ ` number-
align ` ](/docs/reference/layout/page/#parameters-number-align)*/   
    
    /*[ ` page ` ](/docs/reference/layout/page/)*/bottom: 2cm,
      x: 1.5cm,
    ))
    
    #lorem(100)
    

![Preview](/assets/docs/yJb2DmVYA18DCHWDRA50QQAAAAAAAAAA.png)

The page margin dictionary can have keys for each side ( ` top ` , ` bottom `
, ` left ` , ` right ` ), but you can also control left and right together by
setting the ` x ` key of the margin dictionary, like in the example. Likewise,
the top and bottom margins can be adjusted together by setting the ` y /*[ ` numbering `
](/docs/reference/layout/page/#parameters-numbering)*/ctionary, the/*[ ` page
` ](/docs/reference/layout/page/)*/ unset sides. To prevent this and set all
remaining margins to a common size, you can use the ` rest ` key. For example,
` #  set  page  (  margin  :  (  left  :  1.5in  ,  rest  :  1in  )  )  ` will
set the left margin to 1.5 inches and the remaining margins to one inch.

===  Different margins on alternating pages

Sometimes, you'll need to alternate horizontal margins for even and odd pages,
fo/*[Preview](/assets/docs/pa4FfkSAmZ8SbHMJhFhITAAAAAAAAAAA.png)*/n on the
outsides of its pages. Typst keeps track of whether a page is to the left or
right of the binding. You can use this information and set the ` inside ` or `
outside ` keys of the margin dictionary. The ` inside ` margin points towards
the spine, and the ` outside ` margin points towards the edge of the bound
book.

    
    
    #set page(margin: (inside: 2.5cm, outside: 2cm, y: 1.75cm))
    

Typst will assume that documents written in Left-to-Right scripts are bound on
the left while books written in Right-to-Left scripts are bound on the right.
However, you will need to change this in some cases: If your first page is
output by a different app, the binding is reversed from Typst's perspective.
Also, some books, like English-language Mangas are customarily bound on the
right, despite English using Left-to-Right script. To change the binding side
and explicitly set where the ` inside ` and ` outside ` are, set the [ `
binding ` ](/docs/reference/layout/page/#parameters-bindin/*[Preview](/assets/docs/Px4MgFDGZh5TfTBwUSS_KAAAAAAAAAAA.png)*/) set rule.

    
    
    // Produce a book bound on the right,/*[ circles
](/docs/reference/visualize/circle/)*/#set text(lang: "es")
    #s/*[ box
](/docs/reference/layout/box/ "box")*/ ` is ` left ` , ` inside ` margins will be on the left on odd
pages, and vice versa.

==  Add headers and footers

Headers a/*[ array ](/docs/reference/foundations/array/ "array")*/ of every page.
You can add custom headers and footers or just insert a page number.

In case you need more than just a page number, the best way to insert a header
and a/*[ _join_
](/docs/reference/scripting/#blocks)*/e/layout/page/#parameters-
header) and [ ` footer ` ](/docs/reference/layout/page/#parameters-footer)
arguments of the [ ` page ` ](/docs/reference/layout/page/) set rule. You can
pass any content as their values:

    
    
    #se/*![Preview](/assets/docs/tItTkMk79gxARzJosrxVsgAAAAAAAAAA.png)*/)
      /*[ ` inset ` argument
](/docs/reference/layout/box/#parameters-inset)*/view](/assets/docs/8IFKrlz4CTSpYgWgKq02tAAAAAAAAAAA.png)

Headers are bottom-aligned by default so that they do not collide with the top
edge of the page. You can change this by wrapping your header in the [ ` align
` ](/docs/reference/layout/align/) function.

===  Different header and footer on specific pages

You'll need different headers and footers on some pages. For example, you may
not want a hea/*![Preview](/assets/docs/1_R2fSOS46hX8DevWO3SHwAAAAAAAAAA.png)*/ounter/ "counter")*/y remove the header on the first page:

    
    
    #set page(header: context {
      if counter(page).get().first() > 1 [
        _Lisa Strassner's Thesis_
        #h(/*![Preview](/assets/docs/y7IZgFjQvtyaq__YsS98MAAAAAAAAAAA.png)*/
    #lorem(150)
    

This example may look intimidating, but let's break it down: By using the `
context  ` keyword, we are telling Typst that the header depends on where we
are in the document. We then ask Typst if the page [ counter
](/docs/reference/introspection/counter/ "counter") is larger than one at our
(context-dependent) current position. The page counter starts at one, so we
are /*[ ` page `
](/docs/reference/introspection/location/#definitions-page)*/s.
This feature is used for ite/*[ ` here ` ](/docs/reference/introspection/here/ "`here`")*/single level, so we can just look at the first one.

You can, of course, add an ` else ` to this example to add a different header
to the first page instead.

===  Adapt headers/*[Preview](/assets/docs/09ytRFFbm_ZOLxjka15n_QAAAAAAAAAA.png)*/described in the previous section can be adapted to perform more
advanced tasks using Typst's/*[ ` page-numbering `
](/docs/reference/introspection/location/#definitions-page-numbering)*/down. We will mark our tables with a `
<big-table> ` [ label ](/docs/reference/foundations/label/ "label") and use
the [ query system ](/docs/reference/introspection/query/) to find out if such
a label exists on the current page:

    
    
    #set page(header: context {
      let page-counter =
      let /*[ ` page ` ](/docs/reference/layout/page/#parameters-columns)*/).get(/*![â](/assets/icons/16-arrow-right.svg)*/
        counter(page).at(m.locati/*[ `
columns ` function ](/docs/reference/*![â](/assets/icons/16-arrow-
right.svg)*/s Thesis_
        #h(1fr)
        National Academy of Sciences
      ]
    }))
    
    #lo/*![Docs](/assets/icons/16-docs-dark.svg)*/ocs/FgQ5mR5BdbOwdaPvmQss-wAAAAAAAAAA.png)*/], [B],
      [C], [D],
    ) <big-table>
    

Here, we query for all instances of the ` <big-table> ` label. We then check
that none of the table/*[ `
place ` function ](/docs/reference/layout/place/)*/print the header. This example also uses variables to be more concise. Just as
above, you could add an ` else ` to add another header instead of deleting it.

==  Add and customize page numbers

Page numbers help readers keep track of and reference your document more
easily. The simplest way to insert page numbers is the [ ` numbering `
](/docs/reference/layout/page/#parameters-num/*[Preview](/assets/docs/rwgbgpUV52923GFV_9bCEQAAAAAAAAAA.png)*/page/) set rule. You can pass a [ _numbering
pattern/*![Preview](/assets/docs/Px4MgFDGZh5TfTBwUSS_KAAAAAAAAAAA.png)*/ring that
shows how you want your pages to be numbered.

   /*[ figures ](/docs/reference/model/figure/#parameters-
placement)*/ page.
    

![Preview](/assets/docs/tItTkMk79gxARzJosrxVsgAAAAAAAAAA.png)

Above, you can check out the simplest conceivable e/*[ ` columns ` function ](/docs/reference/layout/columns/)*/ of the footer. You can specify other
characters than ` "1" ` to get other numerals. For example, ` "i" ` will yield
lowercase Roman numerals. Any character that is not interpreted as a number
will be output as-is. For example, put dashes around your page number by
typing this:

    
    
    #set page(numbering: "â 1 â")
    
    This is a â numbered â page.
    

![Preview](/assets/docs/1_R2fSOS46hX8DevWO3SHwAAAAAAAAAA.png)

You can add the total number of pages by entering a second number character in
the string.

    
    
    #set page(numbering/*[Preview](/assets/docs/4ald2xJRDpaFMxVXu7aiUQAAAAAAAAAA.png)*/ 

![Preview](/assets/docs/y7IZgFjQvtyaq__YsS98MAAAAAAAAAAA.png)

Go to the [ ` numbering ` function reference
](/docs/reference/model/numbering/#parameters-numbering) to learn more about
the arguments you can pass here.

In case you need to right- or left-align the page number, use the [ ` number-
align ` ](/docs/reference/layout/page/#parameters-number-align) argume/*[ ` #  colbreak  (  )  `
](/docs/reference/layout/colbreak/)*/e. Alternating alignment
between even and odd pages is not currently supported using this property. To
do this, you'll need to specify a custom footer with your footnote and query
the page counter as described in the section on conditionally omitting headers
and footers.

===  Custom footer with page numbers

Sometimes, you need to add other content than a page number to your footer.
Ho/*[ ` page `
](/docs/reference/layout/page/)*/ numbering `
](/docs/reference/layout/page/#parameters-numbering) argument of the [ ` page
` ](/docs/reference/layout/page/) set rule is ignored. This section shows you
how to add a custom footer with page numbers and more.

    
    
    #set page(footer: context [
      *American Society of Proceedings*
      #h(1fr)
      #counter(page).display(
        "1/1",
        both: true,
      )
    ])
      #counter(page).display(
        "1/1",
        both: true,
      )
    ])
    
    This page ha/*[Preview](/assets/docs/U5FByA07ZCcGdizR_XbtEwAAAAAAAAAA.png)/*[ ![â](/assets/icons/16-arrow-right.svg)*/d some strongly emphasi/*![Preview](/assets/docs/09ytRFFbm_ZOLxjka15n_QAAAAAAAAAA.png)*/(/assets/icons/16-arrow-
right.svg)*/etrieve the page counter
and use its ` display ` function to show its current value. We a/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ numbering pattern applies to the current _and_
fina/*[ Guides ](/docs/guides/)*/so get more creative with the page number. /*[ Table guide ](/docs/guides/table-guide/)*/h page.

    
    
    #set page(footer: context [
      *Fun Typography Club*
      #h(1fr)
      #let (num,) = counter(page).get()
      #let circles = num * (
        box(circle(
          radius: 2pt,
          fill: navy,
        )),
      )
      #box(
        inset: (bottom: 1pt),
        circles.join(h(1pt))
      )
    ])
      #let circles = num * (
        box(circle(
          radius: 2pt,
          fill: navy,
        )),
      )
      #box(
        inset: (bottom: 1pt),
        circl/*![Preview](/assets/docs/FgQ5mR5BdbOwdaPvmQss-wAAAAAAAAAA.png)*/m footer.
    

![Preview](/assets/docs/Px4MgFDGZh5TfTBwUSS_KAAAAAAAAAAA.png)

In this example, we use the number of pages to create an array of [ circles
](/docs/reference/visualize/circle/) . The circles are wrapped in a [ box
](/docs/reference/layout/box/ "box") so they can all appear on the same line
because they are blo/*[ check
out their reference page ](/docs/reference/model/table/)*/his [ array ](/docs/reference/foundations/array/ "array") depends
on the current page number.

We th/*[ ` outline ` function ](/docs/reference/model/outline/)*/ith 1pt of space
between them. Th/*![Preview](/assets/docs/rwgbgpUV52923GFV_9bCEQAAAAAAAAAA.png)*/ference/scripting/*[ ` table ` function
](/docs/reference/model/table/)*/ngle value, interspersed with its argument. In our case, we get a single
content value with circles and spaces between them that we can use with the
align function. Finally, we use another box to ensure that the text and the
circles can share a line and use the [ ` inset ` argument
](/docs/reference/layout/box/#parameters-inset) to raise the circles a bit so
they line up nicely with the text.

===  Reset the page number and skip pages

Do you, at some point in your document, need to reset the page number? Maybe
you want to start with the first page only after the title page. Or maybe you
need to skip a few/*[Preview](/assets/docs/DrLInmCn8ozR2FQ7a7txfwAAAAAAAAAA.png)*/rinted product.

The right way to modify the page number is to manipulate the page [ counter
](/docs/reference/introspection/counter/ "counter") /*[
argument list ](/docs/reference/foundations/function/)*/o 1.

    
    
    #counter(page).update(1)
    /*![Preview](/assets/docs/4ald2xJ/*[ gutter ](/docs/reference/model/table/#parameters-gutter)*/s/reference/foundations/content/)*/create a page break. You can also
update the counter given its previous value by passing a function:

    
    
    #counter(page).update(n => n + 5)
    

In this example, we skip five pages. ` n ` is the current value of the page
counter and ` n + 5 ` is the return value of our function.

In case you need to retrieve the actual page number instead of the value of
the page counter, you can use the [ ` page `
](/docs/reference/introspection/location/#definitions-page) method on the
return value of the [ ` here ` ](/docs/reference/introspection/here/ "`here`")
function:

    
    
    #counter(page).update(n => n + 5)
    
    /*[ ` table.header `
function ](/docs/reference/model/table/#definitions-header)*/    #context here().page()
    

![Preview](/assets/docs/09ytRFFbm_ZOLxjka15n_QAAAAAAAAAA.png)

You can also obtain the page numbering pattern from the location returned by `
here ` with the [ ` page-numbering `
](/docs/reference/introspection/location/#definitions-page-numbering) method.

==  Ad/*[Preview](/assets/docs/aiVJ7GWTsso2QP8oAOCqrgAAAAAAAAAA.png)*/e while maintaining legible
line lengths. Columns /*[ strongly emphasizes
](/docs/reference/model/strong/)*/e
whitespace. This space is called the gutter.

To lay out your content in columns, just specify the desired number of columns
in a /*![Preview](/assets//*[ array
](/docs/reference/foundations/array/ "array")*/ adjust the amount of space between the columns, add a set rule on the [ `
columns ` function ](/docs/reference/*![â](/assets/icons/16-arrow-
right.svg)*/p53c3XgAAAAAAAAAA.png)*/ 
    
    #set page(columns: 2)
    #set columns(gutter: 12pt)
   /*![Docs](/assets/icons/16-docs-dark.svg)*/ts/docs/Fg/*![](/assets/icons/16-arrow-right.svg)*/Very commonly, scientific paper/*![](/assets/icons/16-arrow-right.svg)*/ract,
while the main body is set in two-columns. To achieve this effect, Typst's [ `
place ` function ](/docs/reference/layout/place/) can temporarily escape the
two-column layout by specifying ` float:  true  ` and ` scope:  "parent"  ` :

    
    
    #set page(columns: 2)
    #set par(justify: true)
    
    #place(
      top + center,
      float: true,
      scope: "parent",
      text(1.4em, weight: "bold")[
        Impacts of Odobenidae
      ],
    )
    
    == About seals in the wild
    #lorem(80)
    

![Preview](/assets/docs/rwgbgpUV52923GFV_9bCEQAAAAAAAAAA.png)

_Floating placement_ refers to elements being pushed to the top or bottom of
the column or page, with the remaining content flowing in between. It is also
frequently used for [ figures ](/docs/reference/model/figure/#para/*[ Lengths ](/docs/reference/layout/length/)*/here in your document

To create columns within a nested layout, e.g. within a rectangle, you can use
the [ ` columns ` function ](/docs/reference/layout/columns/) directly.
However, it really should only be used within nested layouts. At the page-
level, the page set rule is /*[ ratio in percent ](/docs/reference/layout/ratio/)*/ things like page-level floats, footnotes, and line numbers.

    
    
    #rect(
      width: 6cm,
      height: 3.5cm,
      columns(2, gutter: 12pt)[
        In the dimly lit gas station,
        a solitary ta/*[ relative lengths ](/docs/reference/layout/relative/)*/h
        time. Its windows were dark,
        its engine idle, and its tires
        rested on the cold concrete.
      ]
    )
    

![Preview](/assets/docs/4ald2xJ/*[ gutter ](/docs/reference/model/table/#parameters-gutter)*/the columns on the last page of a document differ greatly in length, they
may create a lopsided and unappealing layout. That's why typographers /*[ fractional part of the free space ](/docs/reference/layout/fraction/)*/ is called
balancing columns. Typst cannot yet balanc/*![Preview](/assets/docs/DrLInmCn8ozR2FQ7a7txfwAAAAAAAAAA.png)*/ually by placing [ ` #  colbreak  (  )  `
](/docs/reference/layout/colbreak/) at an appropriate spot in your markup,
creating the desired column break manually.

==  One-off modifications

You do not need to override your page settings if you need to insert a single
page with a different setup. For example, you may want to insert a page that's
flipped to landscape to insert a big table or change the margin and columns
for your title page. In this case, you can call [ ` page `
](/docs/reference/layout/page/) as a function with your content as an argument
and the overrides as the other arguments. This will insert enough new pages
with your overridden settings to place your content on them. Typst will revert
to the page settings from the set rule after the call.

    
    
    #page(flipped: true)[
      = Multiplication table
    
      #table(
        columns: 5 * (1fr,),
        ..for x in range(1, 10) {
      /*[Preview](/assets/docs/2U_qe89XvypLADel8g81vgAAAAAAAAAA.png)*/ }
        }
      )
    ]
    

![Preview](/assets//*[ array
](/docs/reference/foundations/array/ "array")*//assets/icons/16-arrow-right.svg) Guide for LaTeX users  Previous
page  ](/docs/guides/guide-for-latex-users/) [ ![â](/assets/icons/16-arrow-
right.svg) Table guide  Next page  ](/docs/guides/table-guide/)



= *docs/guides/table-guide.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - !/*![Preview](/assets/docs/aiVJ7GWTsso2QP8oAOCqrgAAAAAAAAAA.png)*/des/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Table guide ](/docs/guides/table-guide/)

=  Table guide

Tables are a great way to present data to your readers in an easily readable,
compact, and organized manner. They are not only used for numerical values,
but also survey responses, task planning, schedules, and more. Because of this
wide/*[ references ](/docs/reference/model/ref/)*/ sing/*[ ` figure `
function ](/do/*![Preview](/assets/docs/U7CxDwHdU4boWRgp53c3XgAAAAAAAAAA.png)*/our document's
overarching design, and ultimately how your table can best serve your readers.

Typst can help you with your tables by automating styling, importing data from
other applications, and more! This guide takes you through a few of the most
common questions you may have when adding a table to your document with Typst.
Feel free to skip to the section most relevant to you â we designed this
guide to be read out of order.

If you want to look up a detail of how tables work, you should also [ check
out their reference page ](/docs/reference/model/table/) . And if you are
looking for a table of contents rather than a normal table, the reference page
of the [ ` outline ` function ](/docs/reference/model/outline/) is the right
place to learn more.

==  How to create a basic table?

In order to create a table in Typst, use the [ ` table ` function
]/*[Preview](/assets/docs/q8w9c3xaiqkQD9Ab1PAe6AAAAAAAAAAA.png)*/ to tell the
table function two things:

  - The number of columns 
  - The content for each of the table cells 

So, let's say you want to create a table with two columns describing the
ingredients for a cookie recipe:

    
    
    #table(
      columns: 2,
      [*Amount*], [*Ingredient*],
      [360g], [Baking flour],
      [250g], [Butter (room temp.)],
      [150g], [Brown sugar],
      [100g], [Cane sugar],
      [100g], [70% cocoa chocolate],
      [100g], [35-40% cocoa chocolate],
      [2], [Eggs],
      [Pinch], [Salt],
      [Drizzle], [Vanilla extract],
    )
    

![Preview](/assets/docs/DrLInmCn8ozR2FQ7a7txfwAAAAAAAAAA.png)

This example shows how to call, configure, and populate a table. Both the
column count and cell contents are passed to the table as arguments. The [
argument list ](/docs/reference/foundations/function/) is surrounded by round
parentheses. In it, we first pass the column count as a named argument. Then,
we pass multiple [ content blocks ](/docs/reference/foundations/content/) as
positional arguments. Each content block contains the contents for a single
cell.

To make the example more legible, we have placed two content block arguments
on each line, mimicking how they would appear in the table. You could also
write each cell on its own line. Typst does not care on which line you place
the arguments. Instead, Typst will place the content cells from left to right
(or right to left, if that is the writing direction of your language) and then
from top to bottom. It will automatically add enough rows to your table so
that it fits all of your content.

It is best to wrap the header row of your table in the [ ` table.header `
function ](/docs/reference/model/table/#definitions-header) . This clarifies
your intent and wi/*[ checkerboard patterns ](/docs/reference/layout/grid/#definitions-cell)*/e to users with a screen reader:

    
    
    #table(
      columns: 2,
      table.header/*[*Amount*][*Ingredient*]*/,
      [360g], [Baking flour],
     // ... the remaining cells
    )
    

![Preview](/assets/docs/aiVJ7GWTsso2QP8oAOCqrgAAAAAAAAAA.png)

You could also write a show rule that automatically [ strongly emphasizes
](/docs/reference/model/strong/) the contents of the first cells for a/*![Preview](/assets/docs/2U_qe89XvypLADel8g81vgAAAAAAAAAA.png)*/ins multiple tables!

    
    
    #show table.cell.where(y: 0): strong
    
    #table(
      columns: 2,
      table.he/*[Amount][Ingredient]*/ent],
      [360g], [Baking flour],
     // ... the remaining cells
    )
    

![Preview](/assets/docs/U7CxDwHdU4boWRgp53c3XgAAAAAAAAAA.png)

We are using a show rule with a selector for cell coordinates here instead of
applying our styles directly to ` table.header ` . This is due to a current
limitation of Typst that will be fixed in a future release.

Congratulations, you have created your first table! N/*[Preview](/assets/docs/UJoXkTjV0r6grf2p2oGJMAAAAAAAAAAA.png)*/okes  ,  add striped rows  , and more!

==  How to change the column sizes?

If you create a table and specify the number of columns, Typst will make each
column large enough to fit its largest cell. Often, you want something
different, for example/*[ ` rgb ` ](/docs/reference/visualize/color/#definitions-
rgb)*/ovide a list, specifying how wide you want each column to be, through
the ` columns ` argument. There are a few different ways to specify column
widths:

  - First, there is ` auto  ` . This is the default behavior and tells Typst to grow the column to fit its contents. If there is not enough space, Typst will try its best to distribute the space among the ` auto  ` -sized columns. 
  - [ Lengths ](/docs/reference/layout/length/) like ` 6cm  ` , ` 0.7in  ` , or ` 120pt  ` . As usual, you can also use the font-dependent ` em ` unit. This is a multiple of your current font size. It's useful if you want to size your table so that it always fits about the same amount of text, independent of font size. 
  - A [ ratio in percent ](/docs/reference/layout/ratio/) such as ` 40%  ` . T/*[Preview](/assets/docs/25lCWRlQDgNwC6P_ss5rsgAAAAAAAAAA.png)*/ space available to the table, so either the inner widt/*![Preview](/assets/docs/q8w9c3xaiqkQD9Ab1PAe6AAAAAAAAAAA.png)*/os and lengths into [ relative lengths ](/docs/reference/layout/relative/) . Be mindful that even if you specify a list of column widths that sum up to 100%, your table could still become larger than its container. This is because there can be [ gutter ](/docs/reference/model/table/#parameters-gutter) between columns that is not included in the column widths. If you want to make a table fill the page, the next option is often very useful. 
  - A [ fractional part of the free space ](/docs/reference/layout/fraction/) using the ` fr ` unit, such as ` 1fr ` . This uni/*[Preview](/assets/docs/cCvrBfZ8ZZjy8abtCE_cmgAAAAAAAAAA.png)*/t works as follows: First, Typst sums up the lengths of all columns that do not use ` fr ` s. Then, it determines how much horizontal space is left. This horizontal space then gets distributed to all columns denominated in ` fr ` s. During this process, a ` 2fr ` column will become twice as wide as a ` 1fr ` column. This is where the name comes from: The width of the column is its fraction of the total fractionally sized columns. 

Let's put this to use with a table that contains the dates, numb/*[Preview](/assets/docs/GD_bV9_znidgeZ0v5zIXUAAAAAAAAAAA.png)*/columns are ` auto ` -sized
and the last column is ` 1fr ` wide as to fill the whole page.

    
    
    #table(
      columns: (auto, auto, 1fr),
      tabl/*[Date][Â°No/*[ ` table.cell `
element ]*/lement ](/docs/reference/model/table/#definitions-cell)*/   [24/01/03], [477], [Transitioned to sec. regimen],
      [24/01/11], [051], [Cycled treatment substrate],
    )
    

![Preview](/assets/docs/2U_qe89XvypLADel8g81vgAAAAAAAAAA.png)

Here, we have passed our list of column lengths as an [ array
](/docs/reference/foundations/array/ "array") , enclosed in round parentheses,
with its elements separated by commas. The first two columns are automatically
sized, so that they take on the size of their content and the third column is
sized as ` 1fr  ` so that it fills up the remainder of the space on the page.
If you wanted to instead change the second column to be a bit more spacious,
you could replace its entry in the ` columns ` array with a value like ` 6em
` .

==  How to caption and reference my table?

A table is just as valuable as the information your readers draw from it. You
can enhance the effectiveness of both your prose and your table by making a
clear connection between the two with a cross-reference. Typst can help you
with automatic [ references ](/docs/reference/model/ref/) and the [ ` figure `
function ](/docs/reference/model/figure/) .
/*[Preview](/assets/docs/Kc5oSTV9kIbzwSd275OEwQAAAAAAAAAA.png)*/unction allows you
to add a caption and a label, so you can reference the figure elsewhere.
Wrapping your table in a figure also lets you use the figure's ` placement `
parameter to float it to the top or bottom of a page.

Let's take a look at a captioned table and how to refe/*![Preview](/assets/docs/UJoXkTjV0r6grf2p2oGJMAAAAAAAAAAA.png)*/): set text(weight: "bold")
    
    #figure(
      table(
        columns: 4,
        stroke: none,
    
        /*[Test Item][Specific/*[ spread operator
]*/d operator
](/docs/reference/foundations/arguments/#spreading)*/8V], [Pass],
        [Current], [5A Â± 0.5A], [4.2A], [Fail],
      ),
      caption: [Probe results for design A],
    ) <probe-a>
    
    The results from @probe-a show that the design is not yet optimal.
    We will show how its performance can be improved in this section.
    

![Preview](/assets/docs/q8w9c3xaiqkQD9Ab1PAe6AAAAAAAAAAA.png)

The example shows how to wrap a table in a figure, set a caption and a label,
and how to reference that label. We start by using the ` figure ` function. It
expects the contents of the figure as a positional argument. We just put the
table function call in its argument list, omitting the ` # ` character because
it is only needed when/*[ WCAG 2.1 Success
Criterion 1.4.1 ](https://www.w3.org/WAI/WCAG21/Understanding/use-of-
color.html)*/ table.

After the figure call, we put a label in angle brackets ( ` <probe-a> ` ).
This tells/*![Preview](/assets/docs/25lCWRlQDgNwC6P_ss5rsgAAAAAAAAAA.png)*/er this
name throughout your document. We can then reference it in prose by using the
at sign and the label name ` @probe-a  ` . Typst will print a nicely formatted
reference and automatically update the label if the table's number chan/*[ this Chrome extension
](https://chromewebstore.google.com/detail/colorblindly/floniaahmccleoclneebhhmnjgdfijgg)*/*[ Photoshop ](https://helpx.adobe.com/photoshop/using/proofing-colors.html)*/ab/*[ GIMP ](https://docs.gimp.org/2.10/en/gimp-display-filter-dialog.html)*/ytics
applications, while academic applications tend to use strokes instead.

To add zebra stripes to a table, we use the ` table ` function's ` fill `
argument. It can take three ki/*![Preview](/assets/docs/cCvrBfZ8ZZjy8abtCE_cmgAAAAAAAAAA.png)*/dient or a pattern) to fill all cells with. Because we want some cells to have another color, this is not useful if we want to build zebra /*[ stroke ](/docs/reference/model/table/#parameters-stroke)*/gh for each column. We can use an array with two elements to get striped columns. 
  - A function that takes /*[ stroke ](/docs/reference/model/table/#parameters-stroke)*/e ` y ` of a cell and returns its fill. We can use this to create horizontal stripes or [ checkerboard patterns ](/docs/reference/l/*![Preview](/assets/docs/GD_bV9_znidgeZ0v5zIXUAAAAAAAAAAA.png)*/ of a horizontally striped table:

    
    
    #set text(font: "IBM Plex Sans")
    
    // Medium bol/*[ ` table.hline ` ](/docs/reference/model/table/#definitions-hline "`table.hline`")*/ /*[ ` table.vline ` ](/docs/reference/model/table/#definitions-vline "`table.vline`")*/   // See the strokes section for details on this!
    #let frame(stroke) = (x, y) => (
      left: if x > 0 { 0pt } else { stroke },
      right: stroke/*[ stroke ](/docs/reference/model/table/#parameters-
stroke)*/: stroke,
    )
    
    #set table(
      fill: (rgb("EAF2F5"), none),
      stroke: frame(rgb("21222C")),
    )
    
    #table(
      columns: (0.4fr, 1fr, 1fr, 1fr),
    
  /*[Month][Titl/*[Author][Genre]*/itle][Author][Genre],
      [January], [The Great Gatsby], [F. Scott Fitzgerald], [Classic],
      [February], [To Kill a Mockingbird], [Harper Lee], [Drama],
      [March], [1984], [George/*[Preview](/assets/docs/y0uGf9aX-aUGWqCKMwHEJwAAAAAAAAAA.png)*/e], [J.D. Salinger], [Coming-of-Age],
    )
    

![Preview](/assets/docs/UJoXkTjV0r6grf2p2oGJMAAAAAAAAAAA.png)

This example shows a book club reading list. The line ` fill:  (  rgb  (
"EA/*[ stroke type
](/docs/reference/visualize/stroke/)*/s all that is needed to
add striped columns. It tells Typst to alternate between coloring columns with
a light blue (in the [ ` rgb ` ](/docs/reference/visualize/color/#definitions-
rg/*![Preview](/assets/docs/Kc5oSTV9kIbzwSd275OEwQAAAAAAAAAA.png)*/racted all of
our styling from the ` table ` function call itself into set and show rules,
so that we can automatically reuse it for multiple tables.

Because setting the stripes itself is easy we also added some other styles to
make it look nice. The other code in the example provides a dark blue  stroke
around the table and below the first line and emboldens the first row and the
column with the book title. See the  strokes  section for details on how we
achieved this stroke configuration.

Let's next take a look at how we can change only the set rule to achieve
horizontal stripes instead:

    
    
    #set table(
      fill: (_, y) => if calc.odd(y) { rgb("EAF2F5") },
      stroke: frame(rgb("21222C")),
    )
    

![Preview](/assets/docs/25lCWRlQDgNwC6P_ss5rsgAAAAAAAAAA.png)

We just need to replace the set rule from the previous example with this one
and get horizontal stripes instead. Here, we are pas/*[Preview](/assets/docs/vQmODupZkk6MbI3nByjkqwAAAAAAAAAA.png)*/rdinate with an underscore and then checks
if the vertical coordinate ` y ` of the cell is odd. If so, the cell gets a
light blue fill, otherwise, no fill is returned.

Of course, you can make this function arbitrarily complex. For example, if you
want to stripe the rows with a light and darker shade of blue, you could do
something like this:

    
    
    #set table(
      fill: (_, y) => (none, rgb("EAF2F5"), rgb("DDEAEF")).at(calc.rem(y, 3)),
      stroke: frame(rgb("21222C")),
    )
    

![Preview](/assets/docs/cCvrBfZ8ZZjy8abtCE_cmgAAAAAAAAAA.png)

This example shows an alternative approach to write our fill function. The
function uses an array with three colors and then cycles between its values
for each row /*[Preview](/assets/docs/eb2IfSiEgTxcBIC79R6b-QAAAAAAAAAA.png)*/ 3.

Finally, here is a bonus example that uses the _stroke_ to achieve striped
rows:

    
    
    #set table(
      stroke: (x, y) => (
        y: 1pt,
        left: if x > 0 { 0pt } else if calc.even(y) { 1pt },
        right: if calc.even(y) { 1pt },
      ),
    )
    

![Preview](/assets/docs/GD_bV9_znidgeZ0v5zIXUAAAAAAAAAAA.png)

===  Manually overriding a cell's fill color

Sometimes, the fill of a cell needs not to vary based on its position in the
table, but rather based on its contents. We can use the [ ` table.cell `
element /*[ ` table.hline `
](/docs/reference/model/table/#definitions-hline "`table.hline`")*/ /*[ `
table.vline ` ](/docs/reference/model/table/#definitions-vline
"`table.vline`")*/ German presidents, with the cell borders
colored in the color of their party.

    
    
    #set text(font: "Roboto")
    
    #let cdu(name) = ([CDU], table.cell(fill: black, text(fill: white, name)))
    #let spd(name) = ([SPD], table.cell(fill: red, text(fill: white, name)))
    #let fdp(name) = ([FDP], table.cell(fill: yellow, name))
    
    #table(
      columns: (auto, auto, 1fr),
      stroke: (x: none),/*[Tenure][Party]*/le.header[Tenure][Party][President],
      [1949-1959], ..fdp[Theodor Heuss],
      [1959-1969], ..cdu[Heinrich LÃ¼bke],
      [1/*[Preview](/assets/docs/3OGDUdhafmvnsbwhpEZnqAAAAAAAAAAA.png)*/[Walter Scheel],
      [1979-1984], ..cdu[Karl Carstens],
      [1984-1994], ..cdu[Richard von WeizsÃ¤cker],
      [1994-1999], ..cdu[Roman Herzog],
      [1999-2004], ..spd[Johannes Rau],
      [2004-2010], ..cdu[Horst KÃ¶hler],
      [2010-2012], ..cdu[Christian Wulff],
      [2012-2017], [n/a], [Joachim Gauck],
      [2017-],     ..spd[Frank-Walter-Steinmeier],
    )
    

![Preview](/assets/docs/Kc5oSTV9kIbzwSd275OEwQAAAAAAAAAA.png)

In this example, we make use of variables because there only have been a total
of three parties whose members have become president (and one unaffili/*![Preview](/assets/docs/y0uGf9aX-aUGWqCKMwHEJwAAAAAAAAAA.png)*/we store a function
that produces an array with their party's name and a table cell with that
party's color and the president's name ( ` cdu ` , ` spd ` , and ` fdp ` ). We
then use these functions in the ` table ` argument list instead of directly
adding the name. We use the [ spread operator
](/docs/reference/foundations/arguments/#spreading) ` .. ` to turn the items
of the arrays into single cells. We could also write something like ` [  FDP
]  , table  .  cell  (  fill  :  yellow  )  [  Theodor Heuss  ]  ` for each
cell directly in the ` table ` 's argument list, but that becomes unreadable,
especially for the parties whose colors are dark so that they require white
text. We also delete vertical strokes and set the font to Roboto.

The party column and the cell color in this example communicate redundant
information on purpose: Communicating important data using color only is a bad
accessibility practice. It disadvantages users with vision impairment and is
in violation of universal access standards, such as the [ WCAG 2.1 Success
Criterion 1.4.1 ](https://www.w3.org/WAI/WCAG21/Understanding/use-of-
color.html) . To improve this table, we added a column printing the part/*[Preview](/assets/docs/LINgvIDoMEPxmydMRnWXAgAAAAAAAAAA.png)*/color-blindness
friendly palette and mark up your cells with an additional label that screen
readers can read out loud. The latter feature is not currently /*![Preview](/assets/docs/vQmODupZkk6MbI3nByjkqwAAAAAAAAAA.png)*/u can check how colors look
for color-blind readers with [ this Chrome extension
](https://chromewebstore.google.com/detail/colorblindly/floniaahmccleoclneebhhmnjgdfijgg)
, [ Photoshop ](https://helpx.adobe.com/photoshop/using/proofing-colors.html)
, or [ GIMP ](https://docs.gimp.org/2.10/en/gimp-display-filter-dialog.html) .

==  How to adjust the lines in a table?

By default, Typst adds st/*[ code
block ](/docs/reference/scripting/#blocks)*/ can
adjust these strokes in a variety of ways. Which one is the most practical,
depends on the modification you want to make and your intent:

  - Do you want to style all tables in your document, irrespective of their size and content? Use the ` tabl/*[ `
table.cell ` function ]/*![Preview](/assets/docs/eb2IfSiEgTxcBIC79R6b-QAAAAAAAAAA.png)*/a set rule. 
  - Do you want to customize all lines in a single table? Use the ` table ` function's [ stroke ](/docs/reference/model/table/#parameters-stroke) argument when calling the table function. 
  - Do you want to change, add, or remove the stroke around a single cell? Use the ` table.cell ` element in the argument list of your table call. 
  - Do you want to change, add, or remove a single horizontal or vertical stroke in a single table? Use the [ ` table.hline ` ](/docs/reference/model/table/#definitions-hline "`table.hline`") and [ ` table.vline ` ](/docs/reference/model/table/#definitions-vline "`table.vline`") elements in the argument list of your table call. 

We will go over all of these options with examples next! First, we will tackle
the ` table ` function's [ stroke ](/docs/reference/model/table/#parameters-
stroke) argument. Here, /*[Preview](/assets/docs/zT-rPhodrO99vfmjEknOKwAAAAAAAAAA.png)*/igure which lines are drawn at all.

Let's start by modifying the color and thickness of the stroke:

    
    
    #table(
      columns: 4,
      stroke: 0.5pt + rgb("666675"),
      [*Monday*], [11.5], [13.0], [4.0],
      [*Tuesday*], [8.0], [14.5], [5.0],
      [*Wednesday*], [9.0], [18.5], [13.0],
    )
    

![Preview](/assets/docs/y0uGf9aX-aUGWqCKMwHE/*![Preview](/assets/docs/3OGDUdhafmvnsbwhpEZnqAAAAAAAAAAA.png)*/ and uses a bluish gray. You can see
that we added a width in point to a color to achieve our customized stroke.
This addition yields a value of the [ stroke type
](/docs/reference/visualize/stroke/) . Alternatively, you can use the
dictionary representation for strokes which allows you to access advanced
features such as dashed lines.

The previous example showed how to use the stroke argument in the table
function's invocation. Alternatively, you can specify the stroke argument in
the ` table ` 's set rule. This will have exactly the same effect on all
subsequent ` table ` calls as if the stroke argument was specified in the
argument list. This is useful if you are writing a template or want to style
your whole document.

    
    
    // Renders the exact same as the last example
    #set table(stroke: 0.5pt + rgb("666675"))
    
    #table(
      columns: 4,
      [*Monday*], [11.5], [13.0], [4.0],
      [*Tuesday*], [8.0], [14.5], [5.0],
      [*Wednesday*], [9.0], [18.5], [13.0],
    )
    

For small tables, you sometimes want to suppress all strokes because they add
too much visual noise. To do this, just set the stroke argument to ` none  ` :

    
    
    #table(
      columns: /*[Preview](/assets/docs/SKiPog79AfwUoglArT-17wAAAAAAAAAA.png)*/0],
      [*Tuesday*], [8.0], [14.5], [5.0],
      [*Wednesday*], [9.0], [18.5], [13.0],
    )
    

![Preview](/assets/docs/vQmODupZkk6MbI3nByjkqwAAAAAAAAAA.png)

If you want more fine-grained control of where lines get placed in your table,
you can also pass a dictionary with the keys ` top ` , ` left ` , ` right ` ,
` bottom ` (controlling the respective cell sides), ` x ` , ` y ` (controlling
vertical and horizontal strokes), and ` rest ` (covers all strokes not styled
by other dictionary entries). All keys are optional; omitted keys will be
treated as if their value was the default value. For example, to get a table
with only horizontal lines, you can do this:

    
    
    #/*[Preview](/assets/docs/nyvsIK-tDvHuRwbnwhj4kQAAAAAAAAAA.png)*/n: horizon,
      [â], [Close cabin door],
      [â], [Start engines],
      [â], [Radio tower],
      [â], [Push back],
    )
    

![Preview](/assets/docs/eb2IfSiEgTxcBIC79R6b-QAAAAAAAAAA.png)

This turns off all vertical strokes and leaves the horizontal strokes in
place. To achieve the reverse effect (only horizontal strokes), set the stroke
argument to ` (  y  :  none  )  ` instead.

Furthe/*[Preview](/assets/docs/QRh4-eyPqD4Yz9VResk9dwAAAAAAAAAA.png)*/ stroke
argument to customize all strokes individually. This is how you achieve more
complex stroking patterns.

===  Adding individual lines in the table

If you want to add a single horizontal or vertical line in your table, for
example to separate a group of rows, you can use the [ ` table.hline `
](/docs/reference/model/table/#definitions-hline "`table.hline`") and [ `
table.vline ` ](/docs/reference/model/table/#definitions-vline
"`table.vline`") elements for horizontal and vertical lines, respectively. Add
them to the argument list of the ` table ` function j/*[Preview](/assets/docs/qw8tKe_4tpVbtFAmFf0POQAAAAAAAAAA.png)*/ take a look at the following example from the reference:

    
    
    #set table.hline(stroke: 0.6pt)
    
    #table(
      stroke: none,
      columns: (auto, 1fr),
      // Morning schedule abridged.
      [14:00], [Talk: Tracked Layout],
      [15:00], [Talk: Automations],
      [16:00], [Workshop: Tables],
      table.hline(),
      [19:00], [Day 1 Attendee Mixer],
    )
    

![Preview](/assets/docs/3OGDUdhafmvnsbwhpEZnqAAAAAAAAAAA.png)

In this example, you can see that we have placed a call to ` table.hline `
between the cells, producing a horizontal line at that spot. We also used a
set rule on the element to reduce its stroke width to make it fit better/*![Preview](/assets/docs/zT-rPhodrO99vfmjEknOKwAAAAAAAAAA.png)*/ontal and vertical lines after the current row
or /*[ patterns
](/docs/reference/visualize/pattern/)*/ent list. You can also
manually move them to a different position by adding the ` y ` (for ` hline `
) or ` x ` (for ` vline ` ) argument. For example, the code below would
produce the same result:

    
    
    #set table.hline(stroke: 0.6pt)
    
    #table(
      stroke: none,
      columns: (auto, 1fr),
      // Morning schedule abridged.
      table.hline(y: 3),
      [14:00], [Talk: Tracked Layout],
      [15:00], [Talk: Automations],
      [16:00], [Workshop: Tables],
      [19:00], [Day 1 Attendee Mixer],
    )
    

Let's imagine you are working with a template that shows none of the table
strokes except for one between the first and second row. Now, since you have
one table that also has labels in the first column, you wan/*[Preview](/assets/docs/ketpWMF_8TQEKQlrbhiNRQAAAAAAAAAA.png)*/ant this vertical line to cross into
the top row. You can achieve this with the ` start ` argument:

    
    
    // Base template already configured tables, but we need some
    // extra configuration for this table.
    #{
      set table(align: (x, _) => if x == 0 { left } else { right })
      show table.cell.where(x: 0): smallcaps
      table(
        columns: (auto, 1fr, 1fr, 1fr),
        table.vline(x: 1, sta/*[Trainset][Top Spee/*[Length][Weight]*/nset][Top Speed][Length][Weight],
        [TGV RÃ©seau], [320 km/h], [200m], [383t],
        [ICE 403], [330 km/h], [201m], [409t],
        [Shinkansen N700]/*[ ` align ` ](/docs/reference/layout/align/
"`align`")*/eview](/assets/docs/LINgvIDoMEPxmydMRnWXAgAAAAAAAAAA.png)

/*![Preview](/assets/docs/SKiPog79AfwUoglArT-17wAAAAAAAAAA.png)*/f our positional
argument list. But because the line is not supposed to go t/*[ alignment ](/docs/reference/layout/alignment/
"alignment")*/ent as ` 1  ` . We also set the `
start ` argument to ` 1  ` so that the line does only start after the first
row.

The example also contains two more things: We use the align argument with a
function to right-align the data in all but the first column and use a show
rule to make the first column of table cells appear in small capitals. Because
these styles are specific to this one table, we put everything into a [ code
block ](/docs/reference/scripting/#blocks) , so that the styling does not
affect any further tables.

===  Overriding the str/*![Preview](/assets/docs/nyvsIK-tDvHuRwbnwhj4kQAAAAAAAAAA.png)*/around a single cell. Maybe your cell is
very important and needs highlighting! For this scenario, there is the [ `
table.cell ` function ](/docs/reference/model/table/#definitions-cell) .
Instead of adding your content directly in the argument list of the table, you
wrap it in a ` table.cell ` call. Now, you can use ` table.cell ` 's argument
list to override the table properties, such as the stroke, for /*![Preview](/assets/docs/QRh4-eyPqD4Yz9VResk9dwAAAAAAAAAA.png)*/e Big Five personality factors,
with one intersection highlighted.

    
    
    #table(
      columns: 3,
      stroke: (x: none),
    
      [], [*High Neuroticism*], [*Low Neuroticism*],
    
   /*[Preview](/assets/docs/JDfAUmIJzQHzE6NL8LKAnwAAAAAAAAAA.png)*/ 2pt)[
        _Sensitive_ \ Prone to emotional distress but very empathetic.
      ],
      [_Compassionate_ \ Caring and stable, often seen as a supportive figure.],
    
      [*Low Agreeableness*],
      [_Contentious_ \ Competitive and easily agitated.],
      [_Detached_ \ Independent and calm, may appea/*![Preview](/assets/docs/qw8tKe_4tpVbtFAmFf0POQAAAAAAAAAA.png)*/mjEknOKwAAAAAAAAAA.png)

Above, you can see that we used the ` table.cell ` element in the table's
argument list and passed the cell content to it. We have used its ` stroke `
argument to set a wider orange stroke. Despite the fact that we disabled
vertical strokes on the table, the orange stroke appeared on all sides of the
modified cell, showing that the table's stroke c/*[Preview](/assets/docs/ENpsdZXkKtSK7dBT6e9dAgAAAAAAAAAA.png)*/oke customization

This section explains how to customize all lines at once in one or multiple
tables. This allows you to draw only the first horizontal line or omit the
outer lines, without knowing how many cells the table has. This is achieved by
providing a function to the table's ` stroke ` parameter. The function should
return a stroke given the zero-indexed x and y position of th/*[ its reference page ](/docs/reference/model/table/#definitions-
cell)*/late author, do not use
a template, or need to heavily customize your tables. Otherwise, your template
should set appropriate default table strokes.

For example, this is a set rule that draws all horizontal lines except for the
very first and last line.

    
    
    #show table.cell.where(x: 0): set text(style: "italic")
    #show table.cell.where(y: 0): set text(style: "normal", weight: "bold")
    #set table(stroke: (_, y) => if y > 0 { (/*[ ` table.cell ` ](/docs/reference/model/table/#definitions-cell
/*[Technique][Advantage]*/  table.header[Technique][Advantage][Drawback],
      [Diegetic], [Immersive], [May be contrived],
      [Extradiegetic], [Breaks immersion], [Obtrusi/*![Preview](/assets/docs/ketpWMF_8TQEKQlrbhiNRQAAAAAAAAAA.png)*/ience],
    )
    

![Preview](/assets/docs/SKiPog79AfwUoglArT-17wAAAAAAAAAA.png)

In the set rule, we pass a function that receives two arguments, assigning the
vertical coordinate to ` y ` and discarding the horizontal coordinate. It then
returns a stroke dictionary with a ` 0.8pt  ` top stroke for all but the first
line. The cells in the first line instead implicitly receive ` none  ` as the
return value. You can easily modify this function to just draw the inner
vertical lines instead as ` (  x  ,  _  )  => if  x  > 0  {  (  left  :  0.8pt
)  }  ` .

Let's try a few more stroking functions. The next function will only draw a
line below the first row:

    
    
    #set table(stroke: (_, y) => if y == 0 { (bottom: 1pt) })
    
    // Table as seen above
    

![Preview](/assets/docs/nyvsIK-tDvHuRwbnwhj4kQAAAAAAAAAA.png)

If you understood the first example, it becomes obvious what happens here. We
check if we are in the first row. If so, we return a bottom stroke. Otherwise,
we'll return ` none  ` implicitly.

The next /*[Preview](/assets/docs/yyaKf-LLQbyy3QccVJXb2wAAAAAAAAAA.png)*/ 
    #set table(stroke: (x, y) => (
      left: if x > 0 { 0.8pt },
      top: if y > 0 { 0.8pt },
    ))
    
    // Table as seen above
    

![Preview](/assets/docs/QRh4-eyPqD4Yz9VResk9dwAAAAAAAAAA.png)

This example uses both the ` x ` and ` y ` coordinates. It omits the left
stroke in the first column and the top stroke in the first row. The right and
bottom lines are not drawn.

Finally, here is a table that draws all lines except for the vertical lines in
the first row and horizontal lines in the table body. It looks a bit like a
calendar.

    
    
    #set table(stroke: (x, y) => (
      left: if x == 0 or y > 0 { 1pt } else {Â 0pt },
      right: 1pt,
      top: if y <= 1 { 1pt } else {Â 0pt },
  /*[ alignment ](/docs/reference/layout/alignment/
"alignment")*/

![Preview](/assets/docs/qw8tKe_4tpVbtFAmFf0POQAAAAAAAAAA.png)

This example is a bit more complex. We start by drawing all the strokes on the
right of the cells. But this means that we have drawn strokes in the top row,
too, and we don't need those! We use the fact that ` left ` will override `
right ` and only draw the left line /*![Preview](/assets/docs/JDfAUmIJzQHzE6NL8LKAnwAAAAAAAAAA.png)*/mn. In all other cases, we explicitly remove the left
line. Finally, we draw the horizontal lines by first setting the bottom line
and then for the first two /*[ ` rotate ` function ](/docs/reference/layout/rotate/)*/nes. The last line appears because there is no ` top ` line that could
suppress it.

===  How to achieve a double line?
/*[ ` page ` function ](/docs/reference/layout/page/)*/e strokes, but there are
multiple ways to emulate them, for example with [ patterns
](/docs/reference/visualize/pattern/) . We will show a different workaround in
this section: Table gutters.

Tables can space their cells apart using the ` gutter ` argument. When a
gutter is applied, a stroke is drawn on each of the now separated cells. We
can selectively add /*![Preview](/assets/docs/ENpsdZXkKtSK7dBT6e9dAgAAAAAAAAAA.png)*/a double line. The ` row-gutter ` and ` column-gutter ` arguments allow
us to do this. They accept arrays of gutter values. Let's take a look at an
example:

    
    
    #table(
      columns: 3,
      stroke: (x: none),
      row-g/*[Date][Exercise Type]*/
      table.header[Date][Exercise Type][Calories Burned],
      [2023-03-15], [Swimming], [400],
      [2023-03-17], [Weightlifting], [250],
      [2023-03-18], [Yoga], [200],
    )
    

![Preview](/assets/docs/ketpWMF_8TQEKQlrbhiNRQAAAAAAAAAA.png)

We can see that we used an array for ` row-gutter ` that specifies a ` 2.2pt
` gap between the first and second row. It then continues with ` auto ` (which
is the default, in this case ` 0pt  ` gutter) which will be the gutter between
all other rows, since it is the last entry in the array.

==  How to align the contents of the cells in my table?

You can use multiple mechanisms to align the content in your table. You can
either use the ` table ` function's ` align ` argument to set the alignment
for your whole table (or use it in a set rule to set the alignment for tables
throughout your document) o/*[Preview](/assets/docs/t_mhLmSe89ZV_R--e5hFagAAAAAAAAAA.png)*/ function (or ` table.cell ` 's ` align ` argument) to override the
alignment of a single cell.

When using the ` table ` function's align argument, you can choose between
three methods to specify an [ alignment ](/docs/reference/layout/alignment/
"alignment") :

  - Just specify a single alignment like ` right ` (aligns in the top-right corner) or ` center + horizon ` (centers all cell content). This changes the alignment of all cells. 
  - Provide an array. Typst will cycle through this array for each column. 
  - Provide a function that is passed the horizontal ` x ` and vertical ` y ` coordinate of a cell and returns an alignment. 

For example, this travel itinerary right-aligns the day column and left-aligns
everything else by providing an array in the ` align ` argument:

    
    
    #set text(font: "IBM Plex Sans")
    #show table.cell.where(y: 0): set text(weight: "bold")
    
    #table(
      columns: 4,
      align: (right, left, left, left),
      fill: (_, y) => if calc.odd(y) { green.lighten(90%) },/*[Day][Locatio/*[Hotel or Apartment][Activities]*/r[Day][Loca/*![Preview](/assets/docs/yyaKf-LLQbyy3QccVJXb2wAAAAAAAAAA.png)*/nce], [Hotel de L'Europe], [Arrival, Evening River Cruise],
      [2], [Paris, France], [Hotel de L'Europe], [Louvre Museum, Eiffel Tower],
      [3], [Lyon, France], [Lyon City Hotel], [City Tour, Local Cuisine Tasting],
      [4], [Geneva, Switzerland], [Lakeview Inn], [Lake Geneva, Red Cross Museum],
      [5], [Zermatt, Switzerland], [Alpine Lodge], [Visit Matterhorn, Skiing],
    )
    

![Preview](/assets/docs/JDfAUmIJzQHzE6NL8LKAnwAAAAAAAAAA.png)

However, this example does not yet look perfect â the header cells should be
bottom-aligned. Let's use a function instead to do so:

    
    
    #set text(font: "IBM Plex Sans")
    #show table.cell.where(y: 0): set text(weight: "bold")
    
    #table(
      columns: 4,
      align: (x, y) =>
        if x == 0 { right } else { left } +
        if y == 0 { bottom } else { top },
      fill: (_, y) => if calc.odd(y) { green.lighten(90%) },
      st/*[Preview](/assets/docs/9Goo6xTF0vprclhyFSb4zwAAAAAAAAAA.png)*/Apartment][Activities],
      [1], [Paris, France], [Hotel de L'Europe], [Arrival, Evening River Cruis/*[ ` page ` ](/docs/reference/layout/page/ "`page`")*/, [Louvre Museum, Eiffel Tower],
     // ... remaining days omitted
    )
    

![Preview](/assets/docs/ENpsdZXkKtSK7dBT6e9dAgAAAAAAAAAA.png)

In the function, we calculate a horizontal and vertical alignment based on
whether we are in the first column ( ` x  ==  0  ` ) or the first row ( ` y
==  0  ` )./*[ ` pad ` ](/docs/reference/layout/pad/ "`pad`")*/rizontal and
vertical alignments with ` + ` to receive a single, two-dimensional alignment.

You can find an example of using ` table.cell ` to change a single cell's
alignment on [ its reference page ](/docs/reference/model/table/#definitions-
cell) .

==  How to merge cells?

When a table contains logical groupings or the same data in multiple adjacent
cells, m/*[ ` table.header ` ](/docs/reference/model/table/#definitions-header
"`table.header`")*/ /*[ ` table.footer `
](/docs/reference/model/table/#definitions-footer "`table.footer`")*/ple a sales data table by quarter in the first row
and by months in the second row.

A merged cell spans multiple rows and/or columns. You can achieve it with the
[ ` table.cell ` ](/docs/reference/model/table/#definitions-cell
"`ta/*[ figure
](/docs/reference/model/figure/ "figure")*/ arguments: Just specify
how many rows or columns you want your cell to span.

The example below contains an attendance calendar for an office with in-person
and remote days for each team member. To make the table more glanceable, we
merge adjacent cells with the same value:

    
    
    #let ofi = [Office]
    #let rem = [_Remote_]
    #let lea = [_On leave_]
    
    #show table.cell.where(y: 0): set text(
      fill: white,
      weight: "bold",
    )
    
    #table(
      columns: 6 * (1fr,),
      align: (x, y) => if x == 0 or y == 0 { left } else { center },
      stroke: (x, y) => (
        // Separate black cells with white strokes.
        left: if y == 0 and x > 0 { white } else { black },
        rest: black,
      ),
      fill: (_, y) => if y == 0 { black },
    
      table.header(
   /*![Preview](/assets/docs/t_mhLmSe89ZV_R--e5hFagAAAAAAAAAA.png)*/h3VVjowAAAAAAAAAA.png)/*[Preview](/assets/docs/LN81XNtn32FKL9Eh3VVjowAAAAAAAAAB.png)*/rcher],
        table.cell(colsp/*[ block ](/docs/reference/layout/block/
"block")*/,
        ofi,
      [Lila Montgomery],
        table.cell(colspan: 5, lea),
      [Nolan Pearce],
        rem,
        table.cell(colspan: 2, ofi),
        rem,
        ofi,
    )
    

![Preview](/assets/docs/yyaKf-LLQbyy3QccVJXb2wAAAAAAAAAA.png)

In the example, we first define variables with "Office", "Remote", and "On
leave" so we don't have to write these labels out every time. We can then use
these variables in the table body either directly or in a ` table./*[ common file formats ](/docs/reference/data-loading/)*/tive days in office, remote, or on
leave.

The example also contains a black header (created with ` table ` 's ` fill `
argument) with white strokes ( ` table ` 's ` stroke ` argument) and white
text (set by the ` table.cell ` set rule). Finally, we align all the content
of all table cells in the body in the center. If you want to know more about
the functions passed to ` align ` , ` stroke ` , and ` fill ` , you can check
out the section/*[ how many transistors the average
microprocessor consists of per year from Our World in Data
](https://ourworldindata.org/grapher/transistors-per-microprocessor)*/generation from an
external data source! Check out the  section about importing data  to learn
more about that.

==  How to rotate a table?

When tables have many columns, a portrait paper orientation can quickly get
cramped. Hence, you'll sometimes want to switch your tables to landscape
orientation. There are two ways to accomplish this in Typst:

  - If you want to rotate only the table but not the other content of the page and the page itself, use the [ ` rotate ` function ](/docs/reference/layout/rotate/) with the ` reflow ` argument set to ` true  ` . 
  - If you want to rotate the whole page the table is on, you can use the [ ` page ` function ](/docs/reference/layout/page/) with its ` flipped ` argument set to ` tr/*[ ` csv `
](/docs/reference/data-loa/*![Preview](/assets/docs/9Goo6xTF0vprclhyFSb4zwAAAAAAAAAA.png)*/This has the advantage that the table will appear right side up when read on a computer, but it also means that a page in your document has different dimensio/*[ bound it
](/docs/reference/scripting/#bindings)*/our readers. 

Below, we will demonstrate both techniques with a student grade book table.

First, we will rotate the table on the page. The example also places some text
on the right of the table.

    
    
    #set page("a5", columns: 2, numbering: "â 1 â")
    #show table.cell.where(y: 0): set text(wei/*[Preview](/assets/docs/4Wrq2xnRY1_FUBMwiwPizQAAAAAAAAAA.png)*/rue,
    
      table(
        columns: (1/*[ ` slice `
](/docs/reference/foundations/array/#definitions-slice)*/ y) => (
          x: 1pt,
          top: if y <= 1 { 1pt } else {Â 0pt },
          bottom: 1pt,
        ),
        align: (left, right, right, right, right, left),
    
        table.header(
          [Student Name],
          [Assignment 1], [Assignment 2],
          [Mid-term], [Final Exam],
          [Total Grade],
        ),
        [Jane Smith], [78%], [82%], [75%], [80%], [B],
        [Alex Johnson], [90%], [95%], [9/*[Preview](/assets/docs/1JHLF5egGPQD3C2V0wZONgAAAAAAAAAA.png)*/92%], [A],
        [Maria Garcia], [88%], [84%], [89%], [85%], [B+],
        [Zhang Wei], [93%], [89%], [90%], [91%], [A-],
        [Marina/*[ destructuring
](/docs/reference/scripting/#bindings)*/),
    )
    
    #lorem(80)
    

![Preview](/assets/docs/t_mhLmSe89ZV_R--e5hFagAAAAAAAAAA.png)

What we have here is a two-column document on ISO A5 paper with page numbers
on the bottom. The table has six columns and contains a few customizations to
stroke  , alignment and spacing. But the most important part is that the table
is wrapp/*[ spread
operator ](/docs/reference/foundations/arguments/#spreading)*/being ` true  ` . This will make the table rotate 90 degrees counterclockwise.
The reflow argument is needed so that the table's rotation affects the layout.
If it was omitted, Typst would lay out the page as if /*[ ` map `
](/docs/reference/foundations/array/#definitions-map)*/*[ ` slice `
](/docs/reference/foundations/array/#definitions-slice)*/s o/*[ ` flatten `
](/docs/reference/foundations//*![Preview](/assets/docs/LN81XNtn32FKL9Eh3VVjowAAAAAAAAAA.png/*![Preview](/assets/docs/LN81XNtn32FKL9Eh3VVjowAAAAAAAAAB.png)*/. Note that
arrays with just one item need a trailing comma to distinguish them from
merely parenthesized expressions.

The second example shows how to rotate the whole page, so that the table stays
upright:

    
    
    #set page("a5", numbering: "â 1 â")
    #show table.cell.where(y: 0): set text(weight: "bold")
    
    #page(flipped: true)[
      #table(
        columns: (1fr,) + 5 * (auto,),
        inset: (x: 0.6em,),
        stroke: (_, y) => (
          x: 1pt,
          top: if y <= 1 { 1pt } else {Â 0pt },
          bottom: 1pt,
        ),
        align: (left, right, right, right, right, left),
    
        table.header(
          [Student Name],
          [Assignment 1], [Assignment 2],
          [Mid-term], [Final Exam],
          [Total Grade],
        ),
        [Jane Smith], [78%], [82%], [75%], [80%], [B],
        [Alex Johnson], [90%], [95%], [94%], [96%], [A+],
    /*![â](/assets/icons/16-arrow-right.svg)*/%], [A],
        [Maria Garcia], [88%], [84%], [89%], [85%], [B+]/*![â](/assets/icons/16-arrow-right.svg)*/%], [91%], [A-],
        [Marina Musterfrau], [96%], [91%], [74%], [69%], [B-],
      )
  /*![Docs](/assets/icons/16-docs-dark.svg)*/    = Winter 2023/24 results
        #lorem(80)
      ]
    ]
    

![Preview](/assets/docs/9Goo6xTF0vprclhyFSb4zwAAAAAAAAAA.png)

Here, we take the same table and the other content we want to set with it and
put it into a call to the [ ` page ` ](/docs/reference/layout/page/ "`page`")
function while supplying ` true  ` to the ` flipped ` argument. This will
instruct Typst to create new pages with width and height swapped and place the
contents of the function call onto a new pag/*[Preview](/assets/docs/ZOXJwHX6lPP_GLnz4eAxbQAAAAAAAAAA.png)*/e paper now. At the bottom of the page, we use the
[ ` pad ` ](/docs/reference/layout/pad/ "`pad`") function to constrain the
width of the paragraph to achie/*[ destructuring ](/docs/reference/scripting/#bindings)*/ table across pages?

It is best to contain a table on a single page. However, some tables just have
many rows, so breaking them across pages becomes unavoidable. Fortunately,
Typst supports breaking tables across pages out of the box. If you are using
the [ ` table.header ` ](/docs/reference/model/table/#definitions-header
"`table.header`") and [ ` table.footer `
](/docs/reference/model/table/#definitions-footer "`table.footer`") functions,
their contents will be repeated on each page as the first and last rows,
respectively. If you want to disable this behavior, you can set ` repeat ` to
` false  ` on either of them.

If you have placed your table insid/*![Preview](/assets/docs/4Wrq2xnRY/*[ tutorial
](/docs/tutorial/ "tutorial")*/le to break across
pages by default. However, you can change this behavior. Let's take a look:

    
    
    #set page(width: 9cm, height: 6cm)
    #show table.cell.where(y: 0): set text(weight: "bold")
    #show figure: set block(breakable: true)
    
    #figure(
      caption: [Training regimen for Marathon],
      table(
        columns: 3,
        fill: (_, y) => if y =/*[Week][Distance (km)]*/%) },
    
        table.header[Week][Distance (km)][Time (hh:mm:ss)],
        [1], [5],  [00:30:00],
        [2], [7],  [00:45:00],
  /*![Preview](/assets/docs/1JHLF5egGPQD3C2V0wZONgAAAAAAAAAA.png)*/  /*[ ` table ` ](/docs/reference/model/table/ "`table`")*/:00],
        [7], [20], [01:50:00],
        [8], [22], [02:00:00],
        [...], /*[ ` grid ` ](/docs/reference/layout/grid/ "`grid`")*/][_02:45:00_],
      )
    )
    

![Preview](/assets/docs/LN81XNtn32FKL9Eh3VVjowAAAAAAAAAA.png)
![Preview](/assets/docs/LN81XNtn32FKL9Eh3VVjowAAAAAAAAAB.png)

A figure automatically produces a [ block ](/docs/reference/layout/block/
"block") which cannot break by default./*[ ` grid.cell ` ](/docs/reference/layout/grid/#definitions-cell "`grid.cell`")*/*[ ` grid.vline ` ](/docs/reference/layout/grid/#definitions-vline "`grid.vline`")*/ote/*[ ` grid.hline ` ](/docs/reference/layout/grid/#definitions-hline "`grid.hline`")*/that you obtained/*[ ` table.cell ` ](/docs/reference/model/table/#definitions-cell "`table.cell`")*/*[ ` table.vline ` ](/docs/reference/model/table/#definitions-vline "`table.vline`")*/ Ty/*[ ` table.hline ` ](/docs/reference/model/table/#definitions-hline "`table.hline`")*/an use
scripting to include their data in a table.

The most common file format for tabular data is CSV. You can obtain a CSV file
from Excel by choosing "Save as" in the _File_ menu and choosing the file
format "CSV UTF-8 (Comma-delimited) (.csv)". Save th/*[ ![â](/assets/icons/16-arrow-right.svg)*/upload it to your project.

In our case, we will be building a /*[ ![â](/assets/icons/16-arrow-right.svg)*/
we are using a statistic with [ how many transistors the average
microprocessor consist/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/tps://ourworldindata.org/grapher/transistors-per-mic/*[ Guides ](/docs/guides/)*/t by pressing the "Download" button to get /*[ Guide for LaTeX users ](/docs/guides/guide-for-latex-users/)*/r project or somewhere Typst can see it, if you
are using the CLI. Once you did that, we can open the file to see how it is
structured:

    
    
    Entity,Code,Year,Transistors per microprocessor
    World,OWID_WRL,1971,2308.2417
    World,OWID_WRL,1972,3554.5222
    World,OWID_WRL,1974,6097.5625
    

The file starts with a header and contains four columns: Entity (which is to
whom the metric applies), Code, the year, and the number of transistors per
microprocessor. Only the last two columns change between each row, so we can
disregard "Entity" and "Code".

First, let's start by loading this file with the [ ` csv `
](/docs/reference/data-loading/csv/ "`csv`") function. It accepts the file
name of the file we want to load as a string argument:

    
    
    #let moore = csv("moore.csv")
    

We have loaded our file (assuming we named it ` moore.csv ` ) and [ bound it
](/docs/reference/scripting/#bindings) to the new variable ` moore ` . This
will not produce any output, so there's nothing to see yet. If we want to
examine what Typst loaded, we can either hover the name of the variable in /*![Preview](/assets/docs/ZOXJwHX6lPP_GLnz4/*[ ` list ` ](/docs/reference/model/list/ "`list`")*/    
    #moore.slice(0, 3)
    

![Preview](/assets/docs/4Wrq2xnRY/*[ tutorial
](/docs/tutorial/ "tutorial")*/rguments ` (  0  ,  3  )  ` , the [ ` slice `
](/docs/*[ our web app ](https://typst.app/signup/)*/sli/*[ installing the compiler ](https://github.com/typst/typst/releases)*/ces 0, 1, and 2). We can see that
each row is its own array with one item per cell.

Now, let's write a loop that will transform this data into an array of cells
that we can use with the table function.

    
    
    #let moore = csv("moore.csv")
    
    #table(
      columns: 2,
      ..for (.., year, count) in moore {
        (year, count)
      }
    )
    

![Preview](/assets/docs/1JHLF5egGPQD3C2V0wZONgAAAAAAAAAA.png)

The example above uses a for loop that iterates over the rows in our CSV file
and returns an array for each iteration. We use the for loop's [ destructuring
](/docs/reference/scripting/#bindings) capability to discard all but the last
two items of each row. We then create a new array with just these two. Because
Typst will concatenate the array results of all the loop iterations, we get a
one-dimensional array in which the year column and the number of transi/*[ Paragraph breaks ](/docs/reference/model/parbreak/)*/s. For this we use the [ spread
operator ](/docs/reference/foundations/arguments/#spreading) ( ` .. ` ). By
prefixing an array, or, in our case an expressio/*[Preview](/assets/docs/1Xaxf-Fz-W7agcXqKmLyjQAAAAAAAAAA.png)*/e array's items should be used as positional
arguments.

Alternatively, we /*[
Pandoc ](https://pandoc.org)*/docs/reference/foundations/array/#definitions-map) , [ ` slice `
](/docs/reference/foundations/array/#definitions-slice) , and [ ` flatten `
](/docs/reference/foundations/array/#definitions-flatten) array methods to
write this in a more functional style:

    
    
    #let moore = csv("moore.csv")
    
    #table(
       columns: moore.first().len(),
       ..moore.map(m => m.slice(2)).flatten(),
    )
    

This example renders the same as/*[ headings ](/docs/reference/model/heading/)*/`
function to change each row of the data. We pass a function to map that gets
run on each row of the CSV and returns a new value to replace that row with.
We use it to discard the first two columns with ` slice ` . Then, we spread
the data into the ` table ` function. However, we need to pass a one-
dimensional array and ` moore ` 's value is two-dimensional (that means that
each of its row values contains an array with the cell data). That's why we
call ` flatten ` which converts it to a one-dimensional array. We also extract
the number of columns from the data itself.

Now that we hav/*[ full syntax cheat sheet
](/docs/reference/syntax/)*/e the table
itself nice! The transistor counts go from millions in 1995 to trillions in
2021 and changes are difficul/*[ ` strong /*![â](/assets/icons/16-arrow-right.svg)*/ng`")*/r data logarithmically to make it more digestible:

  /*[ /*![â](/assets/icons/16-arrow-right.svg)*/`emph`")*/ moore-log = moore.slice(1).map(m => {
      let (.., year, coun/*[ ` raw ` ](/docs/reference/text/raw/ "`raw`")*/      let round/*https:/*![](/assets/icons/16-arrow/*[ ` rect `
](/docs/reference/visualize/rect/ "`rect`")*/nk/ "`link`")*/here(x: 0): strong
    
    #table(
       co/*[ ` label ` ](/docs/reference/foundations/label/ "`label`")*/ fill: (_, y) => if calc.odd(y) { rgb("D7D9E/*[Year][Transistor count ($log_10$)]*/del/ref/ "`ref`")*/er[Year][Transistor count ($log_10$)],
       table.hline/*[ ` cite ` ](/docs/reference/model/cite/ "`cite`")*/n(),
    )
    

![Preview](/assets/docs/ZOXJwHX6lPP_GLnz4/*[ ` list ` ](/docs/reference/model/list/ "`list`")*/op the header row from the data since we are
adding our own. T/*[ ` enum ` ](/docs/reference/model/enum/ "`enum`")*/ove. We do
this by [ destructuring ](/docs/reference/scripting/#bindi/*[ ` terms ` ](/docs/reference/model/terms/ "`terms`")*/t items. We then convert the string in ` count
` to a floatin/*[ ` figure ` ](/docs/reference/model/figure/ "`figure`")*/the
variable ` log ` . Finally, we round it to two digits,/*[ ` table ` ](/docs/reference/model/table/ "`table`")*/ ` rounded ` . Then, we return an array with `
year ` and ` rounded ` that replaces the original ro/*[ ` equation ` ](/docs/reference/math/equation/)*/ t/*[ Lists ](/docs/reference/model/list/)*/d a logarithm
to the values. Then, we spread the flattened data as above.

We also styled the table with  stripes  , a  horizontal line  below the first
row,  aligned  everything to the right, and emboldened the first column. Click
on the links to go to the relevant guide sections and see how it's done!

==  What if I need the table function for something that isn't a table?

Tabular layouts of content can be useful not only for /*[Preview](/assets/docs/EtxJBpmzn-Q3caUem89mOQAAAAAAAAAA.png)*/ throughout this guide, but also for
presentational purposes. Typst differentiates between grids that are f/*[ widely
](/docs/reference/model/list/#parameters-tight)*/n which the arrangem/*[ numbered list ](/docs/reference/model/enum/)*/To make this difference clear to other software and allow templat/*[ term list
](/docs/reference/model/terms/)*/unctions for grid and table layout:

  - The [ ` table ` ](/docs/reference/model/table/ "`table`") function explained throughout this guide which is intended for tabular data. 
  - The [ ` grid ` ](/docs/reference/layout/grid/ "`grid`") function which is intended for presentational purposes and page layout. 

Both elements work the same way and have the same arguments. You can/*[ markup mode and code mode
](/docs/reference/scripting/#blocks)*/ grids. There are
only three differences:

  - You'll need to use the [ ` grid.cell ` ](/docs/reference/layout/grid/#definitions-cell "`grid.cell`") , [ ` grid.vline ` ](/docs/reference/layout/grid/#definitions-vline "`grid.vline`") , and [ ` grid.hline ` ](/docs/reference/layout/grid/#definitions-hline "`grid.hline`") elements instead of [ ` table.cell ` ](/docs/reference/model/table/#definitions-cell "`table.cell`") , [ ` table.vline ` ](/docs/reference/*[ files
](/docs/reference/scripting/#modules)*/`") , and [ ` table.hline /*[ condition
](/docs/reference/scripting/#conditionals)*/able.hline`") . 
  - The grid has different defaults: It /*[ _content_ ](/docs/reference/foundations/content/)*/inset ` ) inside of its cells. 
  - Elements like ` figure ` do not react to grids since they are supposed to have no semantical bearing on the document structure. 

[ ![â](/assets/icons/16-arrow-right.svg) Page setup guide  Previous page
](/docs/guides/page-setup-guide/) [ ![â](/assets/icons/16-arrow-right.svg)
Changelog  Next page  ](/docs/changelog/)



= *docs/gu/*[Preview](/assets/docs/YRh-AUkIq4C1mI8DVTggswAAAAAAAAAA.png)*/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow/*[ ` rect `
](/docs/reference/visualize/rect/ "`rect`")*/*[ ` underline `
](/docs/reference/text/underline/ "`underline`")*/*[ ` calc.max `
](/docs/reference/foundations/calc/#functions-max)*/*[ ` range `
](/docs/reference/foundations/array/#definitions-range)*/want to
try out Typst. We will explore the main differences between these two systems
from a user perspective. Although Typst is not built upon LaTeX and has a
different syntax, you will learn how to use your LaTeX skills to get a head
start.

Just like LaT/*[ reference ](/docs/reference/ "reference")*/tem: You compose your
document in a text file and mark it up with commands and other syntax. Then,
you use a compiler to typeset the source file into a PDF. However, Typst also
differs from LaTeX in several aspects: For one, Typst uses more dedicated
syntax (like you may know from Markdown) for common tasks. Typst's commands
are also more principled: They all work the same, so unlike in LaTeX, you just
need to understand a few general concepts instead of learning diffe/*[Preview](/assets/docs/qhelTU2eEzhkL0zp__ciIAAAAAAAAAAA.png)*/aster than LaTeX:
Compilation usually takes milliseconds, not seconds, so the web app and the
compiler can both provide instant previews.

In the following, we will cover some of the most common questions a user
switching from La/*[
reference page ](/docs/reference/)*/ent in Typst. If you
prefer a step-by-step introduction to Typst, check out our [ tutorial
](/docs/tutorial/ "tutorial") .

==  Installation

You have two ways to use Typst: In [ our web app ](https://typst.app/signup/)
or by [ installing the compiler ](https://github.com/typst/typst/releases/*[ content
](/docs/reference/foundations/content/ "content")*/batteries-included
collaborative editor and run Typst in your browser, no installation required.

If you choose to use Typst on your computer instead, you can download the
compiler as a singl/*[ content ](/docs/reference/foundations/content/ "content")*/required. Unlike LaTeX, packages are downloaded when you first use them and
then cached locally, keeping your Typst installation lean. You can use your
own editor and decide where to store your files with the local compiler.

==  How do I create a new, empty document?

That's easy. You just create a new, empty text file (the file extension is `
.typ ` ). No boilerpla/*[Preview](/assets/docs/mXv-36m3C2iLosBLIxMjHwAAAAAAAAAA.png)*/xt. It will be set on an empty A4-sized page. If you are using the web
app, click "+ Empty document" to create/*[ data types ](/docs/reference/foundations/type/)*/[ Paragraph breaks ](/docs/reference/model/parbreak/) work just as
they do in LaTeX, just use a blank line.

    
    
    Hey there!
    
    Here are two paragraphs. The
    output is shown to the/*[ Content ](/docs/reference/foundations/content/)*/agcXqKmLyjQAAAAAAAAAA.png)

If yo/*[ String ](/docs/reference/foundations/str/)*/cument instead, you can us/*[ Integer ](/docs/reference/foundations/int/)*/our source/*[ Floating point number ](/docs/reference/foundations/float/)*/ web app, so /*[ Absolute length ](/docs/reference/layout/length/)*/ject in Typst.

==  How do I create section/*[ Relative length ](/docs/reference/layout/ratio/)*/` \section ` to create a section heading. Nested
headings are indicated with ` \subsection ` , ` \subsubsection ` , etc.
Depending on your document class, there is also ` \part ` or ` \chapter ` ./*[ control flow constructs
](/docs/reference/scripting/#conditionals)*/r/*[ operators
](/docs/reference/scripting/#operators)*/th an equals sign and a space to get
a first-order heading: ` = Introduction  ` . If you need a second-order
heading, you use two equals signs: `/*[ variables
](/docs/reference/scripting/#bindings)*/eply as you'd like by adding more equals signs.

Emphasis (usually rendered as italic text) is expressed by enclosing text in `
_underscores_  ` and strong emphasis (usually rendered in boldface) by using `
_stars_  ` instead.

Here is a list of common markup commands used in LaTeX and their Typst
equivalents. You can also check out the [ full syntax cheat sheet
](/docs/reference/syntax/) .

Element  |  LaTeX  |  Typst  |  See   
---|---|---|---  
Strong emphasis  |  ` \textbf{strong} ` |  ` _s/*[Preview](/assets/docs/B033fxNtvCwYya9MX4R6xwAAAAAAAAAA.png)*/strong`")  
Emphasis  |  ` \emph{emphasis} ` |  ` _emphasis_  ` |  [ ` emph ` ](/docs/reference/model/emph/ "`emph`")  
Monospace / code  |  ` \texttt{print(1)} ` |  ` `print(1)`  ` |  [ ` raw ` ](/docs/referen/*![Preview](/assets/docs/YRh-AUkIq4C1mI8DVTggswAAAAAAAAAA.png)*/|  ` https://typst.app/  ` |  [ ` link ` ](/docs/reference/model/link/ "`link`")  
Label  |  ` \label{intro} ` |  ` <intro> ` |  [ ` label ` ](/docs/reference/foundations/label/ "`label`")  
Reference  |  ` \ref{intro} ` |  ` @intro  ` |  [ ` ref ` ](/docs/reference/model/ref/ "`ref`")  
Citation  |  ` \cite{humphrey97} ` |  ` @humphrey97  ` |  [ ` cite ` ](/docs/reference/model/cite/ "`cite`")  
Bullet list  |  ` itemize ` environment  |  ` -  List ` |  [ ` list ` ](/docs/reference/model/list/ "`list`")  
Numbered list  |  ` enumerate ` environment  |  ` /*[ set rule. ](/docs/reference/styling/#set-rules)*/num/ "`enum`")  
Term list  |  ` description ` environment  |  ` /  Term  :  List ` |  [ ` terms ` ](/docs/reference/model/terms/ "`terms`")  
F/*[Preview](/assets/docs/aX-wYquEk7ekHdAWcGZ3-wAAAAAAAAAA.png)*/ [ ` figure ` ](/docs/reference/model/figure/ "`figure`")  
Table  |  ` table ` environment  |  ` table ` function  |  [ ` table ` ](/docs/reference/model/table/ "`table`")  
Equation  |  ` $x$ ` , ` align ` / ` equation ` environments  |  ` $  x  $  ` , ` $  x = y  $  ` |  [ ` equati/*![Preview](/assets/docs/qhelTU2eEzhkL0zp__ciIAAAAAAAAAAA.png)*/efer/*[Preview](/assets/docs/FTzkApPthDlHdofpWCjnfwAAAAAAAAAA.png)*/ead, they have lightweight syntax like headings. To create an unordered
list (/*[ ` enum ` ](/docs/reference/model/enum/)*/em with a hyphen:

    
    
    To write t/*[ Most syntax is linked to a function in this way.
](/docs/reference/syntax/)*/     \item Flexible
      \item Intuitive
    \end{itemize}
    ```
    
    ...just type this:
    
    - Fast
 /*[ show
rule ](/docs/reference/styling/#show-rules)*/](/assets/docs/EtxJBpmzn-Q3caUem89mOQAAAAAAAAAA.png)

Nesting lists works just by using proper indentation. Adding a blank line in
between items results in a more [ widely
](/docs//*[ ` font `
](/docs/reference/text/text/#parameters-font)*/*[ ` style `
](/docs/reference/text/text/#parameters-style)*/ en/*[ ` weight `
](/docs/reference/text/text/#parameters-weight)*/a [ term list
](/docs/reference/model/terms/) ( ` description ` ), write ` /  Term  :
Description ` instead.

==  How do I use a command?

LaTeX heavily relies on com/*[ `
smallcaps ` ](/docs/reference/text/smallcaps/ "`smallcaps`")*/t the typesetting process and to insert and manipulate
content. Some commands accept arguments, which are most frequently enclosed in
cur/*[ _everything_ show
rule ](/docs/ref/*![Preview](/assets/docs/mXv-36m3C2iLosBLIxMjHwAAAAAAAAAA.png)*/s/reference/scripting/#blocks) . The default is markup mode, where you
compose text and /*[Preview](/assets/docs/uKURZLdKdC2JssMYxVk2sQAAAAAAAAAA.png)*/`
. Code mode, on the other hand, parallels programming languages like Python,
providing the option to input and execute segments of code.

Within Typst's markup, you can switch to code mode for a single command (or
rather, _expression_ ) using a hash ( ` # ` ). This is how you call functions
to, for example, split your project into different [ files
]/*[ functions
](/docs/reference/foundations/function/)*/based on some [ condition
](/docs/reference/scripting/#conditionals) . Within code mode, it is possible
to include normal markup [ _content_ ](/docs/reference/foundations/content/)
by using square brackets. With/*[ show rule ](/docs/reference/styling/#show-rules)*/other normal value for a variable.

    
    
    First, a rectangle:
    #rect()
    
    Let me show how to do
    #underline([_underlined_ text])
    
    We can also do some maths:
    #calc.max(3, 2 * 4)
    
    And finally a little loop:
    #for x in range(3) [
      Hi #x.
    ]
    

![Preview](/assets/docs/YRh-AUkIq4C1mI8DVTggswAAAAAAAAAA.png)

A function call always involves the name of the function ( [ ` rect `
](/docs/reference/visualize/rect/ "`rect`") , [ ` underline `
](/docs/reference/text/underline/ "`underline`") , [ ` calc.max `
](/docs/reference/foundations/calc/#functions-max) , [ ` range `
](/docs/reference/foundations/array/*[Preview](/assets/docs/k47Rrbrcbzmkzl-uxGd1cAAAAAAAAAAA.png)*/o /*[ ` import  ` ](/docs/reference/scripting/#modules)*/e optional if/*[
functions ](/docs/reference/foundations/function/)*/ of
arguments passed within those parentheses depends on the concrete function and
is specified in the [ reference ](/docs/reference/ "reference") .

===  Arguments

A function can have multiple arguments. Some arguments are positional, i.e.,
you just provide the value: The function ` #  lower  (  "SCREAM"  )  ` returns
its argument in all-lowercase. Many functions use named arguments instead of
positional arguments to increase legibility. For example, the dimensions and
stroke of a rectangle are defined with named arguments:

    
    
    #rect(
      width: 2cm,
      height: 1cm,
      stroke: red,
    )
    

![Preview](/assets/docs/qhelTU2eEzhkL0zp__ciIAAAAAAAAAAA.png)

You specify a named argument by first entering its name (above, it's ` width `
, ` height ` , and ` stroke ` ), then a colon, followed by the value ( ` 2cm `
, ` 1cm ` , ` red ` ). You can find the available named arguments in the [
reference page ](/docs/reference/) for each fu/*[ the list of templates ](https://typst.app/universe/search/?kind=templates)*/ to how some LaTeX environments
are configured, for exampl/*[ ` awesome-typst
` repository ](https://github.com/qjcg/awesome-typst)*/t with the labels ` a) ` ,
` b) ` , and so on.

Often, you want to provide some/*[ create your own, custom templates. ](/docs/tutorial/making-a-
template/)*/. For example,
the LaTeX command ` \underline{Alternative A} ` would translate to ` #
underline  (  [  Alternative A  ]  )  ` in Typst. The square brackets indicate
that a value is [ content ](/docs/reference/foundations/content/ "content") .
Within these brackets, you can use normal markup. However, that's a lot of
parentheses for a pretty simple construct. This is why you can also move
trailing content arguments after the /*![Preview](/assets/docs/FTzkApPthDlHdofpWCjnfwAAAAAAAAAA.png)*/pty).

    
    
    Typst is an #underline[alternative]
    to LaTeX.
    
    #rect(fill: aqua)[Get started here!]
    

![Preview](/assets/docs/mXv-36m3C2iLosBLIxMjHwAAAAAAAAAA.png)

===  Data types

You likely already noticed that the arguments have distinctive data types.
Typst supports many [ data types ](/docs/reference/foundations/type/) . Below,
there is a table with some of the most important ones and how to write them.
In order to specify values of any of these types, you have to be in code mode!

Data type  |  Example   
---|---  
[ Content ](/docs/reference/found/*[ ` image ` ](/docs/reference/visualize/image/ "`image`")*/ring ](/docs/reference/*[ ` table ` ](/docs/reference/model/table/ "`table`")*/*[ ` grid ` ](/docs/reference/layout/grid/ "`grid`")*/`  
[ Floating point number ](/docs/reference/foundations/float/) |  ` 1.459  `  
[ Absolute/*[ ` text ` ](/docs/reference/text/text/#parameters-lang)*/ ` 5in  ` , ` 0.3cm  ` , ...   
[ Relative length ](/docs/re/*[ Math mode ](/docs/reference/math/)*/
  
The difference be/*[ ` sym ` ](/docs/reference/symbols/)*/ent can /*[ syntax ](/docs/reference/syntax/#math)*/, while a string reall/*[ ` page ` ](/docs/reference/layout/page/ "`page`")*/ovides [ control flo/*[ ` text ` ](/docs/reference/text/text/#parameters-fill)*/and [ operators
](/docs/reference/scripting/#operators) such as /*![Preview](/assets/docs/uKURZLdKdC2JssMYxVk2sQAAAAAAAAAA.png)*/k`")*/ two variables.

You can also store va/*[ ` cite ` ](/docs/reference/model/cite/ "`cite`")*/*[ ` bibliography ` ](/docs/reference/model/bibliography/ "`bibliography`")*/omputations on them, create reusa/*[ ` raw ` ](/docs/reference/text/raw/ "`raw`")*/ times. The variable binding is /*[ ` block ` ](/docs/reference/layout/block/#parameters-spacing)*/w/*[ ` par ` ](/docs/reference/model/par/#parameters-first-line-indent)*/ 5
    
    // Define a functio/*[ ` text ` ](/docs/reference/text/text/#parameters-lang)*/1
    
    // Reference the variables.
    I/*[ ` figure ` ](/docs/reference/model/figure/ "`figure`")*/e
    #inc(five) finge/*[ ` list ` ](/docs/reference/model/list/ "`list`")*/*[ ` enum ` ](/docs/reference/model/enum/ "`enum`")*/*[ ` terms ` ](/docs/reference/model/terms/ "`terms`")*/like ` \textbf{bold text} ` receive an argument in
curly braces and only affect that argument. Other c/*[ package ecosystem ](https://typst.app/universe/)*/tches (LaTeX calls this a declaration), altering the
appearance of all subsequent content within the document or current scope.

In Typst, the same function can be used both to affect the appearance for the
remainder of the document, a block (or scope), or just its arguments. For
example, ` #  text  (  weight  :  "bold"  )  [  bold text  ]  ` will only
embolden its argument, while /*![Preview](/assets/docs/k47Rrbrcbzmkzl-uxGd1cAAAAAAAAAAA.png)*/text until the end of the current block, or, if t/*[
awesome-typst repository ](https://github.com/qjcg/awesome-typst)*/bvious based on whether
it is used in a call or a [ set rule. ](/docs/reference/styling/#set-rules)

    
    
    I am starting out with small text.
    
    #set text(14pt)
    
    This is a bit/*[ ` import `
](/docs/reference/scripting/#modules)*/[Preview](/assets/docs/aX-wYquEk7ekHdAWcGZ3-wAAAAAAAAAA.png)

Set rules may appear anywhere in the document. They can be thought of /*[ ` include ` ](/docs/reference/scripting/#modules)*/tion:

    
    
    #set enum(numbering: "I.")
    
    Good results can only be obtained by
    + following best practices
    + being aware of current results
      of other researchers
    + checking the data for biases
    

![Preview](/assets/docs/FTzkApPthDlHdofpWCjnfwAAAAAAAAAA.png)

The ` + ` is syntactic sugar (think of it as an abbreviation) for a call to
the [ ` enum ` ](/docs/reference/model/enum/) fun/*[Preview](/assets/docs/_cQQzHlyveS6_BoZXnzzQQAAAAAAAAAA.png)/*[ Math mode ](/docs/reference/math/)*/](/docs/reference/syntax/) If you need to style an element beyond what its
arguments enable, you can completely redefine its appearance with a [ show
rule ](/docs/reference/styling/#show-rules) (somewhat comparable to `
\renewcommand ` ).

You can achieve the effects of LaTeX commands like ` \textbf ` , ` \textsf ` ,
` \rmfamily ` , ` \mdseries ` , and ` \itshape ` with the [ ` font `
](/docs/reference/text/text/#parameters-font) , [ ` style `
](/docs/reference/text/text/#parameters-styl/*[ symbol pages ](/docs/reference/symbols/)*/xt/text/#parameters-weight) arguments of the ` text `
function. The text function can /*[ Unicode
escape sequence ](/docs/reference/syntax/#escapes)*/argument. To replace ` \textsc ` , you can use the [ `
smallcaps/*[ appending a
modifier ](/docs/reference/symbols/symbol/)*/ion, which
renders its content argument as smallcaps. Should you want to use it
declaration style (like ` \scshape ` ), you can use an [ _everything_ show
rule ](/docs/reference/styling/#show-rules) that applies the function to/*[Preview](/assets/docs/jk1sG5lCs-ZQ-s2nXNTbTwAAAAAAAAAA.png)*/
    Boisterous Accusations
    

![Preview](/assets/docs/uKURZLdKdC2JssMYxVk2sQAAAAAAAAAA.png)

==  How do I load a document class?

In LaTeX, you start your main ` .tex ` file with the ` \docum/*[ ` lr ` function
](/docs/reference/math/lr/#functions-lr)*/ supposed to look. In that command,
you may have replaced ` article ` with another value such as ` report ` and `
amsart ` to select a different look.

When using Typst, you style your documents with [ functions
](/docs/reference/foundations/function/) . Typically, you use a template that
provides a function that styl/*[Preview](/assets/docs/hWpFm1Wb3In32sS_SEIHvgAAAAAAAAAA.png)/*[ Sub- and superscripts ](/docs/reference/math/attach/#functions-attach)*/complished with a [ show rule ](/docs/reference/styling/#show-rules) that
wraps the following document in a given function. The following example
illustrates how it works:

    
    
    #import "conf.typ": conf
    #show: conf.with(
      title: [
        Towards Improved Modelling
      ],
      authors: (
        (
          name: "Theresa Tungsten",
          affiliation: "Artos Institute",
          email: "tung@artos.edu",
        ),
        (
          name: "Eugene Deklan",
          affiliation: "Honduras State",
          email: "e.deklan@/*[Preview](/assets/docs/0X1AFPDieBd9jiawKpc0-AAAAAAAAAAA.png)*/   )
    
    Let's get s/*[ ` cases ` function ](/docs/reference/math/cases/)*/ul
    paragraphs right here!
    

![Preview](/assets/docs/k47Rrbrcbzmkzl-uxGd1cAAAAAAAAAAA.png)

The [ ` import  ` ](/docs/reference/scripting/#modules) statement makes [
functions ](/docs/reference/foundations/function/) (and other definitions)
from another file available. In this example, it imports t/*[Preview](/assets/docs/Wmx0wcFeGyknnvRFv8bI5QAAAAAAAAAA.png)*/on formats a document as a conference
article. We use a show rule to apply it to the document and also configure
some metadata of the article. After applying the show rule, we can start
writing our article right away!

You can also use templates from Typst Universe (which is Typst's equivalent of
CTAN) using an import statement like this: ` #  import
"@preview/else/*[Preview](/assets/docs/aSVPcEv5ICbnBtcXfhpmfgAAAAAAAAAA.png)*/f an
individual template to learn the name of its template function. Templates and
packages from Typst Universe are automatically downloaded when you first use
them.

In the web app, you can choose to create/*[ ` mat ` function
](/docs/reference/math/mat/)*/ even create your own using the template wizard. Locally, you can
use the ` typst init ` CLI to create a new project from a template. Check out
[ the list of templ/*[Preview](/assets/docs/yiSilYGQ1wRBpIK3ON349AAAAAAAAAAA.png)*/blished on Typst Universe. You can also take a look at the [ ` awesome-typst
` repository ](https://github.com/qjcg/awesome-typst) to find community
templates that aren't available through Universe.

You can also [ create/*[ margins ](/docs/reference/layout/page/#parameters-margin)*/plate/) T/*[ justification ](/docs/reference/model/par/#parameters-justify)*/*[ tighter lines ](/docs/reference/model/par/#parameters-leading)*/o/*[ first-line-indent ](/docs/reference/model/par/#parameters-/*![â](/assets/icons/16-arrow-right.svg)*/(/docs/reference/text/text/#parameters/*![â](/assets/icons/16-arrow-right.svg)*/fects beyond creating an output value / output
cont/*[ code blocks ](/docs/reference/text/raw/)*/*![Docs](/assets/icons/16-docs-dark.svg)*/s/reference/layout/block/#parameters-spacing)*/our whole d/*[ spacing ](/docs/reference/layout/block/#parameters-spacing)*/it a/*[ headings ](/docs/reference/model/heading/)*/lon with the result as an argument. The ` .with ` part is a _method_ th/*![Preview](/assets/docs/_cQQzHlyveS6_B/*[ ` highlight ` ](/docs/reference/text/highlight/)*/on to the show rule.

==  How do I load packages?

Typst is "batteries included," so the equivalent of many popular LaTeX
packages is built right-in. Below, we compiled a table with frequently loaded
packages and their corresponding Typst functions.

LaTeX Package  |  Typst Alternative   
---|---  
graphicx, svg  |  [ ` image ` ](/docs/reference/visualize/image/ "`image`") function   
tabularx  |  [ ` table ` ](/docs/re/*[ ` bibliography ` ](/docs/reference/model/bibliography/
"`bibliography`")*// "`grid`") functions   
fontenc, inp/*[ Typst's YAML-based
native format ](https://github.com/typst/hayagriva/blob/main/docs/file-
format.md)*//text/#parameters-lang) function: ` #  set  text  (  lang  :  "zh"  )  `  
amsmath  |  [ Math mode ](/docs/reference/math/)  
amsfonts, amssymb  |  [ ` sym ` ](/docs/reference/symbo/*[ over 80 citation styles
](/docs/reference/model/bibliography/#parameters-style)*/ [ ` page ` ](/docs/reference/layout/page/ "`pag/*[ CSL repository ](https://github.com/citation-
style-language/styles)*/rameters-fill) function: ` #  set  text  (  fill  :  rgb  (  "#0178A4" /*![Preview](/assets/docs/j/*[ ![â](/assets/icons/16-arrow-right.svg)*/nk`") function   
bibtex, biblatex, natbib  |  [ ` cite /*![â](/assets/icons/16-arrow-right.svg)*/ence/model/cite/ "`cite`")*/(/docs/reference/model/bibliography/ "`bibliography`") functions   
lstl/*![Docs](/assets/icons/16-docs-dark.svg)*/ference/text/raw/ "`raw`") function and syntax/*[
` #  cite  (  <key> ,  form  :  "prose"  )  `
](/docs/reference/model/cite/#parameters-form)*/](/docs/reference/model/par/#parameters-first-line-indent) func/*[ `
bibliography ` ](/docs/reference/model/bibliography/ "`bibliography`")*/meters-lang) language and type ` " ` or ` ' `  
caption  | /*![Preview](/assets/docs/hWpFm1Wb3In32sS_SEIHvgAAAAAAAAAA.png)*/ction   
enumitem  |  [ ` list ` ](/docs/reference/model/list/ "`list`") , [ ` enum ` ](/docs/reference/model/enum/ "`enum`") , [ ` terms ` ](/docs/reference/model/terms/ "`terms`") functions   
  
Although _many_ things are built-in, not everything can be. That's why Typst
has its own [ package ecosystem ](https://typst.app/universe/) where the
community share its creations and aut/*[ ` cetz ` ](https://github.com/cetz-package/cetz)*/kage: This package allows you to create complex drawings and plots.
To use cetz in your document, you can just write:

    
    
    #import "@preview/cetz:0.2.1"
    

(The ` @preview `/*[ ` page ` functi/*![Preview](/assets/docs/0X1AFPDieBd9ji/*[ ` location ` ](/docs/reference/introspection/location/)*/e replaced in the future.)

Aside from the official package hub, you might also w/*[ ` pad ` function ](/docs/reference/layout/pad/)*/(https://github.com/qjcg/awesome-typst) , which
compiles a curated list of resources created for Typst.

If you need to load functions and variables from another file within your
project, for example to use a template, you can /*![â](/assets/icons/16-arrow-right.svg)*/convert.com/pdf-to-svg)*//*[ Inkscape ](https://inkscape.o/*![â](/assets/icons/16-arrow-
right.svg)*/instead include the textual content of another fi/*[ ![â](/assets/icons/16-arrow-right.svg)*/efe/*![Docs](/assets/icons/16-docs-dark.svg)*/â](/assets/icons/16-arrow-right.svg)*/ecified file and put it in your
document.

==  How do I input maths?

To enter math mode in Ty/*[ ![Docs](/assets/icons/16-docs/*![Preview](/assets/docs/aSVPcEv5ICbnBtcXfhpmfgAAAAAAAAAA.png)*/es /*[ Reference ](/docs/reference/)*/n's
contents and its enclosing dollar signs/*[ Text ](/docs/reference/text/)*/ numbers from
    $1$ to $/*[ text function ](/docs/reference/text/text/)*/$
    

![Preview](/assets/docs/_cQQzHlyveS6_B/*[ ` highlight ` ](/docs/reference/text/highlight/)*/ence/math/) works differently than regular /*[ ` linebreak ` ](/docs/reference/text/linebreak/)*/ are displayed verbatim,/*[ ` lo/*![Preview](/assets/docs/yiSilYGQ1wRBpIK3ON349AAAAAAAAAAA.png)*/*[ ` lower ` ](/docs/reference/text/lower/)*/ines a lot of useful variables in math mode. /*[ ` overline ` ](/docs/reference/text/overline/)*/ Hebrew letters ( ` alef /*[ ` raw ` ](/docs/reference/text/raw/)*/gh their name. Some symbols are additionally a/*[ ` smallcaps ` ](/docs/reference/text/smallcaps/)*/ ` , and ` -> ` .

Refer to the [ s/*[ ` smartquote ` ](/docs/reference/text/smartquote/)*/ist of the
symbols. If a symbol is missing, you can a/*[ ` strike ` ](/docs/reference/text/strike/)*/uence ](/docs/reference//*[ ` sub ` ](/docs/reference/text/sub/)*/ted forms of symbols can ofte/*[ ` super ` ](/docs/reference/text/super/)*//docs/reference/symbols/symbol//*[ ` text ` ](/docs/reference/text/text/)*/.squiggly ` inserts a squiggly left-pointing arrow. If you want/*[ ` underline ` ](/docs/reference/text/underline/)*/tead, enclose it in/*[ ` upper ` ](/docs/reference/text/upper/)*/" x <= 5 $
    

![Preview](/assets/docs/j/*[ ![â](/assets/icons/16-arrow-right.svg)*/ypst, delimiters will scale automatically for their ex/*[ ![â](/assets/icons/16-arrow-right.svg)*/ht ` commands were implicitly inserted in LaTeX. You
can customize delimiter behaviour using the [/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/r/#functions-lr) . To prevent a pair of delimiters
f/*[ Reference ](/docs/reference/)*/m with backslashes.

Typst will automatical/*[ Introspection ](/docs/reference/introspection/)*/hile
honoring operator precedence. All round parentheses not made redundant by the
fraction will appear in the output.

    
    
    $ f(x) = (x + 1) / x $
    

![Preview](/assets/docs/hWpFm1Wb3In32sS_SEIHvgAAAAAAAAAA.png)

[ Sub- and superscripts ](/docs/reference/math/attach/#functions-attach) work
similarly in Typst and LaTeX. ` $  x  ^  2  $  ` will produce a superscript, `
$  x  _  2  $  ` yields a subscript. If you want to include more than one
value in a sub- or superscript, enclose /*[ context ](/docs/reference/context/ "context")*/-> epsilon  )  $  ` .

Since variables in m/*[ ` counter ` ](/docs/reference/introspection/counter/)*/` /
` , you can also call functions without /*[ ` here ` ](/docs/reference/introspection/here/)*/) := cases(
      1 "if" (x dot y)/2 <= 0,
      /*[ ` locate ` ](/docs/reference/introspection/locate/)*/se",
    ) $
    

![Preview](/assets/docs/0X1AFPDieBd9ji/*[ ` location ` ](/docs/reference/introspection/location/)*/ases ` function ](/docs/reference/math/ca/*[ ` metadata ` ](/docs/reference/introspection/metadata/)*/ are delimited using commas
and the arguments are also interpreted as mat/*[ ` query ` ](/docs/reference/introspection/query/)*/es instead, prefix them with a ` #/*[ ` state ` ](/docs/reference/introspection/state/)*/ text(fill: #maroon, 2 a b)
      + b^2 /*[ ![â](/assets/icons/16-arrow-right.svg)*/knnvRFv8bI5QAAAAAAAAAA.png)

You can use all Typst funct/*[ ![â](/assets/icons/16-arrow-
right.svg)*/t. If
you want them to work normally, with code mode in the argument list, you can
prefix their /*[ ![Docs](/assets/icons/16-docs-dark.svg)*/rom using rectangles or
emoji as your variables anym/*[ Reference ](/docs/reference/)*/¥¸=1)
      #rect(width: 4mm, height: 2mm)/*[ Syntax ](/docs/reference/syntax/)*/![Preview](/assets/docs/aSVPcEv5ICbnBtcXfhpmfgAAAAAAAAAA.png)

If you'd like to enter your mathematical symbols directly as Unicode, that is
possible, too!

Math calls can have two-dimensional argument lists using ` ; ` as a delimiter.
The most common use for this is the [ ` mat ` function
](/docs/reference/math/mat/) that creates matrices:

    
    
    $ mat(
      1, 2, ..., 10;
      2, 2, ..., 10;
      dots.v, dots.v, dots.down, dots.v;
      10, 10, ..., 10;
    ) $
    

![Preview](/assets/docs/yiSilYGQ1wRBpIK3ON349AAAAAAAAAAA.png)

==  How do I get the "LaTeX look?"

Papers set in LaTeX have an unmistakeable look. This is mostly due to their
font, Computer Modern, justification, narrow line spacing, and wide margins.

The example below

  - sets wide [ margins ](/docs/reference/layout/page/#parameters-margin)
  - enables [ justification ](/docs/reference/model/par/#parameters-justify) , [ tighter lines ](/docs/reference/model/par/#parameters-leading) and [ first-line-indent ](/docs/reference/model/par/#parameters-first-line-indent)
  - [ sets the font ](/docs/reference/text/text/#/*![â](/assets/icons/16-arrow-right.svg)*/", an OpenType derivative of Computer /*![â](/assets/icons/16-arrow-right.svg)*/(/docs/reference/text/raw/)
  - disables paragraph [ spacing ](/docs/reference/layout/block/#par/*![Docs](/assets/icons/16-docs-dark.svg)*/g ](/docs//*![](/assets/icons/16-arr/*[ ` none ` ](/docs/reference/foundations/none/ "`none`")*/del/he/*[ ` parbreak ` ](/docs/reference/model/parbreak/ "`parbreak`")*/leading: 0.55em, spacing: 0.55em, fi/*[ ` strong ` ](/docs/reference/model/strong/ "`strong`")*/t: "New Computer Modern")
    #/*[ ` emph ` ](/docs/reference/model/emph/ "`emph`")*/")
    #show heading: set block/*[ ` raw ` ](/docs/reference/text/raw/ "`raw`")*/e a good s/*https://typst.app/*/you/*[ ` link ` ](/docs/reference/model/link/ "`link`")*/plate?

==  Bibliographi/*[ ` label ` ](/docs/reference/foundations/label/ "`label`")*/t is compatible with
BibTeX /*[ ` ref ` ](/docs/reference/model/ref/ "`ref`")*/terature libraries by
loading/*[ ` heading ` ](/docs/reference/model/heading/ "`heading`")*/ibliography/
"`bibliography`")/*[ ` list ` ](/docs/reference/model/list/ "`list`")*/ YAML-based
native format ](http/*[ ` enum ` ](/docs/reference/model/enum/ "`enum`")*/-
format.md) .

Typst uses the Citation Styl/*[ ` terms ` ](/docs/reference/model/terms/ "`terms`")*/raphy styles. You can compare /*[ Math ](/docs/reference/math/)*/` files.
The compiler al/*[ ` linebreak ` ](/docs/reference/text/linebreak/ "`linebreak`")*//bibliography/#parameters-style) , but you /*[ ` smartquote ` ](/docs/reference/text/smartquote/ "`smartquote`")*//github.com/citation-
style-language/styl/*[ Symbols ](/docs/reference/symbols/sym/)*/ntry in your bibliography or reference a label in your
d/*[ Scripting ](/docs/reference/scripting/#expressions)*/eference an entry called
` key ` ). Alternatively, you can use the [ ` cite `
](/docs/reference/model/cite/ "`cite`") function./*![â](/assets/icons/16-arrow-right/*[ Dictionary ](/docs/reference/foundations/dictionary/)*/ose (cf. ` \citet ` and ` \textcite ` ) are available with [
` #  cite  (  <key> ,  form  :  "prose"  )  `
](/*![](/ass/*[ Scripting ](/docs/reference/scripting/#operators)*/more information /*![](/assets/*[ Scripting ](/docs/reference/scripting/#operators)*/rence/model/bibliography/ "`bibliography`")
function.

==  What limitations does Typst currently have compared to LaTeX?

Although Typst can be a LaTeX replacement for many today, t/*[ Math ](/docs/reference/math/)*/pst does not (yet) support. Here is a list/*[ Math ](/docs/reference/math/)*/e, contains possible workarounds.

  - *Wel/*[ ` attach ` ](/docs/reference/math/attach/)*/rs often create elaborate charts along w/*[ ` attach ` ](/docs/reference/math/attach/)*/cosystem does not yet offer the same breadth of/*[ ` frac ` ](/docs/reference/math/frac/)*/ound the [ ` cetz ` ](https://github/*[ ` linebreak ` ](/docs/reference/text/linebreak/ "`linebreak`")*/hange page margins without a pagebreak.* In LaTeX, m/*[ Math ](/docs/reference/math/)*/even without a pagebreak. To change margins in Typs/*[ Math ](/docs/reference/math/)*/ion ](/docs/reference/layout/page/) which will forc/*[ Scripting ](/docs/reference/scripting/#fields)*/s to stretch into the margins, then revertin/*[ Math ](/docs/reference/math/)*/se the [ ` pad ` function ](/docs/reference/layout/p/*[ Symbols ](/docs/reference/symbols/sym/)*/e PDFs as images.* In LaTeX, it has become customary /*[ Math ](/docs/reference/math/)*/F or EPS files. Typst supports neither format as an/*[ Math ](/docs/reference/math/)*/ly convert both into SVG files with [ online tools ](https://c/*[ Scripting ](/docs/reference/scripting/#expressions)*/nkscape.org/) . The web app will automatically convert PDF files to SVG files upon uploading them. 

[ ![â](/assets/icons/16-arrow-right.svg) Guides  Previous page
](/docs/guides/) [ ![â](/assets/icons/16-arrow-right.svg) Page setup guide
Next page  ](/doc/*![Docs](/assets/ic/*[ Scripting ](/docs/reference/scripting/#loops)*/Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arr/*[ ` none ` ](/docs/reference/foundations/none/ "`none`")*/](/assets/icons/16-ar/*[ ` auto ` ](/docs/reference/foundations/auto/ "`auto`")*/ext

Text styling.

The [ text functi/*[ ` bool ` ](/docs/reference/foundations/bool/ "`bool`")*/st.

==  Definitions

  - [ ` high/*[ ` int ` ](/docs/reference/foundations/int/ "`int`")*/ text with a background color. 
  - [ ` linebreak/*[ ` float ` ](/docs/reference/foundations/float/ "`float`")*/ 
  - [ ` lorem ` ](/docs/reference/text/lorem/) C/*[ ` length ` ](/docs/reference/layout/length/ "`length`")*/t/lower/) Converts a string or cont/*[ ` angle ` ](/docs/reference/layout/angle/ "`angle`")*/e/text/overline/) Adds a/*[ ` fraction ` ](/docs/reference/layout/fraction/ "`fraction`")*/w text with optional /*[ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`")*/rence/text/smallcaps/) Dis/*[ ` str ` ](/docs/reference/foundations/str/ "`str`")*/(/docs/reference/text/sm/*[ ` label ` ](/docs/reference/foundations/label/ "`label`")*/t. 
  - [ ` strike ` ](/docs/r/*[ Math ](/docs/reference/math/)*/through text. 
  - [ ` sub ` ](/*[ ` raw ` ](/docs/reference/text/raw/ "`raw`")*/script. 
  - [ ` super ` ](//*[ Scripting ](/docs/reference/scripting/#blocks)*/rscript. 
  - [ ` text ` ](/docs/reference/text/text//*[ Scripting ](/docs/reference/scripting/#blocks)*/riety of ways. 
  - [ ` underline ` ](//*[ Scripting ](/docs/reference/scripting/#blocks)*/ 
  - [ ` upper ` ](/docs/reference/text/upper/) C/*[ Scripting ](/docs/reference/scripting/#blocks)*/â](/assets/icons/16-arrow-right.svg/*[ Array ](/docs/reference/foundations/array/)*/model/terms/) [ ![â](/assets/icons/16-arrow-right/*[ Dictionary ](/docs/reference/foundations/dictionary/)*/light/)



= *docs/reference/i/*[ Scripting ](/docs/reference/scripting/#operators)*/cs-dark.svg) ](/docs)
  - ![](/ass/*[ Scripting ](/docs/reference/scripting/#operators)*/cs/reference/)
  - ![](/assets/*[ Scripting ](/docs/reference/scripting/#operators)*/ocs/reference/introspection/)

/*[ Scripting ](/docs/reference/scripting/#fields)*/parts.

This category is home to Typst's in/*[ Scripting ](/docs/reference/scripting/#methods)*/nction, you can access and manipulate page, /*[ Function ](/docs/reference/foundations/function/)*/stom ones. Meanwhile, the ` query ` function
lets /*[ Arguments ](/docs/reference/foundations/arguments/)*/things like a list
of figures or headers which show t/*[ Function ](/docs/reference/foundations/function/)*/e _contextual._ It is recommended to/*[ Scripting ](/docs/reference/scripting/#bindings)*/ontext/ "context") before continuing here.

==  Defin/*[ Function ](/docs/reference/foundations/function/)*/ection/counter/) Counts through pages, ele/*[ Styling ](/docs/reference/styling/#set-rules)*/nce/introspection/here/) Provides the current loca/*[ Styling ](/docs/reference/styling/#set-rules)*//reference/introspection/locate/) Determines the location of an /*[ Styling ](/docs/reference/styling/#show-rules)*/docs/reference/introspection/location/) Identifies an element in /*[ Styling ](/docs/reference/styling/#show-rules)*/nce/introspection/metadata/) Exposes a value to th/*[ Styling ](/docs/reference/styling/#show-rules)*/. 
  - [ ` query ` ](/docs/reference/introspection/q/*[ Context ](/docs/reference/context/)*/. 
  - [ ` state ` ](/docs/reference/introspection/state/) Man/*[ Scripting ](/docs/reference/scripting/#conditionals)*/ts/icons/16-arrow-right.svg) Stroke  Previous page
](/docs/ref/*[ Scripting ](/docs/reference/scripting/#loops)*/s/16-arrow-
right.svg) Counter  Next page  ](//*![â](/assets/icons/16-arrow-right.svg)*/ng/#loops)*/s/reference/syntax.md*

  - [ ![/*![â](/assets/icons/16-arrow-right.svg)*/ference/scripting/#loops)*/icons/16-arrow-right.svg)
  - [ Reference/*[ Function ](/*![Docs](/assets/icons/16-docs-dark.svg)*//-right.svg)
  - [ Syntax ](/docs/reference/sy/*[ Scripting ](/docs/reference/scripting/#modules)*/is means that you can use simple syntax to
/*[ Scripting ](/docs/reference/scripting/#modules)*/arkup syntax is complemented
by set and show rules, which let you style/*[ Scripting ](/docs/reference/scripting/#modules)*/ is backed by a tightly integrated scripting language
with built-in and user-defined functions.

==  Modes

Typst has three syntactical modes: Markup, math, and code. Markup mode is the
default in a Typst document, math mode lets you write mathematical formulas,
and code mode lets you use Typst's scripting features.

You can switch to a specific mode at any point by referring to the following
table:/*[Preview](/assets/docs/qmPJyf2DgB8m9bpdDccxUQAAAAAAAAAA.png)*/Prefix the code with ` # ` |  ` Number:  #  (  1  +  2  )  `  
Math  |  Surround equation with ` $  ..  $  ` |  ` $  -  x  $  is the opposite of  $  x  $  `  
Markup  |  Surround markup with ` [..] ` |  ` let  name  =  [  _Typst!_  ]  `  
  
Once you ha/*[Preview](/assets/docs/0bd3Pt_MGVIAagJ8npuMMAAAAAAAAAAA.png)*/her
hashes unless you switched back to markup or math mode in between.

==  Markup

Typst provides built-in markup for the most common document elements. Most of
the syntax elements are just shortcuts for a corresponding function. The table
below lists all markup that is available and links to the best place to learn
more about their/*[ strings ](/docs/reference/foundations/str/)*/  
---|---|---  
Paragraph break  |  Blank line  |  [ ` parbreak `/*[Preview](/assets/docs/2Hq1wVq0JUPd4EarGtBZUQAAAAAAAAAA.png)*/phasis  |  ` _strong_  ` |  [ ` strong ` ](/docs/reference/model/strong/ "`strong`")  
Emphasis  |  ` _emphasis_  ` |  [ ` emph ` ](/docs/reference/model/emph/ "`/*[ strings ](/docs/reference/foundations/str/)*/ raw ` ](/docs/reference/text/raw/ "`raw`")  
Link  |  ` https://typst.app/  ` |  [ ` link ` ](/docs/reference/model/link/ "`link`")  
Label  |  ` <intro> ` |  [ ` label ` ](/docs/reference/foundations/label/ "`label`")  
Reference  | /*![â](/assets/icons/16-arrow-right.svg)*/nce/model/ref/ "`ref`")  
Heading  |  ` = Heading  ` |  [ ` he/*![â](/assets/icons/16-arrow-
right.svg)*/"`heading`")  
Bullet list  |  ` -  item ` |  [ ` list ` ](/docs/reference/model/list/ "`list`")  
Nu/*![Docs](/assets/icons/16-docs-dark.svg)*/ ` ](/docs/reference/model/enum/ "`enum`")  
Term list  |  ` /  Term  :  description ` |  [ ` terms ` ](/docs/reference/model/terms/ "`terms`")  
Math  |  ` $  x  ^  2  $  ` |  [ Math ](/docs/reference/math/)  
Line break  |  ` \  ` |  [ ` linebreak ` ](/docs/reference/text/linebreak/ "`linebreak`")  
Smart quote  |  ` 'single' or "double" ` |  [ ` smartquote ` ](/docs/reference/text/smartquote/ "`smartquote`")  
Symbol shorthand  |  ` ~  ` , ` ---  ` |  [ Symbols ](/docs/reference/symbols/sym/)  
Code expression  |  ` #  rect  (  width  :  1cm  )  ` |  [ Scripting ](/docs/reference/scripting/#expressions)  
Character escape  |  ` Tweet at us  \#  ad ` |  Below   
Comment  |  ` /* block _/  ` , ` // line  ` |  Below   
  
==  Math mode

Math mode is a special markup mode that is used to typeset mathematical
formulas. It is entered by wrapping an equation in ` $ ` characters. This
works both in markup and code. The equation will be typeset into its own block
if it starts an/*[ distinct type from strings
](https://github.com/typst/typst/issues/971)*/n be produced by omitting the whitespace (e.g. ` $  x  ^  2  $
` ). An overview over the syntax specific to math mode follows/*[ ![â](/assets/icons/16-arrow-right.svg)*/  
Inline math  |  ` $  x  ^  2  $  ` |  [/*[ ![â](/assets/icons/16-arrow-right.svg)*/el math  |  ` $  x  ^  2  $  ` |  [ Math ](/docs/reference/math/)  
Bottom attach/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ ` ](/docs/reference/math/attach/)  
Top attachment /*[ Reference ](/docs/reference/)*/ttach ` ](/docs/reference/math/attach/)  
F/*[ Model ](/docs/reference/model/)*//  5  $  ` |  [ ` frac ` ](/docs/reference/math/frac/)  
Line break  |  ` $  x  \  y  $  ` |  [ ` linebreak ` ](/docs/reference/text/linebreak/ "`linebreak`")  
Alignment point  |  ` $  x  & = 2  \  & = 3  $  ` |  [ Math ](/docs/referenc/*[ ` bibliography ` ](/docs/reference/model/bibliography/)*/ ` |  [ Math ](/docs/reference/math/) /*[ ` cite ` ](/docs/reference/model/cite/)*/ong  $  ` |  [ Scripting ](/docs/refe/*[ ` document ` ](/docs/reference/model/document/)*/  |  ` $  x y  $  ` |  [ Math ](/docs/reference/mat/*[ ` emph ` ](/docs/reference/model/emph/)*/ ` $  !=  $  ` |  [ Symbols ](/docs/refere/*[ ` enum ` ](/docs/reference/model/enum/)*/|  ` $  a  "is natu/*[ ` figure ` ](/docs/reference/model/figure/)*/  
Math function call  |  ` $  floor /*[ ` footnote ` ](/docs/reference/model/footnote/)*/  
Code expres/*[ ` heading ` ](/docs/reference/model/heading/)*/` |  [ Scripting ](/d/*[ ` link ` ](/docs/reference/model/link/)*/haracter escape  |  ` $  x  \^  2  $  ` |  Below/*[ ` list ` ](/docs/reference/model/list/)*/|  Below   
  
==/*[ ` numbering ` ](/docs/reference/model/numbering/)*/w expressions can start without a
leading ` # ` /*[ ` outline ` ](/docs/reference/model/outline/)*/ to expressions.
Below is a table listing all synta/*[ ` par ` ](/docs/reference/model/par/)*/  |  Example  |  See   
---|---|---  
None  |  ` none  ` |  [ ` none /*[ ` parbreak ` ](/docs/reference/model/parbreak/)*/
Auto  |  ` auto  ` |/*[ ` quote ` ](/docs/reference/model/quote/)*/auto/ "`auto`")  
Boolean  |  ` false  ` , ` true  ` |/*[ ` ref ` ](/docs/reference/model/ref/)*/ons/bool/ "`bool`")  
Integer  |  ` 10  ` /*[ ` strong ` ](/docs/reference/model/strong/)*/undations/int/ "`int`")  
Floating-point number  |  ` 3.14  `/*[ ` table ` ](/docs/reference/model/table/)*/e/foundations/float//*[ ` terms ` ](/docs/reference/model/terms/)*/` , ` 1em  ` , ..  |  [ ` length ` ](/d/*[ ![â](/assets/icons/16-arrow-right.svg)*/
Angle  |  ` 90deg  ` , ` 1rad  ` |  [ ` angle ` ](/docs/ref/*[ ![â](/assets/icons/16-arrow-
right.svg)*/ |  ` 2fr  ` |  [ ` fraction ` ](/docs/reference/layout/fraction/ "`fraction`")  
Ratio  |  `/*![Preview](/assets/docs/qmPJyf2DgB8m9bpdDccxUQAAAAAAAAAA.png)*/ratio`")  
String  |  ` "hello"  ` |  [ ` /*[ Reference ](/docs/reference/)*/ions/str/ "`str`")  
Label  |  ` <intro> ` /*[ Context ](/docs/reference/context/)*/dations/label/ "`label`")  
Math  |  ` $  x  ^  2  $  ` |  [ Math ](/docs/reference/math/) /*![Preview](/assets/docs/0b/*[Preview](/assets/docs/bQONUXVpXWNuuUEOrLszpQAAAAAAAAAA.png)*/ble access  |  ` x ` |  [ Scripting ](/docs/reference/scripting/#blocks)  
Code block  |  ` {  let  x  =  1  ;  x  +  2  }  ` |  [ Scripting ](/docs/reference/scripting/#blocks)  
Content block  |  ` [  _Hello_  ]  ` |  [ Scripting ](/docs/reference/scripting/#blocks)  
Parenthesized expression  |  ` (  1  +  2  )  ` |  [ Scripting ](/docs/reference/scripting/#blocks)  
Array  |  ` (  1  ,  2  ,  3  )  ` |  [ Array ](/docs/reference/foundations/array/)  
Dictionary  |  ` (  a  :  "hi"  ,  b  :  2  )  ` |  [ Dictionary ](/docs/reference/foundations/dictionary/)  
Unary operator  |  ` -  x ` |  [ Scripting ](/docs/reference/scripting/#operators)  
Binary operator  |  ` x  +  y ` |  [ Scripting ](/docs/reference/scripting/#operators)  
Assignment  |  ` x  =  1  ` |  [ Scripting ](/docs/reference/scripting/#operators)  
Field access  |  ` x  .  y ` |  [ Scripting ](/docs/reference/scripting/#fields)  
Method call  |  ` x  .  flatten  (  )  ` |  [ Scripting ](/docs/reference/scripting/#methods)  
Function call  |  ` min  (  x  ,  y /*[ Show rules ](/docs/reference/styling/#show-rules)*/unction/)  
Argument spreading  |  ` min  (  ..  nums  )  ` |  [ Arguments ](/docs/reference/foundations/arguments/)  
Unnamed function  |  ` (  x  ,  y  )  => x  +  y ` |  [ Function ](/docs/reference/foundations/function/)  
Let binding  |  ` let  x  =  1  ` |  [ Scripting ](/docs/reference/scripting/#bindings)  
Named function  |  ` let  f  (  x  )  =  2  *  x ` |  [ Function ](/docs/reference/foundations/function/)  
Set rule  |  ` set  text  (  14pt  )  ` |  [ Styling ](/docs/reference/styling/#set-rule/*[Preview](/assets/docs/ETetUaSK2J1pHpdRRUWzagAAAAAAAAAA.png)*/yling ](/docs/reference/styling/#set-rules)  
Show-set rule  |  ` show  heading  :  set  block  (  ..  )  ` |  [ Styling ](/docs/reference/styling/#show-rules)  
Show rule with function  |  ` show  raw  :  it  => {  ..  }  ` |  [ Styling ](/docs/reference/styling/#show-rules)  
Show-everything rule  |  ` show  :  template  ` |  [ Styling ](/docs/reference/styling/#show-rules)  
Context expression  |  ` context  text  .  l/*[Preview](/assets/docs/cUJma0l-7W2Pm0tXEKJmjAAAAAAAAAAA.png)*/  |  ` if  x  ==  1  {  ..  }  else  {  ..  }  ` /*[ content
](/docs/reference/foundations/content/ "content")*/
For loop  |  ` for  x  in  (  1  ,  2  ,  3  )  {  ..  }  ` |  [ Scripting ](/docs/reference/scripting/#loops)  
While loop  |  ` while  x  < 10  {  ..  }  ` |  [ Scripting ](/docs/r/*![â](/assets/icons/16-arrow-right.svg)*/l flow  |  ` break  ,  continue  ` |  [ Scripting ](/docs/reference/scripting/#loops)  
Return from function  |  ` return  x ` |  [ Function ](/docs/reference/foundations/func/*![Docs](/assets/icons/16-docs-dark.svg)*/"bar.typ"  ` |  [ Scripting ](/docs/reference/scripting/#modules)  
Import module  |  ` impo/*![](/assets/icons/16-arrow-right.svg)*/cs/reference/scripting/#modules)  
Import items from module  |  ` import  "bar.typ"  :  a  ,  b  ,  c ` |  [ Scripting ](/docs/reference/scripting//*[ ` counter.get `
](/docs/reference/introspection/counter/#definitions-get)*/Comments

Comments are ignored by Typst and will not be included in the output. This is
useful to exclude old versions or to add annotations. To comment out a single
line, start it with ` // ` :

    
    
    // our data barely supports
    // this claim
    
    We show with $p < 0.05$
    that the difference is
    significant.
    

![Preview](/assets/docs/qmPJyf2DgB8m9bpdDccxUQAAAAAAAAAA.png)

Comments can also be wrapped between ` /_ ` and ` _/ ` . In this case, the
comment can span over multiple lines:

    
    
    Our study design is as follows:
    /_ Somebody write this up:
       - 1000 participants.
       - 2x2 data design. */
    

![Preview](/assets/docs/0b/*[Preview](/assets/docs/bQONUXVpXWNuuUEOrLszpQAAAAAAAAAA.png)*/scape sequences are used to insert speci/*[ ` here `
](/docs/reference/introspection/here/ "`here`")*/ial meaning in Typst. To escape a char/*[ location ](/docs/reference/introspection/location/ "location")*/int, you can write a hexadecimal
escape sequence: ` \u{1f600}  ` . The same kind of escape sequences also work
in [ strings ](/docs/reference/foundations/str/) .

    
    
    I got an ice cream/*[ ` counter.at ` ](/docs/reference/introspection/counter/#definitions-at "`counter.at`")*/A./*[ ` here ` ](/docs/reference/introspection/here/ "`here`")*/ file path to reference external
resources such as images, Typst files, or data files. Paths are represented as
[/*[ label ](/docs/reference/foundations/label/ "label")*/are two kinds of paths:
Relative and absolute.

  - A *relative path* searches from the location of the Typst file where the feature is invoked. It is the default: 
    
        #image("images/logo.png")
    

  - An *absolute path* searche/*![â](/assets/icons/16-arrow-right.svg)*/rts with a leading ` / ` : 
    
        #image("/assets/logo.png")
    

===  Project root

By default, the project root is the parent directory of the main Typst file.
For security reasons, you cannot read any /*![Docs](/assets/icons/16-docs-dark.svg)*/f you want/*![](/assets/icons/16-arrow-right.svg)*/review](/assets/docs/gip9ugheiaYydjAE/*![](/assets/icons/16-arrow-right.svg)*/t the main file is contained in the
folder's subtree!

    
    
    typst compile --root .. file.typ
  /*[ ` locate `
](/docs/reference/introspection/locate/ "`locate`")*/u can always read
all files within it, no matter which one is previewed (via t/*[ selector
](/docs/reference/foundations/selector/ "selector")*/  Paths and packages

A package can only load files from its own directory. Within it, absolute
paths point to the package root, rather than the project root. For this
reason, it cannot directly load files from the project directory. If a package
needs resources from the project (such as a logo im/*[Preview](/assets/docs/AV1GaGSFxqcGN8RTlxty3gAAAAAAAAAA.png)/*[Preview](/assets/docs/AV1GaGSFxqcGN8RTlxty3gAAAAAAAAAB.png)*/at you can then still customize the image's
appearance with a set rule within th/*[ ` query ` ](/docs/reference/introspection/query/ "`query`")*/pe from strings
](/*[ introspection ](/docs/reference/introspection/)*/hat they can retain
knowledge of where they were constructed. This way, resources could be loaded
from a different root.

[ ![â](/assets/icons/16-arrow-right.svg) Reference  Previous page
](/docs/reference/) [ !/*[ ` to-absolute ` ](/docs/reference/layout/length/#definitions-to-
absolute)*/e/styling/)



= *doc/*![â](/assets/icons/16-arrow-right.svg)*/sets/icons/16-docs-dark.svg) ](/docs)
 /*[Preview](/as/*![â](/assets/icons/16-arrow-right.svg)*/AA.png)*/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Model ](/docs/refer/*![Docs](/assets/icons/16-docs-dark.svg)*/uring.

Here, you can find functions to structure your document and interact with that
structure. This includes section headings, figures, bibliography management,
cross-referencing and more.

==  Definitions

  - [ ` bibliography ` ](/docs/reference/model/bibliography/) A bibliography / reference listing. 
  /*![Preview](/assets/docs/ETetUaSK2J1pHpdRRUWzagAAAAAAAAAA.png)*/the bibliography. 
  - [ ` document ` ](/docs/r/*[Preview](/assets/docs/-8ZHuN0AkDNg1gXmAO7X2wAAAAAAAAAA.png)*/ its metadata. 
  - [ ` emph ` ](/docs/reference/model/emph/) Emphasizes content by toggling italics. 
  - [ ` enum ` ](/docs/reference/model/enum/) A numbered list. 
  - [ ` figure ` ](/docs/reference/model/figure/) A figure with an optional caption. 
  - [ ` footnote ` ](/docs/reference/model/footnote/) A footnote. 
  - [ ` heading ` ](/docs/reference/model/heading/) A section heading. 
  - [ ` link ` ](/docs/reference/model/link/) Links to a URL or a location in the document. 
  - [ ` list ` ](/docs/reference/model/list/) A bullet list. 
  - [ ` numbering ` ](/docs/reference/model/numbering/) Applies a numbering to a sequence of numbers. 
  - [ /*[Preview](/assets/docs/ptMaFdqycQGV8lm06g29-gAAAAAAAAAA.png)*/tents, figures, or other elements. 
  - [ ` par ` ](/docs/reference/model/par/) Arranges text, spacing and inline-level elements into a paragraph. 
  - [ ` parbreak ` ](/docs/reference/model/parbreak/) A paragraph break. 
  - [ ` quote ` ](/docs/reference/model/quote/) Displays a quote alongside an optional attribution. 
  - [ ` ref ` ](/docs/reference/model/ref/) A reference to a label or bibliography. 
  - [ ` strong ` ](/docs/reference/model/strong/) Strongly emphasizes content by increasing the font weight. 
  - [ ` table ` ](/docs/reference/model/table/) A table of items. 
  - [ ` terms ` ](/docs/reference/model/terms/) A list of terms and their descriptions. 

[ ![â](/assets/icons/16-arrow-right.svg) Version  Previous page
/*[Preview](/assets/docs/6mlAfSm7646viO4S8ua6gwAAAAAAAAAA.png)*/ns/16-arrow-
right.svg) Bibliography  Next page  ](/docs/reference/model/bibliography/)



= *docs/reference/context.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Context ](/docs/reference/context/)

=  Context

Sometimes, we want to create content that reacts to its location in the
document. This could be a localized ph/*![Preview](/as/*[Copy](/assets/icons/16-copy.svg)*/ or something as simple as a heading number /*[
state ](/docs/reference/introspection/state/#caution)*/ came before it. However, Typst code isn't
directly aware of i/*![â](/assets/icons/16-arrow-right.svg)*/t the beginning of
the source text could yield cont/*![â](/assets/icons/16-arrow-right.svg)*/ment.

To produce content that is reactive to its surroundings, we must thus
specifically ins/*![Docs](/assets/icons/16-docs-dark.svg)*/ext  ` keyword, which
precedes an expression and ensures that it is computed with knowledge of its
environment. In return, the context expression itself ends up opaque. We
cannot directly access whatever results from it in our code, precisely because
it is contextual: There is no one correct result, there may be multiple
results in different places of the document. For this reason, everything that
depends on the contextual data must happen inside of the context expression.

Aside from explicit context expressions, cont/*[
locatable ](/docs/reference/introspection/location/#locatable)*/aware of their location in the
docu/*[ ![â](/assets/icons/16-arrow-right.svg)*/ng/#show-rules) provide context
1  and numberings in/*[ ![â](/assets/icons/16-arrow-right.svg)*/he proper
context to resolve counters.

==  Style context

With set rules, we can adjust st/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/our
document. We cannot access these without a known/*[ Reference ](/docs/reference/)*/roughout the course of the document. When c/*[ Symbols ](/docs/reference/symbols/)*/them simply by accessing them as fields on the respective element
function.

    
    
    #set text(lang: "de")
    #context text.lang
    

![Preview](/assets/docs/ETetUaSK2J1pHpdRRUWzagAAAAAAAAAA.png)

As explained above, a context expression is reactive to the different
environments it is placed into. In the example below, we create a single
context expression, store it in the ` value ` /*[ ` sym ` ](/docs/reference/symbols/sym/)*/use properly reacts to the current surroundings.

    
    
    #let valu/*[ ` emoji ` ](/docs/reference/symbols/emoji/)*/t text(lang: "de")
/*![Preview](/a/*[ ` float ` ](/docs/reference/foundations/float/)/*![Preview](/assets/docs/AV1/*[ ` function ` ](/docs/reference/foundations/function/)*/tion, ` value ` becomes opaque [ content
](/docs/reference/foundations/content/ "content") that we cannot peek into. It
can only be resolved when placed somewhere because only then the context is
known. The body of a context expression may be evaluated zero, one, or
multiple times, depending on how many different places it is put into.

==  Location context

We've already seen that context gives us access to set rule values. But it can
do more: It also lets us know _where_ in the document we currently are,
relative to other elements, and absolutely on the pages. We can use this
information to create very flexible interactions between different document
parts. This underpins featu/*[Copy](/assets/icons/16-copy.svg)*/able of contents,
or /*[Copy](/assets/icons/16-copy.svg)*/ headings.

So/*[Copy](/assets/icons/16-copy.svg)*/ `
](/docs/reference/introspection/counter/#definitions-get) implicitly access
the current location. In the example below, we want to retrieve the value of
the heading counter. Since it changes throughout the document, we need to
first enter a context expression. Then, we use ` get ` to retrieve the
counter's current value. This function accesses the current location from the
context to resolve the counter value. Counters have multiple levels and ` get
` returns an array w/*![â](/assets/icons/16-arrow-right.svg)*/he following
result:

    
    
    #set heading(n/*![â](/assets/icons/16-arrow-right.svg)*/    #lorem(5)
    
    #context counter(heading).get()
    
    = Background
    #lorem(5)
    
  /*![Docs](/assets/icons/16-docs-dark.svg)*/
![Preview](/as/*[Copy](/assets/icons/16-copy.svg)*/AAAAAAAAA.png)

For m/*[Copy](/assets/icons/16-copy.svg)*/the [ ` here `/*[Copy](/assets/icons/16-copy.svg)*/here/ "`here`") function to directly extract
the curre/*[ ![â](/assets/icons/16-arrow-right.svg)*/ion/location/ "location")
from the context. The e/*[ ![â](/assets/icons/16-arrow-right.svg)*/rst have ` counter  (  heading  )  .  get  (  )  /*![Preview](/assets/docs/ptMaFdqycQGV8lm06g29-gAAAAAAAAAA.png)*//icons/16-docs-dark.svg)*/ [ ` counter.at ` ](/docs/reference/introspection/co/*[ Reference ](/docs/reference/)*/.at`") with [ ` here ` ](/docs/reference/in/*[ Foundations ](/docs/reference/foundations/)*/ation is equivalent to ` get ` , and thus get ` (  2  ,  )  ` . 
  - Finally, we use ` at ` with a [ label /*[ integers
](/docs/reference/foundations/int/)*/t/*[ strings
](/docs/reference/foundations/str/)*/ferent_ location in the document, in our case that of the introduction hea/*[ ` arguments ` ](/docs/reference/foundations/arguments/)*/m gives us time travel abilities and/*[ ` array ` ](/docs/reference/foundations/array/)*/states at _any_ location/*[ ` assert ` ](/docs/reference/foundations/assert/)*/ering: "1.")
    
    = Introduction /*![Preview](/assets/docs/6mlAfSm7646viO4S8ua6/*[ modifiers ](/docs/reference/symbols/symbol/)*/   #c/*[ ` bool ` ](/docs/reference/foundations/bool/)*/.at(here()) \
      #count/*[ ` bytes ` ](/docs/reference/foundations/bytes/)*/ssets/docs/gip9ugheiaYy/*[ calc ](/docs/reference/foundations/calc)*/fore, we can also use context to get the physical position o/*[ ` content ` ](/docs/reference/foundations/content/)*/te `
](/docs/reference/introspe/*[ ` datetime ` ](/docs/reference/foundations/datetime/)*/ly to ` counter.at ` : It takes a location or other [ s/*[ ` decimal ` ](/docs/reference/foundations/decimal/)*/ctor") that resolves to a unique
elem/*[ ` dictionary ` ](/docs/reference/foundations/dictionary/)*/ pages for that
element.

    
    
/*[ ` duration ` ](/docs/reference/foundations/duration/)*/ition()
    
    = Introduction <intro>
    #lorem/*[ ` eval ` ](/docs/reference/foundations/eval/)*/k>
    #lorem(5)
    

![Preview](/a/*[ ` float ` ](/docs/reference/foundations/float/)*/![Preview](/assets/docs/AV1/*[ ` function ` ](/docs/reference/foundations/function/)*/ctions that make use of the location context, most
p/*[ ` int ` ](/docs/reference/foundations/int/)*/ospection/query/ "/*[ ` label ` ](/docs/reference/foundations/label/)*//docs/reference/introspect/*[ ` module ` ](/docs/reference/foundations/module/)*/ed contexts

Context is also accessible from within function call/*[ ` none ` ](/docs/reference/foundations/none/)*/w, ` foo ` itself become/*![Preview](/assets/docs/gWTBh8i7ZWskmajIpEpUWQAAAAAAAAAA.png)*/nce/foundations/panic/)*/th/#definitions-to-
abs/*[ ` plugin ` ](/docs/reference/foundations/plugin/)/*![â](/assets/icons/16-arrow-right.svg)*/](/docs/reference/foundations/regex/)*/ets/docs/tBYLuf/*![â](/assets/icons/16-arrow-right.svg)*/foundations/repr/)*/ested. Contextual code will then always access t/*[ ` selector ` ](/docs//*![Docs](/assets/icons/16-docs-dark.svg)*/he first `/*![](/assets/icons/16-arrow-right.svg)*/nte/*[ ` str ` ](/docs/reference/foun/*![](/assets/icons/16-arrow-right.svg)*/t  text  (  la/*[ ` style ` ](/docs/reference/foundations/style/)*/nd the second ` text.lang ` , howeve/*[ sys ](/docs/reference/foundations/sys)*/us show its effect.

    
    
   /*[ ` type ` ](/docs/reference/foundations/type/)*/t text(lang: "fr")
      #tex/*[ ` version ` ](/docs/reference/foundations/version/)*/ew](/assets/docs/-8ZHuN0AkDNg1gXmAO7X2wAAAAAAAAAA/*[ ![â](/assets/icons/16-arrow-right.svg)*/the French set rule when computing the
first ` t/*[ ![â](/assets/icons/16-arrow-right.svg)*/n is that, in the general
case, Typst cannot know all the styles that will apply as set rules ca/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ constructed. Below, ` text.lang ` is
already comput/*[ Reference ](/docs/reference/)*/s applied. As such, it cannot
possibly be a/*[ Math ](/docs/reference/math/)*/French in the template.

/*[ syntax ](/docs/reference/syntax/#math)*/    set text(lang: "fr")
      upper(body)
    }
    
    #set text(lang: "de")
    #context [
      #show: template
      #text.lang \
      #context text.lang
    ]
    

![Preview](/assets/docs/ptMaFdqycQGV8lm06g29-gAAAAAAAAAA.png)

The second ` text.lang ` , however, _does_ react to the language change
because evaluation of its surrounding context block is deferred until the
styles for it are known. This illustrates the importance of picking the right
insertion point for a context to get access/*[ hash syntax
](/docs/reference/scripting/#expressions)*/ue for the location context. Below, the first ` c  .
display  (  )  ` call will access the outer context block and will thus not
see the effect of ` c  /*![Copy](/assets/ico/*[ ` cases ` ](/docs/reference/math/cases/)*/png)*/cesses the inner context and will thus see it.
/*[ symbols ](/docs/reference/symbols/sym/)*/r")
    #c.update(1)
    #context [
      #c.update(2)
      #c.display() \
      #context c.display()
    ]
    

![Preview](/assets/docs/6mlAfSm7646viO4S8ua6/*[ modifiers ](/docs/reference/symbols/symbol/)*/ resolve contextual interactions, the Typst compiler processes your document
multiple times. For instance, to resolve a ` locate ` call, Typst first
provides a placeholder position, layouts your document and then recompiles
/*[Preview](/assets/docs/3QjDlBq8e4sckxD76_cbbgAAAAAAAAAA.png)*/pproach is taken
to resolve counters, states, and queries. In certain cases, Typst may even
need more than two iterations to resolve everything. While that's sometimes a
necessity, it may also be a sign of misuse of contextual functio/*[Preview](/assets/docs/4Y4RfouYZm3Jgju-7W3SZAAAAAAAAAAA.png/*![Copy](/assets/icons/16-copy.svg)*/lve everything within five attempts, it will stop and output/*![â](/assets/icons/16-/*[ ` vec ` ](/docs/reference/math/vec/)*/y careful reader m/*![â](/assets/icons/16-arrow-right.svg)*/nctions
presented above actually make use of the curren/*![â](/assets/icons/16-arrow-right.svg)*/)  .  get  (  )/*![Docs](/assets/icons/16-docs-dark.svg)*/  (  headi/*![](/assets/icons/16-/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/it still requi/*![](/assets/icons/16-arrow-right.svg/*[ Reference ](/docs/reference/)*/ion
iteration, it may change over the course of multiple compiler iterations. If
one could call it directly at the top level of a module, the whole module and
its exports could change over the co/*[") $
    $ mat(1, 2; 3, 4) $
    $ lim_x =
        op("lim", limits: #true)_x $
    

![Preview](/assets/docs/gWTBh8i7ZWskmajIpEpUWQAAAAAAAAAA.png)*/locatable ](/docs/reference/introspection/location/#locatable) elements
provide a location context.

[ ![â](/assets/icons/16-arrow-right.svg) Scripting  Previous page
](/docs/reference/scripting/) [ ![â](/assets/icons/16-arrow-right.svg)
Foundations  Next page  ](/docs/reference/foundations/)



= *docs/reference/symbols.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Symbols ](/docs/reference/symbols/)

=  Symbols

These two mo/*![â](/assets/icons/16-arrow-right.svg)*/ make them easy to insert
with a normal keyboard. Alternativ/*![â](/assets/icons/16-arrow-
right.svg)*/nicode symbols into your text and formulas. In addition to the symbols listed
below, math mo/*![Docs](/assets/icons/16-docs-dark.svg)*/are not normal symbol
values because they also affect spacing and font style.

==  Definitions

  - [ ` sym ` ](/docs/reference/symbols/sym/) These two modules give names to symbols and emoji to make them easy to 
  - [ ` emoji ` ](/docs/reference/symbols/emoji/) T/*[Preview](/assets/docs/8SM9qVyRZ_Elks_C9882dAAAAAAAAAAA.png)*/m easy to 
  - [ ` symbol ` ](/docs/reference/symb/*[ show-set rule
](/docs/reference/styling/#show-rules)*/hands are concise sequences of characters that evoke specific glyphs.
Shorthands and other ways to produce symbols can be used interchangeably. You
can use different sets of shorthands in math and m/*[Preview](/assets/docs/qG9Xcf2X5Ju0E76URIxfZgAAAAAAAAAA.png)*/pace produce non-printing symbols, which are
indicated with/*[ module
](/docs/reference/scripting/#modules)*/shorthand's interpretation by escaping any of its
characters. If you escape a single character in a shorthand, the remaining
unescaped /*[ ` accent ` ](/docs/reference/math/accent/)*/===  Within Markup Mode

  - nbs/*[ attach ](/docs/reference/math/attach)*/--  `
  - shy  ` -?  `
  - â¦  ` .  . /*[ ` binom ` ](/docs/reference/math/binom/)*/py](/assets/icons/16-copy/*[ ` cancel ` ](/docs/reference/math/cancel/)*//icons/16-copy.svg)

Shorthand: ` ` ![Copy](/assets/ico/*[ ` cases ` ](/docs/reference/math/cases/)*/s/16-close.svg)

LaTeX/*[ ` class ` ](/docs/reference/math/class/)*/` [|  `
  - â§  ` |]  `
  - â  ` ||/*[ ` equation ` ](/docs/reference/math/equation/)*/::=  `
  - â¦  ` .  .  .  /*[ ` frac ` ](/docs/reference/math/frac/)*/  ` -  `
  - â  ` =:  `
/*[ lr ](/docs/reference/math/lr)*/
  - â¥  ` >=  `
  - /*[ ` mat ` ](/docs/reference/math/mat/)*/` <=  `
  - /*[ ` op ` ](/docs/reference/math/op/)*/  ` |-> `
  - â  ` => `
  - â¤ /*[ ` primes ` ](/docs/reference/math/primes/)*/ - â¿  ` ~~> `
  //*![â](/assets/icons/16-arrow-right.svg)*/  ` ->> `
  - â  ` <-  `
  - /*[ sizes ](/docs/r/*![â](/assets//*[Preview](/assets/docs/6ckQbXFff1zDBcdWezXxpgAAAAAAAAAA.png)*/*[ ` stretch ` ](/docs/reference/math/stretch/)*/ - âº  ` <==> `/*![Docs](/assets/icons/16-docs-dark.svg)*/styles)*/a/*![](/assets/icons/16-arrow-right.svg)*/\u /*[ underover ](/docs/reference/ma/*![](/assets/icons/16-arrow-right.svg)*//assets/icons/16-copy.svg)

/*[ variants ](/docs/reference/math/variants)*/aTeX: ` `

- [ ![â](/assets/icons/16-/*[ ` vec ` ](/docs/reference/math/vec/)*/  ](/docs/refere/*[ ![â](/assets/icons/16-arrow-right.svg)*/rrow-right.svg) General  Next page  ](/docs/reference/*[ ![â](/assets/icons/16-arrow-right.svg)*/tions.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/reference/)
  - ![](/assets/icons/16-arrow-right.svg/*[ Reference ](/docs/reference/)*/erence/foundations/)

=  Foundations

Found/*[ Data Loading ](/docs/reference/data-loading/)*/ documentation for basic data types like [ integers
](/docs/reference/foundations/int/) and [ strings
](/docs/reference/foundations/str/) as well as details about core
computati/*[ ` cbor ` ](/docs/reference/data-loading/cbor/)*/nts ` ](/docs/reference/foundations/argume/*[ ` csv ` ](/docs/reference/data-loading/csv/)*/ ` array ` ](/docs/reference/foundations//*[ ` json ` ](/docs/reference/data-loading/json/)*/](/docs/reference/foundations/assert/) Ens/*[ ` read ` ](/docs/reference/data-loading/read/)*/o ` ](/docs/reference/foundations/auto/)/*[ ` toml ` ](/docs/reference/data-loading/toml/)*/` bool ` ](/docs/reference/foundations/boo/*[ ` xml ` ](/docs/reference/data-loading/xml/)*/(/docs/reference/foundations/bytes/) A seq/*[ ` yaml ` ](/docs/reference/data-loading/yaml/)*/undations/calc) /*![Preview](/assets/docs/3QjDlBq8e4sckxD76_cbbgAAAAAAAAAA.png)*/t.svg)*/` content ` ](/docs/reference/foundations/content/) A piec/*[ ![â](/assets/icons/16-arrow-
right.svg)*/](/docs/reference/foundations/datetime/) Represents a date, a time, or a combination of bo/*[ ![Docs](/assets/icons/16-d/*![Preview](/assets/docs/4Y4RfouYZm3Jgju-7W3SZAAAAAAAAAAA.png)*/mber t/*[ Reference ](/docs/reference/)*/ocs/reference/foundations/dictionary/) A ma/*[ Styling ](/docs/reference/styling/)*/` duration ` ](/docs/reference/foundations/duration/) Represents a positive or negative span of time. 
  - [ ` eval ` ](/docs/reference/foundations/eval/) Evaluates a string as Typst code. 
  - [ ` float ` ](/docs/reference/foundations/float/) A floating-point number. 
  - [ ` function ` ](/docs/reference/foundations/function/) A mapping from argument values to a return value. 
  - [ ` int ` ](/docs/reference/foundations/int/) A whole number. 
  - [ ` label ` ](/docs/reference/foundations/label/) A label for a/*[ function call ](/docs/reference/foundations/function/)*/ns//*[ element
function ](/docs/reference/foundations/function/#element-functions)*/[ ` none ` ](/docs/re/*![Preview](/assets/docs/gWTBh8i7ZWskmajIpEpUWQAAAAAAAAAA.png)*/ of any other value. 
  - [ ` panic ` ](/docs/reference/foundations/panic/) Fails with an error. 
  - [ ` plugin ` ](/docs/reference/foundations/plugin/) A WebAssembly plugin. 
  - [ ` /*[ font family
](/docs/reference/text/text/#parameters-font)*/r/*[ heading numbering
](/docs/reference/model/heading/#parameters-numbering)*/tring representation of a value. 
  - [ ` selector ` ](/docs/reference/foundations/selector/) A filter for selecting elements within the document. 
  - [ ` str ` ](/docs/reference/fou/*[Preview](/assets/docs/nW0VZeyhJmtpweEOjJR_fgAAAAAAAAAA.png)*/yle ` ](/docs/reference/foundations/style/) Provides access to active styles. 
  - [ sys ](/docs/reference/foundations/sys) Module for system interactions. 
  - [ ` type ` ](/docs/reference/foundations/type/) Describes a kind of value. 
  - [ ` version ` ](/docs/reference/foundations/version/) A version with an arbitrary number of components. 

[ ![â](/assets/icons/16-arrow-right.svg) Context  Previous page
](/docs/reference/context/) [ ![/*![â](/assets/icons/16-arrow-right.svg)*/kQbXFff1zDBcdWezXxpgAAAAAAAAAA.png)*/rence/found/*![â](/assets/icons/16-arrow-right.svg)*/math.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-a/*![Docs](/assets/icons/16-docs-dark.svg)*//reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Math ](/docs/reference/math/)

=  Math

Typst has sp/*[Preview](/assets/docs/_UlmqEOdrmM6d-OQ9TsAXwAAAAAAAAAA.png)*/unctions to typeset mathematical formulas. Mat/*![Preview](/assets/docs/qG9Xcf2X5Ju0E76URIxfZgAAAAAAAAAA.png)*/locks. They will be typeset into their own
block if they start and end with at least one space (e/*[ selector
](/docs/reference/foundations/selector/ "selector")*/ers are always displayed as is. Multiple letters, however,
are int/*[ element function
](/docs/reference/foundations/function/#element-functions)*/u can place them into quotes and to access single letter
variables, you can use the [ hash syntax
](/docs/reference/scripting/#expressions) .

    
    
    $ A = pi r^2 $
    $ "area" = pi dot "radius"^2 $
    $ cal(A) :=
        { x in RR | x "i/*[Preview](/assets/docs/DS2Pe3XVhhMMVWT9eUfjSQAAAAAAAAAA.png)*/w](/assets/docs/hSTnanxnhN2cMLti2SpIlwAAAAAAAAAA.png)

==  Symbols

Math mode makes a wide selection of [ symbols ](/docs/reference/symbols/sym/)
like ` pi ` , ` dot ` , or ` RR ` available. Many mathematical symbols are
available in different variants. You can select between different variants by
applying [ modifiers ](/docs/reference/symbols/symbol/) to the/*[ function
](/docs/reference/foundations/function/ "function")*/ces like ` => ` that
approximate a symbol. When such a shorthand exists, the symbol's document/*[
fields ](/docs/reference/scripting/#fields)*/t.eq.not y $
    

![/*![â](/assets/icons/16-arrow-right.svg)*/cbbgAAAAAAAAAA.png)

==  Line Breaks

Formulas can al/*![â](/assets/icons/16-arrow-right.svg)*/ntain one or multiple
_alignment points_ ( ` & ` ) which are then aligned.

    
    
    $ /*![Docs](/assets/icons/16-docs-dark.svg)*/        &= (n(n+1)) / 2 $
    

![Preview](/assets/docs/4Y4RfouYZm3Jgju-7W3SZAAAAAAAAAAA.png)

==  Function calls

Math mode supports special function calls without the hash prefix. In these
"math calls", the argument list works a little differently than in code:

  - Within them, Typst /*![â](/assets/icons/16-arrow-right.sv/*[ ` align ` ](/docs/reference/layout/align/)*/vkqpSwoILjuqAer/*![â](/assets/icons/16-arrow/*[ ` alignment ` ](/docs/reference/layout/alignment/)*/ntax). 
  - They support positional and named arguments, but don't support trailing content blocks and argument/*![](/assets/i/*[ ` block ` ](/docs/reference/layout/block/)*/sional argument lis/*![](/a/*[ ` box ` ](/docs/reference/layout/box/)*/uments separated by commas into an array argument. 

    
    
    $ frac(a^2, 2) $
    $ vec(1, 2, delim: "[") $
    $ mat(1, 2; 3, 4) $
    $ lim_x =
        op("lim", limits: #true)_x $
    

![Preview](/assets/docs/gWTBh8i7ZWskmajIpEpUWQAAAAAAAAAA.png)

To write a verbatim comma or semicolon in a math call, escape it with a
backslash. The colon on the other hand is only recognized in a special way if
directly preceded by an identifier, so to display it verbatim in those cases,
you can just insert a space before it.

Functions calls prec/*[ ` regex ` type
](/docs/reference/foundations/regex/)*/affected by these rules.

==  Alignment

When equations include multiple _alignment points_ ( ` & ` ), this creates
blocks of alternatingly right- and left-aligned columns. In the example below,
the expression ` (3x + y) / 7 ` is right-aligned and ` = 9 ` is left-aligned.
The word "given" is also left-a/*![â](/assets/icons/16-arrow-right.svg)*/ent
points in/*[ ` label ` type ](/docs/reference/foundations/la/*![â](/assets/icons/16-arrow/*[ ` move ` ](/docs/reference/layout/move/)*/ight-aligned because just
one ` & ` precedes it. Each alignment point simply alternates between right-
aligned/left-aligned.

  /*[Preview](/assets/docs/NBzIViTspdnPhsbo3WGDLAAAAAAAAAAA.png)/*[ ![â](/a/*![](/a/*[ ` pagebreak ` ](/docs/reference/layout/pagebreak/)*/x &= 21 - y/3 & "di/*[ ![â](/assets/icons/16-arrow-right.svg)*//8SM9qVyRZ_Elks_C9882dAAAAAAAAAAA.png)

==  Math fonts

You can set the math font by with/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ing/#show-rules) as demonstrated below. Note that on/*[ Reference ](/docs/reference/)*/are suitable for typesetting maths.

    
 /*[ Visualize ](/docs/reference/visualize/)*/t: "Fira Math")
    $ sum_(i in NN) 1 + i $
    

![Preview](/assets/docs/qG9Xcf2X5Ju0E76URIxfZgAAAAAAAAAA.png)

==  Math mo/*[ CetZ ](https://github.com/johannes-wolf/cetz)*/ ` [ module
](/docs/reference/scr/*[ packages ](https://typst.app/universe/)*/default in
equations. Outside of equat/*[ ` circle ` ](/docs/reference/visualize/circle/)*/fix.

==  Definitions

  - [ ` acc/*[ ` color ` ](/docs/reference/visualize/color/)*/an accent to a base. 
  - /*![â](/assets/icons/16-arrow-right.svg)*/ence/visualize/ellipse/)*/s, and limits. 
  - [ ` binom /*![â](/assets/icons/16-arrow-right.svg)*//visualize/gradient/)*/- [ ` cancel ` ](/do/*[ ` image ` ](/docs/reference/visualize/image/*![Docs](/assets/icons/16-docs-dark.svg)*/ line ` ](/docs/reference/visualize/line/)*/ses/) A case distinction. 
  - [ ` c/*[ ` path ` ](/docs/reference/visualize/path/)*/use of a certain math class. 
  - [ ` equation ` ](/docs/refere/*[ ` pattern ` ](/docs/referen/*![Preview](/assets/docs/nW0VZeyhJmtpweEOjJR_fgAAAAAAAAAA.png)*/ygon ` ](/docs/reference/visualize/polygon/)*/ocs/reference/math/l/*[ ` rect ` ](/docs/reference/visualize/rect/)*//reference/math/mat/) A matrix. 
  - /*[ ` square ` ](/docs/reference/visualize/square/)*/tor in an equation. 
  - [ ` prime/*[ ` stroke ` ](/docs/reference/visualize/stroke/)*/s. 
  - [ roots ](/docs/ref/*[ ![â](/assets/icons/16-arrow-right.svg)*/oots. 
  - [ sizes ](/docs/reference/math/sizes) Fo/*[ ![â](/assets/icons/16-arrow-right.s/*![Preview](/assets/docs/6ckQbXFff1zDBcdWezXxpgAAAAAAAAAA.png)*/h/) Stretches a glyph. 
  - [ styl/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/te letterforms within formulas. 
  - [ underover ](//*[ Reference ](/docs/reference/)*/Delimiters above or below parts of an equat/*[ Layout ](/docs/reference/layout/)*/nce/math/variants) Alternate typefaces within formulas. 
  - [ ` vec ` ](/docs/reference/math/vec/) A column vector. 

[ ![â](/assets/icons/16-arrow-right.sv/*[ ` align ` ](/docs/reference/layout/align/)*/e/text/upper/) [ ![â](/assets/icons/16-arrow/*[ ` alignment ` ](/docs/reference/layout/alignment/)*/h/accent/)



= *docs/reference/data-loading/*[ ` angle ` ](/docs/reference/layout/angle/)*/rk.svg) ](/docs)
  - ![](/assets/i/*[ ` block ` ](/docs/reference/layout/block/)*/docs/reference/)
  - ![](/a/*[ ` box ` ](/docs/reference/layout/box/)*/ta Loading ](/docs/reference/data-loading/)

=  /*[ ` colbreak ` ](/docs/reference/layout/colbreak/)*/hese functions help you w/*[ ` columns ` ](/docs/reference/layout/columns/)*/ the
results of an experiment.

==  Definitions

  - [ `/*![Preview](/assets/docs/DS2Pe3XVhhMMVWT9eUfjSQAAAAAAAAAA.png)*/tured data from a CBOR file. 
  - [ ` csv ` ](/docs/ref/*[ ` fraction ` ](/docs/reference/layout/fraction/)*/om a CSV file. 
  - [ ` json ` ](/docs/reference/data-loading//*[ ` grid ` ](/docs/reference/layout/grid/)*/ile. 
  - [ ` read ` ](/docs/r/*[ ` h ` ](/docs/reference/layout/h/)*/lain text or data from a file. 
  - [ ` toml ` /*[ ` hide ` ](/docs/reference/layout/hide/)*/s structured data from a TOML file. 
  - [/*[ ` layout ` ](/docs/reference/layout/layout/)*/Reads structured data from an XML file. 
  - [ ` yaml ` ](/docs/referenc/*[ ` length ` ](/docs/reference/layout/length/)*/om a YAML file. 

[ ![â](/assets/icons/16-arrow-right.svg) Sta/*[ ` measure ` ](/docs/reference/layout/measure/)*/n/state/) [ ![â](/assets/icons/16-arrow/*[ ` move ` ](/docs/reference/layout/move/)*/rence/data-loading/cbor/)



= *docs/refer/*[ ` pad ` ](/docs/reference/layout/pad/)*/icons/16-docs-dark.svg) ](/docs/*[ ` page ` ](/docs/reference/layout/page/)*/)
  - [ Reference ](/docs/reference/)
  - ![](/a/*[ ` pagebreak ` ](/docs/reference/layout/pagebreak/)*/s/reference/styling/)

/*[ ` place ` ](/docs/reference/layout/place/)*/g system that automatically applies styling of
your c/*[ ` ratio ` ](/docs/reference/layout/ratio/)*/u can configure basic
/*[ ` relative ` ](/docs/reference/layout/relative/)*/common styles. However,
there might not be a /*[ ` repeat ` ](/docs/reference/layout/repeat/)*/o. For this
reason, Typst further supports/*[ ` rotate ` ](/docs/reference/layout/rotate/)*/
appearance of elements.

==  Set rules

Wit/*[ ` scale ` ](/docs/reference/layout/scale/)*/e of elements. They are written
as a [ func/*[ ` skew ` ](/docs/reference/layout/skew/)*/nction/) to an [ /*[ ` stack ` ](/docs/reference/layout/stack/)*/ns/function/#element-functions) preceded
by the ` set  ` ke/*[ ` v ` ](/docs/reference/layout/v/)*/ly optional parameters
of that function can be /*[ ![â](/assets/icons/16-arrow-right.svg)*/nction's
documentation to see which parameters are opt/*[ ![â](/assets/icons/16-arrow-right.svg)*/t rules to change the [ font family
](/docs/reference/text/text/#parameters-font) and [ /*[ ![Docs](/assets/icons/16-docs-dark.svg)*//heading/#parameters-numbering) .

    
    
    #se/*[ Reference ](/docs/reference/)*/#set text(
      font: "New Computer Modern/*[ Scripting ](/docs/reference/scripting/)*/set rules, you can style
    your document.
    

![Preview](/assets/docs/nW0VZeyhJmtpweEOjJR_fgAAAAAAAAAA.png)

A top level set rule stays in effect until the end of the file. When nested
inside of a block, it is only in effect until the end of that block. With a
block, you can thus restrict the effect of a rule to a particular segment of
your document. Below, we use a content block to scope the list styling to one
particular list.

    
    
    This /*![Preview](/assets/docs/NBzIViTspdnPhsbo3WGDLAAAAAAAAAAA.png)*//*![â](/assets/ic/*[Preview](/assets/docs/V0qKVNlCRuARFWpYu5iPEAAAAAAAAAAA.png)*/ckQbXFff1zDBc/*![â](/assets/icons/16-arrow-right.svg)*/ll want to apply a set rule conditionally. For this, you can
use a _set-if_ rule.

    
    
    #let task(bod/*[Preview](/assets/docs/Vvzr_VTofgbwk2d3ymxPMQAAAAAAAAAA.png)*/  [- #body]
    }
    
    #task(critical: true)[Foo/*![](/assets/icons/16-arrow-right.svg)*//docs/reference/foundations/function/)*/*[ field accesses
](/docs/reference/scripting/#fields)*/Sho/*[ method calls
](/docs/reference/scripting/#methods)*/he look of a type of element. The
most basic form of show rule is a _show-set rule._ Such a rule is written as
the ` show  ` keyword followed by a [ selector
](/docs/reference/foundations/selector/ "selector") , a colon and then a set
rule. The most basic form of selector is an [ element function
](/docs/reference/foundations/function/#element-functions) . This lets the set
rule only apply to the selected element. In the example below, headings become
dark blue while all other text stays black.

    
    
    #show heading: set text(navy)
    
    = This is navy-blue
    But this stays black.
    

![Preview](/assets/docs/DS2Pe3XVhhMMVWT9eUfjSQAAAAAAAAAA.png)

With show-set rules you can mix and match properties from different functions
to achieve many different effects. But they still limit you to what is
predefined in Typst. For maximum flexibility, you can instead write a show
rule that defines how to format an element from scratch. To write such a show
rule, replace the set rule after the colon with an arbitrary [ function
](/docs/reference/foundations/function/ "function") . This function receive/*[ functions
](/docs/reference/foundations/function/)*/ontent. The available [
fields ](/docs/reference/scrip/*![â](/assets/icons/16-arrow-right.svg)*/he
function again match the pa/*[ content ](/docs/ref/*![â](/assets/icons/16-arrow-right.svg)*/ne a show rule that formats headings for a fantasy encyclopedia.

    
    
    #set heading/*![Docs](/assets/icons/16-docs-dark.svg)*/t => [
   /*![](/assets/icons/16-arrow-right.svg)*/(font: "Inria Serif")
      \~ #emph(/*![](/assets/icons/16-arrow-right.svg)*/isplay(
           it.numbering
         ) \~
    ]
    
    = Dragon
    With a base health of 15, the
    dragon is the most powerful
    creature.
    
    = Manticore
    While less powerful than the
    dragon, the manticore ge/*[Preview](/assets/docs/9fGlmpI93XiZ44REV_aDoQAAAAAAAAAA.png)*/kqpSwoILjuqAerzw9CAAAAAAAAAAA.png)

Like set rules, show rules are in effect until the end of the current block or
file.

Instead of a function, the right-hand side of a show rule can also take a
literal string or content block that should be directly substituted for the
element. And apart from a function, the left-hand side of a show rule can also
tak/*[ custom named function
](/docs/reference/foundations/function/#defining-functions)*/ - *Everything:* ` show  :  rest  => .. `   
Transform everything after the show rule. This is useful to apply a more
complex layout to your whole document without wrapping everything in a giant
function call.

  - *Text:* ` show  "Text"  :  .. `   
Style, transform or replac/*[Preview](/assets/docs/yrL9Iv6avU1LgnwbwwruLwAAAAAAAAAA.png)*/
Select and transform text with a regular e/*[ arrays
](/docs/reference/foundations/array/)*/o/*[ dictionaries
](/docs/reference/foundations/dictionary/)*/ndations/regex/) for details.

  - *Function with fields:* ` show  heading  .  where  (  level  :  1  )  :  .. `   
Transform only elements that have the specified fields. For example, you might
want to only change the style of level-1 headings.

  - *Label:* ` show  <intro> :  .. `   
Select and transform elements that have the specified label. See the
documentation of the [ ` label ` type ](/docs/reference/foundations/label/)
for more details.

    
    
    #show "Project": smallcaps
    #show "badly": "great"
    
    We started Project in 2019
    and are still working on it.
    Project is progressing badly.
    

![Preview](/assets/docs/NBzIViTspdnPhsbo3WGDLAAAAAAAAAAA.png)

[ ![â](/assets/ic/*[Preview](/assets/docs/V0qKVNlCRuARFWpYu5iPEAAAAAAAAAAA.png)*/nce/syntax/) [ ![â](/assets/icons/16-arrow-right.svg)
Scripting  Next page  ](/docs/reference/scripting/)



= *docs/reference/visualize.md*

  - [ /*[Preview](/assets/docs/LTIPVXoxwTxHgnZJYm9hXgAAAAAAAAAA.png)*/sets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Visualize ](/docs/reference/visualize/)

=  Visualize

Drawing and d/*[Preview](/assets/docs/60UdChzzZGHopWziA6zwZwAAAAAAAAAA.png)*/ings or plots, also have a look at the
[ CetZ ](https://github.com/johannes-wolf/cetz) package as well as more
specialized [ packages ](https://typst.app/universe/) for your use case.

==  Definitions

  - [ ` circle/*[Preview](/assets/docs/LCvMaiUJqV2qC8Tphu5-bQAAAAAAAAAA.png)*/al content. 
  - [ ` color ` ](/docs/reference/visualize/color/) A color in a specific color space. /*![â](/assets/icons/16-arrow-right.svg)*/ualize/ellipse/) An ellipse with optional content. 
  - [ ` gradient ` ](/docs/reference/visualize/gradient/) A color gradient. 
  - [ ` image ` ](/docs/reference/visualize/image/) A raster or v/*![Docs](/assets/icons/16-docs-dark.svg)*/reference//*![](/assets/icons/16-arrow-right.svg)*/t to another. 
  - [ ` path ` ](/*[Pr/*![](/assets/icons/16-arro/*[Preview](/assets/docs/5WDPdcADtV7mFakfulSQigAAAAAAAAAA.png)*/rves. 
  - [ ` pattern ` ](/docs/reference/visualize/pattern/) A repeating pattern fill. 
  - [ ` polygon ` ](/docs/reference/visualize/polygon/) A closed polygon. 
  - [ ` rect ` ](/docs/reference/visualize/rect/) A rectangle with optional content. 
  - [ ` square ` ](/docs/reference/visualize/square/) A square with optional content. 
  - [ ` stroke ` ](/docs/reference/visualize/stroke/) Defines how to draw a line. 

[ ![â](/assets/icons/16-arrow-right.svg) Stack  Previous page
](/docs/reference/layout/stack/) [ ![â](/assets/icons/16-arrow-right.svg)
Circle  Next page  ](/docs/reference/visualize/circle/)



= *docs/reference/layout.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/*![Preview](/assets/docs/Vvzr_VTofgbwk2d3ymxPMQAAAAAAAAAA.png)*/Layout ](/docs/reference/layout/)

=  Layout

Arranging elements on/*[Preview](/assets/docs/74fsCbbxVkZaLeuPLKRiCwAAAAAAAAAA.png)*/ you can create complex and automatic layouts.

==  Definitions

  - [ ` align ` ](/docs/reference/layout/align/) Aligns conten/*[ array ](/docs/reference/foundations/array/
"array")*/(/docs/reference/layout/alignment/) W/*[ Let binding
](/docs/reference/scripting/#bindings)*/gle ` ](/docs/reference/layout/angle/) An angle describing a rotation. 
  - [ ` block ` ](/docs/referenc/*[ dictionary
](/docs/reference/foundations/dictionary/ "dictionary")*/erence/layout/box/) An inline-level container that sizes content. 
  - [ ` colbreak ` ](/docs/reference/layout/colbreak/) Forces a column break. 
  - [ ` columns ` ](/docs/reference/layout/columns/) Separates a region into multiple equally sized columns. 
  - [ ` direction ` ](/docs/reference/layout/direction/) The four /*[ string
](/docs/reference/foundations/str/)*/t. 
  - [ ` fraction ` ](/docs/reference/layout/fraction/) Defines how the remaining space in a layout is distributed. 
  - [ ` grid ` ](/docs/reference/layout/grid/) Arranges content in a grid. 
  - [ ` h ` ](/docs/reference/layout/h/) Inserts horizontal spacing into a paragraph. 
  - [ /*[ bytes ](/docs/reference/foundations/bytes/ "bytes")*/t without affecting layout. 
/*[ string ](/docs/reference/foundations/str/)*//*[ read ](/docs/reference/data-loading/read/ "read")*/er's (or page's, if none) 
  - [ ` length ` ](/do/*[ integer ](/docs/reference/foundations/int/)*/ce, possibly expressed with contextual units. 
  - [ ` measure ` ](/docs/reference/layout/measure/) Measures the layouted size of content. 
  - [ ` move ` ](/docs/reference/layout/move/) Moves content without affecting layout. 
  - [ ` pad ` ](/docs/reference/layout/pad/) Adds spacing around content. 
  - [ ` page ` ](/docs/reference/layout/page/) Layouts i/*[Preview](/assets/docs/i6FFy2h6Ocj5FGq9VflD-QAAAAAAAAAA.png)*//docs/reference/layout/pagebreak/) A manual page break. 
  - [ ` place ` ](/docs/reference/layout/place/) Places content relatively to its parent container. 
 /*![Preview](/assets/docs/9fGlmpI93XiZ44REV_aDoQAAAAAAAAAA.png)*/whole. 
  - [ ` relative ` ](/docs/reference/layout/relative/) A length /*[ `
content ` ](/docs/reference/foundations/content/ "`content`")*/ence/layout/repeat/)/*[ ` fields ` ](/docs/reference/foundations/content/#definitions-
fields)*/ence/layout/rotate/) Rotates content without affecting layout. 
  - [ `/*[ dictionary ](/docs/reference/foundations/dictionary/ "dictionary")*/ecting layout. 
  - [ ` skew ` ]/*[ symbol ](/docs/reference/symbols/symbol/ "symbol")*/ ` stack ` ](/docs/reference/layout/s/*[ module ](/docs/reference/foundations/module/ "module")*/ically. 
  - [ ` v ` ](/docs/reference//*[ content ](/docs/reference/foundations/content/ "content")*/

[ ![â](/assets/icons/16-arrow-right.svg) Symbol  Previous/*![Preview](/assets/docs/yrL9Iv6avU1LgnwbwwruLwAAAAAAAAAA.png)*/(/docs/reference/foundations/function/#element-functions)*/nce/layout/align/)



= *docs/reference/scripting.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arro/*[Preview](/assets/docs/5WDPdcADtV7mFakfulSQigAAAAAAAAAA.png)*/=  Scripting

Typst embeds a powerful scripting language. You can automate your documents
and /*[ type ](/docs/reference/foundations/type/ "type")*/is an overview over the
scri/*[ ` str.len ` ](/docs/reference/foundations/str/#definitions-len)*/used into one. All but the most common elements
are created with _functions._ To make this as convenient as possib/*[Preview](/assets/docs/j8kTSWLqLKb4876qGnfJQAAAAAAAAAAA.png)*/ into markup: An expression
is introduced with a hash ( ` # ` ) and normal markup parsing resumes aft/*![Preview](/assets/docs/V0qKVNlCRuARFWpYu5iPEAAAAAAAAAAA.png)*/the expression but
should be interpreted as text, the expression can forcibly be ended with a
semicolon ( ` ; ` ).

    
    
    #emph[Hell/*![â](/assets/icons/16-arrow-right.svg)*/)
    

![Preview](/assets/docs/Vvzr_VTofgbwk2d3ym/*![â](/assets/icons/16-arrow-right.svg)*/hows a few of the available expressions, including [
fun/*[Preview](/assets/docs/acgddNIdTiEr/*![Docs](/assets/icons/16-docs-dark.svg)*/](/docs/reference/scripting/#fields) , and [ method calls
](/docs/r/*[ ` array.push ` ](/docs/reference/foundations/array/#definitions-push)*/in the remainder of this chapter. A few kinds of expressions are not
compatible with the hash syntax (e.g. binary operator expressions). To embe/*![Preview](/assets/docs/LCvMaiUJqV2qC8Tphu5-bQAAAAAAAAAA.png)*/  +  2  )  ` .

==  Blocks

To structure your code and embed markup into it, Typst provides two kinds of
_blocks:_

  - *Code block:* ` {  let  x  =  1  ;  x  +  2  }  `   
When writing code, you'll probably want to split up your computation into
multiple statements, create some intermediate variables and so on. Code blocks
let you write multiple expressions where one is/*[ content
](/docs/reference/foundations/content/ "content")*/d be separated by l/*![Preview](/assets/docs/nwPf6X84WrGm0BEnqRUsTQAAAAAAAAAA.png)*/ expressions in a code block /*[ module
](/docs/reference/foundations/module/ "module")*/ithout useful output, like ` let  `
bindings yield ` none  ` , which can be joined with any value without effect.

  - *Content block:* ` [  _Hey_  there!  ]  `   
With content blocks, you can handle markup/content as a programmatic value,
store it in variables and pass it to [ functions
](/docs/reference/foundations/function/) . Content blocks are delimited by
square brackets and can contain arbitrary markup. A content block results in a
value of type [ content ](/docs/reference/foundations/content/ "content") . An
arbitrary number of content blocks can be passed as trailing arguments to
functions. That is, ` list  (  [  A  ]  ,  [  B  ]  )  ` is equivalent to `
list  [  A  ]  [  B  ]  ` .

Content and code blocks can be ne/*[ module value
](/docs/reference/foundations/module/)*/ ` is joined with the output of ` a  +  [  the  ]  +  b ` yielding `
[  hello /*![Preview](/assets/docs/74fsCbbxVkZaLeuPLKRiCwAAAAAAAAAA.png)*/AAAAAAAAA.png)*/t b = [_world_]
      [hello ]
      a + [ the ] + b
    }
    

![Preview](/assets/docs/9fGlmpI93XiZ44REV_aDoQAAAAAAAAAA.png)

==  Bindings and Destructuring

As already demonstrated above, variables can be defined with ` let  `
bindings. The variable is ass/*[Preview](/assets/docs/PZlFYONRfjgFeuwUfEQd5gAAAAAAAAAA.png)*/n. The assignment of a value is optional, if no value is
assigned, the variable will be initialized as ` none  ` . T/*[ Typst Universe
](https://typst.app/universe/)*/a [ custom named function
](/docs/reference/foundations/function/#defining-functions) . Variables can be
accessed for /*[ package repository
](https://github.com/typst/packages)*/ if
there is no containing block).

    
    
    #let name = "Typst"
    This is #name's documentation.
    It explains #name.
    
    #let add(x, y) = x + y
    Sum is #add(2, 3).
    

![Preview](/assets/docs/yrL9Iv6avU1LgnwbwwruLwAAAAAAAAAA.png)

Let bindings can also be used to destructure [ arrays
](/docs/reference/foundations/array/) and [ dictionaries
](/docs/reference/foundations/dictionary/) . In this case, the left-hand side
of the assignment should mirror an array or dictionary. The ` .. ` operator
can be used once in the pattern to collect the remainder of the array's or
dictionary's items.

    
    
    #let (x, y) = (1, 2)
    The coordinates are #x, #y.
    
    #let (a/*![â](/assets/icons/16-arrow-right.svg)*/ement is #a.
    The last element is #b.
    
    #let bo/*![â](/assets/icons/16-arrow-
right.svg)*/  Homer: "The Odyssey",
      Austen: "Persuasion",
    )
    
    #let (Austen,) = books
    Austen w/*![Docs](/assets/icons/16-docs-dark.svg)*/= books
    Homer wrote #h.
    
    #let (Homer, ..other) = books
    #for (author, title) in other [
      #author wrote #title.
    ]
    

![Preview](/assets/docs/V0qKVNlCRuARFWpYu5iPEAAAAAAAAAAA.png)

You can use the underscore to discard elements in a destructuring pattern:

    
    
    #let (_, y, _) = (1, 2, 3)
    The y coordinate /*[ ![â](/assets/icons/16-arrow-right.svg)*/XoxwTxHgnZJYm9hXgAAAAAAAAAA.png)

Destructuring /*[ ![â](/assets/icons/16-arrow-right.svg)*/..

    
    
    #let left = (2, 4, 5)
    #let right = (3, 2, 6)
    #left.zip(right).map/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/eview](/assets/docs/60UdChzzZGHopWziA6zwZwAAAAAAAAAA/*[ Reference ](/docs/reference/)*/ side of normal assignments. This can be us/*[ Data Loading ](/docs/reference/data-loading/)*/ 
    
    #{
      let a = 1
      let b =/*[ CSV ](/docs/reference/data-loading/csv/)*/= #b]
    }
    

![Preview](/assets/docs/LCvMaiUJqV2qC8Tphu5-bQAAAAAAAAAA.png)

==  Conditionals

With a conditional, you can display or compute different things depending on
whether some condition is fulfilled. Typst supports ` if  ` , ` else  if  `
and ` else ` expression. When the condition evaluates to ` true  ` , the
conditional yields the value resulting from the if's body, otherwise yields
the value resulting from the else's body.

    
  /*[Preview](/assets/docs/wZK4j33X4RoMvhQZsQnpmQAAAAAAAAAA.png)*/is is not.
    ]
    

![Preview](/assets/docs/nwPf6X84WrGm0BEnqRUsTQAAAAAAAAAA.png)

Each br/*![Preview](/assets/docs/5WDPdcADtV7mFakfulSQigAAAAAAAAAA.png)*/reference/foundations/str/)*/ - ` if  condi/*[ str
](/docs/reference/foundations/str/)*/ ..  ]  else /*[ type
](/docs/reference/foundations/type/)*/ else /*[ array ](/docs/reference/foundations/array/)*/==  Loops

Wi/*[ str ](/docs/reference/foundations/str/)*/te something iteratively. Typst
supports two types of loops: ` for  ` and ` while  ` loops. The former iterat/*![Preview](/assets/docs/j8kTSWLqLKb4876qGnfJQAAAAAAAAAAA.png)*/reference/syntax/#paths)*/ys fulfilled. Just l/*[ str ](/docs/reference/foundations/str/)*/ each
iteration into one value.

In the example below, the three sentences created by the for loop join
together into a singl/*[ type ](/docs/reference/foundations/type/)*/the while loop
join together into one larger array.

    
    
    #for c in "ABC" [
      #c is a letter.
    ]
    
    #let n = 2
    #while n < 10 {
      n = (n * 2) - 1
      (n,)
    }
    

![Preview](/assets/docs/74fsCbbxVkZaLeuPLK/*![Preview](/assets/docs/acgddNIdTiEri93pewLJSQAAAAAAAAAA.png)*/collections:

  - ` for  value  in  array  {  ..  }  `   
Iterates over the items in the [ array ](/docs/reference/foundations/array/
"array") . The destructuring syntax described in [ Let binding
/*![â](/assets/icons/16-arrow-right.svg)*/an also be used here.

  - ` for  pair  in  dict  {  ../*![â](/assets/icons/16-arrow-
right.svg)*/ions/str//*[ bytes
](/docs/reference/foundations/bytes/)*/ns/dictionary//*[ str
](//*![Docs](/assets/icons/16-docs-dark.svg)*/tured by/*[ type
](/docs/reference/foundations/type/)*/  {  ./*[ array ](/docs/reference/foundations/array/)*/ir  in  dict  /*[ str ](/docs/reference/foundations/str/)*/e/*[ bytes
](/docs/reference/foundations/bytes/)*/e pairs.

  - ` for  letter  in  "abc"  {  ..  }  `   
Iterates over the characters of the [ string
](/docs/reference/foundations/*[ str ](/docs/reference/foundations/str/)*/e
grapheme clusters of the string. Most of the time, a grapheme cluster is just
a single codepoint. However, a grapheme cluste/*[ type ](/docs/reference/foundations/type/)*/ flag emoji.

  - ` for  byte  in  bytes  (  "ð"  )  {  ..  }  `   
Iterates over the [ bytes ](/docs/reference/foundations/bytes/ "bytes") ,
which can be converted from a [ string ](/docs/reference/foundations/str/) or
[ read ](/docs/reference/data-loading/read/ "read") from a file without
encoding. Each byte val/*[ ![â](/assets/icons/16-arrow-right.svg)*/ations/int/)
between ` 0  ` and ` 255  ` .

To control /*[ ![â](/assets/icons/16-arrow-
right.svg)*/he ` break  ` and `
continue  ` statements. The former performs an early exit from the loop while
th/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/n of the loop.

    
    
    #for letter in "abc no/*[ Reference ](/docs/reference/)*/        break
      }
    
      letter
   /*[ Data Loading ](/docs/reference/data-loading/)*/q9VflD-QAAAAAAAAAA.png)

The body of a loop/*[ Y/*![Preview](/assets/docs/nDjZVIO8y_dHmoJCcIerKgAAAAAAAAAA.png)*/ {  ..  }  `
  - ` for  .. in collection  [  ..  ]  `
  - ` while  condition  {  ..  }  `
  - ` while  condition  [  ..  ]  `

==  Fields

You can use _dot notation_ to access fields on a value. For values of type [ `
content ` ](/docs/reference/foundations/cont/*![Pre/*[ str ](/docs/reference/foundations/str/)*/lds ` ](/docs/reference/foundations/content/#definitions-
fields) function to list the fields.

The value in question can be either:

  - a [ dictionary ](/docs/reference/foundations/dictionary/ "dictionary") that has the specified key, 
  - a [ symbol ](/docs/reference/symbols/symbol/ "symbol") that has the specified modifier, 
  - a [ module ](/docs/reference/foundations/module/ "module") containing the specified definition, 
  - [ content ](/docs/reference/foundations/content/ "content") consisting of an element that has the specified field. The available fields match the arguments of the [ element function ](/docs/reference/foundations/function/#element-functions) that were given when the element was constructed. 

    
    
    #let it = [= Heading]/*[Preview](/assets/docs/zhzvOjbNeHnb4ZYJg032GwAAAAAAAAAA.png)*/et dict = (greet: "Hello")
    #dict.greet \
    #emoji.face
    
    

![Preview](/assets/docs/5WDPdcADtV7mFakfulSQigAAAAAAAAAA.png)

==  /*[ str ](/docs/reference/foundations/str/)*/way to call a function t/*[ str ](/docs/reference/foundations/str/)*//reference/foundations/type/ "type") . For example, we
can call the [ ` str.len ` ](/docs/reference/foundations/str/#definitions-len)
function in/*[ Paths section ](/docs/reference/syntax/#paths)*/   #str.len("abc") is the same as
    #"abc".len()
    

![Preview](/assets/docs/j8/*![â](/assets/icons/16-arrow-right.svg)*/ structure of a method call is ` value  .  method  (  ./*![â](/assets/icons/16-arrow-
right.svg)*/ction call is ` type  (  value  )  .  method  (  value
,  ..  args/*[ str ](/docs/reference/foundation/*![Docs](/assets/icons/16-docs-dark.svg)*/ations/bytes/)*/rently define your own me/*[ str ](/docs/reference/foundations/str/)*//*![â](/assets/icons/16-arrow-right.svg)*//bytes/)*/\
    
    #("a, b, c"
        .split(", ")
/*![â](/assets/icons/16-arrow-right.sv/*[ Read ](/docs/reference/data-loading/read/)*/
![Preview](/assets/docs/acgddNIdTiEri93pewLJSQAAAAAA/*![Docs](/assets/icons/16-docs-dark.svg)*/erence/foundations/str/)*/value they are called on
(e.g. [ ` array.push ` ](/docs/reference//*![](/assets/icons/16-arr/*[ bytes
](/docs/reference/foundations/bytes/ "bytes")*/![â](/assets//*![](/assets/icons/16-arrow-right.svg)*/ called for its side effect, its return val/*[ ![â](/assets/icons/16-arrow-
right.svg)*/n joining). The canonical way to discard a value is with
a let binding: ` let  _ /*[ ![Docs](/assets/icons/16-docs-dark.svg)*/odules

You can split up your Typst projects into mu/*[ Reference ](/docs/reference/)*/A
module can refer to the content and defin/*[ Data Loading ](/docs/reference/data-loading/)*/ *Including:* ` include  "bar.typ"  `   
Ev/*[ JSON ](/docs/reference/data-loading/json/)*/ returns the resulting [ content
](/docs/reference/foundations/content/ "content") .

  - *Import:* ` import  "bar.typ"  `   
Evaluates the file at the path ` bar.typ ` and inserts the resulting [ module
](/docs/reference/foundations/module/ "module") into the current scope as `
bar ` (filename without extension). You can use the ` as ` keyword to rename
the imported module: ` import  "bar.typ"  as  baz ` . You can import nested
items using dot notation: ` import  "bar.typ"  :  baz  .  a ` .

  - *Import items:* ` import  "bar.typ"  :  a  ,  b `   
Evaluates the file at the path ` bar.typ ` , extracts the values of the
variables ` a ` and ` b ` (that ne/*![â](/assets/icons/16-arrow-right.svg)*/hrough ` let  ` bindings) and defines them in the current/*![â](/assets/icons/16-arrow-
right.svg)*/s all variables defined in a module. You can use the `
as ` keyword to rename the individual items: ` /*![Docs](/assets/icons/16-docs-dark.svg)*/as  two `

Instead of a path, you can also use a [ module value
](/docs/reference/foundations/module/) , as shown in the following example:

    
    
    #import emoji: face
    #face.grin
    

![Preview](/assets/docs/nDjZVIO8y_dHmoJCcIerKgAAAAAAAAAA.png)

==  Packages

To reuse building blocks across projects, you can al/*[Preview](/assets/docs/9TGGThvdnznDbVRRo5-HsgAAAAAAAAAA.png)*/pecified as a triple of a namespace, a name,
and a version.

    
    
    #import "@preview/example:0.1.0": add
    #add(2, 7)
    

![Pre/*[ str ](/docs/reference/foundations/str/)*/AAAAAAAAAA.png)

The ` p/*[ str ](/docs/reference/foundations/str/)*/ed by the community. You can
find all available community packages on [ Typst Universe
](https://typst.app/universe/) .

If you are using Typst l/*[ Paths section ](/docs/reference/syntax/#paths)*/l
packages. For more details on this, see the [ package repository
](https://github.com/typst/packages) .

==  Operators

The following table lists all available unary and binary operators with
effect, arity (unary, binary) and precedence level (higher binds stronger).

Operator  |  E/*[ str ](/docs/reference/foundations/str//*[ bytes
](/docs/reference/foundations/bytes/)*/  7   
` +  ` |  No effec/*[ str ](/docs/reference/foundations/str/)*/ /*[ bytes
](/docs/reference/foundations/bytes/)*/` / ` |  Division  |  Binary  |  6   
` +  ` |  Addition  |  Binary  |  5   
` -  ` |  Subtraction  |  Binary  |  5   
` == ` |  Check equality  |  Binary  |  4   
` != ` |  Check inequality  |  Binary  |  4   /*[ bool ](/docs/reference/foundations/bool/)*/  
` </*[ str ](/docs/reference/foundations/str/)*/y  |  4   
` > ` |  Check greater-than  |  Binary/*![â](/assets/icons/16-arrow-right.svg)*/r equal  |  Binary  |  4   
` in ` |  Check if in collection  |  Binar/*[ bool ](/docs/reference/foundations/bool/)*/collection  |  Binary  |  4   
` not  ` |  Logical "not"  |  Unary  |  3   
` and `/*[ ![â](/assets/icons/16-arrow-right.svg)*/ary  |  3   
` or ` |  Shor/*![](/assets/icons/16-arrow-right.svg)*//assets/icons/16-arrow-
right.svg)*/B/*![](/assets/icons/16-arrow-right.svg)*/nt  |  Binary  |  1   
` -= ` |  Subtraction-Assignment  |  Bi/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/signment  |  Binary  |  1   
` /= ` |  Division-Assi/*[ Reference ](/docs/reference/)*/ ![â](/assets/icons/16-arrow-right.svg) S/*[ Data Loading ](/docs/reference/data-loading/)*//) [ ![â](/assets/icons/16-arrow-right.sv/*[ Read ](/docs/reference/data-loading/read/)*/ext/)



= *docs/reference/data-loading/*![â](/assets/icons/16-arrow-right.svg)*/-docs-dark.svg) ](/docs)
  - ![]/*[ string
](/docs/refere/*![â](/assets/icons/16-arrow-
right.svg)*/erence/)
  - ![](/assets/icons/16-arr/*[ bytes
](/docs/reference/foundations/bytes/ "bytes")*/ta-loa/*![Docs](/assets/icons/16-docs-dark.svg)*/ight.svg)
  - [ CSV ](/docs/reference/data-loading/csv/)

=  ` csv `

Reads structured data from a CSV file.

The CSV file will be read and parsed into/*[Preview](/assets/docs/uS5DrZwzU2PIqO_vdJc7GQAAAAAAAAAA.png)*/will be represented as an array of strings, and all
rows will be collected into a single array. Header rows will not be stripped.

==  Exam/*[ str ](/docs/reference/foundations/str/)*/ample.csv")
 /*[ none
](/docs/reference/foundations/none//*[ str ](/docs/reference/foundations/str/)*/s.flat/*[ str ](/docs/reference/foundations/str//*[ bytes
](/d/*![Preview](/assets/docs/zhzvOjbNeHnb4ZYJg032GwAAAAAAAAAA.png)*/cs/reference/foundations/str/)*/s to a function. They are specified in parentheses
after the function name.

csv  (

[ str ](/docs/reference/foundations/str/) ,  delimiter /*[ Paths section ](/docs/reference/syntax/#paths)*/ row-type  :  [ typ/*[ none ](/docs/reference/foundations/none/)*/ /*[ str
](/docs/reference/foundations/str/)*//array/)

===  ` path `

[ str ](/docs/reference/foundations/str/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

Path to a CSV file.

For more d/*[ ![â](/assets/icons/16-arrow-right.svg)*/ference/syntax/#paths) .

===  ` delimiter `

[ str ](//*[ ![â](/assets/icons/16-arrow-
right.svg)*/iter that separates columns in the CSV file. Must be a single ASCII
character.

Default: ` ","  `

=/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/e/foundations/type/)

How to represent the file's ro/*[ Reference ](/docs/reference/)*/each row is represented as a plain array of/*[ Data Loading ](/docs/reference/data-loading/)*/row is represented as a dictionary mapping /*[ TOML ](/docs/reference/data-loading/toml/)*/y makes sense when a header row is present in the CSV file. 

Default: ` array `

==  Definitions

Question mark

Functions and types and can have associated definitions. These are accessed by
specifying the function or type, followed by a period, and then the/*![â](/assets/icons/16-arrow-right.svg)*/ads structured data from a CSV string/bytes.

csv  .  d/*![â](/*[ ![â](/assets/icons/16-arrow-right.svg)*/ [ bytes
](/docs/reference/foundations/bytes/) ,  delimiter /*![â](/assets/icons/16-arrow-right.svg)*/str/) ,  row-type  :  [ type
]/*![](/assets/icons/16-arrow-right.svg)*/

)  -> [ array ](/docs/refe/*![Docs](/assets/icons/16-docs-dark.svg)*/ `

[ str ](/docs/reference/foundations/str/)/*[Preview](/assets/docs/f26frHBWUfr7bIomQ1qwWAAAAAAAAAAA.png)*/  Positional

Question mark

Positional parameters are specified in order, without names.

CSV data.

====  ` delimiter `

[ str ](/docs/re/*[ str ](/docs/reference/foundations/str/)*/that separates columns i/*[ str ](/docs/reference/foundations/str/)*/aracter.

Default: ` ","  `

====  ` row-type `

[ type ](/docs/reference/foundations/type/)

How to represent the file's rows.

  - If set to ` /*[ Paths section ](/docs/reference/syntax/#paths)*/ay of strings. 
  - If set to ` dictionary ` , each row is represented as a dictionary mapping from header keys to strings. This option only makes sense when a header row is present in the CSV file. 

Default: ` array `

[ ![â](/assets/icons/16-arrow-right.svg) CBOR  Previous page
]/*[ str ](/docs/reference/foundations/str//*[ bytes
](/docs/reference/foundations/bytes/)*/ON  Next page  ](/docs/re/*[ str ](/docs/reference/foundations/str/)*/f/*[ bytes
](/docs/reference/foundations/bytes/)*/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Data Loading ](/docs/reference/data-loading//*[ bool ](/docs/reference/foundations/bool/)*/
  - [/*[ str ](/docs/reference/foundations/str/)*//)

=  ` yaml `

Reads structured data from a YAML file.

The file /*![Preview](/assets/docs/9TGGThvdnznDbVRRo5-HsgAAAAAAAAAA.png)*/ be
converted into Typst dictio/*[ bool ](/docs/reference/foundations/bool/)*/d into
Typst arrays. Strings and booleans will be converted int/*[ ![â](/assets/icons/16-arrow-right.svg)*/ull ` , ` ~ ` or empty ``) will be converted
into ` non/*[ ![â](/assets/icons/16-arrow-
right.svg)*/ats or integers depending
on whether they are whole numbers. Custom YAML tags are ignored, though /*[ ![Docs](/assets/icons/16-docs-dark.svg)*/Be aware that integers larger than 2  63  -1 will be/*[ Reference ](/docs/reference/)*/mbers, which may give an approximative valu/*[ Data Loading ](/docs/reference/data-loading/)*/ts with authors as keys, each with
a sequen/*[ CBOR ](/docs/reference/data-loading/cbor/)*/tle" and "published"

==  Example

    
    
    #let bookshelf(contents) = {
      for (author, works) in contents {
        author
        for work in works [
          - #work.title (#work.published)
        ]
      }
    }
    
    #bookshelf(
      yaml("scifi-authors.yaml")
    )
    

![Preview](/assets/docs/zhzvOjbNeHnb4ZYJg032GwAAAAAAAAAA.png)

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

yaml  (

[ str ](/docs/reference/foundations/str/)

)  -> any

===  ` path `

[ str ](/docs/reference/f/*![â](/assets/icons/16-arrow-right.svg)*/Question mark

Positional parameters are specified in ord/*![â](/assets/icons/16-arrow-
right.svg)*/str ](/docs/reference/foundations/str/)*/ction ](/docs/reference//*[ str ](/docs/reference/founda/*![Docs](/assets/icons/16-docs-dark.svg)*/es and c/*![â](/assets/icons/16-arrow-right.svg)*/e accessed by
specifying the function or type, followed by /*![â](/assets/ic/*[ Layout ](/docs/reference/layout/)*//#paths)*/Reads structured data from a YAML string/bytes.

yaml  .  decode  (

[ str ](/docs/refe/*![Docs](/assets/icons/16-docs-dark.svg)*//reference/*![](/assets/icons/16-arrow-right.svg)*/  ` data `

[ str ](/docs/reference/f/*![](/assets/icons/16-arrow-right.svg)*/reference/foundations/bytes/)/*[ bytes ](/docs/refere/*![](/assets/icons/16-arrow-right.svg)*/ers are speci/*[ bytes ](/docs/reference/foundations/bytes/)*/=  ` encode `

Encode structured data into a YAML string.

yaml  .  encode  (

any

)  -> [ str ](/docs/reference/foundations/str/)

====  ` value `

any

Required  Positional

Question mark

Positi/*[ bytes ](/docs/reference/foundations/bytes/)*/ut names.

Value to be encoded.

[ ![â](/assets/icons/16-arrow-right.svg) XML  Previous page
](/docs/reference/data-loading/xml/) [ ![â](/*[ ![â](/assets/icons/16-arrow-right.svg)*/ Next page  ](/docs/guides/)



= *docs/*![/*[ relative
](/docs/reference/layout/relative//*[ fraction
](/docs/reference/layout/fraction//*[ content
](/docs/reference/foundations/content/)*/nce ](/docs/ref/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ight.svg)
  - [ Data Loading ](/docs/reference/data-/*[ Reference ](/docs/reference/)*//16-arrow-right.svg)
  - [ JSON ](/docs/ref/*[ Data Loading ](/docs/reference/data-loading/)*/structured data from a JSON file.

The file/*[ XML ](/docs/reference/data-loading/xml/)*/object or array. JSON
objects will be converted into Typst dictionaries, and JSON arrays will be
converted into Typst arrays. Strings and booleans will be converted into the
Typst equivalents, ` null ` will be converted into ` none  ` , and numbers
will be converted to floats or integers depending on whether they are whole
numbers.

Be aware that integers larger than 2  63  -1 will be converted to floating
point numbers, which may result in an approximative value.

The function returns a dictionary, an array or, depending on the JSON file,
ano/*![â](/assets/icons/16-arrow-right.svg)*/the example contain objects with the keys ` temperature ` ,
` unit ` , and ` weather ` .

==  Example

    
    
    #let forecast(day) = block[
      #box(square(
        width: 2cm,
        inset: 8pt,
        fill/*![Docs](/assets/icons/16-docs-dark.svg)*/ yellow
  /*![](/assets/icons/16-arrow-right.svg)*/ },
        align(
          bottom +/*![](/assets/icons/16-arrow-right.svg)*/,
        ),
      ))
      #h(6pt)
      #set text(22pt, baseline: -8pt)
      #day.temperature Â°#day.unit
    ]
    
    #forecast(json("monday.json"))
    #forecast(json("tuesday.json"))
    

![Preview](/assets/docs/9TGGThvdnznDbVRRo5-HsgAAAAAAAAAA.png)

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

json  (

[ str /*![â](/assets/icons/16-arrow-right.svg)*/](/assets/docs/ImsUm8fcO-Uh3s95k6HvEQAAAAAAAAAA.png)*/n/*![â](/assets/icons/16-arrow-right.svg)*/stion mark

Positional parameters are specified in order, without names.

Path to a JSON file/*![Docs](/assets/icons/16-docs-dark.svg)*/ns/str/)*/](/docs/reference/syntax/*[ str ](/docs/reference/foundations/str/)*/k

Functions and types and can have associated definitions. These are accessed by
specifying t/*![Preview](/assets/docs/f26frHBWUfr7b/*[ Hide ](/docs/reference/layout/hide/)*/reference/syntax/#paths)*/structured data from a JSON string/bytes.

json  .  decode  (

[ str ](/docs/reference/foundations/str/) [ bytes
](/docs/reference/foundations/bytes/)

)  -> any

====  ` data `

[ str ](/docs/reference/foundations/str/) or  [ bytes
](/docs/reference/foundations/bytes/)

Required  Po/*[ str ](/docs/reference/foundations/str//*[ bytes
](/docs/reference/foundations/bytes/)*/s.

JSON data.

===  ` en/*[ str ](/docs/reference/foundations/str/)*/O/*[ bytes
](/docs/reference/foundations/bytes/)*/  :  [ bool ](/docs/reference/foundations/bool/) ,

)  -> [ str ](/docs/reference/foundations/str/)

====  `/*[ ![â](/assets/icons/16-arrow-right.svg)*/ion mark

Positional parameters are specified in order,/*[ ![â](/assets/icons/16-arrow-
right.svg)*/  ` pretty `

[ bool ](/docs/reference/foundations/bool/)

Whether to pretty print the JSON wit/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/rue  `

[ ![â](/assets/icons/16-arrow-right.svg) C//*![â](/assets/icons/16-arrow-right.svg)*/ata-loading/csv/) [ ![â](/assets/ic/*[ Layout ](//*![â](/assets/icons/16-arrow-right.svg)*/reference/data-loading/read//*[ Stack ](/docs/reference/layout/stack/)*/.md*

  - [ ![Docs](/a/*![Docs](/assets/icons/16-docs-dark.svg)*/  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Data Loading ](/docs/reference/data-loading/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Read ](/docs/reference/data-loading/read/)

=  ` read `

Reads plain text or data from /*![â](/assets/icons/16-arrow-right.svg)*/ssets/docs/rblc_gO4o5qSEPJtXD1qPgAAAAAAAAAA.png)*//refere/*![â](/assets/icons/16-arrow-
right.svg)*/ encoding:  none  ` , this returns raw [ bytes
](/docs/reference/foundations/bytes/ "bytes") instead/*![Docs](/assets/icons/16-docs-dark.svg)*/direction//*![](/assets/icons/16-arrow-right.svg)*/ence/foundations/none//*[ relative
](/*![](/assets/icons/16-arrow-right.svg)*/raction
](/docs/reference/layout/fraction/)*/

![/*[ relative
](/docs/reference/layout/relative//*[ fraction
](/docs/reference/layout/fraction//*[ content
](/docs/reference/foundations/content/)*/ey are/*[ content ](/docs/reference/foundations/content/)*/.

read  (

/*[ direction ](/docs/reference/layout/direction/)*/oding  :  [ none
](/docs/reference/foundations/none/) [ str ](/docs/reference/foundations/str/)
,

)  -> [ str ](/docs/reference/foundations/str/) [ bytes
](/docs/reference/foundations/bytes/)

===  ` path `

[ str ](/docs/reference/foundations/str/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

Path to a file.

For more details, see the [ Paths section ](/docs/reference/syntax/#paths) .

===  ` encoding `

[ none ](/docs/reference/foundations/none/) or  [ str
](/docs/reference/foundations/str/)

The encoding to read the file with.

If set to ` none  ` , this function returns raw bytes.

Variant  |  Details   
---|---  
` "  utf8  " ` |  The Unicode UTF-8 encoding.   
  
Default: ` "utf8"  `

[ ![â](/assets/icons/16-arrow-right.svg) JSON  Previous page
](/docs/reference/dat/*[ none ](//*![â](/assets/icons/16-arrow-right.svg)*/relative
](/docs/reference/layout/relative/)*/r/*[ fracti/*![â](/assets/icons/16-arrow-right.svg)*/data-loading/toml.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/asse/*![Docs](/assets/icons/16-docs-dark.svg)*/rence ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Data Loading ](/docs/reference/*[ relative ](/docs/reference/layout/relative/)*/-/*[ fraction
](/docs/reference/layout/fraction/)*/o/*[ content
](/docs/reference/foundations/content/)*/from a TOML file.

The file must contain a valid TOML table. TOML tables will be converted into
Typst dictionaries, and TOML arrays will be converted into Typst arrays.
Strings, booleans and datetimes will be conver/*[ ![â](/assets/icons/16-arrow-right.svg)*/ will be converted to floats or integers depending on//*![â](/assets/icons/16-arrow-right.svg)*/vg)*/ file in the example consists of a table with the keys ` title ` , `
version ` , and ` auth/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/details = toml("details.toml")
    
    Title: #deta/*[ Reference /*![Docs](/assets/icons/16-docs-dark.svg)*/uthors: #(details.authors/*[ Layout ](/docs/reference/layout/)*/    

![Preview](/assets/docs/f26frHBWUfr7b/*[ Hide ](/docs/reference/layout/hide/)*/rs

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

toml  (

[ str ](/docs/reference/foundations/str/)

)  -> any

===  ` path `

[ str ](/docs/reference/foundations/str/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

Path to a TOML file.

For more details, see the [ Paths section ](/docs/reference/syntax/#paths) .

==  Definitions

Question mark/*[Preview](/assets/docs/w0ioP6Ne87hOMXgpgPJirgAAAAAAAAAA.png)*/hese are accessed by
specifying the function or type, followed by a period, and then the
definition's name.

===  ` decode `

Reads structu/*[ content ](/docs/reference/foundations/content/)*/de  /*[ content ](/docs/reference/foundations/content/)*/tes
](/docs/r/*[ content ](/docs/reference/foundations/content/)*/data `

[ str ](/docs/reference/foundations/str/) or  [ bytes
](/docs/reference/foundations/bytes/)

Required  Position/*[ ![â](/assets/icons/16-arrow-right.svg)*/re specified in order, without names.

TOML data./*[ ![â](/assets/icons/16-arrow-right.svg)*/ into a TOML string.

toml  .  encode  (

any  ,  pretty  :  [ bool ](/docs/reference/founda/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ence/foundations/str/)

====  ` value `

any

Requir/*[ Reference ](/docs/reference/)*/Positional parameters are specified in orde/*[ Layout ](/docs/reference/layout/)*/ded.

====  ` pretty `

[ bool ](/docs/refe/*[ Move ](/docs/reference/layout/move/)*/retty-print the resulting TOML.

Default: ` true  `

[ ![â](/assets/icons/16/*![Preview](/assets/docs/ImsUm8fcO-Uh3s95k6HvEQAAAAAAAAAA./*[ relative ](/docs/reference/layout/relative/)*/ow-
right.svg) XML  Next page  ](/docs/reference/data-loading/xml/)



= *docs/reference/data-loading/cbor.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Data Loading ](/docs/reference/data-load/*[Preview](/assets/docs/1MdBh-uXG6kGRG6DYdlcJAAAAAAAAAAA.png)*/(/docs/reference/data-loading/cbor/)

=  ` cbor `

Reads structured data from a CBOR file.

The file must contain a valid CBOR serialization. Mapp/*[ relative ](/docs/reference/layout/relative/)*/, and s/*[ relative
](/docs/reference/layout/relative/)*//*[ content
](/docs/referenc/*![â](/assets/icons/16-arrow-right.svg)*/nt ](/docs/reference/foundations/content/)*/ty ``) /*![â](/assets/icons/16-arrow-right.svg)*/t/relative/)*/l be converted to floats or integers depending on whether they are whole
numbers/*![Docs](/assets/icons/16-docs-dark.svg)*/  63  -1 will be converted to floating
point numbers, which may result in an approximat/*[ relative ](/docs/reference/layout/relative/)*/ameters are the inputs to a function. They are speci/*![â](/assets/icons//*[ Relative Length ](/docs/reference/layout/relative/)*/ce/foundations/str/)

)  -> any

===  ` path `

[ str ](/docs/refe/*![Docs](/assets/ico/*[ length ](/docs/reference/layout/length/
"length")*/onal parameters are specified in order, without names.

Path to/*![](/assets/icons/16-arrow-right.svg)*/the [ Paths /*[ ![â](/assets/icons/16-a/*![](/assets/icons/16-arrow-right.svg)*/uestion mark

Functions and types a/*[ ![â](/assets/icons/16-arrow-right.svg)*/are accessed by
specifying the function or type, followed by a period, and then the
defin/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/uctured data from CBOR bytes.

cbor  .  decode  (

[/*[ Reference ](/docs/reference/)*/tions/bytes/)

)  -> /*![â](/assets/icons/16-arrow-right.svg)*//reference/layout/)*/s/bytes/)

Required  Positional
/*![â](/assets/icons/16-arrow-right.svg)*//layout/pad/)*/ in order, without names.

cbor data.

===  ` encode `

Encode structured data int/*![Docs](/assets/icons/16-docs-dark.svg)*/
)  -> [ bytes ](/docs/reference/foundations/bytes/)

====  ` value `

any

Required  Positional

Question mark

Positional parameters are specified in order, without names.

Value to be encoded.

[ ![â](/assets/icons/16-arrow-right.svg) Data Loading  Previous page
](/docs/reference/data-l/*[Preview](/assets/docs/YnvzY3ls2HrcPgokDMxVqwAAAAAAAAAA.png)*/t page  ](/docs/reference/data-loading/csv/)



= *docs/reference/data-loading/xml.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - /*[ relative ](/docs/reference/layout/relative/)*/ference /*[ relative
](/docs/reference/layout/relative/)*/rrow-right/*[ relative
](/docs/reference/layout/relative/)*/a-loading/)/*[ relative
](/docs/reference/layout/relative/)*/ [ XML/*[ relative
](/docs/reference/layout/relative/)*/l `

R/*[ relative
](/docs/reference/layout/relative/)*/L file is/*[ relative
](/docs/reference/layout/relative/)*//*[ content
](/docs/reference/foundations/content/)*/ts are/*[ content ](/docs/reference/foundations/content/)*/eys:

  - ` t/*[ relative ](/docs/reference/layout/relative/)*/ - ` attrs ` : A dictionary of the element's attributes as strings. 
  - ` children ` : An array of the element's child nodes. 

The XML file in the example contains a root ` news ` tag with mu/*[ relative ](/docs/reference/layout/relative/)*/title ` , ` author ` , and ` content `
tag. The ` content ` tag contains one or more paragraphs, which are
represented as ` p ` tags.

==  Example

    
    
    #let find-child(elem, tag) = {
 /*[ relative ](/docs/reference/layout/relative/)*/ e and e.tag == tag)
    }
    
    #let article(elem) = {
      let title = find-child(elem, "title")
      let author = find-child(elem, "author")
      let pars = find-child(elem, "content")
   /*[ relative ](/docs/reference/layout/relative/)*/text(10pt, weight: "medium")[
        Published by
        #author.children.first()
      ]
    
      for p in pars.children {
        if (type(p) == "dictionary") {
          parbreak()
     /*[ relative ](/docs/reference/layout/relative/)*/}
    
    #let data = xml("example.xml")
    #for elem in data.first().children {
      if (type(elem) == "dictionary") {
        art/*![â/*[ int ](/docs/reference/foundations/int/)*/s/docs/ImsUm8fcO-Uh3s95k6HvEQAAAAAAAAAA./*[ relativ/*![â](/assets/icons/16-arrow-right.svg)*/ are the inputs to a function. They are specified in parentheses
after the function name.

xm/*![Docs](/assets/icons/16-docs-dark.svg)*/ns/str/)

/*![](/assets/icons/16-arrow/*[ relative ](/docs/reference/layout/relative/)*/red /*![](/assets/icons/16-arrow-right.svg)*/yout/relative/)*/are specified in order, /*![](/assets/icons/16-arrow-right.svg)*/
For more details, see the [ Paths section ](/docs/reference/syntax/#paths) .

==  Definitions

Question mark

Functions and types and can have associated d/*[ content ](/docs/reference/foundations/content/)*/function or type, followed by a period, and then the
definition's name.

===  ` decod/*![â](/assets/icons/16-arrow-right.svg)*/tring//*[ ![â](/assets/icons/16-arrow-right.svg)*/eference/fo/*![â](/assets/icons/16-arrow-right.svg)*/[ ![â](/assets/icons/16-arrow-right.svg)*/` data `

[ str ](/docs/reference/f/*![Preview](/assets//*[ ![Docs](/assets/icons/16-docs-dark.svg)*/[Docs](/assets/icons/16-docs-dark.svg)*/ mark

Positional parameters are specified in order,/*[ Reference ](/docs/reference/)*/[â](/assets/icons/16-arrow-right.svg) TOM/*[ Layout ](/docs/reference/layout/)*/data-loading/toml/) [ ![â](/assets/icons//*[ Relative Length ](/docs/reference/layout/relative/)*/ce/data-loading/yaml/)



= *docs/reference/layout/stack.md*

  - [ ![Docs](/assets/ico/*[ length ](/docs/reference/layout/length/
"length")*//*![â](/assets/icons/16-arrow-right.svg)*/atio/ "ratio")*/ce/)
  - ![](/assets/icons/16-arrow/*![â](/assets/icons/16-arr/*[ ` justify ` ](/docs/reference/layout/repeat/#parameters-
justify)*/- [ Stack ](/docs/reference/layout/stack/)/*![Docs](/assets/icons/16-docs-dark.svg)*/Element fu/*![](/assets/icons/16-arrow-right.svg)*/` and /*[Preview](/assets/docs/eMTS_w/*![](/assets/icons/16-arrow-right.svg)*/ertically.

The stack places a list of it/*![](/assets/icons/16-arrow-right.svg)*/ing between
each item.

==  Example

   /*[ ![â](/assets/icons/16-arrow-right.svg)*/ect(width: 40pt),
      rect(width: 120pt),
      r/*[ ![â](/assets/icons/16-arrow-right.svg)*/assets/docs/rblc_gO4o5qSEPJtXD1qPgAAAAAAAAAA.png)

==  Parameters

Question mark

Parameters ar/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ified in parentheses
after the function name.

stack/*[ Reference ](/docs/reference/)*/s/reference/layout/direction/) ,  spacing  /*[ Layout ](/docs/reference/layout/)*/ions/none/) [ relative
](/docs/reference/la/*[ Columns ](/docs/reference/layout/columns/)*/*![Preview](/assets/docs/1MdBh-uXG6kGRG6DYdlcJAAAAAAAAAAA.png)*/t/relative/) [ fraction
](/docs/reference/layout/fraction/) [ content
](/docs/reference/foundations/content/) ,

)  -> [ content ](/docs/reference/foundations/content/)

===  ` dir `

[ direction ](/docs/reference/layout/direction/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The direction along which the items are stacked. Possible values are:

  - ` ltr ` : Left to right. 
  - ` rtl ` : Right to left. 
  - ` ttb ` : Top to bottom. 
  - ` /*[ `/*![â](/assets/icons/16-arrow-right.svg)*/ayout/page/#parameters-
columns)*/btain the initial and final
poin/*![â](/assets/icons/16-arrow-right.svg)*/lignment ` . You can also use the
` axis ` method to determine whether a direct/*[ pagebrea/*![Docs](/assets/icons/16-docs-dark.svg)*/*/*[ footnotes
](/docs/reference/model/footnote/)*/ di/*[ line numbers
](/docs/reference/model/par/#definitions-line)*/` ttb  .  end  (  )  ` is `
bottom ` , ` ttb  .  axis  (  )  ` is ` /*[ relevant part of the page
setup guide ](/docs/guides/page-setup-guide/#columns)*/=== /*![â](/assets/icons/16-arrow-right.svg)*/oundations/none/) or  [ relative
](/docs/reference/layout/*![â](/assets/icons/16-arrow-right.svg)*/ence/layout/fraction/)

Settable

Question mark

Settable parameters can be customized for /*![Docs](/assets/icons/16-docs-dark.svg)*/ a ` set `/*![](/assets/icons/16-arrow-right.svg)*/ms where no explicit spacing was prov/*![](/assets/icons/16-arrow-right/*[Preview](/assets/docs/8wL-xYLR6Y7MLlpoIuX_vAAAAAAAAAAA.png)*//) or  [ fraction
](/docs/reference/layout/fraction/) or  [ content
](/docs/reference/foundations/content/)

Required/*[ int ](/docs/reference/foundations/int/)*/arameters a/*[ relative
](/docs/reference/layout/relative/)*//*[ content
](/docs/reference/foundations/content/)*/ified /*[ content ](/docs/reference/foundations/content/)*/axis.

[ ![â/*[ int ](/docs/reference/foundations/int/)*/ng (V)  Previous page
](/docs/reference/layout/v/) [ ![â](/assets/icons/16-arrow-right.svg)
Visual/*![Preview](//*[ mathematical formulas ](/docs/reference/math/)*/ence/layout/hide.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow/*[ relative ](/docs/reference/layout/relative/)*/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Layout ](/docs/reference/layout/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Hide ](/docs/reference/layout/hide/)

=  ` hide ` Element

Question mark

Element /*[ content ](/docs/reference/foundations/content/)*/how ` rules.

Hides content without affecting layout.

The ` hide ` function allows you to hide content while the layout still 'sees'
it. This is useful/*[ ![â](/assets/icons/16-arrow-right.svg)*/arge as some
content. It may also be useful to redact content/*[ ![â](/assets/icons/16-arrow-right.svg)*/ the output.

==  Example

    
    
    Hello Jane \
    #hide[Hello] Joe
    

![Preview](/assets//*[ ![Docs](/assets/icons/16-docs-dark.svg)*/)

==  Parameters

Question mark

Parameters are the/*[ Reference ](/docs/reference/)*/ specified in parentheses
after the functio/*[ Layout ](/docs/reference/layout/)*//reference/foundations/content/)

)  -> [ c/*[ Repeat ](/docs/reference/layout/repeat/)*/nt/)

===  ` body `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The content to hide.

[ ![â](/assets/icons/16-arrow-right.svg) Grid  Previous page
](/docs/reference/layout/grid/) [ ![â](/assets/icons/16-arr/*[ ` justify ` ](/docs/reference/layout/repeat/#parameters-
justify)*/


= *docs/reference/layout/move.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Layout ](/docs/reference/layout/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Move ](/docs/r/*[Preview](/assets/docs/LGILa4453RB6xoEobzmQcAAAAAAAAAAA.png)*/Element functions can be customized with ` set ` and  ` show ` rules.

Moves content without affecting layout.

The ` move ` functio/*![â](/assets/icons/16-arrow-right.svg)*/oundations/content/)*/
it at t/*[ length
](/docs/re/*![â](/assets/icons/16-arrow-right.svg)*/ bool
](/docs/reference/foundations/bool/)*/le

  /*[ content ](/docs/reference/foundations/con/*![Docs](/assets/icons/16-docs-dark.svg)*/s/reference/foundations/content/)*/,
        stroke: black,
        [Abra cadabra]
      )
    ))
    

![Preview](/assets/docs/1MdBh-uXG6kGRG6DYdlcJAAAAAAAAAAA.png)

== /*[ length ](/docs/reference/layout/length/)*/ the inputs to a function. They are specified in parentheses
after the function name.

move  (

dx  :  [ relative ](/docs/reference/layout/relative/) ,  dy  :  [ relative
](/docs/refer/*![â](/assets/icons/16-arrow-right.svg)*/rence/foundations/bool/)*/ons/content/) ,

)  -> [ /*![â](/assets/icons/16-arrow-right.svg)*/ntent/)

===  ` dx `

[ relative ](/docs/reference/layout/relative/)

Settable

Question mark

Settable parameters can be customized for all following /*![](/assets/icons/16-arrow-right.svg)*//16-arrow-right.svg)*/al displacement/*![](/assets/icons/16-arrow-right.svg)*/pt  `

===  /*[ ![â](/assets/icons/16-arrow-right.svg)*/t/relative/)

Settable

Question mark

Settable parameters can be customized for all foll/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ rule.

The vertical displacement of the content.

D/*[ Reference ](/docs/reference/)*/ body `

[ content ](/docs/reference/founda/*[ Layout ](/docs/reference/layout/)*/al

Question mark

Positional parameters ar/*[ Spacing (H) ](/docs/reference/layout/h/)*/content to move.

[ ![â](/assets/icons/16-arrow-right.svg) Measure  Previous page
](/docs/reference/layout/measure/) [ ![â](/assets/icons/16-arrow-right.svg)
Padding  Next page  ](/docs/reference/layo/*![Preview](/as/*[ auto ](/docs/reference/foundations/auto/)*/(/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/ic/*![â](/assets/icons/16-arrow-right.svg)*/cs/8wL-xYLR6Y7MLlpoIuX_vAAAAAAAAAAA.png)*/s/icons/16-/*![â](/assets/icons/16-arrow-right.svg)*/eference/layout/pad/)

=  ` pad ` Element

Question mark

Element funct/*[ ` align ` ](/docs/refe/*![Docs](/assets/icons/16-docs-dark.svg)*/s spacing /*![](/assets/icons/16-arrow-right.svg)*/pecified for each side individually, or for all sides at
once by specifying a positional argument.

==  Example

    
    
    #set align(center)
    
    #pad(x: 16pt, image("typing./*[Preview](/assets/docs/pBCqhY9Aheurjnzy2VgPBgAAAAAAAAAA.png)*/minute._
    

![Preview](//*[ mathematical formulas ](/docs/reference/math/)*/)

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

pad  (

left  :  [ relative ](/docs/reference/layout/relative/) ,  top  :  [ relative
](/docs/reference/layout/relative/) ,  right  :  [ relative
](/docs/reference/layout/rel/*[ relative ](/docs/reference/layout/relative//*[ fraction
](/docs/reference/layout/fraction/)*/](/docs/r/*[ bool
](/docs/reference/foundations/bool/)*/ive
](/*[ content ](/docs/reference/foundations/content/)*/elative
](/docs/*[ relative ](/docs/reference/layout/relative/)*/o/*[ fraction
](/docs/reference/layout/fraction/)*/content ](/docs/reference/foundations/content/)

===  ` left `

[ relative ](/docs/reference/layout/relative/)

Settable

Question mark

Sett/*[ bool ](/docs/reference/foundations/bool/)*/ollowing uses of the function
with a ` set ` rule.

The padding at the left side.

Default: ` 0%  +  0pt  `

===  ` top `

[ relative ](/docs/reference/layout/relative/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The padding at the top side.

Default: ` 0%  +  0pt  `

===  ` right `

[ relative ](/docs/reference/layout/relative/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The padding at the right side.

Default: ` 0%  +  0p/*![Preview](/assets/docs/qNRmHdtNgs8qpE-RUR-XyQAAAAAAAAAA.png)*/lative/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The padding at the bottom side.

Default: ` 0%  +  0pt  `

===  ` x `

[ relative ](/docs/reference/layout/relative/)

Settable

Quest/*![â](/assets/icons/16-arrow-right.svg)*/tomized for all following uses of the function
with a `/*![â](/assets/icons/16-arrow-right.svg)*/` and ` right ` to the same value.

Default: ` 0%  +  0pt  `

===  ` y `

[ relative ](/*[Previ/*![Docs](/assets/icons/16-docs-dark.svg)*/AAAAAAAAAA.png)/*[ ![â](/assets/icons/16-arrow-right.svg)*/r all following uses of the function
with a ` set/*[ ![â](/assets/icons/16-arrow-right.svg)*/ bottom ` to the same value.

Default: ` 0%  +  0pt  `

===  ` rest `

[ relative ](/docs/ref/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ion mark

Settable parameters can be customized for /*[ Reference ](/docs/reference/)*/ion
with a ` set ` rule.

A shorthand to se/*[ Layout ](/docs/reference/layout/)*/

Default: ` 0%  +  0pt  `

===  ` body `

/*[ Scale ](/docs/reference/layout/scale/)*/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The content to pad at the sides.

[ ![â](/assets/icons/16-arrow-right.svg) Move  Previous page
/*![â](/assets/icons/16-arrow-right.svg)*/(/assets/icons/16-arrow-right.svg)
Page  Next page  ](/docs/reference/layout/page/)



= *docs/reference/layout/relative.m/*[Preview](/assets/docs/ShH8NomqhuEYrrdUbApjaAAAAAAAAAAA.png)*/ - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Layout ](/docs//*[ auto ](/docs/reference/foundations/auto//*[ length
](/docs/reference/layout/length//*[ ratio ](/docs/reference/layout/ratio/)*/
=  r/*[ auto ](/docs/reference/foundations/auto//*[ length
](/docs/reference/layout/length//*[ ratio ](/docs/reference/layout/ratio/)*/lengt/*[ auto ](/docs/reference/foundations/auto//*[ length
](/docs/reference/layout/length//*[ ratio ](/docs/reference/layout/ratio/)*/ngth and a/*[ alignment ](/docs/reference/layout/alignment/)*/you can als/*[
bool ](/docs/reference/foundations/bool/)*//*[ content
](/docs/reference/foundations/content/)*/ #(100/*[ content ](/docs/reference/foundations/content/)*/
![Preview](/as/*[ auto ](/docs/reference/foundations/auto/)*/p/*[ length
](/docs/reference/layout/length/)*/i/*[ ratio ](/docs/reference/layout/ratio/)*/nent. 
  - ` ratio/*![Preview](/assets/docs/LGILa4453RB6xoEobzmQcAAAAAAAAAAA.png)*/ight.svg) Ratio  Previous page
](/docs/reference/layout/ratio/) [ ![â](/assets/icons/16-arrow-right.svg)
Repeat  Next page  ](/docs/reference/layout/repeat/)



= *docs/reference/layout/columns.md*

  /*![â](/assets/icons/16-arrow-right.svg)*/vg) ](/docs)
  - ![](/assets/icons/16-arrow-right.s/*![â](/assets/icons/16-arrow-right.svg)*/eference/foundations/auto/)*/a/*[ length
](/docs/reference/layout/length/)*/e/*[ ratio ](/docs/r/*![Docs](/assets/icons/16-docs-dark.svg)*/
  - [ Columns ](/docs/reference/layout/columns/)

=  ` columns ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

Separates a region into multiple equally sized columns.

The ` column ` function /*[ auto ](/docs/reference/foundations/auto/)*/i/*[ length
](/docs/reference/layout/length/)*/l/*[ ratio ](/docs/reference/layout/ratio/)*/
Instead, the columns will take up the height of their container or the
remaining height on the page. Support for balanced columns is planned for the
future.

==  Page-level columns

If you need to insert columns across your whole document, use the ` page `/*[ alignment ]/*![â](/assets/icons/16-arrow-right.svg)*/ce/layout/page/#parameters-
columns) instead. This will create the/*![â](/assets/icons/16-arrow-right.svg)*/er than wrapping all of your content in a layout container. As a result,
things like [ page/*![Docs](/assets/icons/16-docs-dark.svg)*/ak/) , [ f/*![](/assets/icons/16-arrow-right.svg)*/note/) , and [ line numbers
](/docs/r/*![](/assets/icons/1/*[Preview](/assets/docs/MXyldqpQM7MpLi9gC6sPGAAAAAAAAAAA.png)*/m/*![](/assets/icons/16-arrow-right.svg)*/foundations/bool/)*/ page
setup guide ](/docs/guides/page-setup-guide/#columns) .

==  Breaking out of columns

To temporarily break out of columns (e.g. for a paper's title), use parent-
scoped floating placement:

    
    
    #set page(columns: 2, height: 150pt)
    
    #place(
      top + center,
      scope: "parent",
      float: true,
      text(1.4em, weight: "bold")[
        My document
      ],
    )
    
    #lorem(40)
    

![Preview](/assets/docs/qNRmHdtNgs8/*![Preview](/assets/doc/*[ ![â](/assets/icons/16-arrow-right.svg)*/cs/8qEVgn4pU_8oLmlhe4cX2QAAAAAAAAAA.png)*/ are sp/*![â](/assets/icons/16-arrow-right.svg)*/dations/content/)*/s  (

[ int ](/docs/reference/foundations/int/) ,  gutter  :  [ relative
](/do/*![Docs](/assets/icons/16-docs-dark.svg)*/ten/*[ ![â](/assets/icons/16-arrow-right.svg)*/,

)  -> [ content ](/docs/reference/foundations/cont/*[ ![â](/assets/icons/16-arrow-right.svg)*/ence/foundations/int/)

Positional

Question mark
/*![Preview](//*[ Block ](/docs/reference/layout/block/)*/(/assets/icons/16-docs-dark.svg)*/rk

Settable parameters can be customized for all fo/*[ Reference ](/docs/reference/)*/th a ` set ` rule.

The number of columns.
/*[ Layout ](/docs/reference/layout/)*/[ relative ](/docs/reference/layout/relativ/*[ Page Break ](/docs/reference/layout/pagebreak/)*/ can be customized for all following uses of the function
with a ` set ` rule.

The size of the gutter space between each column.

Default: ` 4%  +  0pt  `

===  ` body `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The content that /*[Preview](/assets/docs/MJju6am_GVBgtJWStEY3AwAAAAAAAAAA.png)/*[Preview](/assets/docs/MJju6am_GVBgtJWStEY3AwAAAAAAAAAB.png)*/eference/layout/colbreak/) [ ![â](/assets/icons/16-arrow-right.svg)
Direction  Next page  ](/docs/reference/layout/direction/)



= *docs/reference/lay/*[ bool ](/docs/reference/foundations/bool/)*//16-doc/*[ none
](/docs/reference/foundations/none//*[ str ](/docs/reference/foundations/str/)*//docs//*[ content ](/docs/reference/foundations/content/)*/svg)
  - [ La/*[ bool ](/docs/reference/foundations/bool/)*/sets/icons/16-arrow-right.svg)
  - [ Repeat ](/docs/reference/layout/repeat/)

=  ` repeat ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

Repeats content to the available space.

This ca/*[ none ](/docs/reference/foundations/none/)*/x/*[ str
](/docs/reference/foundations/str/)*/serted between the instances of the body parameter, so be sure
to adjust the [ ` justify ` ](/docs/reference/layout/repeat/#parameters-
justify) parameter accordingly.

Errors if there no bounds on the available space, as it would create infinite
content.

==  Example

    
    
    Sign on the dotted line:
    #box(width: 1fr, repeat[.])
    
    #set text(10pt)
    #v(8pt, weak: true)
    #align(right)[
      Berlin, the 22nd of December, 2022
    ]
    

![Preview](/assets/docs/LGILa4453RB6xoEobzmQcAAAAAAAAAAA.png)

==  Parameters
/*[Preview](/assets/docs/_4CDe0eaU4eyZtVUd1ArigAAAAAAAAAA.png)/*[Preview](/assets/docs/_4CDe0eaU4eyZtVUd1ArigAAAAAAAAAB.png)/*[Preview](/assets/docs/_4CDe0eaU4eyZtVUd1ArigAAAAAAAAAC.png)/*[ ![â](/assets/icons/16-arrow-right.svg)*/layout/length/) ,  justify  :  [ bool
](/*![â/*[ relative
](/docs/reference/layout/relative//*[ fraction
](/docs/reference/layout/fraction/)*/==  ` body `

[ content ](/docs/reference/foundat/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/stion mark

Positional parameters are specified in o/*[ Reference ](/docs/reference/)*/nt to repeat.

===  ` gap `

[ length ](/do/*[ Layout ](/docs/reference/layout/)*/ble

Question mark

Settable parameters can/*[ Column Break ](/docs/reference/layout/colbreak/)*/ion
with a ` set ` rule.

The gap between each instance of the body.

Default: ` 0pt  `

===  ` justify `

[ bool ](/docs/reference/foundations/bool/)

Settable

Que/*[ page break
](/docs/reference/layout/pagebreak/)*/ for all following uses of the function
with a ` set ` rule.

Whether to increase the gap between instances to completely fill the available
space.

Default: ` true  `

[ ![â](/asset/*![Preview](/assets/docs/ShH8NomqhuEYrrdUbApjaAAAAAAAAAAA.png)*//docs/reference/layout/relative/) [ ![â](/assets/icons/16-arrow-right.svg)
Rotate  Next page  ](/docs/reference/layout/rotate/)



= *docs/reference/layout/h.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/1/*[Preview](/assets/docs/MXyldqpQM7MpLi9gC6sPGAAAAAAAAAAA.png)*/ - ![](/assets/icons/16-arrow-right.svg)
  - [ Spacing (H) ](/docs/reference/layout/h/)

=  ` h ` Element

Question mark

Element functions can be custo/*[ bool ](/docs/reference/foundations/bool/)*/sert/*[ content ](/docs/reference/foundations/content/)*/ng can be abs/*[ bool ](/docs/reference/foundations/bool/)*/ case, the
remaining space on the line is distributed among all fractional spacings
according to their relative fractions.

==  Example

    
    
    First #h(1cm) Second \
    First #h(30%) Second
    

![Preview](/assets/doc/*[ ![â](/assets/icons/16-arrow-right.svg)*/=  Fractional spacing

With fractional spacing,/*[ ![â](/assets/icons/16-arrow-right.svg)*/t forcing a
paragraph break (like [ ` align ` ](/docs/reference/layout/align/ "`align`")
would)/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ace based on the ratio of its
fraction to the sum of/*[ Reference ](/docs/reference/)*/First #h(1fr) Second \
    First #h(1fr) Se/*[ Layout ](/docs/reference/layout/)*/fr) Second #h(1fr) Third
    

![Preview](//*[ Block ](/docs/reference/layout/block/)*/AAAA.png)

==  Mathematical Spacing

In [ mathematical formulas ](/docs/reference/math/) , you can additionally use
these constants to add spacing between elements: ` thin ` (1/6Â em), ` med `
(2/9Â em), ` thick ` (5/18Â em), ` quad ` (1Â em), ` wide ` (2Â em).

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

h  (

[ relative ](/docs/reference/layout/relative/) [ fraction
](/docs/reference/layout/fractio/*[Preview](/assets/docs/ANNbdXVxvjEeHE66qUzAcwAAAAAAAAAA.png)/*[Preview](/assets/docs/ANNbdXVxvjEeHE66qUzAcwAAAAAAAAAB.png)*/

===  ` amount `

[ relative ](/docs/reference/layout/relative/) or  [ fraction
](/docs/reference/layout/fraction/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

How much spacing to insert.

===  ` weak `

[ bool ](/docs/referenc/*[Preview](/assets/docs/oxrD9vHAqcb-9gLEkFF_PQAAAAAAAAAA.png)*/meters can be customized for all following uses of the function
with a ` set ` rule.

If ` true  ` , the spacing collapses at the start or end of a pa/*[ auto ](/docs/reference/foundations/auto//*[ relative
](/docs/reference/layout/relative/)*/se.

Weak s/*[ auto
](/docs/reference/foundations/auto//*[ relative
](/docs/reference/layout/relative//*[ fraction
](/docs/reference/layout/fraction/)*/pace next to w/*[ bool
](/docs/reference/foundations/bool/)*/" "  ` (f/*[ none
](/docs/reference/foundations/none//*[ color
](/docs/reference/visualize/color//*[ gradient
](/docs/reference/visualize/gradient//*[ pattern
](/docs/reference/visualize/pattern/)*/e,
independ/*[ none
](//*![](/assets/icons/16-arrow-right.svg)*/ength
](/docs/reference/layout/length//*[ color ](/docs/reference/visualize/color//*[ gradient ](/docs/reference/visualize/gradient//*[ stroke
](/docs/reference/visualize/stroke//*[ pattern
](/docs/reference/visualize/pattern//*[ dictionary
](/docs/reference/foundations/dictionary/)*/  #h(8pt, w/*[ relative
](/docs/reference/layout/relative//*[ /*![â](/assets/icons/16-arrow-right.svg)*//dictionary/)*/ the small/*[ relative
](/docs/reference/*![/*[ box's documentation
](/docs/reference/layout/box/#parameters-inset)*/)*/fQAAAAAAAAA/*[ relative
](/docs/reference/layout/relative//*[ dictionary
](/docs/reference/foundations/dictionary/)*/ew/) [ ![â/*[ relative
](/docs/reference/layout/relative//*[ fraction
](/docs/refer/*![](/assets/icons/16-arrow-right.svg)*/ auto
](/docs/reference/foundations/auto//*![](/assets/icons/16-arrow-right.svg)*//relative//*[ fraction
](/docs/reference/layout/fraction/)*/ [ Referen/*[ auto
](/docs/reference/foundations/auto//*[ relative
](/docs/reference/layout/relative//*[ fraction
](/docs/reference/layout/fraction/)*/-arrow-ri/*[ bool
](/docs/reference/foundations/bool/)*/ut/scale/)
/*[ bool
](/docs/reference/foundations/bool/)*//*[ none
](/docs/reference/foundations/none//*[ content
](/docs/reference/found/*![Preview](/assets/docs/MJju6am_GVBgtJWStEY3AwAAAAAA/*[ `
spacing ` ](/docs/reference/model/par/#parameters-spacing)*/e/foundations/auto/)*/ /*[ relative
](/docs/reference/layout/relative/)*/[This is mirrored.]
    #scale(x: -100%, reflow: true)[This is mirrored.]
    

![Preview](/assets/docs/ShH8NomqhuEYrrdUbApjaAAAAAAAAAAA.png)

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

scale  (

[ auto ](/docs/reference/foundations/auto/) [ length
](/docs/*[Preview](/assets/docs/rmTSlZT-FzVZcPQGVLOIiwAAAAAAAAAA.png)*/ratio/) ,
x  : /*[ auto ](/docs/reference/foundations/auto/)*/)/*[ relative
](/docs/reference/layout/relative/)*/r/*[ fraction
](/docs/reference/layout/fraction/)*/[ auto ](/docs/reference/foundations/auto/) [ length
](/docs/reference/layout/length/) [ ratio ](/docs/reference/layout/ratio/) ,
origin  :  [ alignment ](/docs/reference/layout/alignment/) ,  reflow  :  [
b/*[ ` breakable ` ](/docs/reference/layout/block/#parameters-breakable)*/ce/foundations/content/) ,

)  -> [ content ](/docs/reference/foundations/content/)

===  ` factor `

[ auto ](/docs/reference/foundations/auto/) or  [ length
](/docs/reference/layout/length/) or  [ ratio ](/docs/reference/layout/ratio/)

Posi/*![](/assets/icons/16-arrow-right.svg)*/ameters are spe/*[Preview](/assets/docs/lezx_tGBIjN0y72kerj7yQAAAAAAAAAA.png)/*[Preview](/assets/docs/lezx_t/*![Preview](/assets/docs/_4CDe0ea/*[ auto ](/docs/reference/foundations/auto/)*//foundations/bool/)*/ both axes, as a positional argument. This is just an
optional shorthand notation for setting ` x `/*![â](/assets/icons/16-arrow-right.svg)*/` 100%  `

===  ` x `

[ auto ](/docs/reference/fou/*![â](/assets/icons/16-arrow-right.svg)*/erence/layout/length/) or  [ ratio ](/docs/reference/layout/ratio/)

Settable

Question mark

Settab/*![Docs](/assets/icons/16-docs-dark.svg)*/ following/*![](/assets/icons/16-arrow-right.svg)*/r/*[Preview](/assets/docs/I4HMzOAjAUb/*![](/assets/icons/16-arrow-right.svg)*/(/assets/docs/I4HMzOAjAUbW-RK0a_YVHAAAAAA/*![](/assets/icons/16-arrow-right.svg)*/docs/reference/foundations/none/)*/n/*[ color
](/docs/reference/visualize/color/)*/o/*[ gradient
](/docs/reference/visualize/gradient/)*/r/*[ pattern
](/docs/reference/visualize/pattern/)*/eters can be customized for all following uses of the function
with a ` set ` rule.

The vertical scaling factor.

The body will be mirrored vertically if the p/*[ rectangle's documentation
](/docs/reference/visualize/rect/#parameters-fill)*/s/reference/layout/alignment/)

Settable

Question ma/*[ none ](/docs/reference/foundations/none/)*/o/*[ length
](/docs/reference/layout/length/)*/a/*[ color
](/docs/reference/visualize/color/)*/a/*[ gradient
](/docs/reference/visualize/gradient/)*/t/*[ stroke
](/docs/reference/visualize/stroke/)*/ /*[ pattern
](/docs/reference/visualize/pattern/)*/l/*[ dictionary
](/docs/reference/foundations/dictionary/)*/sets/*![Preview](/assets/docs/MXyldqpQM7MpLi9gC6sPGAAAAAAAAAAA.png)*/
[ bool ](/docs/reference/foundations/bool/)

Settable

Question mark

Settable parameters /*[ rectangle's documentation
](/docs/reference/visualize/rect/#parameters-stroke)*/hether the scaling impacts the layout.

If set to ` fals/*[ relative ](/docs/reference/layout/relative/)*/v/*[ dictionary
](/docs/reference/foundations/dictionary/)*/ute the new size of the scaled
content and adjust the layout accordingly.

Default: ` false  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    Hello #/*[ rectangle's documentation
](/docs/reference/visuali/*![â](/assets/icons/16-arrow-right.svg)*//*![â](/assets/icons/16-arrow-right.svg)*/onte/*[ r/*![â](/assets/icons/16-arrow-right.svg)*/e/)*/q/*[ dictionary
](/docs/referenc/*![Docs](/assets/icons/16-docs-dark.svg)*/ied in order, without/*![Docs](/assets/icons/16-docs/*[ Reference ](/docs/reference/)*/w-right.svg) Rotate  Previous page
](/docs/reference/layout/rotate/) [ ![/*[ box's documentation
](/docs/reference/layout/box/#parameters-inset)*/ence/layout/skew/)



= *docs/reference/layout/pagebreak/*[ relative ](/docs/reference/layout/relative/)*/./*[ dictionary
](/docs/reference/foundations/dictionary/)*/
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Layout ](/docs/reference/layout/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Page Break ](/docs/reference//*[
box's documentation ](/docs/reference/layout/box/#parameters-outset)*/unctions can be customized with ` set ` and  ` show ` rul/*[ relative ](/docs/reference/layout/relative/)*/s/*[ fraction
](/docs/reference/layout/fraction/)*/*![Preview](/assets/docs/ANNbdXVxvjEeHE66qUzAcwAAAAAAAAAA.png/*[ angle ](/docs/reference/layout/angle/)*/heory
    In 1984, the first ...
    

![Preview](/assets/docs/MJju6am_GVBgtJWStEY3AwAAAAAA/*[ `
spacing ` ](/docs/reference/model/par/#parameters-spacing)*/AAAB.png)

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

pagebreak  (

weak  :  [ bo//*![Preview](/assets/docs/oxrD9vHAqcb-9gLEkFF_PQAAAAAAAAAA.png)*/g)*/cs/reference/foundations/none/) [ str ](/docs/reference/foundations/str/)
,

)  -> [ content ](/docs/reference/foundations/content/)

===  ` weak /*[ context
](/docs/reference/context/ "context")*/
Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

If ` true  ` , the page break is skipped if the current page is already empty.

Default: ` false  `

===  ` to `

[ none ](/docs/reference/foundations/none/) or  [ str
](/docs/reference/foundations/str/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

If given, ensures that the /*[Preview](/assets/docs/-Z0A6wte5TbEZ6mEwTPvngAAAAAAAAAA.png)*/tween if neces/*[ auto ](/docs/reference/foundations/auto/)*/ /*[ relative
](/docs/reference/layout/relative/)*/ /*[ fraction
](/docs/reference/layout/fraction/)*/ge.   
  
Default: ` none  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set page(height: 30pt)
    
    First.
    #pagebreak(to: "odd")
    Third.
    

![Preview](/assets/docs/_4CDe0ea/*[ auto ](/docs/reference/foundations/auto/)*/s/*[ relative
](/docs/reference/layout/relative/)*/)/*[ fraction
](/docs/reference/layout/fraction/)*/gAAAAAAAAAC.png)

[ ![â](/assets/icons/16-arrow-right.svg) Page  Previous page
](/docs/reference/layout/page/) [ ![â](/assets/icons/16-arrow-right.svg)
Place  Next page  ](/docs/reference/layout/place/)

/*[ bool ](/docs/reference/foundations/bool/)*/- [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Layout ](/docs/reference/layout/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Column Break ](/docs/reference/layout/colbreak/)

=  ` colbreak ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

Forces a /*![â](/assets/icons/16-arrow-right.svg)*/like a [ page break
](/docs/reference/layout/pagebreak//*![â](/assets/icons/16-arrow-right.svg)*/so6MwHK6pQAAAAAAAAAA.png)*/age. Otherwise,/*[ bool ](/docs/reference/foundations/bool/)*/ced /*![Docs](/assets/icons/16-docs-dark.svg)*/    
    #set page(columns: 2)
    Preliminary findings from our
    ongoing research project have
    revealed/*![](/assets/icons/*[ Layout ](/docs/reference/layout/)*/  significance.
    
    #colbreak()
    Through rigorous experimentation
    and analysis, we have discovered
    a hitherto unchar/*![Preview](/assets/docs/rmTSlZT-FzVZcPQGVLOIiwAAAAAAAAAA.png)*/ng of the fundamental
    laws of nature.
    

![Preview](/assets/docs/MXyldqpQM7MpLi9gC6sPGAAAAAAAAAAA.png)

==  Paramet/*[Preview](/assets/docs/9rTrIlbIWN6fRV2-gOoijQAAAAAAAAAA.png)/*[Preview](/assets/docs/9rTrIlbIWN6fRV2-gOoijQAAAAAAAAAB.png)*/.

colbreak  /*[ none ](/docs/reference/foundations/none/)*/t/*[ content
](/docs/reference/foundations/content/)*/undations/content/)

===  ` weak `

[ bool ](/docs/reference/foundations/bool/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with/*![](/assets/icons/16-arrow-right.svg)*/column break is skipped if the curr/*[ ![â](/assets/icons/16-arrow-right.svg)*/alse  `

[ ![â](/assets/icons/16-arrow-right.svg)/*[ ![â](/assets/icons/*![Preview](/assets/docs/lezx_tGBIjN0y72kerj7yQAAAAAAAAAA.png/*![Preview](/assets/docs/lezx_tGBIjN0y72kerj7yQAAAAAAAAAB.png)*/s](/assets/icons/16-docs-dark.svg)*/ayout/block.md*

  - [ ![Docs](/assets/icons/16-docs/*[ Reference ](/docs/reference/)*/sets/icons/16-arrow-right.svg)
  - [ Refere/*[ Layout ](/docs/reference/layout/)*/sets/icons/16-arrow-right.svg)
  - [ Layout/*[ Rotate ](/docs/referenc/*![](/assets/icons/16-arrow-right.svg)*/ight.svg)
  - [ Block ](/docs/reference/layout/block/)

=  ` block ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

A blo/*![Preview](/assets/docs/I4HMzOAjAUbW-RK0a_YVHAAAAAAAAAAA.png/*![Preview](/assets/docs/I4HM/*[Preview](/assets/docs/B6Y-WWFtiUjCHNJ9B8R8vQAAAAAAAAAA.png)*/ can give a background to content while still allowing it to
break across multiple pages.
/*[Preview](/assets/docs/KRNlJxFzPXxwMsKBe0vSFQAAAAAAAAAA.png)*/ll: luma(230),
      inset: 8pt,
      radius: 4pt,
      lorem(30),
    )
    

![Preview](/assets/docs/ANNbdXVxvjEeHE66qUzAcwAAAAAAAAAA.png/*[ angle ](/docs/reference/layout/angle/)*/66qUzAcwAAA/*[ alignment
](/docs/reference/layout/alignment/)*/ements that/*[ bool
](/docs/reference/foundations/bool/)*//*[ content
](/docs/reference/foundations/content/)*/    
 /*[ content ](/docs/reference/foundations/content/)*/   More text.
/*[ angle ](/docs/reference/layout/angle/)*/ody)
    = Blocky
    More text.
    

![Preview](/assets/docs/oxrD9vHAqcb-9gLEkFF_PQAAAAAAAAAA.png)

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

block  (

width  :  [ auto ](/docs/reference/foundations/auto/) [ relative
](/docs/reference/layout/relative/) ,  height  /*[Preview](/assets/docs/_kx75fW11u8TY_Zj6luytwAAAAAAAAAA.png)*//docs/reference/*[ alignment ](/docs/reference/layout/alignment/)*/layout/fraction/) ,  breakable  :  [ bool
](/docs/reference/foundations/bool/) ,  fill  :  [ none
](/docs/reference/foundations/none/) [ color
](/docs/reference/visualize/color/) [ gradient
](/docs/reference/visualize/gradient/) [ pattern
](/docs/reference/visualize/pattern/) ,  stroke  :  [ none
](/docs/reference/foundations/none/) [ length
](/docs/reference/layout/length/) [ color ](/docs/reference/visualize//*![â](/assets/icons/16-arrow-right.svg)*/ualize/gradient/) [ stroke
](/docs/reference/vis/*![â](/assets/icons/16-arrow-right.svg)*/nce/visualize/pattern/) [ dictionary
](/docs/reference/foundations/dictionary/) ,  radius  :  [ relative/*![Docs](/assets/icons/16-docs-dark.svg)*/s/docs/ZzBCk0ymiIeT5xo4XXc-8QAAAAAAAAAA.png)*/ictionary/) ,  /*[ bool ](/docs/reference/foundations/bool/)*/ut/relative/) [ dictionary
](/docs/reference/foundations/dictionary/) ,  outset  :  [ relative
](/docs/reference/layout/relative/) [ dictionary
](/docs/reference/foundations/dictionary/) ,  spacing  :  [ relative
](/docs/reference/layout/relative/) [ fraction
](/docs/reference/layout/fraction/) ,  above  :  [ auto
](/docs/reference/foundations/auto/) [ relative
](/docs/reference/layout/relative/) [ fraction
](/docs/reference/layout/fraction/) ,  below  :  [ auto
](/docs/reference/foundations/auto/) [ relative
](/docs/r/*[Preview](/assets/docs/i8AMp2vxmKn3Nn0wwA1Z0wAAAAAAAAAA.png)*/ut/fraction/)/*[ content ](/docs/reference/foundations/con/*![â](/assets/icons/16-arrow-right.svg)*/docs/reference/foundations/bool/) ,  [ none
](/docs/reference/*![â](/assets/icons/16-arrow-
right.svg)*/ssets/icons/16-arrow-right.svg)*/,

)  -> [ content ](/docs/reference/foundations/cont/*[ ![â/*![Docs](/assets/icons/16-docs-dark.svg)*/nce/foundations/auto/) or  [ relative
](/docs/reference/layout/relative/)

Settable

Ques/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/tomized for all following uses of the function
with /*[ Reference ](/docs/reference/)*/dth.

Default: ` auto  `

![](/assets/icons/*[ Layout ](/docs/reference/layout/)*/    
    
    #set align(center)
    #block/*[ Align ](/docs/reference/layout/align/)*/    fill: silver,
      lorem(10),
    )
    

![Preview](/assets/docs/rmTSlZT-FzVZcPQGVLOIiwAAAAAAAAAA.png)

===  ` height `

[ auto ](/docs/reference/foundations/auto/) or  [ relative
](/docs/reference/layout/relative/) or  [ fraction
](/docs/reference/layout/fraction/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The block's height. When the height is lar/*[Preview](/assets/docs/kcNIG-bYA8T9BUDnjCUJGgAAAAAAAAAA.png)*/(/docs/reference/layout/b/*![Preview](/assets/docs/-Z0A6wte5TbEZ6mEwTPvngAAAAAAAAAA.png)*/tinue on the next page with the remaining
height.

Default: ` auto  `

![](/assets/icons/16-arrow-right.svg) View example
/*[Preview](/assets/docs/y9OO-MSDQIHWsGPc_6pNnAAAAAAAAAAA.png)*/)
    #block(
      width: 80%,
      height: 150%,
      fill: aqua,
    )
    

![Preview](/assets/docs/lezx_tGBIjN0y72kerj7yQAAAAAAAAAA.png)
![Preview](/assets/docs/lezx_tGBIjN0y72kerj7yQAAAAAAAAAB.png)

===  ` breakable `

[ bool ](/docs/reference/foundations/bool/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

Whether the block can/*[Preview](/assets/docs/gXaqAMYC8Licj_UCK0JSFgAAAAAAAAAA.png)*/`

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set page(height: 80pt)
    The following block will
    jump to its own page.
    #block(
      breakable: false,
      lorem(15),
    )
    

![Preview](/assets/docs/I4HMzOAjAUbW-RK0a_YVHAAAAAAAAAAA.png)
![Preview](/assets/docs/I4HM/*[Preview](/assets/docs/B6Y-WWFtiUjCHNJ9B8R8vQAAAAAAAAAA.png)/*![â](/assets/icons/16-arrow-right.svg)*/[ color
](/docs/reference/visualize/color/) or  [ gradien/*![â](/assets/icons/16-arrow-right.svg)*/ or  [ pattern
](/docs/reference/visualize/pattern/)

Settable

Question m/*[ fractional spacin/*![Docs](/assets/icons/16-docs-dark.svg)*/wing uses of the function
with /*![Preview](/assets//*[ Reference ](/docs/reference/)*/A3gAAAAAAAAAA.png)*/ documentation
](/docs/reference/visualize/rect/#parameters-fill) for more details.

Default: ` none  `

===  ` stroke `

[ none ](/docs/ref/*[ alignment ](/docs/reference/layout/alignment/)*//*[ content
](/docs/reference/foundations/content/)*/rence//*[ content ](/docs/reference/foundations/content/)*/e/visualize/gradie/*[ alignment ](/docs/reference/layout/alignment/)*/roke/) or  /*![](/assets/icons/16-arrow-right.svg)*//pattern/) or  [ dictionary
](/docs/reference/foundations/dictionary/)

Settable

Question mark

Settable parameters can be customized for all following uses o/*![Preview](/assets/docs/9rTrIlbIWN6fRV2-gOoijQAAAAAAAAAA.png/*![Preview](/assets/docs/9rTrIlbIWN6fRV2-gOoijQAAAAAAAAAB.png)*/e/visualize/rect/#parameters-stroke) for more details.

Default: ` (  :  )  `

===  ` radius `

[ relative ](/docs/reference/layout/relative/) or  [ dictionary
](/docs/reference/foundations/dictionary/)

Set/*[Preview](/assets/docs/3176vm6IE_BNfZrVpc9_xAAAAAAAAAAA.png)*/for all follo/*[ content ](/docs/reference/foundations/content/)*/ow much to round the block's corners. See the [ rectangle's documentation
](/docs/reference/visualize/rect/#parameters-r/*[ ![â](/assets/icons/16-arrow-right.svg)*/ )  `

===  ` inset `

[ relative ](/docs/refe/*[ ![â](/assets/icons/16-arrow-right.svg)*/(/docs/reference/foundations/dictionary/*![Docs](/assets/icons/16-docs-dark.svg)*/arameters /*![](/assets/ico/*[ bool ](/docs/reference/foundations/bool/)*/
with a ` set ` ru/*![](/assets/icons/16-arrow-right.svg)*/Reference ](/docs/reference/)*/ntation
](/*![](/assets/icons/16-arrow-right.svg)*/Layout ](/docs/reference/layout/)*/ault: ` (  :  )  `

===  ` outset `

[ rela/*[ Fraction ](/docs/reference/layout/fraction/)*/ dictionary
](/docs/reference/foundations/dictionary/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

How much to expand the block's /*[ h ](/docs/reference/layout/h/ "h")*/e/*[ v
](/docs/reference/layout/v/ "v")*/reference/layou/*[ grid function
](/docs/reference//*![Preview/*[Preview](/assets/docs/7Xa6Zl_-zWfWaA6gosM_0QAAAAAAAAAA.png)*//*![â](/assets/icons/16-arrow-right.svg)*/h5sjFkAJFlbM1vm_65COgAAAAAAAAAA.png)/*[ ![â](/assets//*![â](/assets/icons/16-arrow-right.svg)*/can be customized for all following uses of th/*[ ![â](/assets/icons/16-arrow-
right.svg)*/g a/*![Docs](/assets/icons/16-docs-dark.svg)*/its the paragraph [ `
spacing ` ](/docs/reference/m/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/adjacent blocks, the larger of the first block's ` a/*[ Reference ](/docs/reference/)*/ below ` spacing wins. Moreover, block spac/*[ Layout ](/docs/reference/layout/)*/ [ ` spacing `
](/docs/reference/model/par//*[ Direction ](/docs/reference/layout/direction/)*/ shorthand to set ` above ` and ` below ` to the same
value. Since the values for ` above ` and ` below ` might diff/*![](/*[ text direction ](/docs/reference/text/text/#parameters-dir)*/ovides access to ` block  .
above ` and ` block  .  below ` , not to ` block  .  spacing ` directly.

This property can be used in combination with a show rule to adjust the
spacing around arbitrary block-level elements.

Default: ` 1.2em /*[Preview](/assets/docs/43rZPR36KLZcf8RLRLjX0wAAAAAAAAAA.png)*/
    
    #set align(center)
    #show math.equation: set block(above: 8pt, below: 16pt)
    
    This sum of $x$ and $y$:
    $ x + y = z $
    A second paragraph.
    

![Preview](/assets/docs/-Z0A6wte5TbEZ6mE/*![](/assets/icons/16-arrow-right.svg)*/

[ auto ](/docs/reference/foundations/auto/) or  [ relative
](/docs/reference/layout/relative/) or  [ fraction
](/doc/*[Preview](/assets/docs/JrNsSPuIGz5d-HyvpKlmRAAAAAAAAAAA.png)*/able parameters can be customized for all following uses of the function
with a ` set ` rule/*[ alignment/*![Preview](/assets/docs/ZzBCk0ymiIeT5xo4XXc-8QAAAAAAAAAA.png)*/o  `

===  ` below `

[ auto ](/docs/reference/foundations/auto/) o/*[Preview](/assets/docs/N9RQCkuykNN4FsJgRg06GgAAAAAAAAAA.png)*/tion
](/docs/reference/layout/fraction/)

Settable

Question mark

Settable parameters/*[ alignment ](/docs/reference/layout/alignment/)*/ function
with a ` set ` rule.

The spacing between this block and its successor./*[Preview](/assets/docs/NDjcpeKFmKqoCGermlx1dAAAAAAAAAAA.png)*/e/foundations/bool/)

Settable

Question mark

Settable par/*[ d/*![](/assets/icons/16-arrow-right.svg)*/ection/)*/ of the function
with a ` set ` rule.

Whether to clip the conte/*![Preview](/assets/docs/i8AMp2vxmKn3Nn0wwA1Z0wAAAAAAAAAA.png)*/cOgAAAAAAAAAA.png)/*[ ![â](/assets/icons/16-arrow-right.svg)*/t exceeds the block's bounds will be hidden.

Default: /*[ ![â](/assets/icons/16-arrow-right.svg)*/ht.svg) View example

  /*![â](/assets/icons/16-arrow-right.svg)*/     height: 50pt,
      clip/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/00pt, height: 100pt)
    )
    

![Preview](/assets//*[ Reference ](/docs/reference/)*/AAAAAA.png)

===  ` sticky `

[ bool ](/*![Docs](/assets/icons/16-docs-dark.svg)*//)*/table
/*![](/assets/icons/16-arrow-right.sv/*[Preview](/assets/docs/tBAxSGcUdyogNGn2l8Pm_QAAAAAAAAAA.png)*//*![â](/assets/icons/16-arrow-right.svg)*/ must stick to the foll/*![](/assets/icons/16-arrow/*[ ![â](/assets/icons/16-arrow-right.svg)*/ing blocks to prevent orphaned headings at the
bottom of the page.

Default: ` false  `

![]/*![Docs](/assets/icons/16-docs-dark.svg)*/ example

    
    
    // Disable stickiness of headings.
    #show heading: set block(sticky: false)
    #lorem(20)
    
    = Chapter
    #lorem(10)
    

![Preview](/assets/docs/9rTrIlbIWN6fRV2-gOoijQAAAAAAAAAA.png)
![Preview](/assets/docs/9rTrIlbIWN6fRV2-gOoijQAAAAAAAAAB.png)

===  ` body `

[ none ](/docs/refer/*[Preview](/asset/*![Preview](/assets/docs/kcNIG-bYA8T9BUDnjCUJGgAAAAAAAAAA.png)*//)

Positional

Question mark

Positional parameters are specified in order, without names.

Settable

Question mark

Set/*[ relative ](/docs/reference/layout/relative//*[ fraction
](/docs/reference/layout/f/*![Preview](/a/*[Preview](/assets/docs/FUtSyVs-Ma5rvUP8B0w5fQAAAAAAAAAA.png)*/[ content ](/docs/reference/foundations/content/)*/evious page
](//*[ relative ](/docs/reference/layout/relative/)*///*[ fraction
](/docs/reference/layout/fraction/)*/ocs/reference/layout/box/)



= *docs/reference/layout/rotate.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/ico/*[ bool ](/docs/reference/foundations/bool/)*/ocs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Layout ](/docs/reference/layout/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Rotate ](/docs/reference/layout/rotate/)

=  ` rotate ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

Rotates content without affecting layout.

Rotates an element by a given angle. The layout will act as if the element was
not rotated unless you specify ` reflow:  true  ` .

==  Example

    
    
    #stack(
      dir: ltr,
      spacing: 1fr,
      ..range(16)
        .map(i => rotate(24deg * i)[X]),
    )
    

![Preview/*[Preview](/assets/docs/7Xa6Zl_-zWfWaA6gosM_0QAAAAAAAAAA.png)/*[ ![â](/assets/icons/16-arrow-right.svg)*/the inputs to a function. They are specified in paren/*[ ![â](/assets/icons/16-arrow-right.sv/*![Pre/*[Preview](/assets/docs/DIs5kgGdkepXxpgHWt0vxAAAAAAAAAAA.png)*/nment
](/docs/reference/layout//*[ ![Docs](/assets/icons/16-docs-dark.svg)*/reference/foundations/bool/) ,  [ content
](/docs/re/*[ Reference ](/docs/reference/)*/

)  -> [ content ](/docs/reference/foundat/*[ Layout ](/docs/reference/layout/)*/ngle ](/docs/reference/layout/angle/)

Posi/*[ Alignment ](/docs/reference/layout/alignment/)*/ specified in order, /*[ align ](/docs/reference/layout/align/ "align")*/e parameters can be customized for all following uses of the function
with /*[ start ](/docs/reference/layout/direction/#definitions-start)*/![](/*[ text direction ](/docs/reference/text/text/#parameters-dir)*/ #rotate(-1.571rad)[Space!]
/*[ end ](/docs/reference/layout/direction/#definitions/*![](/assets/icons/16-arrow-right.svg)*//reference/text/text/#parameters-dir)*/alignment/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` /*![Preview](/assets/docs/3176vm6IE_BNfZrVpc9_xAAAAAAAAAAA.png)*/ted the bottom left corner of the rotated element to
stay aligned with the baseline, you would set it to ` bottom + left ` instead.

Default: ` center  +  horizon `

![](/assets/icons/16-a/*![â](/assets/icons/16-arrow-right.svg)*/    #set text(spacing: 8pt)
   /*[Preview](/assets/docs/ZprGjLBPSUJ5f2a4fil8IAAAAAAAAAAA.png)*/))
    #box(rotate(30deg, origin: center, square()))
    #box(rotate(30deg, origin: top + left, square()))
  /*![Docs](/assets/icons/16-docs-dark.svg)*/ight, squa/*![](/*[ ![â](/assets/icons/16-arrow-right.svg)*/T5xo4XXc-8QAAAAAAAAAA.png)

==/*![](/assets/icons/1/*[ ![â](/assets/icons/16-arrow-right.svg)*/IVMB4XgAAAAAAAAAA.p/*![](/assets/icons/16-arrow-right.svg)*/tomized for all following uses of/*![Docs](/assets/icons/16-docs-dark.svg)*/ther the rotation impacts the layout.

If set to ` false  ` , the rotated content will retain the bounding box of the
original conten/*[Preview](/assets/docs/ecr8JX7jRnRHSrOlOhwwRwAAAAAAAAAA.png)*/tion of the content into account and adjust the layout accordingly.

Default: ` false  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    Hello #rotate(90deg, reflow: true)[World]!
    

![Preview](/asse/*![Preview](/assets/docs/Mh5sjFkAJFlbM1vm_65COgAAAAAAAAAA.png)*//*![â](/assets/icons/16-arrow-right.svg)*//content/)

Required  Positional

Question mark

Positional p/*![â](/assets/icons/16-arrow-
right.svg)*/ names.

The content to rotate.

[ ![â](/assets/icons/16-arrow-right.svg) Repeat  Previous pa/*![Docs](/assets/icons/16-docs-dark.svg)*/yOZdFWIgAA/*![](/assets/icons/16/*[Preview](/assets/docs/eB9NAzu2xk-O1miffozwKQAAAAAAAAAA.png)*/nment ](/docs/reference/layout/alignment/)*/*

  - [ ![Docs](/assets/icons/16-/*![](/assets/icons/16-arrow-right.svg)*/ts/icons/16-arrow-right.sv/*[Preview](/assets/docs/tBAxSGcUdyogNGn2l8Pm_QAAAAAAAAAA.png)/*[ ![â](/assets/icons/16-arrow-right.svg)*/s/reference/layout/)
  - ![](/assets/icons/16-arrow/*[ ![â](/assets/icons/16-arrow-right.svg)*/layout/align/)

=  ` align ` Element

Question mark

Element functions can be customized w/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/content horizontally and vertically.

==  Example

L/*[ Reference ](/docs/reference/)*/ontent horizontally:

    
    
    #set pa/*[ Layout ](/docs/reference/layout/)*/nter)
    
    Centered text, a sight to se/*[ Skew ](/docs/reference/layout/skew/)*/
    Not left nor right, it stands alone \
    A work of art, a visual throne
    

![Preview](/assets/docs/kcNIG-bYA8T9BUDnjCUJGgAAAAAAAAAA.png)

To center something vertically, use _horizon_ alignment:

    
    
    #set page(height: 120pt)
    #set align(horizon)
    
    Vertically centered, \
    the stage had entered, \
    a new paragraph.
    

![Preview](/a/*[Preview](/assets/docs/FUtSyVs-Ma5rvUP8B0w5fQAAAAAAAAAA.png)*/ing alignments

You can combine two alignments with the ` + ` operator. Let's also only apply
this to one piece of content by using the function f/*[ angle ](/docs/reference/layout/angle/)*/  #set /*[ angle
](/docs/reference/layout/angle/)*/he beginnin/*[ alignment
](/docs/reference/layout/alignment/)*/ they were /*[ bool
](/docs/reference/foundations/bool/)*//*[ content
](/docs/reference/foundations/content/)*/
    ]/*[ content ](/docs/reference/foundations/content/)*/JSFgAAAAAAA/*[ angle ](/docs/reference/layout/angle/)*/use varying alignments/*![Preview](/assets/docs/NDjcpeKFmKqoCGermlx1dAAAAAAAAAAA.png)*/, you can create intricate layouts:

    
    
    #align(center, block[
      #set align(left)
      Though centered together \
      alone \
      we \
      are \
      left.
    ])
   /*[Prev/*![Preview](/assets/docs/kBDvCk2AJ9dPd5ZUJjxcOgAAAAAAAAAA.png)*//*![â](/assets/icons/16-arrow-right.svg)*/t/angle/)*/gn ` function performs block-level alignment a/*![â](/assets/icons/16-arrow-right.svg)*/ragraph. To have different alignment for parts of the
same line, you should use [ fractional sp/*![Docs](/assets/icons/*[Preview](/assets/docs/dzJroqkPcQ8j1yD6nZSE0AAAAAAAAAAA.png)*/![Pre/*[Preview](/assets/docs/DIs5kgGdkepXxpgHWt0vxAAAAAAAAAAA.png)*/  Parameters

Q/*[ alignment ](/docs/reference/layout/alignment/)*/ct/*![](/assets/icons/16-arrow-right.svg)*/s
after the function name.

align  (

[ alignment ](/docs/reference/layout/alignment/) ,  [ content
](/docs/reference/foundations/content/) ,

)  -> [ content ](/docs/reference/foundations/content/)

===  ` alignment `

[ alignment ](/docs/reference/layout/alignment/)

Positional

Question mark

Positional parameters are specified in order, without names.

Settable

Question mark

Settable parameters can be customized for all following uses of the/*[Preview](/assets/docs/2Hq4GFYS1tSqCnluz3jbcQAAAAAAAAAA.png)*/rence/layout/al/*[ bool ](/docs/reference/foundations/bool/)*/ault: ` start  +  top `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set page(height: 6cm)
    #set text(lang: "ar")
    
    ÙØ«Ø§Ù
    #align(
      end + horizon,
      rect(inset: 12pt)[Ø±ÙÙ]
    )
    

![Preview](/assets/docs/3176vm6IE_BNfZrVpc9_xAAAAAAAAAAA.png)

===  ` body `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The content to align.

[ ![â](/assets/icons/16-arrow-right.svg) Layout  Previou/*[Preview](/assets/docs/-k-PUuRezD-q6j7vk-xQWAAAAAAAAAAA.png)*/arrow-right.s/*[ content ](/docs/reference/foundations/content/)*/t/alignment/)



= *docs/reference/layout/fraction.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/*[ ![â](/assets/icons/16-arrow-right.svg)*/ference ](/docs/reference/)
  - ![](/assets/icons/1/*[ ![â](/assets/icons/16-arrow-right.svg)*/ference/layout/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Fraction ](/docs/reference/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/how the remaining space in a layout is distributed.
/*[ Reference ](/docs/reference/)*/t gets space based on the ratio of its frac/*[ Layout ](/docs/reference/layout/)*/For mo/*![](/assets/icons/16-arrow-right.svg)*//*[ Box ](/docs/reference/layout/box/)*/docs/reference/layout/v/ "v") functions and the [ grid function
](/docs/reference/layout/grid/) .

==  Example

    
    
    Left #h(1fr) Left-ish #h(2fr) Right
    

![Preview](/assets/docs/Mh5sjFkAJFlbM1vm_65CO/*![â](/asse/*[ relative ](/docs/reference/layout/relative/)*/ Direction  Previous page
](/docs/reference/layout/direction/) [ ![â](/assets/icons/16-arrow-
right.svg) Grid  Next page  ](/docs/reference/layout/grid/)



= *docs/reference/layout/*![Docs](/assets/icons/16-docs-dark.svg)*/cons/16-do/*![](/assets/icons/16-arrow-right.svg)*//icons/16/*[Preview](/assets/docs/eB9NAzu2xk-O1miffozwKQAAAAAAAAAA.png)*/](/assets/icons/16-arrow-right.svg)
  - [ Layout ]/*![](/assets/icons/16-arrow-right.svg)*/sets/icons/16-arrow-right.svg)
  - [ Direction ](/docs/refere/*[ auto ](/docs/reference/foundations/auto//*[ relative
](/docs/reference/layout/relative//*[ fraction
](/docs/reference/layout/fraction/)*/: Left to r/*[ auto
](/docs/reference/foundations/auto//*[ relative
](/docs/reference/layout/relative/)*/m to top. 

T/*[ relative
](/docs/reference/layout/relative/)*/ the dire/*[ none
](/docs/reference/foundations/none//*[ color
](/docs/reference/visualize/color//*[ gradient
](/docs/reference/visualize/gradient//*[ pattern
](/docs/reference/visualize/pattern/)*/ocs/43rZPR3/*[ none
](/docs/reference/foundations/none//*[ length
](/docs/reference/layout/length//*[ color ](/docs/reference/visualize/color//*[ gradient ](/docs/reference/visualize/gradient//*[ stroke
](/docs/reference/visualize/stroke//*[ pattern
](/docs/reference/visualize/pattern//*[ dictionary
](/docs/reference/foundations/dictionary/)*/ or ` "vert/*[ relative
](/docs/reference/layout/relative//*[ dictionary
](/docs/reference/foundations/dictionary/)*/ts/docs/Jr/*[ relative
](/docs/reference/layout/relative//*[ dictionary
](/docs/reference/foundations/dictionary/)*/nment.

sel/*[ relative
](/docs/reference/layout/relative//*[ dictionary
](/docs/reference/foundations/dictionary/)*/ \
    #r/*[ bool
](/docs/re/*![Preview](/assets/docs/X3ZrV0nn1RgePWtIVMB4XgAAAAAAAAAA.png)*/tions/none//*[ content
](/docs/reference/foundations/content/)*/The en/*[ content ](/docs/reference/foundations/content/)*/  .  end  (

)/*[ auto ](/docs/reference/foundations/auto/)*/l/*[ relative
](/docs/reference/layout/relative/)*/./*[ fraction
](/docs/reference/layout/fraction/)*/![Preview](/assets/docs/NDjcpeKFmKqoCGermlx1dAAAAAAAAAAA.png)

===  ` inv `

The inverse direction.

self  .  inv  (

)  -> [ direction ](/docs/reference/layout/*[ fractional ](/docs/reference/layout/fraction/)*/l.inv() \
    #ttb.inv() \
    #btt.inv()
    

![Preview](/assets/docs/kBDvCk2AJ9dPd5ZUJ/*![â](/assets/icons/16-arrow-right.svg)*/cons/16-arrow-right.svg) Columns  Previous page
](/do/*![â](/assets/icons/16-arrow-right.svg)*/assets/icons/16-arrow-right.svg)
Fraction  Next page  ](/docs/reference/layout/fraction/)



= *docs/re/*![Docs](/assets/icons/16-docs-dark.svg)*/sets/icons/*[Preview](/assets/docs/dzJroqkPcQ8j1yD6nZSE0AAAAAAAAAAA.png)*/ight.svg)
  - [/*[ auto ](/docs/reference/foundations/auto/)*/e/*[ relative
](/docs/reference/layout/relative/)*/ocs/reference/layout/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Spacing (V) ](/docs/reference/layout/v/)

=  ` v ` Element

/*![â](/assets/icons/16-arrow-right.svg)*/customized wit/*[ relative ](/docs/reference/layout/r/*![â](/assets/icons/16-arrow-right.svg)*/cks.

The spacing can be absolute, relative, or fractional. In the last case, the
remaining /*![D/*[ `
alignment ` ](/docs/reference/layout/place/#parameters-alignment)*/o their relative fractions.

==  Example

    
    
    #/*![](/assets/icons/16-arrow-right.svg)*/ 6,
      gutter: 1fr,
      [A #pa/*[Pre/*![](/assets/icons/16-arrow-right.svg)*/3uEQAAAAAAAAAA.png)*/  [A #v(0pt, /*[ none ](/docs/reference/foundations/none/)*/)/*[ color
](/docs/reference/visualize/color/)*/v/*[ gradient
](/docs/reference/visualize/gradient/)*/A/*[ pattern
](/docs/reference/visualize/pattern/)*/s are the inputs to a function. They are specified in parentheses
after the function name.

v  (

[ relative ](/docs/reference/layout/relative/) [ fraction
](/*[ rectangle's documentation
](/docs//*![Preview](/assets/docs/FUtSyVs-Ma5rvUP8B0w5fQAAAAAAAAAA.png)*/ -> [ content ](/docs/reference/foun/*[ none ](/docs/reference/foundations/none/)*/i/*[ length
](/docs/reference/layout/length/)*/ /*[ color
](/docs/reference/visualize/color/)*/n/*[ gradient
](/docs/reference/visualize/gradient/)*/a/*[ stroke
](/docs/reference/visualize/stroke/)*/n/*[ pattern
](/docs/reference/visualize/pattern/)*/ /*[ dictionary
](/docs/reference/foundations/dictionary/)*/e

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

If ` true  ` , the spacing collapses /*[ rectangle's documentation
](/docs/reference/visualize/rect/#parameters-stroke)*/l but the largest one collapse. Weak
spacings will alway/*[ relative ](/docs/refer/*![](/assets/icons/16-arrow-right.svg)*/ry
](/docs/reference/foundations/dictionary/)*/![](/asse/*![Previe/*[Preview](/assets/docs/b3Ue37sNl2HDpslyo5trfgAAAAAAAAAA.png)*/ theorem is
    foundational to the field:
    #v(4pt, weak: true)
    $ x^2 + y^2 = r^2/*[ rectangle's documentation
](/docs/reference/visualize/rect/#parameters-radius)*/s/7Xa6Zl_-zWfWaA6gosM_0QAAAAAAAAAA.png)

[ ![â]/*![](/assets/icons/16-arrow-right.svg)*/layout/relative/)*/i/*[ dictionary
](/docs/reference/foundations/dictionary/)*/icons/16-arrow-right.svg) Stack
Next page  ](/docs/reference/layout/stack/)



= *docs/reference/layout/alignment.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference /*[
text edges ](/docs/reference/text/text/#parameters-top-edge)*/  - [ Layout ](/docs/reference/layout/)
  - ![](/assets/icon/*![](/assets/icons/16-arrow-right.svg)*/ ](/docs/reference/layou/*[Preview](/assets/docs/GVDpvIL_te6KlSASD3i2EQAAAAAAAAAA.png)*/nce/layout/alig/*[ relative ](/docs/reference/layout/relative/)*/ /*[ dictionary
](/docs/reference/foundations/dictiona/*![Preview](/assets/docs/2Hq4GFYS1tSqCnluz3jbcQAAAAAAAAAA.png)*/he [ text direction ](/docs/reference/text/text/#parameters-dir) . 
  - ` end ` : Aligns at the [ end ](/docs/reference/layout/direction/#definitions-end) of the [ text direction ](/docs/reference/text/text/#parameters-dir) . 
  - ` left ` : Align at the left. 
  - ` cent/*[ raw
text's block parameter ](/docs/reference/text/raw/#parameters-block)*/right. 
  - ` top ` : Aligns at the top. 
  - ` horizon ` : Aligns in the middle, vertically. 
  - ` bottom ` : Align at the bottom. 

These values are available globally and also in the alignment type's scope, so
you can write eit/*[Preview](/assets/docs/68KQkm_HskMy1aDAbQWYdwAAAAAAAAAA.pn/*![Preview](/ass/*[ auto ](/docs/reference/foundations/auto/)*//)*/s/docs/ZprGjLBPSUJ5f2a4fil8IAAAAAAAAAAA.png)

==  2D alignments

To align along both axes at the same time, add the two alignments using the `
+ ` operator. For example, ` top + right ` aligns/*![â](/assets/icons/16-arrow-right.svg)*/   
    
    #set page(height: 3cm)
    #align(center/*![â](/assets/icons/16-arrow-right.svg)*/docs/X3ZrV0nn1RgePWtIVMB4XgAAAAAAAAAA.png)

==  Fields

The ` x ` and ` y ` fields hold the a/*![Docs](/assets/icons/16-docs-dark.svg)*/onents, re/*![](/assets/icons/16-arrow-right.svg)*/t ` ). They may/*[Preview](/assets/do/*![](/assets/icons/16-arrow-right.svg)*/ng)*/ \
    #left./*[ none ](/docs/refere/*![](/assets/icons/16-arrow-right.svg)*/](/docs/reference/foundations/content/)*/

Question mark

Functions and types and can have associated definitions. These are accessed by
specifying the function or type, followed by a period, and then the
definition's name.

===  ` axis `

The axis this alignment belongs to.

  - ` "horizontal"  `/*[ ![â](/assets/icons/16-arrow-right.svg)*/ right ` , and ` end `
  - ` "vertical"  ` for ` to/*[ ![â](/assets/icons/16-arrow-right.svg)*/one  ` for 2-dimensional alignments 

self  .  axis  (

)

    
    
    #left.axis() \
    #bottom.a/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/2ES_RRnmxyOZdFWI/*![Preview](/assets/docs/eB9NAzu2xk-O1miffozwKQAAAAAAAAAA.png)*/erence/)*/v  (

)  -> [ alignment ](/docs/reference/l/*[ Layout ](/docs/reference/layout/)*/op.inv() \
    #left.inv() \
    #center.in/*[ Place ](/docs/reference/layout/place/)*/[Preview](/assets/docs/tBAxSGcUdyogNGn2l8Pm_QAAAAAAAAAA.png)

[ ![â](/assets/icons/16-arrow-right.svg) Align  Previous page
](/docs/reference/layout/align/) [ ![â](/assets/icons/16-arrow-right.svg)
Angle  Next page  ](/docs/reference/layout/angle/)



= *docs/reference/layout/skew.md*

  - [ ![D/*[ `
alignment ` ](/docs/reference/layout/place/#parameters-alignment)*/6-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Layout ](/docs/reference/layout/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Skew ](/docs/reference/layout/skew/)

=  ` skew ` E/*[ `
dx ` ](/docs/reference/layout/place/#parameters-dx)*/z/*[ ` dy `
](/docs/reference/layout/place/#parameters-dy)*/kews an element in horizontal and/or vertical direction. The layout will act
a/*[ ` block `
](/docs/reference/layout/block/ "`block`")*/*[ ` box `
](/docs/reference/layout/box/ "`box`")*/*[ ` rect `
](/docs/reference/visualize/rect/ "`rect`")*/.
    ]
    

![Preview](/assets/docs/FUtSyVs-Ma5rvUP8B0w5fQAAAAAAAAAA.png)

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in par/*[ ` alignment
` ](/docs/reference/layout/place/#parameters-alignment)*/ference/layout/angle/) ,  ay  :  [ angle
](/docs/reference/layout/angle/) ,  origin  :  [ alignment
](/docs/reference/layout/alignment/) ,  reflow  :  [ bool
](/docs/reference/foundations/bool/) ,  [ content
](/docs/refere/*[ ` page.foreground `
](/docs/reference/layout/page/#parameters-foreground)*//*[ ` page.background `
](/docs/reference/layout/page/#parameters-background)*/
Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The horizontal skewing angle.

Default: ` 0deg  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #skew(ax: 30deg)[Skewed]
    

![Previe/*[Preview](/assets/docs/b3Ue37sNl2HDpslyo5trfgAAAAAAAAAA.png)*/` ay `

[ angle ](/docs/reference/layout/angle/)

Settable

Question mark

Settable parameters can /*![](/assets/icons/16-arrow-right.svg)*/of the function
with a ` set ` rule.

The vertical skewing angle.

Default: ` 0deg  `/*![Preview](/assets/docs/dzJroqkPcQ8j1yD6nZSE0AAAAAAAAAAA.png)*/  
    #sk/*[ ` box ` ](/docs/reference/layout/box/ "`box`")*/ocs/DIs5kgGdkepXxpgHWt0vxAAAAAAAAAAA.png)

===  ` origin `

[ alignment ](/docs/reference/layout/alignment/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The origin of the skew transformation.

The origin will stay fixed during the operation.

Default: ` center  +  horizon `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    X #box(skew(ax: -30deg, origin: center + horizon)[X]) X \
    X #b/*![](/assets/icons/16-arrow-right.svg)*/sets/docs/QIJqPsAAp5jqe-EB4bZF1gAAAAAAAAAA.png)*/gin: top + right)[X]) X
    

![Preview](/assets/docs/2Hq4GFYS1tSqCnluz3jbcQAAAAAAAAAA.png)

===  ` reflow `

[ bool ](/docs/reference/foundations/bool/)

Settable

Question mark

Settable parameters can be customized for all following use/*[ auto ](/docs/reference/foundations/auto//*[ alignment
](/docs/reference/layout/alignment/)*/ut.

If se/*[ str
](/docs/reference/foundations/str/)*/ retain th/*[ bool
](/docs/reference/foundations/bool/)*/set to ` true /*[ length
](/docs/reference/layout/length/)*/ormatio/*[ relative
](/docs/reference/layout/relative/)*/ayout a/*[ relative
](/docs/reference/layout/relative/)*//*[ content
](/docs/reference/foundations/content/)*/
    H/*[ content ](/docs/reference/foundations/content/)*/ 

![Preview](/ass/*[ auto ](/docs/reference/foundations/auto/)*/n/*[ alignment
](/docs/reference/layout/alignment/)*/oundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The content to skew.

[ ![â](/assets/icons/16-arrow-right.svg) Scale  Previous page
](/docs/reference/layout/scale/) [ ![â](/assets/icons/16-arrow-right.svg)
Spacing (H)  Next page  ](/docs/reference/layout/h/)



= *docs/refere/*![â](/assets/icons/16-arrow-right.svg)*/s/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-ar/*![â](/assets/icons/16-arrow-
right.svg)*/ference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Layout ](/docs/reference/layout/)
/*![Docs](/assets/icons/16-docs-dark.svg)*/g)
  - [ B/*[ str ](/docs/reference/foundations/str/)*/ox ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

An inline-level container that sizes content.

All elements except inline math, text, and boxes are block-level and cannot
occur inside of a paragraph. The box function can be used to /*[ ` scope ` parameter
](/docs/reference/model/figure/#parameters-scope)*/contents by default
but can also be sized explicitly.

==  Example

    
    
    Refer to the docs
    #box/*[ create a single-column title section ](/docs/guides/page-setup-
guide/#columns)*/

![Preview](/assets/docs/eB9NAzu2xk-O1miffozwKQAAAAAAAAAA.p/*![](/assets/icons/16-arrow-right.svg)*/arameters are the inputs to a function. They are specifi/*![Preview](/assets/docs/GVDpvIL_te6KlSASD3i2EQAAAAAAAAAA.png)*/ [ auto ](/docs/reference/foundations/auto/) [ relative
](/docs/reference/layout/relative/) [ fraction
](/docs/reference/layout/fraction/) ,  height  :  [ auto
](/docs/reference/foundations/auto/) [ relative
](/docs/reference/layout/relative/) ,  baseline  :  [ relative
](/docs/reference/layout/relative/) ,  fill  :  [ none
](/docs/reference/foundations/none/) [ color
](/docs/reference/*[Preview](/assets/docs/9xhEXBaN2g3N9Vju7GUzFwAAAAAAAAAA.png)*/adient/) [ pat/*[ bool ](/docs/reference/foundations/bool/)*/,  stroke  :  [ none
](/docs/reference/found/*![](/assets/icons/16-arrow-right.svg)*/nce/layout/length/) [ color ](/docs/reference/visualize/color/)
[ gradient ](/docs/reference/visualize/gradient/) [ stroke
](/docs/reference/visualize/stroke/) [ patt/*![Preview](/assets/docs/68KQkm_HskMy1aDAbQWYdwAAAAAAAAAA.png)*/s/reference/foundations/dictionary/) ,  radius  :  [ relative
](/docs/reference/layout/*[ `
place.flush ` ](/docs/reference/layout/place/#definitions-flush
"`place.flush`")*/elative
](/docs/reference/layout/relative/) [ dictionary
](/docs/reference/foundations/dictionary/) ,  outset  :  [ relative
](/docs/reference/layout/relative/) [ dictionary
](/docs/reference/foundations/dicti/*![](/assets/icons/16-arrow-right.svg)*/ference/foundations/bool/) ,  [ none
](/docs/reference/foundations/none/) [ content
](/docs/reference/foundations/content/) ,

) /*[Preview](/assets/docs//*![Preview](/assets/docs/RAY1IirASCSdH0pM4209bwAAAAAAAAAA.png)*//t5SJ49ulSlCH5SgTOH20JAAAAAAAAAAB.png)*/ [ relative
](/doc/*[ length ](/docs/reference/layout/length/)*/on
](/docs/reference/layout/fraction/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The width of the box.

Boxes can have [ fractional ](/docs/reference/layout/fraction/) widths, as the
example below d/*[ relative ](/docs/reference/layout/relative/)*/d only their widths might be fractional/*![â](/assets/icons/16-arrow-right.svg)*/fractionally sized images, shapes, and
more might be added in the future.

Default: ` auto  `

![](/ass/*![Docs](/assets/icons/16-docs-dark.svg)*/ple

    
/*![](/assets/icons/16-arrow-right.svg)*/e(length: 100%)) between.
    

![Pre/*![](/assets/icons/16-arrow-right.svg)*/SE0AAAAAAAAAAA.png)

===  ` height `

[ a/*![](/assets/icons/16-arrow-right.svg)*/w](/assets/docs/kAqGzNrSyPcytdYDwTZgaQAAAAAAAAAA.png)*/e/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` r/*[ ` move `
](/docs/reference/layout/move/ "`move`")*/==  ` baseline `

[ /*[ relative ](/docs/reference/layout/relative/)*/Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

An amount to shift the box's baseline by.

Default: ` 0%  +  0pt  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    Image: #box(baseline: 40%, image("tige/*[ ` move `
](/docs/reference/layout/move/ "`move`")*//jNZmXcLZQWKojb5Yhz3uEQAAAAAAAAAA.png)

===  ` f/*[ content ](/docs/reference/foundations/content/)*/) or  [ color
](/docs/reference/visualize/color/) or  [ gradient
](/docs/reference/visualize/gradient/) or  [ pattern
](/docs/reference/visualize/pattern/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The box's background color. See the [ rectangle's documentation
](/docs/reference/visualize/rect/#parameters-fill) for more details.

Default: ` none  `

===  ` stroke `

[ none ](/docs/reference/foundations/none/) or  [ length
](/docs/reference/layout/length/) or  [ color
](/docs/reference/visualize/color/) or  [ gradient
](/docs/reference/visualize/grad/*[ content ](/docs/reference/foundations/content/)*/troke/) or  [ pattern
](/docs/reference/visualize/pattern/) or  [ dictionary
](/docs/reference/foundations/dictionary/)

Settable

Question mark

Settable parameters can be customized for all following uses of the f/*[Preview](/assets/docs/8qp5vfUImMtnXndzjQCsNQAAAAAAAAAA.png)/*[Preview](/assets/docs/8qp5vfUImMtnXndzjQCsNQAAAAAAAAAB.png)/*[ ![â](/assets/icons/16-arrow-right.svg)*/s.

Default: ` (  :  )  `

===  ` radius `

[ relative ](/do/*[ ![â](/assets/icons/16-arrow-
right.svg)*/nary
](/docs/refere/*![Preview](/assets/docs/b3Ue37sNl2HDpslyo5trfgAAAAAAAAAA.png)*/le paramet/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ses of the function
with a ` set ` rule.

How much t/*[ Reference ](/docs/reference/)*/the [ rectangle's documentation
](/docs/ref/*[ Layout ](/docs/reference/layout/)*/adius) for more details.

Default: ` (  :  /*[ Grid ](/docs/reference/layout/grid/)*/cs/reference/layout/relative/) or  [ dictionary
](/docs/reference/foundations/dictionary/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

How much to pad the box's content.

_Note:_ When the box contains text, its exact size depends on the current [
text edges ](/docs/reference/text/text/#parameters-top-edge) .

Default: ` (  :  )  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #rect(inset: 0pt)[Tight]
    

![Preview](/assets/docs/GVDpvIL_te6KlSASD3i2EQAAAAAAAAAA.png)

===  ` outset `

[/*[ ` table `
](/docs/reference/model/table/)*//) or  [ dictionary
](/docs/reference/foundations/dictionary/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

How much to expand the box's size without affecting the layout.

This is useful to prevent padding from affecting line layout. For a
generalized version of the example below, see the documentation for the [ raw
text's block parameter ](/docs/reference/text/raw/#parameters-block) .

Default: ` (  :  )  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    An inline
    #box(
      fill: luma(235),
      inset: (x: 3pt, y: 0pt),
      outset: (y: 3pt),
      radius: 2pt,
    )[rectangle].
    

![Preview](/assets/docs/68KQkm_HskMy1aDAbQWYdwAAAAAAAAAA.png)

===  ` clip `

[ bool ](/docs/reference/foundations/bool/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

Whether to clip the content inside the box.

Clipping is useful when the box's content is larger than the box itself, as
any content that exceeds the box's bounds will be hidden.

Default: ` false  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #box(
      width: 50pt,
      height: 50pt,
      clip: true,
      image("tiger.jpg", width: 100pt, height: 100pt)
    )
    

![Preview](/assets/docs/RAY1IirASCSdH0pM4209bwAAAAAAAAAA.png)

===  ` body `

[ none ](/docs/reference/foundations/none/) or  [ content
](/docs/reference/foundations/content/)

Positional

Question mark

Positional parameters are specified in order, without names.

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The con/*[ ` grid.cell `
](/docs/reference/layout/grid/#definitions-cell)*/-arrow-right.svg) Block  Previous page
](/docs/reference/layout/block/) [ ![â](/assets/icons/16-arrow-right.svg)
Column Break  Next page  ](/docs/reference/layout/colbreak/)



= *docs/reference/layout/place.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Layout ](/docs/reference/layout/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Place ](/docs/reference/layout/place/)

=  ` place ` Element/*[Preview](/assets/docs/nU6HFHUP8AJwyw_E8LwJrgAAAAAAAAAA.png)*/set ` and  /*[ spread ](/docs/reference/foundations/arguments/#spreading)*/tainer.

Placed content can be either overlaid (the default) or floating. Overlaid
content is aligned with the parent container according to the given [ `
alignm/*![](/assets/icons/16-arrow-right.svg)*/NDT0wWvWAggAAAAAAAAAA.png)*/ and shown
over any other content added so far in the container. Floating content is
placed at the top or bottom of the container,/*[ ` fill ` ](/docs/reference/layout/grid/#pa/*![Preview](/assets/docs/9xhEXBaN2g3N9Vju7GUzFwAAAAAAAAAA.png)*/` ](/docs/reference/layout/grid/#parameters-align)*/rameters-dx) and [ ` dy `
](/docs//*[ ` inset ` ](/docs/reference/layout/grid/#parameters-inset)*/ting the
layout.

The parent can be any container /*[ ` stroke ` ](/docs/reference/layout/grid/#parameters-stroke)*/") , [ ` box `
](/docs/reference/layout/box/ "`box`") , [ ` rect `
](/docs/reference/visualize/rect/ "`rect`") , etc. A top level ` place/*[ ` grid.cell ` ](/docs/reference/layout/grid/#definitions-cell)*/ent page. This can be
used for absolute positioning on the page:/*[ `
grid.hline ` ](/docs/reference/layout/grid/#definitions-hline)*/a/*[ `
grid.vline ` ](/docs/reference/layout/grid/#definitions-vline)*/ the position of the element's top left corner relatively
to the top left corner of the text area. For absolute positioning on the full
page including margins, you can use ` place ` in [ ` page.foreground `
](/docs/reference/layout//*[ `
grid.cell ` ](/docs/reference/layout/grid/#/*![Preview](/assets/docs/t5SJ49ulSlCH5SgTOH20JAAAAAAAAAAA.png/*![Preview](/assets/docs/t5SJ49ulSlCH5SgTOH20JAAAAAAAAAAB.png)*/    Hello, world!
    
    #rect(
      width: 100%,
      height: 2cm,
      place(horizon + right, square()),
    )
    
    #place(
      top + left,
      dx: -5pt,
      square(size: 5pt, fill: red),
    )
    

![Preview](/assets/docs/b3Ue37sNl2HDpslyo5trfgAAAAAAAAAA.png)

=/*[ ` grid  .
cell ` 's ` stroke ` field ](/docs/reference/layout/grid/#definitions-cell-
stroke)*/content,/*[ ` grid  .  hline `
](/docs/reference/layout/grid/#definitions-hline)*/f/*[ ` grid  .  vline `
](/docs/reference/layout/grid/#definitions-vline)*/avoid this, you c/*[ ` grid
` 's ` stroke ` field ](/docs/reference/layout/grid/#parameters-stroke)*/ when the
call is made in the middle of a paragraph. The alignment and offsets will then
be relative to this zero-size box. To make sure it doesn't interfere with
spacing, the box should be attached to a wor/*![Preview](/assets/docs/kAqGzNrSyPcytdYDwTZgaQAAAAAAAAAA.png)*/function for attaching an annotation to
the following word:

    
    
    #let annotate(..args) = {
      box(place(..args))
      sym.wj
      h(0pt, weak: true)
    }
    
    A plac/*[ auto ](/docs/reference/foundations/auto//*[ int
](/docs/reference/foundations/int//*[ relative
](/docs/reference/layout/relative//*[ fraction
](/docs/reference/layout/fraction//*[ array
](/docs/reference/foundations/array/)*/e next wo/*[ auto
](/docs/reference/foundations/auto//*[ int ](/docs/reference/foundations/int//*[ relative ](/docs/reference/layout/relative//*[ fraction
](/docs/reference/layout/fraction//*[ array
](/docs/reference/foundations/array/)*/s/reference/*[ auto
](/docs/reference/foundations/auto//*[ int ](/docs/reference/foundations/int//*[ relative ](/docs/reference/layout/relative//*[ fraction
](/docs/reference/layout/fraction//*[ array
](/docs/reference/foundations/array/)*/ive
](/docs/refere/*[ auto
](/docs/reference/foundations/auto//*[ int ](/docs/reference/foundations/int//*[ relative ](/docs/reference/layout/relative//*[ fraction
](/docs/reference/layout/fraction//*[ array
](/docs/reference/foundations/array/)*/`

[ auto ](/do/*[ auto
](/docs/reference/foundations/auto//*[ int ](/docs/reference/foundations/int//*[ relative ](/docs/reference/layout/relative//*[ fraction
](/docs/reference/layout/fraction//*[ array
](/docs/reference/foundations/array/)*/parameter/*[ none
](/docs/reference/foundations/none//*[ color
](/docs/reference/visualize/color//*[ gradient
](/docs/reference/visualize/gradient//*[ array
](/docs/reference/foundations/array//*[ pattern
](/docs/reference/visualize/pattern//*[ function
](/docs/refer/*![Preview](/assets/docs/8qp5vfUImMtnXndzjQCsNQAAAAAAAAAA.png/*![Preview](/assets/docs/8qp5vfUImMtnXndzjQCsNQAAAAAAAAAB.png)*//*![â](//*[ ` table.align `
](/docs/reference/model/table/#parameters-align)*/ocs/reference/foundations/func/*![â](/assets/*[ none ](/docs/reference/foundations/none/)*/one//*[ length
](/docs/reference/layout/length//*[ color ](/docs/reference/visualize/color//*[ gradient ](/docs/reference/visualize/gradient//*[ array
](/docs/reference/foundations/array//*[ stroke
](/docs/reference/visualize/stroke//*[ pattern
](/docs/reference/visualize/pattern//*[ dictionary
](/docs/reference/foundations/dictionary//*[ function
](/docs/reference/foundations/function/)*/](/docs/re/*[ relative
](/docs/reference/layout/relative//*[ array
](/docs/reference/foundations/array//*[ dictionary
](/docs/reference/foundations/dictionary//*[ function
](/docs/reference/foundations/function/)*/n ](/*[ content
](/docs/reference/foundations/content/)*/-colum/*[ content ](/docs/reference/foundations/content/)*/ currently only /*[ auto ](/docs/reference/foundations/auto/)*/m/*[ int
](/docs/reference/foundations/int/)*/a/*[ relative
](/docs/reference/layout/relative/)*/o/*[ fraction
](/docs/reference/layout/fraction/)*/a/*[ array
](/docs/reference/foundations/array/)*/t span over all columns.   
  
Default: ` "column"  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set page(height: 150pt, columns: 2)
    #place(
      top + center,
      scope: "parent",
      float: true,
      rect(width: 80%, fill: aqua),
    )
    
    #lorem(25)
    

![Preview](/assets/docs/9xhEXBaN2g3N9Vju7GUzFwAAAAAAAAAA.png)

===  ` float `

[ bool ](/docs/refer/*[ auto ](/docs/reference/foundations/auto/)*/ /*[ int
](/docs/reference/foundations/int/)*/e/*[ relative
](/docs/reference/layout/relative/)*/a/*[ fraction
](/docs/reference/layout/fraction/)*/ /*[ array
](/docs/reference/foundations/array/)*/ioned at the top or bottom of the parent container,
displacing in-flow content. They are always placed in the in-flow order
relative to each other, as well as before any content following a later [ `
place.flush ` ](/docs/reference/layout/place/#definitions-flush
"`place.flush`") el/*[ auto ](/docs/reference/foundations/auto/)*/o/*[ int
](/docs/reference/foundations/int/)*/
/*[ relative
](/docs/reference/layout/relative/)*/e/*[ fraction
](/docs/reference/layout/fraction/)*/ /*[ array
](/docs/reference/foundations/array/)*/rect(body),
    )
    
    #lorem(10)
    #note(bottom)[Bottom 1]
    #note(bottom)[Bottom 2]
    #lorem(40)
    #note(top)[Top]
    #lorem(10)
    

![Preview](/assets/docs/t5SJ49ulSlCH5SgTOH20JAAAAAAAAAAA.png)
![Preview](/assets/docs/t5SJ49ulSlCH5SgTOH20JAAAAAAAAAAB.png)

===  ` clearance `

[ length ](/docs/reference/layout/length/)

Settable

Question mark/*[ auto ](/docs/reference/foundations/auto/)*/ /*[ int
](/docs/reference/foundations/int/)*/ /*[ relative
](/docs/reference/layout/relative/)*/e/*[ fraction
](/docs/reference/layout/fraction/)*/./*[ array
](/docs/reference/foundations/array/)*/
Default: ` 1.5em  `

===  ` dx `

[ relative ](/docs/reference/layout/relative/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with /*[ auto ](/docs/reference/foundations/auto/)*/t/*[ int
](/docs/reference/foundations/int/)*/ /*[ relative
](/docs/reference/layout/relative/)*/ /*[ fraction
](/docs/reference/layout/fraction/)*/1/*[ array
](/docs/reference/foundations/array/)*/unt = i * 4pt
      place(center, dx: amount - 32pt, dy: amount)[A]
    }
    

![Preview](/assets/docs/kAqGzNrSyPcytdYDwTZgaQAAAAAAAAAA.png)

This does not affect the layout of in-/*[ none ](/docs/reference/foundations/none/)*/n/*[ color
](/docs/reference/visualize/color/)*/[/*[ gradient
](/docs/reference/visualize/gradient/)*/)/*[ array
](/docs/reference/foundations/array/)*/f/*[ pattern
](/docs/reference/visualize/pattern/)*/r/*[ function
](/docs/reference/foundations/function/)*/llowing uses of the function
with a ` set ` rule.

Th/*![Preview](/assets/docs/qtEXI9WWslJNDT0wWvWAggAAAAAAA/*[
` grid.hline ` ](/docs/reference/layout/grid/#definitions-hline)*/laced
content is treated as if it were wrapped in a [ ` move `
](/docs/reference/layout/move/ "`move`") element.

Default: ` 0%  +  0pt  `

===  ` body `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The content to place.

==  Definitions

Question mark

Functions and types and can have associated definitions. These are accessed by
specifying the function or type, followed by a period, and then the
definitio/*[Preview](/assets/docs/YWpStHlSHlCZTmUmBJs9XQAAAAAAAAAA.png)*/nctions can be/*[ auto ](/docs/reference/foundations/auto/)*/s/*[ array
](/docs/reference/foundations/array/)*/ /*[ alignment
](/docs/reference/layout/alignment/)*/t/*[ function
](/docs/reference/foundations/function/)*/s from spilling into the next
section.

place  .  flush  (

)  -> [ content ](/docs/reference/foundations/content/)

    
    
    #lorem(15)
    
    #figure(
      rect(width: 100%, height: 50pt),
      placement: auto,
      caption: [A rectangle],
    )
    
    #place.flush()
    
    This text appears after the figure.
    

![Preview](/assets/docs/8qp5vfUImMtnXndzjQCsNQAAAAAAAAAA.png)
![Preview](/assets/docs/8qp5vfUImMtnXndzjQCsNQAAAAAAAAAB.png)

[ ![â](//*[ ` table.align `
](/docs/reference/model/table/#parameters-align)*//reference/layout/pagebreak/) [ ![â](/assets/*[ none ](/docs/reference/foundations/none/)*/e/*[ length
](/docs/reference/layout/length/)*/o/*[ color
](/docs/reference/visualize/color/)*/(/*[ gradient
](/docs/reference/visualize/gradient/)*///*[ array
](/docs/reference/foundations/array/)*/n/*[ stroke
](/docs/reference/visualize/stroke/)*/1/*[ pattern
](/docs/reference/visualize/pattern/)*/c/*[ dictionary
](/docs/reference/foundations/dictionary/)*/-/*[ function
](/docs/reference/foundations/function/)*/` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

Arranges content in a grid.

The/*[ stroke ](/docs/reference/visualize/stroke/)*/n a grid. You can define the
number of rows and columns, as well as the size of the gutters between them.
There are multiple sizing modes for columns and rows that can be used to
create complex layouts.

While the grid and table elements work very similarly, they are intended for
different use cases and carry d/*[ ` grid.hline `
](/docs/reference/layout/grid/#definitions-hline)*/l/*[ ` grid.vline `
](/docs/reference/layout/grid/#definitions-vline)*/l/table/) element is intended for, in broad terms,
presenting multiple related data points. In the future, Typst will annotate
its output such that screenreaders will announce content in ` table ` as
tabular while a grid's content will be announced no different than multiple
content blocks in the document flow. Set and show rules on one of these
elements do not affect the other.

A grid's sizing is determined by the track sizes specified in the arguments.
Because each of the sizing parameters accepts the same values, we will explain
them just once, here. Each sizing argument accepts an array of individual
track sizes. A track size is either:

  - ` auto  ` : The track will be sized to fit its contents. It will be at most as large as the remaining space. If there is more than one ` auto  ` track width, and together they claim more than the available space, the ` auto  ` tracks will fairly distribute the available space among themselves. 

  - A fixed or relative length (e.g. ` 10pt  ` or ` 20%  -  1cm  ` ): The track will be exactly of this size. 

  - A fractional length (e.g. ` 1fr  ` ): Once all other tracks have been sized, the remaining space will be divided among the fractional tracks according to their fractions. For example, if there are two fractional tracks, each with a fraction of ` 1fr  ` , they will each take up half of the remaining space. 

To specify a single track, the array can be omitted in favor of a single
value. To specify multiple ` auto  ` tracks, enter the number of tracks
instead of an array. For example, ` columns: ` ` 3  ` is equivalent to `
columns: ` ` (  auto  ,  auto  ,  auto  )  ` .

==  Examples

The example below demonstrates the different track sizing options. It also
shows how you can use /*[Preview](/assets/docs/5kfvlcbAPUFkWJtXr3FdMgAAAAAAAAAA.png)/*[Preview](/assets/docs/5kfvlcbAPUFkWJtXr3FdMgAAAAAAAAAB.png)*/ 
    
    // /*[ relative ](/docs/reference/layout/relative/)*/c/*[ array
](/docs/reference/foundations/array/)*/f/*[ dictionary
](/docs/reference/foundations/dictionary/)*/g/*[ function
](/docs/reference/foundations/function/)*/auto, 60pt),
      gutter: 3pt,
      rect[Fixed width, auto height],
      rect[1/3 of the remains],
      rect[2/3 of the remains],
      rect(height: 100%)[Fixed height],
      grid.cell(
        colspan: /*[ ` table.inset `
](/docs/reference/model/table/#parameters-inset)*/[Preview](/assets/docs/nU6HFHUP8AJwyw_E8LwJrgAAAAAA/*[ content ](/docs/reference/foundations/content/)*/e/foundations/arguments/#spreading) an
array of strings or content into a grid to populate its cells.

    
    
    #grid(
      columns: 5,
      gutter: 5pt,
      ..range(25).map(str)
    )
    

![Preview](/assets/docs/qtEXI9WWslJNDT0wWvWAggAAAAAAA/*[
` grid.hline ` ](/docs/reference/layout/grid/#definitions-hline)*/m/*[ `
grid.vline ` ](/docs/reference/layout/grid/#definitions-vline)*/es:

  - [ ` fill ` ](/docs/reference/layout/grid/#parameters-fill) to give all cells a background 
  - [ ` align ` ](/docs/reference/layout/grid/#parameters-align) to change how cells are aligned 
  - [ ` inset ` ](/docs/reference/layout/grid/#parameters-inset) to optionally add internal padding to each cell 
  - [ ` stroke ` ](/docs/reference/layout/grid/#parameters-stroke) to optionally enable grid lines with a certain stroke 

If you need to override one of the above options for a single cell, you can
use the [ ` grid.cell ` ](/docs/reference/layout/grid/#definitions-cell)
element. Likewise, you can override individual grid lines with the [ `
grid.hline ` ](/docs/reference/layout/grid/#definitions-hline) and [ `
gr/*[ content ](/docs/reference/foundations/content/)*/ions-v/*[ auto
](/docs/reference/foundations/auto//*[ int ](/docs/reference/foundations/int/)*/ cell'/*[ auto ](/docs/reference/foundations/auto//*[ int
](/docs/reference/foundations/int/)*/of the form /*[ int
](/docs/reference/foundations/int/)*/ use a show /*[ int
](/docs/reference/foundations/int/)*//layout/g/*[ none
](/docs/reference/foundations/none//*[ auto
](/docs/reference/foundations/auto//*[ color
](/docs/reference/visualize/color//*[ gradient
](/docs/reference/visualize/gradient//*[ pattern
](/docs/reference/visualize/pattern/)*/s clean an/*[ auto
](/docs/reference/foundations/auto//*[ alignment
](/docs/reference/layout/alignment/)*/
===  Stro/*[ auto
](/docs/reference/foundations/auto//*[ relative
](/docs/reference/layout/relative//*[ dictionary
](/docs/reference/foundations/dictionary/)*/ence/layout/*[ none
](/docs/reference/foundations/none//*[ length
](/docs/reference/layout/length//*[ color ](/docs/reference/visualize/color//*[ gradient ](/docs/reference/visualize/gradient//*[ stroke
](/docs/reference/visualize/stroke//*[ pattern
](/docs/reference/visualize/pattern//*[ dictionary
](/docs/reference/foundations/dictionary/)*/ of these sett/*[ auto
](/docs/reference/foundations/auto//*[ bool
](/docs/reference/foundations/bool/)*/t prec/*[ content ](/docs/reference/foundations/content/)*/nally the ` grid ` settings.

Furthermore, strokes of a repeated grid header or footer will take precedence
over regular cell strokes.

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

grid  (

columns  :  [ auto ](/docs/reference/foundations/auto/) [ int
](/docs/reference/foundations/int/) [ relative
](/docs/reference/layout/relative/) [ fraction
](/docs/reference/layout/fraction/) [ array
](/docs/reference/foundations/array/) ,  rows  :  [ auto
](/docs/reference/foundations/auto/) [ int ](/docs/reference/foundations/int/)
[ relative ](/docs/reference/layout/relative/) [ fraction
](/docs/reference/layout/fraction/) [ array
](/docs/reference/foundations/arr/*[Preview](/assets/docs/hagMogxzgYo1z-9CqYbmiQAAAAAAAAAA.png)*//) [ int ](/docs/reference/foundations/int/)
[ relative ](/docs/reference/layout/relative/) [ fr/*![](/assets/icons/16-arrow-right.svg)*/ion/) [ array
](/docs/reference/foundations/a/*[ ` table.cell `
](/docs/reference/model/table/#definitions-cell)*/auto/) [ int ](/docs/reference/foundations/int/)/*[ content ](/docs/reference/foundations/content/)*/ fraction
](/docs/reference/layout/fraction/) [ array
](/docs/reference/foundations/arra/*![Preview](/assets/docs/YWpStHlSHlCZTmUmBJs9XQAAAAAAAAAA.png)*/rence/foundations/auto/)*/e/*[ int
](/docs/reference/foundations/int/)*/s/reference/layout/relative/) [ fraction
](/docs/reference/layout/fraction/) [ array
](/docs/reference/foundations/array/) ,  fill  :  [ none
](/docs/reference/foundations/none/) [ color
](/docs/reference/visualize/color/) [ gradient
](/docs/reference/visualize/gradient/) [ array
](/docs/reference/foundations/array/) [ pattern
](/docs/reference/visualize/pattern/) [ function
](/docs/reference/foundations/function/) ,  align  :  [ auto
](/docs/reference/foundations/auto/) [ array
](/docs/reference/foundations/array/) [ alignment
](/docs/reference/layout/alignment/) [ function
](/docs/reference/foundations/function/) ,  stroke  :  [ none
](/docs/reference/foundations/none/) [ length
](/docs/reference/layout/length/) [ color ](/docs/reference/visualize/color/)
[ gradient ](/docs/reference/visualize/gradient/) [ array
](/docs/reference/foundations/array/) [ stroke
](/docs/reference/visualize/stroke/) [ pattern
](/docs/reference/visualize/pattern/) [ dictionary
](/docs/reference/foundations/dictionary/) [ function
](/docs/reference/foundations/function/) ,  inset  :  [ relative
](/docs/reference/layo/*[Preview](/assets/docs/1ClWJM7tWFhsIyNZJlD1owAAAAAAAAAA.png)*/[ dictionar/*[ auto ](/docs/reference/foundations/auto/)*/)/*[ int
](/docs/reference/foundations/int/)*//function/) ,  ..  [ content
](/docs/reference/foundations/content/) ,

)  -> [ content ](/docs/reference/foundations/content/)

===  ` columns `

[ auto ](/docs/reference/foundations/auto/) or  [ int
](/docs/reference/foundations/int/) or  [ relative
](/docs/reference/layout/relative/) or  [ fraction
](/docs/reference/layout/fraction/) or  [ array
](/docs/reference/foundations/array/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The column sizes.

Either specify a track size array or provide an integer to create a grid with
that many ` auto  ` -sized columns. Note that opposed to/*![](/assets/icons/16-arrow-right.svg)*/ track size will only ever create a single column.

Default: ` (  )  `

===  ` rows `

[ auto ](/docs/reference/foundations/auto/) or  [ int
](/docs/reference/foundations/int/) or  [ relati/*[Preview](/assets/docs/KqESjHcjVY-CskMVImXGSAAAAAAAAAAA.png)*/s/reference/layou/*[ int ](/docs/reference/foundations/int/)*/e/foundations/array/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The row sizes.

If there are more cells than fit the def/*[ int ](/docs/reference/foundations/int/)*/ there are no more cells.

Default: ` (  )  `

===  ` gutter `

[ auto ](/docs/reference/foundations/auto/) or  [ int
](/docs/reference/foundations/int/) or  [ relative
](/docs/reference/layout/rel/*[ none ](/docs/reference/foundations/none/)*/y/*[ auto
](/docs/reference/foundations/auto/)*/e/*[ color
](/docs/reference/visualize/color/)*/r/*[ gradient
](/docs/reference/visualize/gradient/)*/f/*[ pattern
](/docs/reference/visualize/pattern/)*/le.

The gaps between rows and columns.

If there are more gutters than defined sizes, the last gutter is repeated.

This is a shorth/*[ fill ](/docs/reference/layout/grid/#parameters-fill)*/ same
value.

Default: ` (  )  `

===  ` colu/*[ auto ](/docs/reference/foundations/auto/)*/a/*[ alignment
](/docs/reference/layout/alignment/)*/ions/int/) or  [ relative
](/docs/reference/layout/relative/) or  [ fraction
](/docs/reference/layout/fraction/) or  [ array
](/docs//*[ alignment ](/docs/reference/layout/grid/#parameters-align)*/able parameters can be customized for all fol/*[ auto ](/docs/reference/foundations/auto/)*/r/*[ relative
](/docs/reference/layout/relative/)*/ /*[ dictionary
](//*![Preview](/assets/docs/5kfvlcbAPUFkWJtXr3FdMgAAAAAAAAAA.png/*![Preview](/assets/docs/5kfvlcbAPUFkWJtXr3FdMgAAAAAAAAAB.png)*/(/docs/reference/layout/relative/) or  [ fraction
](/do/*[ inset ](/docs/reference/layout/grid/#parameters-inset)*/ence/foundations/array/)

Settable

Question m/*[ none ](/docs/reference/foundations/none/)*/f/*[ length
](/docs/reference/layout/length/)*/ /*[ color
](/docs/reference/visualize/color/)*/f/*[ gradient
](/docs/reference/visualize/gradient/)*/f/*[ stroke
](/docs/reference/visualize/stroke/)*///*[ pattern
](/docs/reference/visualize/pattern/)*/o/*[ dictionary
](/docs/reference/foundations/dictionary/)*/eference/foundations/array/) or  [ pattern
](/docs/reference/visualize/pattern/) or  [ function
](/docs/reference/foundations/functio/*[ stroke ](/docs/reference/layout/grid/#parameters-stroke)*/ustomized for all following uses of the function
wit/*[ auto ](/docs/reference/foundations/auto/)*/T/*[ bool
](/docs/reference/foundations/bool/)*/ns a color. The function receives
the cells' column and row indices, starting from zero. This can be used to
implement striped grids.

Default: ` none  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #grid(
      fill: (x, y) =>
        if calc.even(x + y) { luma(230) }
        else { white },
      align: center + horizon,
      columns: 4,
      inset: 2pt,
      [X], [O], [X], [O],
      [O], [X], [O], [X],
      [X], [O], [X], [O],
      [O], [X], [O], [X],
    )
    

![Preview](/assets/docs/YWpStHlSHlCZTmUmBJs9XQAAAAAAAAAA.png)

===  ` align `

[ auto ](/docs/reference/foundations/auto/) or  [ array
](/docs/reference/foundations/array/) or  [ alignment
](/docs/reference/layout/alignment/) or  [ f/*[ ` table.hline `
](/docs/reference/model/table/#definitions-hline)*/n mark

Settable parameters can /*[ auto ](/docs/reference/foundations/auto//*[ int
](/docs/reference/foundations/int/)*/ align the/*[ int
](/docs/reference/foundations/int/)*/ngle ali/*[ none
](/docs/reference/foundations/none//*[ int ](/docs/reference/foundations/int/)*/returns an /*[ none ](/docs/reference/foundations/none//*[ length
](/docs/reference/layout/length//*[ color ](/docs/reference/visualize/color//*[ gradient ](/docs/reference/visualize/gradient//*[ stroke
](/docs/reference/visualize/stroke//*[ pattern
](/docs/reference/visualize/pattern//*[ dictionary
](/docs/reference/foundations/dictionary/)*/ none ](/docs/*[ alignment
](/docs/reference/layout/alignment/)*/cs/ref/*[ content ](/docs/reference/foundations/content/)*/nce/visuali/*[ auto ](/docs/reference/foundations/auto/)*///*[ int
](/docs/reference/foundations/int/)*/reference/foundations/array/) or  [ stroke
](/docs/reference/visualize/stroke/) or  [ pattern
](/docs/reference/visualize/pattern/) or  [ dictionary
](/docs/reference/foundations/dictionary/) or  [ function
](/docs/reference/foundations/function/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

How to [ stroke ](/docs/reference/visualize/stroke/) the cells.

Grids have no strokes by default, which can be changed by setting this option
to the desired stroke.

If it is necessary to place lines which can cross spacing between cells
produced by the ` gutter ` option, or to override the stroke between multiple
specific cells, consider specifying one or more of [ ` grid.hline `
](/docs/reference/layout/grid/#definitions-hline) and [ ` grid.vline `
](/docs/reference/layout//*[ int ](/docs/reference/foundations/int/)*/rid cells.

Default: ` (  :  )  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set page(height: 13em, width: 26em)
    
    #let cv(..jobs) = grid(
        columns: 2,
        inset: 5pt,
        stroke: (x/*[ none ](/docs/reference/foundations/none/)*/g/*[ int
](/docs/reference/foundations/int/)*/       thickness: 1.5pt,
            dash: "dotted"
          ))
        },
        grid.header(grid.cell(colspan: 2)[
          *Professional Experience*
          #box(width: 1fr, line(length: 100%, stroke: luma(180)))
        ]),/*![Preview](/assets/docs/hagMogxzgYo1z-9CqYbmiQAAAAAAAAAA.png)*/obs.pos() {
            (
              if job.year != last [*#job.year*],
              [
                *#job.company* - #job.role _(#job.tim/*[ none ](/docs/reference/foundations/none/)*/ /*[ length
](/docs/reference/layout/length/)*/ /*[ color
](/docs/reference/visualize/color/)*/ /*[ gradient
](/docs/reference/visualize/gradient/)*/ /*[ stroke
](/docs/reference/visualize/stroke/)*/l/*[ pattern
](/docs/reference/visualize/pattern/)*/ /*[ dictionary
](/docs/reference/foundations/dictionary/)*/rs from 3x to 10x
            - Did a great job
          ],
        ),
        (
          year: 2012,
          company: [Mega Corp.],
          role: [VP of Sales],
          timeframe: [Mar - Jun],
          details: [- Closed tons of customers],
        ),
        (
          year: 2013,
          company: [Tiny C/*[ alignment ](/docs/reference/layout/alignment/)*/ [Jan - Dec],
          details: [- Delivered 4x more shareholder value],
        ),
        (
          year: 2014,
          company: [Glorbocorp Ltd],
          role: [CTO],
          timeframe: [Jan - Mar],
          details: [- Drove containerization forward],
        ),
      )
    

![Preview](/assets/docs/5kfvlcbAPUFkWJtXr3FdMgAAAAAAAAAA.png)
![Preview](/assets/docs/5kfvlcbAPUFkWJtXr3FdMgAAAAAAAAAB.png)

===  ` inset `

[ relative ](/docs/reference/layout/relative/) or  [ array
](/docs/reference/foundations/array/) or  [ dictionary
](/docs/reference/foundations/dictionary/) or  [ function
](/docs/reference/foundations/function/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

How much to pad the cells' content.

You can find an example for/*![Preview](/assets/docs/1ClW/*[ ` grid.header ` ](/docs/reference/layout/grid/#definitions-
header)*//*[ int
](/docs/reference/foundations/int/)*/ren `

[ c/*[ int
](/docs/reference/foundations/int/)*/ent/)

R/*[ none
](/docs/reference/foundations/none//*[ int ](/docs/reference/foundations/int/)*/ without na/*[ none ](/docs/reference/foundations/none//*[ length
](/docs/reference/layout/length//*[ color ](/docs/reference/visualize/color//*[ gradient ](/docs/reference/visualize/gradient//*[ stroke
](/docs/reference/visualize/stroke//*[ pattern
](/docs/reference/visualize/pattern//*[ dictionary
](/docs/reference/foundations/dictionary/)*/ts.

The cell/*[ alignment
](/docs/reference/layout/alignment/)*/ions

/*[ content ](/docs/reference/foundations/content/)*/ssociated d/*[ auto ](/docs/reference/foundations/auto/)*/g/*[ int
](/docs/reference/foundations/int/)*/od, and then the
definition's name.

===  ` cell ` Element

Question mark

Element function/*![â](/assets/icons/16-arrow-right.svg)*/show ` rules.

A cell in the grid. You can use this functio/*![â](/assets/icons/16-arrow-right.svg)*/ride grid style properties for an individual cell or manually
positioning it within the gri/*![Docs](/assets/icons/16-docs-dark.svg)*/ow rules
to apply certain styles to multiple cells at once.

For example, you can override the position and stroke for a single cell:

grid  .  cell  (

[ content ](/docs/reference/foundations/content/) ,  x  :  [ auto
](/docs/reference/foundations/auto/) [ int ](/docs/reference/foundations/int/)
,  y  :  [ auto ](/docs/reference/foundations/auto/) [ int
](/docs/reference/foundations/int/) ,  colspan  :  [ int
](/docs/reference/foundations/int/) ,  rowspan  :  [ int
](/docs/reference/foundation/*![â](/assets/icons/16-arrow-right.svg)*/ence/foundations/none/) [ aut/*[ int ](/docs/referenc/*![â](/assets/icons/16-arrow-right.svg)*/ence/visualize/color/) [ gradient
](/docs/reference/visualize/gradient/) [ pattern
](/docs/reference/visuali/*![Docs](/assets/icons/16-docs-dark.svg)*/s/reference/foundations/auto/) [ alignment
](/docs/referen/*[ none ](/docs/reference/foundations/none/)*/(/*[ int
](/docs/reference/foundations/int/)*/tive
](/docs/reference/layout/relative/) [ dictionary
](/docs/reference/foundations/dictionary/) ,  stroke  :  [ none
](/docs/reference/foundations/none/) [ length
](/docs/reference/layout/length/) [ color ](/docs/reference/visualize/color/)
[ gradient ](/docs/reference/visualize/gradient/) [ stroke
](/docs/reference/visualize/stroke/) [ pattern
](/docs/reference/visualize/pattern/) [ dictionary
](/docs/reference/foundations/d/*[ none ](/docs/reference/foundations/none/)*///*[ length
](/docs/reference/layout/length/)*/s/*[ color
](/docs/reference/visualize/color/)*/n/*[ gradient
](/docs/reference/visualize/gradient/)*/ /*[ stroke
](/docs/reference/visualize/stroke/)*/m/*[ pattern
](/docs/reference/visualize/pattern/)*/e/*[ dictionary
](/docs/reference/foundations/dictionary/)*/et text(fill: rgb("111015"))
    
    #grid(
      fill: (x, y) => rgb(
        if calc.odd(x + y) { "7F8396" }
        else { "EFF0F3" }
      ),
      columns: (1em,) * 8,
      rows: 1em,
      align: center + horizon,
    
      [â], [â], [â], [â], [â], [â], [â], [â],
      [â], [â], [â], [â/*[ alignment ](/docs/reference/layout/alignment/)*/      x: 4, y: 3,
        stroke: blue.transparentize(60%)
      )[â],
    
      ..(grid.cell(y: 6)[â],) * 8,
      ..([â], [â], [â], [â], [â], [â], [â], [â])
        .map(grid.cell.with(y: 7)),
    )
    

![Preview](/assets/docs/hagMogxzgYo1z-9CqYbmiQAAAAAAAAAA.png)

You may also apply a show rule on ` grid.cell ` to style all cells at once,
which allows you, for example, to apply styles based on a cell's position.
Refer to the examples of the [ ` table.cell `
](/docs/reference/model/table/#definitions-cell) element to learn more about
this.

====  ` body `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The cell's body.

====  ` x `

[ auto ](/docs/reference/foundations/auto/) or  [ int
](/docs/reference/foundations/int/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a /*[ ` table.header `
](/docs/reference/model/table/#definitions-header)*/ed in show ru/*[ `
grid.stroke ` ](/docs/reference/layout/grid/#parameters-stroke)*/ field to pick in which column the cell /*[ bool ](/docs/reference/foundations/bool/)*/en, /*[ content
](/docs/reference/foundations/content/)*/g at r/*[ content ](/docs/reference/foundations/content/)*/ none). If both
/*[ bool ](/docs/reference/foundations/bool/)*/ll will be placed in that exact
position. An error is raised if that position is not available (thus, it is
usually wise to specify cells with a custom position before cells with
automatic positions).

Default: ` aut/*[ content ](/docs/reference/foundations/content/)*/example

    
    
    #let circ(c) = circle(
        fill: c, width: 5mm
    )
    
    #grid(
      columns: 4,
      rows: 7mm,
      stroke: .5pt + blue,
      align: center + horizon,
      inset: 1mm,
    
      grid.cell(x: 2, y: 2, circ(aqua)),
      circ(yellow),
      grid.cell(x: 3, circ(green)),
      circ(black),
    )
    

![Preview](/assets/docs/1ClW/*[ ` grid.header ` ](/docs/reference/layout/grid/#definitions-
header)*/nce/foundations/auto/) or  [ int
](/docs/reference/foundations/int/)

Settable

Question mark

Settable parameters can be customized for all followi/*[ bool ](/docs/reference/foundations/bool/)*/.

T/*[ content
](/docs/reference/foundations/content/)*/sed in/*[ content ](/docs/reference/foundations/content/)*/

You may overri/*[ bool ](/docs/reference/found/*![â](/assets/icons/16-arrow-right.svg)*/lumn ( ` x ` ) is chosen, the cell will be placed in the first column
(starting at column /*![Docs](/assets/icons/16-docs-dark.svg)*/columns in the
chosen row are already occupied, an error is ra/*[ content ](/docs/reference/foundations/content/)*/rrow-right.svg) View example

    
    
    #let tri(c) = polygon.regular(
      fill: c,
      size: 5mm,
      vertices: 3,
    )
    
    #grid(
      columns: 2,
      stroke: blue,
      inset: 1mm,
    
      t/*[ ![â](/assets/icons/16-arrow-right.svg)*/),
      grid.cell(y: 1, tri(red)),
      grid.cell(y: 2,/*[ ![â](/assets/icons/16-arrow-right.svg)*/ts/docs/KqESjHcjVY-CskMVImXGSAAAAAAAAAAA.png)

====  ` colspan `

[ int ](/docs/reference/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/rk

Settable parameters can be customized for all fo/*[ Reference ](/docs/reference/)*/th a ` set ` rule.

The amount of columns s/*[ Layout ](/docs/reference/layout/)*/ `

====  ` rowspan `

[ int ](/docs/refere/*[ Ratio ](/docs/reference/layout/ratio/)*/n mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The amount of rows spanned by this cell.

Default: ` 1  `

====  ` fill /*[Preview](/assets/docs/xEgSJZQe3kQz-XQhwaSthwAAAAAAAAAA.png)/*[ ![â](/assets/icons/16-arrow-right.svg)*/ color
](/docs/reference/visualize/color/) or  [ gr/*[ ![â](/assets/icons/16-arrow-right.svg)*/t/) or  [ pattern
](/docs/reference/visualize/pattern/)

Settable

Question mark

Settable parameters can /*[ ![Docs](/assets/icons/16-docs-dark.svg)*/he function
with a ` set ` rule.

The cell's [ fill /*[ Reference ](/docs/reference/)*/parameters-fill) override.

Default: ` auto/*[ Layout ](/docs/reference/layout/)*/s/reference/foundations/auto/) or  [ alignm/*[ Measure ](/docs/reference/layout/measure/)*/ttable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The cell's [ alignment ](/docs/reference/layout/grid/#parameters-align)
override.

Default: ` auto  `

====  ` inset `

[ auto ](/docs/reference/foundations/auto/) or  [ relative
](/docs/reference/layout/relative/) or  [ dictionary
](/docs/reference/foundations/dictionary/)

Settable

Question mark

Settable paramet/*[ ` layout `
](/docs/reference/layout/layout/ "`layout`")*/ion
with a ` set ` rule.

The cell's [ inset ](/docs/reference/layout/gri/*[ context
](/docs/reference/context/ "context")*/  `

====  ` stroke `

[ none ](/docs/reference/foundations/none/) or  [ length
](/docs/reference/layout/length/) or  [ color
](/docs/reference/visualize/color/) or  [ gradient
](/docs/reference/visualize/gr/*[Preview](/assets/docs/AhP31noWwrcSQXbwnmO-hwAAAAAAAAAA.png)*/r  [ pattern
](/docs/reference/visualize/pattern/) or  [ dictionary
](/docs/reference/foundations/dictionary/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule./*[Preview](/assets/docs/-y6AuN3J3rl7Gz1x_VRjjwAAAAAAAAAA.png)*/ers-stroke)
override.

Default: ` (  :  )  `

====  ` breakable `

[ auto ](/docs/reference/found/*[ ` length ` ](/docs/reference/layout/length/
"`length`")*/ol/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

Whether rows spanned by /*[ auto ](/docs/reference/foundations/auto//*[ length
](/docs/reference/layout/length/)*/ing only fi/*[ auto
](/docs/reference/foundations/auto//*[ length
](/docs/reference/layout/length/)*//*[ content
](/docs/reference/foundations/content/)*//*[ none
](/docs/reference/foundations/none/)*/ons can be cus/*[ dictionary ](/docs/reference/foundations/dictionary/)*/ line in the g/*[ auto ](/docs/reference/foundations/auto/)*/i/*[ length
](/docs/reference/layout/length/)*/troke ` field. Can cross spacing between cells created through the grid's `
column-gutter ` option.

An example for this function can be found at the [ ` table.hline `
](/docs/reference/model/table/#definitions-hli/*[ ` block ` ](/docs/reference/layout/block/
"`block`")*/reference/foundations/auto/) [ int
](/docs/reference/foundations/int/) ,  start  :  [ int
](/docs/reference/foundations/int/) ,  end  :  [ none
](/docs/reference/foundations/none/) [ int ](/docs/reference/foundations/int/)
,  stroke  :  [ none ](/docs/reference/foundations/none/) [ length
](/docs/reference/layout/length/) [ color ](/docs/*[Preview](/assets/docs/kGPOcZfxzWEfqWzKQCJaFgAAAAAAAAAA.png)*/sualize/gradien/*[ auto ](/docs/reference/foundations/auto/)*/r/*[ length
](/docs/reference/layout/length/)*/e/pattern/) [ dictionary
](/docs/reference/foundations/dictionary/) ,  position  :  [ alignment
](/docs/reference/layout/alignment/) ,

)  -> [ c/*[ content ](/docs/reference/foundations/content/)*/===  ` y `

[ auto ](/docs/reference/foundations/auto/) or  [ int
](/docs/reference/foundations/int/)

Settable

Question mark

Settable parameters ca/*[ none ](/docs/reference/foundations/none/)*/he function
with a ` set ` rule.

The row above which the horizontal line is placed (zero-indexed). If the `
position ` field is set to ` bottom ` , the line is placed below the row with
the given index instead (see that field's docs for details).

Specif/*[ ![â](/assets/icons/16-arrow-right.svg)*/d at the row below the last
automatically positioned /*[ ![â](/assets/icons/16-arrow-right.svg)*/rrides)
before the line among the grid's children. If there is no such cell before the
l/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/(row 0). Note that specifying for
this option exactl/*[ Reference ](/docs/reference/)*/he grid causes this
horizontal line to over/*[ Layout ](/docs/reference/layout/)*/ while a value of 0
overrides the top borde/*[ Page ](/docs/reference/layout/page/)*/`

[ int ](/docs/reference/foundations/int/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The column at which the horizontal line starts (zero-indexed, inclusive).

Default: ` 0  `

====  ` end `

[ none ](/docs/reference/foundations/none/) or  [ int
](/docs/reference/foundations/int/)

Settable

Question mark

Settable parameters can be customized for all following uses of the fun/*[ Guide for Page Setup ](/docs/guides/page-setup-guide/)*/horizontal line ends (zero-indexed, exclusive).
Therefore, the horizontal line will be drawn up to and across column ` end - 1
` .

A value equal to ` none  ` or to the amount of/*[Preview](/assets/docs/Gsn3vxGfYJJE0DFa5w6toQAAAAAAAAAA.png)*/the grid.

Default: ` none  `

====  ` stroke `

[ none ](/docs/reference/foundations/none/) or  [ length
](/docs/reference/layout/length/) or  [ col/*[ str ](/docs/reference/foundations/str/)*/  [ gradie/*[ auto
](/docs/reference/foundations/auto//*[ length
](/docs/reference/layout/length/)*//stroke/) o/*[ auto
](/docs/reference/foundations/auto//*[ length
](/docs/reference/layout/length/)*/nce/foundati/*[ bool
](/docs/reference/foundations/bool/)*/Settable pa/*[ auto
](/docs/reference/foundations/auto//*[ relative
](/docs/reference/layout/relative//*[ dictionary
](/docs/reference/foundations/dictionary/)*/ny lines pre/*[ auto
](/docs/reference/foundations/auto//*[ alignment
](/docs/reference/layout/alignment/)*/Default: ` 1/*[ int
](/docs/reference/foundations/int/)*/gnment ](/*[ none
](/docs/reference/foundations/none//*[ auto
](/docs/reference/foundations/auto//*[ color
](/docs/reference/visualize/color//*[ gradient
](/docs/reference/visualize/gradient//*[ pattern
](/docs/reference/visualize/pattern/)*/ow ( ` y ` ) -/*[ none
](/docs/reference/foundations/none//*[ str ](/docs/reference/foundations/str//*[ function ](/docs/reference/foundations/function/)*/houldn't be
used /*[
alignment ](/docs/reference/layout/alignment/)*/ld by one i/*[ none
](/docs/reference/foundations/none//*[ auto
](/docs/reference/foundations/auto//*[ content
](/docs/reference/foundations/content/)*/th.

Default: ` to/*[ relative
](/docs/reference/layout/relative/)*/ement funct/*[ none
](/docs/reference/foundations/none//*[ auto
](/docs/reference/foundations/auto//*[ content
](/docs/reference/foundations/content/)*/stroke specified th/*[ relative
](/docs/reference/layout/relative/)*/pacing between /*[ none
](/docs/reference/foundations/none//*[ content
](/docs/reference/foundations/content/)*/](/docs/referen/*[ none
](/docs/reference/foundations/none//*[ content
](/docs/reference/foundations/content/)*//*[ content
](/docs/reference/foundations/content/)*/(/docs/*[ content ](/docs/reference/foundations/content/)*/ence/foundatio/*[ str ](/docs/reference/foundations/str/)*/erence/foundations/none/) [ length
](/docs/reference/layout/length/) [ color ](/docs/reference/visualize/color/)
[ gradient ](/docs/reference/visualize/gradient/) [ stroke
](/docs/reference/visualize/stroke/) [ pattern
](/docs/reference/visualize/pattern/) [ dictionary
](/docs/reference/foundations/dictionary/) ,  position  :  [ alignment
](/docs/reference/layout/alignment/) ,

)  -> [ content ](/docs/reference/foundations/content/)

====  ` x `

[ auto ](/docs/reference/foundations/auto/) or  [ int
](/docs/reference/foundations/int/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` /*![â](/assets/icons/16-arrow-right.svg)*/ horizontal line is placed (zero-indexed). If the `
position ` field is set to ` end ` , the line is placed after the column with
the given index instead (see that field's docs for details).

Specifying ` a/*![Docs](/assets/icons/16-docs-dark.svg)*/the column/*![](/assets/icons/16-arrow-right.svg)*/ned cell (that is, cell without coord/*![](/assets/icons/16-arrow-right.svg)*/g the grid's children. If there is no such cell before the
line, it is placed before the grid's first column (column 0). Note that
specifying for this option exactly the total amount of columns in the grid
causes this vertical line to override the end border of the grid (right in
LTR, left in RTL), while a v/*![Preview](/assets/docs/xEgSJZQe3kQz-XQh/*[ int ](/docs/reference/foundations/int/)*/ `

====  ` start `

[ int ](/docs/reference/foundations/int/)

Settable

Quest/*![â](/assets/icons/16-arrow-right.svg)*/tomized for all following uses of the function
with a ` set ` rule.

The row at which the vertical line star/*![Do/*[ ` columns ` function ](/docs/reference/layout/columns/)*/[ none ](/docs/reference/foundations/none/) or  [ int
](/docs/refere/*![](/assets/icons/16-arrow-right.svg)*/tion mark

Settable parameters can be cus/*![](/assets/icons/16-arrow-right.svg)*/ function
with a ` set ` rule.

The row on top of which the vertical line ends (zero-indexed, exclusive).
Therefore, the vertical line will be drawn up to and across row ` end - 1 ` .

A value equal to ` none  ` or to the amount of rows causes it to extend all
the way towards the bottom of the grid.

Default: ` none  `

====  ` stroke `

[ none ](/docs/reference/foundations/none/) or  [ length
](/docs/reference/layout/length/) or  [ color
](/docs/reference/visualize/color/) or  [ gradient
](/docs/reference/visualize/gradient/) or  [ stroke
](/docs/reference/visualize/stroke/) or  [ pattern
](/docs/reference/visualize/pattern/) or  [ dictionary
](/docs/reference/foundations/dictionary/)

Settable

Question mark

Settable parameters can be /*[ auto ](/docs/reference/foundations/auto/)*/n/*[ length
](/docs/reference/layout/length/)*/oke.

Specifying ` none  ` removes any lines previously place/*![Preview](/assets/docs/AhP31noWwrcSQXbwnmO-hwAAAAAAAAAA.png)*/ke below it.

Default: ` 1pt  +  black `

====  ` position `

[ alignment ](/docs/reference/layout/alignment/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule/*![Preview](/assets/docs/-y6AuN3J3rl7Gz1x_VRjjwAAAAAAAAAA.png)*/AAAAAAAAA.png)*/ either
` start/*[ auto ](/docs/reference/foundations/auto/)*/e/*[ length
](/docs/reference/layout/length/)*/re also accepted, but discouraged as they
cause your grid to be inconsistent between left-to-right and right-to-left
documents.

This setting is only relevant when column gutter is enabled (and shouldn't be
used otherwise - prefer just/*[ page break ](/docs/reference/layout/pagebreak/)*/e
then the position after a column becomes different from the position before
the next column due to the spacing between both.

Default: ` start `

===  ` header ` Element

Questio/*[ bool ](/docs/reference/foundations/bool/)*/ with ` set ` and  ` show ` rules.

A repeatable grid header.

If ` repeat ` is set to ` true ` , the header will be repeated across pages.
For an example, refer to the [ ` table.header `
](/docs/reference/model/table/#definitions-header) element and the [ `
grid.stroke ` ](/docs/reference/layout/grid/#parameters-stroke) parameter.

grid  .  header  (

repeat  :  [ bool ](/docs/reference/foundations/bool/) ,  ..  [ content
](/docs/reference/foundations/content/) ,

)  -> [ content ](/docs/reference/foundations/content/)

====  ` repeat `

[ bool /*[Preview](/assets/docs/NEPMLGLUMuCwXHZB6iu3CAAAAAAAAAAA.pn/*![](/assets/icons/16-arrow-right.svg)*/eference/foundations/auto/)*/ /*[ relative
](/docs/reference/layout/relative/)*/t/*[ dictionary
](/docs/reference/foundations/diction/*![Preview](/assets/docs/kGPOcZfxzWEfqWzKQCJaFgAAAAAAAAAA.png)*/eference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

Variadic

Question mark

Variadic parameters can be specified multiple times.

The cells and lines within the header.

===  ` footer ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

A repeatable grid footer.

Just like the [ ` grid.header ` ](/docs/reference/layout/grid/#definitions-
header) element, the footer can repeat itself on every page of the table.

No other grid cells may be placed after the footer.

grid  .  footer  (

repeat  :  [ bool ](/docs/reference/f/*[ binding ](/docs/reference/layout/page/#parameters-binding)*/ions/content/) ,

)  -> [ content ](/docs/reference/foundations//*![â](/assets/icons/16-arrow-right.svg)*/erence/layout/page/#parameters-binding)*/table

Questio/*![â](/assets/icons/16-arrow-right.svg)*/mized for all following uses of the function
with a ` set ` rule.

Whether this footer sho/*![Docs](/assets/icons/16-docs-dark.svg)*/ ` true  `/*![](/assets/icons/16-arrow-right.svg)*/cs/reference/foundations/content/)

R/*![](/assets/icons/16-arrow-right.svg)*/ositional parameters are specified in ord/*![](/asset/*[Preview](/assets/docs/nNqGFtf4s-uyEOhXjup1zgAAAAAAAAAA.png)*/specified multiple times.

The cells and lines within the footer.

[ ![â](/assets/icons/16-arrow-right.svg) Fraction  Previous pag/*[Preview](/assets/docs/OMqyTIx7yDwyNT0DUFniFAAAAAAAAAAA.png)*//16-arrow-right./*[ auto ](/docs/reference/foundations/auto/)*/o/*[ alignment
](/docs/reference/layout/alignment/)*/
  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Layout ](/docs/reference/l/*[ text direction ](/docs/reference/text/text/#parameters-dir)*/ ](/docs/reference/layout/ratio/)

=  ratio

A ratio of a whole.

Written as a number, followed by a percent sign.

==  Example

    
    
    #/*![Preview](/assets/docs/Gsn3vxGfYJJE0DFa5w6toQAAAAAAAAAA.png)*/  ]
    

![Preview](/assets/docs/xEgSJZQe3kQz-XQh/*[ int ](/docs/reference/foundations/int/)*/cons/16-arrow-right.svg) Place  Previous page
](/docs/reference/layout/place/) [ ![â](/assets/icons/16-arrow-right.svg)
Relative Length  Next page  ](/docs/reference/layout/relative/)



= *docs/reference/layout/measure.md*

  - [ ![Do/*[ ` columns ` function ](/docs/reference/layout/columns/)*/ets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Layout ](/docs/reference/layout/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Measure ](/docs/reference/layout/measure/)

=  ` measure ` Contextual

Question mark

Contextual functions can only be used when the context is known

Measures the layouted size of content.

The ` measure ` function lets you determine the layouted size/*[Preview](/assets/docs/Qem_NgF0Oyp_LY8JRVFBWQAAAAAAAAAA.png)*/ measured dim/*[ none ](/docs/reference/foundations/none/)*/ /*[ auto
](/docs/reference/foundations/auto/)*/e/*[ color
](/docs/reference/visualize/color/)*/ /*[ gradient
](/docs/reference/visualize/gradient/)*/r/*[ pattern
](/docs/reference/visualize/pattern/)*/ple

The same content can have a different size depending on the [ context
](/docs/reference/context/ "context") that it is placed into. In the example
below, the ` #  content  ` is of course bigger when we increase the font size.

    
    
    #let content = [Hello!]
    #content
    #set text(14pt)
    #content
    

![Preview](/assets/docs/AhP31noWwrcSQXbwnmO-hwAAAAAAAAAA.png)

For this reason, you can only measure when context is available.

    
    
    #let thing(body) = context {
      let size = measure(body)
      [Width of "#body" is #size.width]
    }
    
    #thing[Hey] \
    #thing[Welcome]
    

![Preview](/assets/docs/-y6AuN3J3rl7Gz1x_VRjjwAAAAAAAAAA.png)

The measure function returns a dictionary with the entries ` width ` and `
height ` , both of type [ ` length ` ](/docs/reference/layout/length/
"`length`") .

==  Parameters

Question mark

Parameters are the inputs to a function. The/*[Preview](/assets/docs/PLEs9jVtSM3FxsoATa6SAAAAAAAAAAAA.png)*/sure  (

width  : /*[ none ](/docs/reference/foundations/none/)*/)/*[ str
](/docs/reference/foundations/str/)*///*[ function
](/docs/reference/foundations/function/)*/s/auto/) [ length
](/docs/reference/layout/length/) ,  [ content
](/docs/reference/foundations/*![](/assets/icons/16-arrow-right.svg)*/[ number ](/docs/reference/model/numbering/)*/ctionary ](/docs/reference/foundations/dictionary/)

===  ` width `

[ auto ](/docs/reference/foundations/auto/) or  [ length
](/docs/reference/layout/length/)

The width available to layout the content.

Setting this to ` auto  ` indicates infinite available width.

Note that using the ` width ` and ` height ` parameters of this /*[Preview](/assets/docs/RY8f9OM2hb3s_Q3tS3fVgwAAAAAAAAAA.png)/*[Preview](/a/*![â](/assets/icons/16-arrow-right.svg)*/AAB.png)*/tent. In the followin/*[ alignment ](/docs//*![â](/assets/icons/16-arrow-right.svg)*/ content instead of the dimensions of the
block.

Default: ` auto  `

![](/assets/icons/16-arrow-right./*![Docs](/assets/icons/16-docs-dark.svg)*/xt measure(lorem(100), width: 400pt)
    
    #context measure(block(lorem(100), width: 400pt))
    

![Preview](/assets/docs/kGPOcZfxzWEfqWzKQCJaFgAAAAAAAAAA.png)

===  ` height `

[ auto ](/docs/reference/foundations/auto/) or  [ length
](/docs/reference/layout/length/)

The height available to layout the content.

Setting this to ` auto  ` indicates infinite available height.

Default: ` auto  `

===  ` content `

[ content ](/docs/reference/foundations/content/)

Required  Positiona/*[Preview](/assets/docs/ErvjjUjlAuxqdtzputqWQAAAAAAAAAAA.png)*/er, without nam/*[ none ](/docs/reference/foundations/none/)*/=/*[ auto
](/docs/reference/foundations/auto/)*/d/*[ content
](/docs/reference/foundations/content/)*/rk

Positional parameters are specified in order, without names.

_Compatibility:_ This argument is deprecated. It only exists for compatibility
with Typst 0.10 and lower and shouldn't be used anymore.

Default: ` none  `

[ ![â](/assets/icons/16-arrow-right.svg) Length  Previous page
](/docs/reference/layout/length/) [ ![â](/assets/icons/16-arrow-right.svg)
Move  Next page  ](/docs/reference/layout/move/)



= *docs/reference/layout/page.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Layout ](/docs/reference/layout/)
  - ![](/asset/*[Preview](/assets/docs/nNqGFtf4s-uyEOhXjup1zgAAAAAAAAAA.png)*/out/page/)

=  ` page /*[ relative ](/docs/reference/layout/relative/)*/n be customized with ` set ` and  ` show ` rules.

Layouts its child onto one or multiple pages.

Although this function is primarily used in set rules to affect page
properties, it can also be used to explicitly render /*[ none ](/docs/reference/foundations/none/)*/./*[ auto
](/docs/reference/foundations/auto/)*/r/*[ content
](/docs/reference/foundations/content/)*/ow to fit the/*![](//*[ ` ratio `
](/docs/reference/layout/ratio/ "`ratio`")*/p ](/docs/guides/page-setup-guide/) explains how to
use this and related functions to set up a document with many examples.

==  Example/*![Preview](/assets/docs/xcDLR5uuky5aEnJroP3JfQAAAAAAAAAA.png)*/ US friends!
    

![Preview](/assets/docs/Gsn3vxGfYJJE0DFa5w6toQAAAAAAAAAA.png)

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

page  (

paper  :  [ str ](/docs/reference/foundations/st/*[ page counter ](/docs/reference/introspection/counter/)*/to/) [ length
](/docs/reference/layout/length/) ,  height  :  [ auto
](/docs/reference/foundations/auto/) [ length
](/docs/reference/layout/length/) ,  flipped  :  [ bool
](/docs/reference/foundations/bool/) ,  margin  :  [ auto
](/docs/reference/foundations/auto/) [ relative
](/docs/reference/layout/relative/) [ dictionary
](/docs/reference/foundations/dictionary/) ,  binding  :  [ auto
](/docs/reference/foundations/auto/) [ alignment
](/docs/reference/layo/*[Preview](/assets/docs/GK4h2efX4DepjGGiUjzejQAAAA/*![](/assets/icons/16-arrow-right.svg)*/K4h2efX4DepjGGiUjzejQAAAAAAAAAB.png)*/ns/none/) [ auto
](/doc/*[ relative ](/docs/reference/layout/relative/)*//reference/visualize/color/) [ gradient
](/docs/reference/visua/*![â](/assets/icons/16-arrow-right.svg)*/nce/visualize/pattern/) ,  numbering  :  [ none
](//*![â](/assets/icons/16-arrow-right.svg)*/](/do/*![Preview](/assets/docs/NEPMLGLUMuCwXHZB6iu3CAAAAAAAAAAA.png)*/ations/none/)*/f/*[ conte/*![Docs](/assets/icons/16-docs-dark.svg)*/t/)*//reference/layout/alignment/) ,  header  :  [ none
](/docs/reference/foundations/none/) [ auto
](/docs/reference/foundations/auto/) [ content
](/docs/reference/foundations/content/) ,  header-ascent  :  [ relative
](/docs/reference/layout/relative/) ,  footer  :  [ none
](/docs/reference/foundations/none/) [ auto
](/docs/reference/foundations/auto/) [ content
](/docs/reference/foundations/content/) ,  footer-descent  :  [ relative
](/docs/reference/layout/relative/) ,  background  :  [ none
](/docs/reference/foundations/none/) [ content
](/docs/reference/foundations/content/)/*[Preview](/assets/docs/edMhg75ws-GIgq5IJNJbrQAAAAAAAAAA.png)*//) [ content
](/doc/*[ none ](/docs/reference/foundations/none/)*/e/*[ content
](/docs/reference/foundations/content/)*/-> [ content ](/docs/reference/foundations/content/)

===  ` paper `

[ str ](/docs/reference/foundations/str/)

Settable

Question mark

Settable parameters can be customized for all/*![â](/assets/icons/16-arrow-right.svg)*/ set ` rule.

A standard paper size to set width and height.
/*![â](/assets/icons/16-arrow-
right.svg)*/idth ` and ` height ` and, as such,
cannot be retrieved in a context expression.

![](/assets//*![Docs](/assets/icons/16-docs-dark.svg)*/assets/docs/UxB2Tju0zg4nh85hMFZNOwAAAAAAAAAA.png)*/-right.svg) V/*[ content ](/docs/reference/foundations/content/)*/"  a2  " ` , ` "  a3  " ` , ` "  a4  " ` , ` "
a5  " ` , ` "  a6  " ` , ` "  a7  " ` , ` "  a8  " ` , ` "  a9  " ` , ` "  a10
" ` , ` "  a11  " ` , ` "  iso-b1  " ` , ` "  iso-b2  " ` , ` "  iso-b3  " ` ,
` "  iso-b4  " ` , ` "  iso-b5  " ` , ` "  iso-b6  " `/*![Preview](/assets/docs/OMqyTIx7yDwyNT0DUFniFAAAAAAAAAAA.png)*/ " /*[ ![â](/assets/icons/16-arrow-right.svg)*/c6  " ` , ` "  iso-c7  " ` , ` "  iso-c8  " ` , ` "/*[ ![â](/assets/icons/16-arrow-right.svg)*/-d5  " ` , ` "  din-d6  " ` , ` "  din-d7  " ` , ` "
din-d8  " ` , ` "  sis-g5  " ` , ` "  sis-e5  " /*[ ![Docs](/assets/icons/16-docs-dark.svg)*/` "  ansi-c  " ` , ` "  ansi-d  " ` , ` "  ansi-e  "/*[ Reference ](/docs/reference/)*/h-b  " ` , ` "  arch-c  " ` , ` "  arch-d  /*[ Layout ](/docs/reference/layout/)*/e  " ` , ` "  jis-b0  " ` , ` "  jis-b1  " /*[ Layout ](/docs/reference/layout/layout/)*/ "  jis-b4  " ` , ` "  jis-b5  " ` , ` "
jis-b6  " ` , ` "  jis-b7  " ` , ` "  jis-b8  " ` , ` "  jis-b9  " ` , ` "
jis-b10  " ` , ` "  jis-b11  " ` , ` "  sac-d0  " ` , ` "  sac-d1  " ` , ` "
sac-d2  " ` , ` "  sac-d3  " ` , ` "  sac-d4  "/*[ ` length `
](/docs/reference/layout/length/ "`length`")*/" ` , ` "  iso-id-2  " `/*[
context ](/docs/reference/context/ "context")*/  jp-shiroku-ban-4  " ` , ` "  jp-shiroku-ban-5  " ` , `
"  jp-shiroku-ban-6  " ` , ` /*![](/assets/icons/16-arrow-right.svg)*/layout/measure/ "`measure`")*/ " ` , ` "  cn-business-card  " ` , ` "  eu-business-card  "
` , ` "  fr-telliÃ¨re  " ` , ` "  fr-couronne-Ã©criture  " ` , ` "  fr-
couronne-Ã©dition  " ` , ` "  fr-raisin  " ` , ` "  fr-carrÃ©  " ` , ` "  fr-
jÃ©sus  " ` , ` "  uk-brief  " ` , ` "  uk-draft  " ` , ` "  uk-foolscap  " `
, ` "  uk-quarto  " ` , ` "  uk-crown  " ` , ` "  uk-book-a  " ` , ` "  uk-
book-b  " ` , ` "  us-letter  " ` , ` "  us-legal  " ` , ` "  us-tablo/*[Preview](/assets/docs/SI9ZxtAftdvELQJYlwu_CgAAAAAAAAAA.png)*/ ` , ` "  us-statement  "
` , ` "  us-ledger  " ` , ` "  us/*[ block
](/docs/reference/layout/block/ "block")*/gov-legal  " ` , ` "  us-business-card  " ` , ` "  us-digest  " ` , ` "
us-trade  " ` , ` "  newspaper-compact  " ` , ` "  newspaper-berliner  " ` , `
"  newspaper-broadsheet  " ` , ` "  presentation-16-9  " ` , ` "
presentation-4-3  " `

===  ` width `

[ auto ](/docs/reference/foundations/auto/) or  [ length
](/docs/reference/layout/length/)

Settable

Question mark

Settable parameters can be customized for all following uses o/*[ measurement
](/docs/reference/layout/measure/)*/f the page.

Default: ` 595.28pt  `

![](//*[ ` ratio `
](/docs/reference/layout/ratio/ "`ratio`")*/  
    #set page(
      width: 3cm,
      margin: (x: 0cm),
    )
    
    #for i in range(3) {
      box(square(width: 1cm))
    }
    

![Preview](/assets/docs/xcDLR5uuky5aEnJroP3JfQAAAAAAAAAA.png)

=== /*[Preview](/assets/docs/1AoOPrEARH2i9ZcdcamicAAAAAAAAAAA.png)*//*![â](/assets/icons/16-arrow-right.svg)*/h/)

Settable

Question mark

Settable parameters can b/*![â](/assets/icons/16-arrow-right.svg)*/he function
with a ` set ` rule.

The h/*![Preview](/assets/docs/PLEs9jVtSM3FxsoATa6SAAAAAAAAAAAA.png/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ction ](/docs/reference/foundations/function/)*/ageb/*[ content ](/docs/reference/foundations/content/)*/ion use ` aut/*[ function ](/docs/reference/foundations/function/)*/ and shrink to fit their content.

Default: ` 841.89pt  `

===  ` flipped `

[ bool ](/docs/reference/foundations/bool/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a `/*[ dictionary
](/docs/reference/foundations/di/*![](/assets/icons/16-arrow-right.svg)*/` false  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set page(
      "us-business-card",
      flipped: true,
      fill: rgb("f2e5dd"/*![Preview](/assets/docs/RY8f9OM2hb3s_Q3tS3fVgwAAAAAAAAAA.png/*![Preview](/assets/docs/RY8f9OM2h/*[ locatable
](/docs/reference/introspection/location/#locatable)*/ /*[ ![â](/assets/icons/16-arrow-right.svg)*/
    

![Preview](/assets/docs/NEPMLGLUMuCwXHZB6iu3CAAAAAAAAAAA.png)

===  ` margin `

[ auto/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ [ relative
](/docs/reference/layout/relative/) or  /*[ Reference ](/docs/reference/)*/foundations/dictionary/)

Settable

Questio/*[ Layout ](/docs/reference/layout/)*/customized for all following uses of the fu/*[ Angle ](/docs/reference/layout/angle/)*/margins.

  - ` auto  ` : The margins are set automatically to 2.5/21 times the smaller dimension of the page. This results in 2.5cm margins for an A4 page. 
  - A single length: The same margin on all/*[Preview](/assets/docs/bDyrcLTzr2eRmGWeZRN2_QAAAAAAAAAA.png)*/n be set individually. The dictionary can contain the following keys in order of precedence: 
    - ` top ` : The top margin. 
    - ` right ` : The right margin. 
    - ` bottom ` : The bottom margin. 
    - ` left ` : The left margin. 
    - ` inside ` : The margin/*[ float ](/docs/reference/foundations/float/)*/inding ](/docs/reference/layout/page/#parameters-binding) is). 
    /*[ float ](/docs/reference/foundations/float/)/*[ ![â](/assets/icons/16-arrow-right.svg)*/(/docs/reference/layout/page/#parameters-binding) ). 
    -/*[ ![â](/assets/icons/16-arrow-
right.svg)*/ ` : The vertical margins. 
 /*![](/assets/icons/16-arrow-right.s/*[ location ](/docs/reference/introspection/location/)*//*![â](/assets/icons/16-arrow-right.svg)*/t ` and ` right ` are mutually /*[ Reference ](/docs/reference/)/*![â](/assets/icons/16-arrow-
right.svg)*/ aut/*[ Layout ](/docs/reference/layout/)*/ght.svg) View examp/*![Preview](/assets/docs/nNqGFtf4s-uyEOhXjup1zg/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ y: 4pt),
    )
    
    #rect(
      width: 100%,
      height: 100%,
      fill: aqua,
    )
    

![Preview](/assets/docs/OMqyTIx7yDwyNT0DUFniFAAAAAAAAAAA.png)

===  ` binding `

[ auto ](/docs/reference/foundations/auto/) or  [ alignment
](/docs/reference/layout/alignment/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

On which side the pages will be bound.

  - ` auto  ` : Equivalent to ` left ` if t/*[Preview](/assets/docs/gpwKHS7y2wIB7BIxGEXoMwAAAAAAAAAA.png)*/dir) is left-to-right and ` right ` if it is right-to-left. 
  - ` left ` : Bound on the left side. 
  - ` right ` : Bound on the right side. 

This affects the meaning of the ` inside ` and ` /*[ float ](/docs/reference/foundations/float/ "float")*/==  ` columns `

[ int ](/docs/reference/foundations/int/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

How many columns the page has.

If you need to insert columns into a page or o/*![](/assets/icons/16-arrow-right.svg)*/[ ` columns ` function ](/docs/reference/layout/columns/) .

Default: ` 1  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set page(columns: 2, height: 4.8cm)
    Climate change is one of the most
    pressing is/*[ float ](/docs/reference/foundations/float/)*/evastate
    communities, ecosystems, and
    economies around the world. It's
    clear that we need to take urgent
  /*[ ` pt `
](/docs/reference/layout/length/#definitions-pt)*/the/*![Preview](/assets/docs/GK4h2efX4DepjGGiUjzejQAAAAAAAAAB.png)*/eference/foundations/float/)*/Y8JRVFBWQAAAAAAAAAA.png)

===  ` fill `

[ none ](/docs/reference/foundations/none/) or  [ auto
](/docs/reference/found/*[ ` pt `
](/docs/reference/layout/length/#definitions-pt)*/or/) or  [ gradient
](/docs/reference/visuali/*[ float ](/docs/reference/foundations/float/)*//visualize/pattern/)

Settable

Question mark

Settable parameters can be customized for all following uses of the fun/*[ ` pt `
](/docs/reference/layout/length/#definitions-pt)*/Setting this to something non-transparent instruc/*[ float ](/docs/reference/foundations/float/)*/ you are considering larger production runs, it may be more
environmentally friendly and cost-e/*[ length ](/docs/referenc/*![](/assets/icons/16-arrow/*[ dictionary ](/docs/reference/foundations/dictionary/)*/es transparent. Note that PDF
pages will still appear with a (usually white) background in viewers, but they
are actually transparent. (If you print them, no color is used for the
background.)

The default of /*![Preview](/assets/docs/edMhg75ws-GIgq5IJNJbrQAAAAAAAAAA.png)*/ziS7eclGAyvgAAAAAAAAAA.png)/*[ ![â](/assets/icons/16-arrow-right.svg)*/right.svg) View example

    
    
    #set page(fill/*[ ![â](/assets/icons/16-arrow-right.svg)*/fdfdfd"))
    _Dark mode enabled._
    

![Preview](/assets/docs/P/*![â](/assets/icons/16-arrow-right.svg)*/[Docs](/assets/icons/16-docs-dark.svg)*/erence/foundations/non/*![â](/assets/icons/16-arrow-
right.svg)*/ce ](/docs/reference/)*/ion
](/docs/reference/foundations/function//*[ Introspection ](/docs/reference/introspectio/*![Docs](/assets/icons/16-docs-dark.svg)*/ uses of /*[ Here ](/docs/reference/intro/*![Preview/*[ Reference ](/docs/reference/)*/odel/numbering/) the pages.

If an explicit ` footer ` (or ` header ` for top-aligned numbering) is given,
the numbering is ignored.

Default: ` none  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set page(
      heig/*[ context ](/docs/reference/context/
"context")*/pt),
      numbering: "1 / 1",
    )
    
    #lorem(48)
    

![Preview](/assets/docs/RY8f9OM2hb3s_Q3tS3fVgwAAAAAAAAAA.png)
![Pre/*![â](/assets/icons/16-arrow-right.svg)*/e
](/docs/reference/introspection/location/#locatable/*![â](/assets/icons/16-arrow-right.svg)*/

Settable

Question mark

Settable parameters can be customized for all following uses of the function
wit/*![Docs](/assets/icons/16-docs-dark.svg)*/ce/introspection/counter/ "`counter`")*/mponent is ` top ` , the numbering is placed into th/*![](/assets/i/*[ array ](/docs/reference/foundations/array/ "array")*/on alignment i/*![](/assets/icons/16-arrow-right.svg)*/` header ` or ` footer ` is given, the
numbering is ignored.

Default: ` center  +  bo/*[ `
position ` ](/docs/reference/introspection/location/#definitions-position)*/ page(
      margin: (top: 16pt, bottom: 24pt),
      numbering: "1",
      number-align: r/*[Preview](/assets/docs/5PrDc8FIHOrLs_qUjTj6iwAAAAAAAAAA.png)*/s/ErvjjU/*[ query ](/docs/reference/introspection/query/ "query")*/e ](/docs/reference/foundations/none/) or  [ auto
](/docs/reference/foundations/auto/) or  [ content
](/docs/reference/foundations/content/)

Settable

Question mark

Settable parameters can be customized for all following uses o/*[Preview](/assets/docs/5DWH6TcZBrEjuGuSwKqf8AAAAAAAAAAA.png)*/s the top m/*[ ` selector ` ](/docs/reference/foundations/selector/
"`selector`")*/  - ` auto  ` : Shows the page number if a ` numbering ` is set and ` number-align ` is ` top ` . 
  - ` none  ` : Suppresses the header. 

Default: ` auto  `

![](/assets/icons/16-arrow-right.s/*[ location ](/docs/reference/introspection/location/)/*[ ![â](/assets/icons/16-arrow-right.svg)*/pt, bottom: 20pt),
      header: [
        #set text(8pt)
    /*[ ![â](/assets/icons/16-arrow-
right.svg)*/fr) _Exercise Sheet 3_
      ],
    )
    
    #lorem(19)
    

![Preview](/assets/docs/nNqGFtf4s-uyEOhXjup1zg/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/[ relative ](/docs/reference/layout/relative/)

Sett/*[ Reference ](/docs/reference/)*/arameters can be customized for all followi/*[ Introspection ](/docs/reference/introspection/)*/ amount the header is raised into the top m/*[ Location ](/docs/reference/introspection/location/)*/ none ](/docs/reference/foundations/none/) or  [ auto
](/docs/reference/foundations/auto/) or  [ content
](/docs/reference/foundations/content/)

Settable

Question mark

Settable parameters can be customized for/*[ ` here ` ](/docs/reference/introspection/here/ "`here`")*/The page's footer. Fills the bottom margin of each page.

  - /*[ ` location() `
](/docs/reference/foundations/*![Preview](/assets/docs/1AoOPrEARH2i9ZcdcamicAAAAAAAAAAA.png)*/t and ` number-align ` is ` bottom ` . 
  - ` none  ` : Suppresses the footer. 

For just a page number, the ` numbering ` property typically suffices. If you
want to create a custom footer but still display the page number, you /*[ `
strong ` ](/docs/reference/model/strong/ "`strong`")*//introspection/counter/) .

Default: ` auto  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set par(justify: true)
    #set page(
      height: 100pt,
      margin: 20pt,
      footer: context [
        #set align(right)
        #set text(8pt)
        #counter(page).display(
          "1 of I",
          both: true,
        )
      ]
    )
        #counter(page).display(
          "1 of I",
          both: true/*[ page counter
](/docs/reference/introspection/counter/)*/eview](/assets/docs/GK4h2efX4DepjGGiUjzejQAAAAAAAAAA.png)
![Preview](/assets/docs/GK4h2efX4DepjGGiUjzejQAAAAAAAAAB.png)

===  ` footer-descent `

[ relative ](/docs/reference/layout/rela/*[ ` here ` ](/docs/reference//*![â](/assets/icons/16-arrow-right.svg)*/zed for all following uses of the function
with a `/*![â](/assets/icons/16-arrow-right.svg)*//reference/foundations/int/)*/gin.

Default: ` 30%  +  0pt  `

===  ` background `

[ none ](/d/*![Docs](/assets/icons/16-docs-/*[Preview](/assets/docs/CxXLMyCvJp2FnmacPN3WUgAAAAAAAAAA.png)*/Settable

Question mark

Settable param/*![](/assets/icons/16-arrow-right.svg)*/wing uses of the function
with a ` set ` /*![](/assets/icons/16-arrow-right.svg)*/nd.

This content will be placed behind the page's body. It can be used to place a
background image or a watermark.

Default: ` none  `

![](/assets/icons/16-arrow/*[ dictionary ](/docs/reference/foundations/dictionary/)*/round: rotate(24deg,
  /*![Preview](/assets/docs/bDyrcLTzr2eRmGWeZRN2_QAAAAAAAAAA.png)*/     ]
    ))
    
    = Typst's secret plans
    In the year 2023, we plan to take
    over the world (of typesetting).
    

![Preview](/assets/docs/edMhg75ws-GIgq5IJNJbrQAAAAAAAAAA.png)

===  ` foreground `

[ none ](/docs/reference/foundations/none/) or  [ content
](/docs/reference//*[ none ](/docs/reference/foundations/none//*[ str
](/docs/reference/foundations/str//*[ function
](/docs/reference/foundations/function/)/*[ ![â](/*![â](/assets/icons/16-arrow-right.svg)*/round.

This content will overlay the page's body.

Def/*[ ![/*![â](/assets/icons/16-arrow-
right.svg)*/-right.svg) View example

    
    
    #set page(foreground: text(24pt)[ð¥¸])
    
    Revie/*![Docs](/assets/icons/16-docs-dark.svg)*/icons/16-d/*![](/assets/icons/16-arrow-right.svg)*/ur approach...
    

![Preview/*[ Ref/*![](/assets/icons/16-arrow-right.svg)*/AAAAAAA.png)

===  ` body `

[ con/*[ Int/*![](/assets/icons/16-arrow-right.svg)*/ction/)*/uired  Positional

Question mark

Positiona/*[ Counter ](/docs/reference/introspection/counter/)*/

The contents of the page(s).

Multiple pages will be created if the content does not fit on a single page. A
new page with the page properties prior to the function invocation will be
created after the body has been typeset.

[ ![â](/assets/icons/16-arrow-right.svg) Padding  Previous page
](/docs/reference/layout/pad/) [ ![â](/assets/icons/16-arrow-right.svg) Page/*[ context
](/docs/reference/context/ "context")*/ebreak/)



= *docs/reference//*![Preview](/assets/docs/gpwKHS7y2wIB7BIxGEXoMwAAAAAAAAAA.png)*/vg) ](/do/*[ ` get `
](/docs/reference/introspection/counter/#definitions-get)*/cs/reference/)
  - ![](/assets/i/*[ array ](/docs/reference/foundations/array/ "array")*/ce/layout/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Layout ](/docs/reference/layout/layout/)

=  ` layout `

Provides access to the current outer container's (or page's, if none)
dimensions (width and height).

Accepts a function that receives a single parameter, which is a dictionary
with/*[Preview](/assets/docs/jqVSznl_yGBcNN9ecF8OVAAAAAAAAAAA.png)*/(/docs/reference/layout/length/ "`length`") . The function is provided [
context ](/docs/reference/context/ "context") , meaning yo/*[ ` display `
](/docs/reference/introspection/counter/#definitions-display)*/ why [ ` measure `
](/docs/reference/layout/measure/ "`measure`") can be called in the example
below.

    
    
    #let text = lorem(30)
    #/*[ numbering
](/docs/reference/model/numbering/ "numbering")*/ock(width: size.width, text),
      )
      This text is #height high with
      the current page width: \
      #text
    ])
      #let (height,) = measure(
        block(width: size.width, text),
      )
      This text is #height high with
      the current page width: \
  /*[Preview](/assets/docs/7EUi61p1PXmzQyka_2NqiAAAAAAAAAAA.png)*/QJYlwu_CgAAAAAAAAAA.png)

Note that the ` layout ` function forces its contents into a [ block
](/docs/reference/layout/block/ "block") -level container, so placement
relative to the page or pagebreaks are not possible within it.

If the ` layout ` call is placed inside a box with a width of ` 800pt  ` and a
height of ` 400pt  ` , then the specified function will be given the argument
` (  width  :  800pt  ,  height  :  400pt  )  ` . If it is placed directly
into the page, it receives the page's dimensions minus its margins. This is
mostly useful in combination with [ measurement
](/docs/reference/layout/measure/) .

You can also use this function to resolve [ ` ratio `
](/docs/reference/layout/ratio/ "`ratio`") to fixed lengths. This might come
in handy if you're building your own layout abstractions.

    
    
    #layout(size => {
      let half = 50% * s/*![Preview](/assets/docs/O8f4mxTZz-ziS7eclGAyvgAAAAAAAAAA.png)*//*![â](/assets/icons/16-arrow-right.svg)*/icAAAAAAAAAAA.png)

Note that the width or height provi/*![â](/assets/icons/16-arrow-right.svg)*/e
corresponding page d/*[Preview](/assets/docs/EOYqv5YWVpmiQyBJoYpqQAAAAAAAAAAA.png)*/k

Parameters are/*![Docs](/assets/icons/16-docs-dark.svg)*/cified in /*![](/assets/ic/*[ auto ](/docs/reference/foundations/auto//*[ str
](/docs/reference/foundations/str//*[ function
](/docs/reference/foundations/function/)*/nt/)

===  ` func `

[ function ](/docs/reference/foundations/function/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

A function to call with the outer container's size. Its return value is
displayed in the document.

The container's size is given as a [ dictionary
](/docs/reference/foundations/dictionary/ "dictionary") with the keys ` width
` and ` height ` .

This functio/*[Preview](/assets/docs/PDCorO6nPZEoa3HjHUVgRwAAAAAAAAAA.png)/*[Preview](/assets/docs/PDCorO6nPZEoa3HjHUVgRwAAAAAAAAAB.png)*/enerate content that
depends on the dimensions of its container.

[ ![â](/assets/icons/16-arrow-right.svg) Hide  Previous page
](/docs/reference/layout/hide/) [ ![â](/assets/icons/16-arrow-right.svg)
Length  Next page  ](/docs/reference/layout/length/)



= *docs/reference/layout/angle.md*

  - [ ![Docs](/assets/icons/16-docs-/*[Preview](/assets/docs/CxXLMyCvJp2FnmacPN3WUgAAAAAAAAAA.png)*/
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Layout ](/docs/reference/layout/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Angle ](/docs/reference/layout/angle/)

=  angle

An angle describing a rotation.

Typst supports the following angular units:

  - Degrees: ` 180deg  `
  - Radians: ` 3.14rad  `

==  Example

    
    
    #rotate(10deg)[H/*![Preview](/assets/docs/5PrDc8FIHOrLs_qUjTj6iwAAAAAAAAAA.png)*/N2_QAAAAAAAAAA.png)

==  Definitions

Question mark

Functions and types and can have associated definitions. These are accessed by
specifying the fu/*[Preview](/assets/docs/af6Y7nOR_IldvYHIWDmkIQAAAAAAAAAA.png)*/n's name.

===  ` rad `

Converts this angle to radians.

self  .  rad  (

)  -> [ float ]/*![Preview](/assets/docs/5DWH6TcZBrEjuGuSwKqf8AAAAAAAAAAA.png)*/this angle to degrees.

self  .  deg  (

)  -> [ float ](/docs/reference/foundations/float/)

[ ![â](/assets/icons/16-arrow-right.svg) Alignment  Previous page
](/docs/reference/layout/alignment/) [ ![â](/assets/icons/16-arrow-
right.svg) Block  Next page  ](/docs/reference/layout/block/)



= *docs/reference/layout/length.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Layout ](/docs/reference/layout/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Length ](/docs/reference/layout/length/)

=  length

A size or distance, possibly expressed wit/*![](/assets/icons/16-arrow-right.svg)*/he following length units:

  - Point/*![](/assets/icons/16-arrow-right.svg)*/  `
  - Centimeters: ` 2.54cm  `
  - Inches: ` 1in  `
 /*![](/assets/icons/16-arrow-right.svg)*//*[Preview](/assets/docs/wodRGpSsJgDZtfsMk_GNgwAAAAAAAAAA.png)*/nd floats.

==  Example

    
    
    #rect(width: 20pt)
    #rect/*[ state
](/docs/reference/introspection/state/ "state")*/).em \
    #(20pt).em \
    #(40em + 2pt).abs \
    #(5em).abs
    

![Preview](/assets/docs/gpwKHS7y2wIB7BIxGEXoMwAAAAAAAAAA.png)

==  Fields

  - ` abs ` : A length with just the absolute component of the current length (that is, excluding the ` em ` component). 
  - ` em ` : The amount of ` em ` units in this le/*[ str ](/docs/reference/foundations/str//*[ label
](/docs/reference/foundations/label//*[ selector
](/docs/reference/foundations/selector//*[ location
](/docs/reference/introspection/location//*[ function
](/docs/reference/foundations/function/)*/riod/*[ counter ](/docs/reference/introspection/counter/)*/verts this le/*[ str ](/docs/reference/foundations/str/)*/h/*[ label
](/docs/reference/foundations/label/)*/`/*[ selector
](/docs/reference/foundations/selector/)*/b/*[ location
](/docs/reference/introspection/location/)*/g/*[ function
](/docs/reference/foundations/function/)*/rting only its absolute component).

self  .  pt  (

)  -> [ float ](/docs/reference/foundations/float/)

===  ` mm `

Converts this length to millimeters.

Fails with an error if this length has non-zero ` em ` units. See the [ ` pt `
](/docs/*[ ` page ` ](/docs/reference/layout/page/ "`page`")*/r more details.

self  .  mm  (

)  -> [ floa/*[ selector ](/docs/reference/foundations/selector/ "selector")*/ this length to centimeters.

Fails with an error if this length has non-zero ` em ` units. See the [ ` pt `
](/docs/reference/layout/length/#definitio/*[ ` <label> ` ](/docs/reference/foundations/label/)*/ -> [ float ](/docs/reference/foundations/float/)

===  ` inches `

Converts this length to inches.

Fails with an error if this length has non-zero ` em ` units. See the [ ` pt `
](/docs/reference/layout/length/#definitions-pt) method for more details.

self  .  inches  (

)  -> [ float ](/docs/reference/foundations/float/)

===  ` to-absolute `

Resolve this length to an absolute length.

self  .  to-absolute  (

)  -> [ length ](/docs/reference/layout/length/)

    
    
    #set text(size: 12pt)
    #context [
      #(6pt).to-absolute() \
      #(6pt + /*[ int ](/docs/reference/foundations/int//*[ array
/*![â](/assets/icons/16-arrow-right.svg)*/)
    #context [
      #(6pt).to-absolute() \
      #(6pt + 10/*![â](/assets/icons/16-arrow-right.svg)*/olute()
    ]
    

![Preview](/assets/docs/O8f4mxTZz-ziS7eclGAyvgAAAAAAAAAA.png)

[ ![â](/assets/icons/*![Docs](/assets/icons/16-docs-dark.svg)*/age
](/docs/reference/layout/layout/) [ ![â](/assets/icons/16-arrow-right.svg)
Measure  Next page  ](/docs/reference/layout/measure/)



= *docs/reference/introspection/here.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/ic/*[ auto ](/docs/reference/found/*![â](/assets/icons/16-arrow-
right.svg)*/ndations/str//*[ function
](/docs/reference/foundations/function/)*//referenc/*[ bool
](/docs/reference/foundations/*![Docs](/assets/icons/16-docs-dark.svg)*//d/*[ auto/*![](/assets/icons/16-arrow-right.svg)*/*/r/*[ str
](/docs/reference/foundati/*![](/assets/icons/16-arrow-right.svg)*/rence/foundations/function/)*/n

Provides the current l/*![](/assets/icons/16-arrow-right.svg)*/nk of ` here ` as a low-lev/*[ numbering pattern or a function ](/docs/reference/model/numbering/)*/e active [ context ](/docs/reference/context/
"context") . Some other functions use it internally: For instance, ` counter
.  get  (  )  ` is equivalent to ` counter  .  at  (  here  (  )  )  ` .

Within show rules on/*[ argument sink
](/docs/reference/foundations/arguments/)*/catable) elements, ` here  (  )  `
will match the location of the shown element.

If you want to display the current page number, refer to the documentation of
the [ ` counter ` ](/docs/reference/introspe/*[ bool ](/docs/reference/foundations/bool/)*/ere ` can be used to determine the physical page number, typically
you want the logical page number that may, for instance, have been reset after
a preface.

==  Examples

Determining the current position in the document in combination with the [ `
position ` ](/docs/reference/introspection/location/#definitions-position)
method:

    
    
    #context [
      I am located at
      #here().position()
  /*![Preview](/assets/docs/jqVSznl_yGBcNN9ecF8OVAAAAAAAAAAA.png)*/AAAAA.png)

Running a [ query ](/docs/reference/introspection/query/ "query") for elements
before the current position:

    
    
    = Introduction
    = Background/*[ labels
](/docs/reference/foundations/label/)*/s/*[ locations
](/docs/reference/introspection/location/)*/gs before me.
    
    = Conclusion
    

![Preview](/assets/docs/5DWH6TcZBrEjuGuSwKqf8AAAAAAAAAAA.png)

Refer to the [ ` selector ` ](/docs/reference/foundations/selector/
"`selector`") type for more details on bef/*[ label ](/docs/reference/foundations/label//*[ selector
](/docs/reference/foundations/selector//*[ location
](/docs/reference/introspection/location//*[ function
](/docs/reference/foundations/function/)*//*![Pr/*[ ` get ` ](/docs/reference/introspection/state/#definitions-get)*/ce/foundations/array/)*/evious page
](/doc/*[ label ](/docs/reference/foundations/label/)*///*[ selector
](/docs/reference/foundations/selector/)*/ /*[ location
](/docs/reference/introspection/location/)*/r/*[ function
](/docs/reference/foundations/function/)*//assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Introspection ](/docs/reference/introspection/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Location ](/docs/reference/introspection/location/)

=  location

Identifies an element in the document.

A location uniquely identifies an element in the document/*[ none ](/docs/reference/foundations/none//*[ location
](/docs/reference/introspection/location/)*/n wi/*[ int ](/docs/reference/foundations/int//*[ array
](/docs/reference/foundations/array/)*/location of a quer/*[ none ](/docs/reference/foundations/none/)*/)/*[ location
](/docs/reference/introspection/location/)*/-location) method on
content.

==  Locatable elements

Currently, only a subset of eleme/*![Preview](/assets/docs/EOYqv5YWVpmiQyBJoYpqQAAAAAAAAAAA.png)*/his includes equations, references, quotes and all
elements with an explicit label. As a result, you _can_ query for e.g. [ `
strong ` ](/docs/reference/model/strong/ "`strong`") elements, but you will
find only those that have an explicit label attached to them. This limitation
will be resolved in the future.

==  Definitions

Question mark

Functions and types and can have associated definitions. These are accessed by
specifying the function or type, followed by a period, and then the
definition's name.

===  ` page `

Returns the page number for this locatio/*[ int ](/docs/reference/foundations/int/)*/lue /*[ content ](/docs/reference/foundations/*![Preview](/assets/docs/PDCorO6nPZEoa3HjHUVgRwAAAAAAAAAA.png/*![Preview](/assets/docs/PDCorO6nPZEoa3HjHUVgRwAAAAAAAAAB.png)*/ value of the page counter, use ` counter  (  page  )
.  at  (  loc  )  ` instead.

Can be used with [ ` here ` ](/docs/reference/introspection/here/ "`here`") to
retrieve the physical page position of th/*[ int ](/docs/reference/foundations/int//*[ array
](/docs/reference/foundations/array//*[ function
](/docs/reference/foundati/*![Preview](/ass/*[Preview](/assets/docs/FSbY2IZskPNKeQtPqbjroAAAAAAAAAAA.png)*/ts/docs/0ToV/*[ int ](/docs/reference/foundations/int/)*/ /*[ array
](/docs/reference/foundations/array/)*/e/*[ function
](/docs/reference/foundations/function/)*/e page number starts at one and the coordinates are measured from
the top-left of the page.

If you only need the page number, use ` page() ` instead as it allows Typst to
skip unnecessary work.

self  .  position  (

)  -> [ dictionary ](/docs/reference/foundations/dictionary/)

===  ` page-numbering `

Returns the page numbering patt/*[ ![â](/assets/icons/16-arrow-right.svg)*/ be
used when displaying the page counter/*![Preview](/assets/docs/af6Y7nOR_IldvYHIWDmkIQAAAAAAAAAA.png)*/g)*/u are building custom indices or outlines.

If the page numbering is set to ` none  ` at that location,/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ .  page-numbering  (

)  -> [ none ](/docs/referenc/*[ Reference ](/docs/reference/)*/ocs/reference/foundations/str/) [ function
/*[ Introspection ](/docs/reference/introspection/)*/](/assets/icons/16-arrow-right.svg) Locate /*[ State ](/docs/reference/introspection/state/)*/locate/) [ ![â](/assets/icons/16-arrow-
right.svg) Metadata  Next page  ](/docs/reference/introspection/metadata/)



= *docs/reference/introspection/counter.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Introspection ](/docs/reference/introspection/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Counter ](/docs/reference/introspection/counter/)

=  counter

Counts through pages, elements, and more.

With the counter function, you can access and modify counters for pages,
headings, f/*![Preview](/assets/docs/wodRGpSsJgDZtfsMk_GNgwAAAAAAAAAA.png)*/r
other things you want to count.

Since counters change throughout the course of the document, their current
value is _contextual._ It is recommended to read the chapter on [ context
](/docs/reference/context/ "context") before continuing here.

==  Accessing a counter

To access the raw value of a counter, we can use the [ ` get `
](/docs/reference/introspection/counter/#definitions-get) function. This
function returns an [ array ](/docs/reference/foundations/array/ "array") :
Counters can have multiple levels (in the case of headings for sections,
subsections, and so on), and each item in the array corresponds to one level.

    
    
    #set heading(numbering: "1.")
    
    = Introduction
    Raw value of heading counter is
    #context counter(heading).get()
    

![Preview](/assets/docs/jqVSznl_yGBcNN9ecF8OVAAAAAAAAAAA.png)

==  Displaying a counter

Of/*[Preview](/assets/docs/OC8Yphz4-mFQhH6Mm9lwwAAAAAAAAAAA.png)*/an-readable way.
To do that, we can call the [ ` display `
](/docs/reference/introspection/counter/#definitions-display) function on the
counter. This function retrieves the current counter value and formats it
either with a provided or with an automatically inferred [ numbering
](/docs/reference/model/numbering/ "numbering") .

    
    
    #set heading(numbering: "1.")
    
    = Introduction
    Some text here.
    
    = Background
    The current value is: #context {
      counter(heading).display()
    }
    
    Or in roman numerals: #context {
      counter(heading).display("I")
    }
    

![Pr/*[ ` get ` ](/docs/reference/introspection/state/#definitions-get)*/difying a counter

To modify a counter, you can use the ` step ` and ` update ` methods:

  - The ` step ` method increases the value of the counter by one. Because /*[ context ](/docs/reference/context/)*/t optionally takes a /*[ ` update ` ](/docs/reference/introspection/state/#definitions-update)*/ - The ` update ` method allows you to arbitrarily modify the counter. In its basic form, you give it an integer (or an array for multiple levels). For more flexibility, you can instead also give it a function that receives the current value and returns a new value. 

The heading counter is stepped before the heading is displayed, so ` Analysis
` gets the number seven even though the counter is at six after the second
update.

    
    
    #set heading(numbering: "1.")
    
    = Introduction
    #counter(heading).step()
    
    = Ba/*[Preview](/assets/docs/TvB3cSxy6XwQVp0EXZ9-ewAAAAAAAAAA.png)*/g).update(n => n * 2)
    
    = Analysis
    Let's skip 7.1.
    #counter(heading).step(level: 2)
    
    == Analysis
    Still at #context {
      counter(heading).display()
    }
    

![Preview](/assets/docs/EOYqv5YWVpmiQyBJoYpqQAAAAAAAAAAA.png)

==  Page counter

The page counter is special. It is automatically stepped at each pagebreak.
But like other counters, you can also step it manually. For example, you could
have Roman page numbers for your preface, then switch to Arabic page nu/*[Preview](/assets/docs/leSHwxlkl8fBohZKt4lM4AAAAAAAAAAA.png)*/e.

    
    
    #set page(numbering: "(i)")
    
    = Preface
    The preface is numbered with
    roman numerals.
    
    #set page(numbering: /*[
counting system ](/docs/reference/introspection/counter/)*/    Here, the counter is reset to one.
    We also display both the current
    page and total number of pages in
    Arabic numbers.
    

![Preview](/assets/docs/PDCorO6nPZEoa3HjHUVgRwAAAAAAAAAA.png)
![Preview](/assets/docs/PDCorO6nPZEoa3HjHUVgRwAAAAAAAAAB.png)

==  Custom counters

To define your own counter, call the ` counter ` function with a string as a
key. This key identifies the counter globally.

    
    
    #let mine = counter("mycounter")
    #context mine.display() \
    #mine.step()
    #context mine.display() \
    #mine.update(c => c * 3)
    #context mine.display()
    

![Preview](/ass/*[Preview](/assets/docs/FSbY2IZskPNKeQtPqbjroAAAAAAAAAAA.png)*/tep

When you d/*![â](/assets/icons/16-arrow-right.svg)*/al, you should first step
the counter and then display it. T/*![â](/assets/icons/16-arrow-
right.svg)*/ter
can depend on the element it is stepped for. If you were writing a counter
for, let's say, theorems, your /*![Docs](/assets/icons/16-docs-dark.svg)*/nclude
the counter step and only then display the counter and the theorem's contents.

    
    
    #let c = counter("theorem")
    #let theorem(it) = block[
      #c.step()
      _Theorem #context c.display():_
      #it
    ]
    
    #theorem[$1 = 1$]
    #theorem[$2 < 3$]
    

![Preview](/assets/docs/af6Y7nOR_IldvYHIWDmkIQAAAAAAAAAA.png)

The rationale behind this is best explained on the example of the heading
counter: An update to the he/*[Preview](/assets/docs/4ABrNAaHVbvzCF9JEmUebAAAAAAAAAAA.png)*/rectly before the heading, we can correctly step from ` 1 ` to `
1.1 ` when encountering a level 2 heading. If we were to step after the
heading, we wouldn't know what to step to.

Because counters should always be stepped before the elements they count, they
always start at zero. This way, they are at one for the first display (which
happens after the first step).

==  Time travel

Counters can travel through time! You can find out the final value of the
counter before it is reached and even determ/*[ str ](/docs/reference/foundations/str/)*/location in th/*[ state ](/docs/reference/introspection/state/)*/"mycounter")
/*[ str ](/docs/reference/foundations/str/)*/lue here: #mine.get() \
      At intro: #mine.at(<intro>) \
      Final value: #mine.final()
    ]
    
    #mine.update(n => n + 3)
    
    = Introduction <intro>
    #lorem(10)
    
    #mine.step()
    #mine.step()
    

![Preview](/assets/docs/wodRGpSsJgDZtfsMk_GNgwAAAAAAAAAA.png)

==  Other kinds of state

The ` counter ` type is closely related to [ state
](/docs/reference/introspection/state/ "state") type. Read its documentation
for more details on state management in Typs/*![â](/assets/icons/16-arrow-right.svg)*/iables for counters.

==  Constructor

Question mark

If a type ha/*![â](/assets/icons/16-arrow-
right.svg)*/unction to create a new
value of the type.

Create a new counter identified by a key.

counter  (

[ str ](/*![Docs](/assets/icons/16-docs-dark.svg)*/el
](/docs/reference/foundations/label/) [ selector
](/docs/reference/foundations/selector/) [ location
](/docs/reference/introspection/location/) [ function
](/docs/reference/foundations/function/)

)  -> [ counter ](/docs/reference/introspection/counter/)

/*[ labels
](/docs/reference/foundations/label/)*/i/*[ locations
](/docs/reference/introspection/location/)*/bel/) or  [ selector
](/docs/reference/foundations/selector/) or  [ location
](/docs/reference/introspection/location/) or  [ function
](/docs/reference/foundations/function/)

Required  Positional

Question mark

P/*[ label ](/docs/reference/foundations/label//*[ selector
](/docs/reference/foundations/selector//*[ location
](/docs/reference/introspection/location//*[ function
](/docs/reference/foundations/function/)*/ - If it is the [ ` page ` ](/*[ label ](/docs/reference/foundations/label/)*/o/*[ selector
](/docs/reference/foundations/selector/)*/ /*[ location
](/docs/reference/introspection/location/)*/ /*[ function
](/docs/reference/foundations/function/)*/tor. For example, 
    - provide an element function: counts elements of that type, 
    - provide a [ ` <label> ` ](/docs/reference/foundations/label/) : counts elements with that label. 

==  Definitions

Question mark

Functions and types and can have associated definitions. These are accessed by
specifying the function or type, followed b/*[ none ](/docs/reference/foundations/none//*[ location
](/docs/reference/introspection/location/)*/al functions can only be used/*[ none ](/docs/reference/foundations/none/)*/a/*[ location
](/docs/reference/introspection/location/)*/turns an
array of integers, even if the counter has just one number.

This is equivalent to ` counter  .  at  (  here  (  )  )  ` .

self  .  get  (

)  -> [ int ](/docs/reference/foundations/int/) [ array
](/docs/reference/foundations/array/)

===  ` display ` Contextual

Question mark

Contextual functions can only be used when the context /*![â](/assets/icons/16-arrow-right.svg)*/the counter with a numbering and returns the
formatted output.

_Compatibility:_ For compatibility with Typst/*![Docs](/assets/i/*[ page numbering
](/docs/reference/introspection/location/#definitions-page-numbering)*/textual content rather than directly returning the output of the numbering.
This behaviour will be removed /*[ function ](/doc/*![](/assets/icons/16-arrow-right.svg)*//do/*[ content ](/docs/reference/foundations/content/)*/erence/foundations/str/) /*[ function ](/docs/reference/foundations/function/)*/ ,  both  :  [ bool
](/docs/reference/foundations/bool/) ,

)  -> any

====  ` numbering `

[ auto ](/docs/reference/foundations/auto/) or  [ str
](/docs/reference/foundations/str/) or  [ function
](/docs/reference/foundations/function/)

Positional

Question mark

Positional parameters are specified in order, without names.

A [ numbering /*[ ` get `
](/docs/reference/introspection/state/#definitions-get)*/ specifies how to display th/*[ none ](/docs/reference/foundations/none//*[ function
](/docs/reference/foundations/function/)*/rate/*[ content ](/docs/reference/foundations/content/)*/for the headin/*[ none ](/docs/reference/foundations/none/)*/]/*[ function
](/docs/reference/foundations/function/)*/ is omitted or set to ` auto  ` , displays the counter with the
numbering style for the counted element or with the pattern ` "1.1"  ` if no
such style exists.

Default: ` auto  `

====  ` both `

[ bool ](/docs/reference/foundations/bool/)

If enabled, displays the c/*[ ![â](/assets/icons/16-arrow-right.svg)*/ Both can
be styled through a single numbering pattern. Th/*[ ![â](/assets/icons/16-arrow-
right.svg)*/o display the current and total number of pages when a
pattern like ` "1 / 1"  ` is given.

Default: ` false/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/k

Contextual functions can only be used when the co/*[ Reference ](/docs/reference/)*/alue of the counter at the given location. /*[ Introspection ](/docs/reference/introspection/)*/counter has just one number.

/*![Preview](/assets/docs/OC8Yphz4-mFQhH6Mm9lwwAAAAAAAAAAA.png)*/adata/)*/he most
useful kinds of selectors for this are [ labels
](/docs/reference/foundations/label/) and [ locations
](/docs/reference/introspection/location/) .

_Compatibility:_ For compatibility with Typst 0.10 and lower, th/*[ ` query `
](/docs/reference/introspection/query/ "`query`")*/tor ` is a location. This
behaviour w/*[ ` typst query `
](/docs/reference/introspection/query/#command-line-queries)*//foundations/label/) [ selector
](/docs/reference/foundations/selector/) [ location
](/docs/reference/introspection/location/) [ fun/*[ ` label `
](/docs/reference/foundations/label/ "`label`")*/ ](/docs/reference/foundations/int/) [ array
](/docs/reference/foundations/array/)

====  ` selector `

[ label ](/docs/reference/foundations/label/) or  [ selector
](/docs/reference/foundations/selector/) or  [ location
](/docs/reference/introspection/location/) or  [ function
](/docs/reference/foundations/function/)

Required  Positional

Question mark

P/*[Preview](/assets/docs/sbF_Ac863-gI1m3qoL9avwAAAAAAAAAA.png)*/
The place at which the counter's value should be retrieved.

===  ` final ` Contextual

Question mark

Contextual functions can only be used when the con/*[ content ](/docs/reference/foundations/content/)*/ at the end of the document. Always returns
an array of integers, even if the counter has just one number.

self  .  final  (

[ none ](/docs/reference/found/*[ ![â](/assets/icons/16-arrow-right.svg)*//introspection/location/)

)  -> [ int ](/docs/reference/foundat/*[ ![â](/assets/icons/16-arrow-
right.svg)*/tions/array/)
/*![Preview](/assets/docs/TvB3cSxy6XwQVp0EXZ9-ewAAAAAAAAAA.png)*/e/) or  [ location
](/docs/ref/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/al

Question mark

Positional parameters are specifi/*[ Reference ](/docs/reference/)*/ompatibility:_ This argument is deprecated./*[ Introspection ](/docs/reference/introspection/)*/ and lower and shouldn't be used anymore.

/*[ Query ](/docs/reference/introspection/query/)*/e value of the counter by one.

The update will be in effect at the position where the returned content is
inserted into the document. If you don't put the/*![Preview](/assets/docs/leSHwxlkl8fBohZKt4lM4AAAAAAAAAAA.png)*/ case, for example, if you write ` let  _  =
co/*![â](/assets/icons/16-arrow-right.svg)*/t ](/docs/reference/context/ "context")*/ayout order and in that c/*![â](/assets/icons/16-arrow-
right.svg)*/ counter.

self  .  step  (

level  :  [ int ](/do/*[ ` outline ` ](/docs/reference/model/outline/ "`outline/*![Docs](/assets/icons/16-docs-dark.svg)*/  ` level `

[ int ](/docs/reference/foundations/int/)

The depth at which to step the counter. Defaults to ` 1  ` .

Default: ` 1  `

===  ` update `

Updates the value of the counter.

Just like with ` step ` , the update only occurs if you put the resulting
content into the document.

self  .  update  (

[ int ](/docs/reference/foundations/int/) [ array
](/docs/reference/foundations/array/) [ function
](/docs/reference/foundations/function/)

)  -> [ content ](/docs/reference/foundation/*![Preview](/assets/docs/*[ ` location ` ](/docs/reference/introspection/location/
"`location`")*/ference/foundations/array/) or  [ function
](/docs/reference/foundations/function/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

If given an integer or array of integers, sets the counter to that value. If
given a function, that function receives the previous counter value (with each
number as a separate argument) and has to return/*[Preview](/assets/docs/jo-em7a3jFROfNLdVe33CwAAAAAAAAAA.png)/*[Preview](/assets/docs/jo-em7a3jFROfNLdVe33CwAAAAAAAAAB.png)*/ference/introspection/) [ ![â](/assets/icons/16-arrow-right.svg)
Here  Next page  ](/docs//*[ ` location `
](/docs/reference/foundations/content/#definitions-location)*/

  - [ ![Docs](/assets/i/*[ page numbering
](/docs/re/*![Preview](/assets/docs/4ABrNAaHVbvzCF9JEmUebAAAAAAAAAAA.png)*/n/*[
page counter ](/docs/reference/introspection/counter/#page-counter)*/[ Introspection ](/docs/reference/introspection/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ State ](/docs/reference/introspection/state/)

=  state

Manages stateful parts of your document.

Let's say you have some computations in your document and want to remember the
result of your last computation to use it in the next one. You might try
something similar to the code below and expect it to output 10, 13, 26, and
21. However this *does not work* in Typst. If you test this code, you will
see that Typst complains with the following error message: _Variables from
outside the function are read-only and cannot be modified._

    
    
    // This doesn't work!
    #let x = 0
    #let compute(expr) = {
      x = eval(
        expr.replace("x", str(x))
      )
      [New value is #x. ]
    }
    
    #compute("10") \
    #compute("x + 3") \
    #compute("x * 2") \
    #compute("x - 5")
    

==  State and document markup

Why does it do that? Because, in general, this kind of computation with/*[
counters ](/docs/reference/introspection/counter/)*/T/*[ state
](/docs/reference/introspection/state/ "state")*/se, the computation must proceed in the same order in
which the results will be laid out in the document. In our simple example,
that's/*[Preview](/assets/docs/C2bjyzuukR06BSWIMgC89wAAAAAAAAAA.png)*/slightly different, but similar kind of state: The he/*![â](/assets/icons/16-arrow-right.svg)*/ heading counter at each heading. Easy
enough, right? Just/*![â](/assets/icons/16-arrow-
right.svg)*/sider the
following example:

    
    
    #set heading(numbering: "1.")
    #let template(body) = [
 /*[ me/*![Docs](/assets/icons/16-docs-dark.svg)*/metadata/ "metadata")*/ate
    
    = Introduction
    ...
    

![Preview](/assets/docs/OC8Yphz4-mFQhH6Mm9lwwAAAAAAAAAAA.png)

Here, Typst first processes the body of the document after the show rule, sees
the ` Introduction ` heading, then passes the resulting content to the `
template ` function and only then sees the ` Outline ` . Just counting up
would number the ` Introduction ` with ` 1 ` and the ` Outline ` with ` 2 ` .

==  Managing state in Typst

So what do we do instead? We use Typst's state management system. Calling the
` state ` function with an identifying string key and an optional initial
value gives you a state value which exposes a few functions. The two most
important ones are ` get ` and ` update ` :

  - The [ ` get ` ](/docs/reference/introspection/state/#definitions-get) function retrieves the current value of the state. Because the value can vary over the course of the document, it is a _contextual_ function that can only be used when/*[ label ](/docs/reference/foundations/label//*[ selector
](/docs/reference/foundations/selector//*[ location
](/docs/reference/introspection/location//*[ function
](/docs/reference/foundations/function/)*//*[ none
](/docs/reference/foundations/none//*[ location
](/docs/reference/introspection/location/)*/ction /*[ array ](/docs/reference/foundations/array/)*/ the new state./*[ label ](/docs/reference/foundations/label/)*/i/*[ selector
](/docs/reference/foundations/selector/)*/o/*[ location
](/docs/reference/introspection/location/)*/r/*[ function
](/docs/reference/foundations/function/)*/context s.get().
    ]
    
    #compute("10") \
    #compute("x + 3") \
    #compute("x * 2") \
    #compute("x - 5")
    

![Preview](/assets/docs/TvB3cSxy6XwQVp0EXZ9-ewAAAAAAAAAA.png)

State managed by Typst is always updated in layout order, not in evaluation
order. The ` update ` method returns content and its effect occurs at the
/*[ locatable ](/docs/reference/introspection/location/#locatable)*/t.

As a result, we can now also store some of the/*[ none ](/docs/reference/foundations/none/)*/s/*[ location
](/docs/reference/introspection/location/)*/#let more = [
      #compute("x * 2") \
      #compute("x - 5")
    ]
    
    #compute("10") \
    #compute("x + 3") \
    #more
    

![Preview](/assets/docs/leSHwxlkl8fBohZKt4lM4AAAAAAAAAAA.png)

This example is of course a bit silly, but in/*[ ![â](/assets/icons/16-arrow-right.svg)*/ant! A good example are heading counters, which is why Typst's [/*[ ![â](/assets/icons/16-arrow-
right.svg)*/ction/counter/) is very similar to
its state system.

==  Time Travel

By using Typst's state management s/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/es! We can find out what the value of the state will/*[ Reference ](/docs/reference/)*/ment from anywhere else. In particular, the/*[ Introspection ](/docs/reference/introspection/)*/ any particular location and the ` final `
/*[ Locate ](/docs/reference/introspection/locate/)*/d of the document.

    
    
    ...
    
    Value at `<here>` is
    #context s.at(<here>)
    
    #compute("10") \
    #compute("x + 3") \
    _Here._ <here> \
    #compute("x * 2") \
    #compute("x - 5")
    

![Preview](/assets/docs/*[ ` location ` ](/docs/reference/introspection/location/
"`location`")*/lve the values of all states, Typst evaluates parts of your code
m/*[ ` page ` ](/docs/reference//*![â](/assets/icons/1/*[ none ](/docs/reference/foundations/none/)*/`
](/docs/reference/introspection/location/#definitions-position)*/depending on the final value of a
state, the results might never converge. The example below illustrates this.
We initialize our /*![Docs](/assets/icons/16-docs-dark/*[ str ](/docs/reference/foundations/str/)*/*[Preview](/assets/docs/fizxN7L7L7E8uWpTd8_mMgAAAAAAAA/*![](/assets/icons/16-arrow-right.svg)*/is example displays a finite value because
Typst simply/*![](/assets/icons/16-arrow-right.svg)*/
    
    // This is bad/*[ ` here `
](/docs/reference/introspection/here/ "`here`")*/() + 1)
    #context s.get()
    

![Preview](/assets/docs/4ABrNAaHVbvzCF9JEmUebAAAAAAAAAAA.png)

In general, you should try not to generate state updates from within context
expressions. If possible, try to express your updates as non-contextual values
or functions that compute the new value from the previous value. Sometimes, it
cannot be helped, but in those cases it is up to you to ensure that the result
converges.

==  Constructor

Question mark

If a/*[ label ](/docs/reference/foundations/label//*[ selector
](/docs/reference/foundations/selector//*[ location
](/docs/reference/introspection/location//*[ function
](/docs/reference/foundations/function/)*/y  ,/*[ content ](/docs/reference/foundations/content//*[ location
](/docs/reference/introspection/location/)*/ndations/str/)

R/*[ label ](/docs/reference/foundations/label/)*/l/*[ selector
](/docs/reference/foundations/selector/)*/
/*[ location
](/docs/referen/*![Preview](/as/*[Preview](/assets/docs/oZRwamqZZ0p_tV8oioYxxgAAAAAAAAAA.png)*/ction/)*/s are specified in order, without names.

The initial value of the state.

Default: ` none  `

==  Definitions

Question mark

Functions and types and can have associated definitions. These are accessed by
specifying the /*[ ` here ` ](/docs/reference/introspection/here/ "`here`")*/ition's name.

===  ` get ` Context/*[ ` location ` ](/docs/reference/i/*![â](/assets/icons/16-arrow-right.svg)*/xt is known

Retrieves the value of the/*[ ` location() ` ](/docs/reference/foundations/content/#definitions-location)*/e  (  )  )  ` .

s/*[ ![â](/assets/icons/16-arrow-right.svg)*/textual

Question mark

Contextual functions can only be/*[ ![â](/assets/icons/16-arrow-
right.svg)*/the value of the state at the given selector's unique match.

The ` selector ` must match exactly one eleme/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ of selectors for this are [ labels
](/docs/referenc/*[ Reference ](/docs/reference/)*/ations
](/docs/reference/introspection/loca/*[ Visualize ](/docs/reference/visualize/)*/ity with Typst 0.10 and lower, this functio/*[ Image ](/docs/reference/visualize/image/)*/ ` selector ` is a location. This
behaviour will be removed in a future release.

self  .  at  (

[ label ](/docs/reference/foundations/label/) [ selector
](/docs//*[ ` figure ` ](/docs/reference/model/figure/
"`figure`")*/rence/introspection/location/) [ function
](/docs/reference/foundations/function/)

)  -> any

====  ` selector `

[ label ](/docs/reference/foundations/label/) or  [ selector
](/docs/reference/founda/*[ ` box ` ](/docs/reference/layout/box/ "`box`")*/e/introspection/location/) or  [ function
](/docs/reference/foundations/function/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The/*[Preview](/assets/docs/znWnPh4HT5GrpkEcbnfOxAAAAAAAAAAA.png)*/ ` final ` Contextual

Question mark

Contextual functions can only be used when the context is known

Retrieves the value of the state at t/*[ str ](/docs/reference/foundations/str/)*/(

[ none ]/*[ auto
](/docs/reference/foundations/auto//*[ str ](/docs/reference/foundations/str/)*/cation/)

/*[ auto ](/docs/reference/foundations/auto//*[ relative
](/docs/reference/layout/relative/)*/ion
](/docs/*[ auto
](/docs/reference/foundations/auto//*[ relative
](/docs/reference/layout/relative//*[ fraction
](/docs/reference/layout/fraction/)*/mpatibil/*[ none
](/docs/reference/foundations/none//*[ str ](/docs/reference/foundations/str/)*/10 and l/*[ str ](/docs/reference/foundations/str/)*/ult: `/*[ content ](/docs/reference/foundations/content/)*/e state.

The/*[ str ](/docs/reference/foundations/str/)*//*![Preview](/assets/docs/jo-em7a3jFROfNLdVe33CwAAAAAAAAAB.png)*/ you don't put the output into the document,
nothing happens! This would be the case,/*[ Paths section ](/docs/reference/syntax/#paths)*/ "key"  )  .  upd/*[ auto ](/docs/reference/foundations/auto/)*/a/*[ str
](/docs/reference/foundations/str/)*/Typst wouldn't know when to update the
state.

self  .  update  (

any  [ function ](/docs/reference/foundations/function/)

)  -> [ content ](/docs/reference/foundations/content/)

====  ` update `

any  or  [ function ](/docs/reference/foundations/fu/*[
not currently supported ](h/*![â](/assets/icons/16-arrow-right.svg)*/)*/re specified in order, without names.

If given a non funct/*![â](/assets/icons/16-arrow-
right.svg)*/If given a
function, that function receives the previous state and has to return the new
state.
/*![Docs](/assets/icons/16-docs-dark.svg)*/ value of the state.

*Deprecation planned:* Use [ ` get `
](/docs/reference/introspection/state/#definitions-get) ins/*[ auto ](/docs/reference/foundations/auto/)*/r/*[ relative
](/docs/reference/layout/relative/)*//reference/foundations/function/)

)  -> [ content ](/docs/reference/foundations/content/)

====  ` func `

[ none ](/docs/reference/foundations/none/) or  [ function
](/docs/reference/*[ auto ](/docs/reference/foundations/auto/)*/o/*[ relative
](/docs/reference/layout/relative/)*/ /*[ fraction
](/docs/reference/layout/fraction/)*/es the value of the state and can return arbitrary
content which is then displayed. If this is omitted, the value is directly
displayed.

Default: ` none  `

[ ![â](/assets/icons/1/*[ none ](/docs/reference/foundations/none/)*/d/*[ str
](/docs/reference/foundations/str/)*//*![Pr/*[ none ](/docs/reference/foundations/none//*[ color
](/docs/reference/visualize/color//*[ gradient
](/docs/reference/visualize/gradient//*[ pattern
](/docs/reference/visualize/pattern/)*/ ](/docs/reference/foundations/str/)*/rrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Introspection ](/docs/reference/introspection/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Metadata ](/docs/reference/introspection/metadata/)

=  ` metadata ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

Exposes a value to the query system without producing visible content.

This element can be retrieved with the [ ` query `
](/docs/reference/introspection/query/ "`query`") function and from the
command line with [ ` typst query `
](/docs/reference/introspection/query/#command-line-queries) . Its purpose is
to expose an arbitrary value to the introspection system. To identify a
metadata value among others, you can attach a [ ` label `
](/docs/reference/foundations/label/ "`label`") to it and query for that
label.

The ` metadata ` element is especially useful for command line queries because
it allows you to expose arbitrary values to the outside world.

    
    
    // Put metadata somewhere.
    #metadata("This is a note") <note>
    
    // And find it from anywhere else.
    #context {
      query(<note>).first().value
    }
    

![Preview](/as/*[Preview](/assets/docs/oZRwamqZZ0p_tV8oioYxxgAAAAAAAAAA.png)/*[Preview](/assets/docs/oZRwamqZZ0p_tV8oioYxxgAAAAAAAAAB.png)/*[Preview](/assets/docs/oZRwamqZZ0p_tV8oioYxxgAAAAAAAAAC.png)*/me.

metadata  (

any

)  -> [ content ](/docs/reference/foundations/content/)

===  ` value `

any

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The value to embed into the document.

[ ![â](/assets/icons/16-arrow-right.svg) Location  Pr/*[ str ](/docs/reference/foundations/str//*[ bytes
](/docs/reference/foundations/bytes/)*/row-
right./*[ auto
](/docs/reference/foundations/auto//*[ str ](/docs/reference/foundations/str/)*/ce/introsp/*[ auto ](/docs/reference/foundations/auto//*[ relative
](/docs/reference/layout/relative/)*/ts/icons/16/*[ auto
](/docs/reference/foundations/auto//*[ relative
](/docs/reference/layout/relative//*[ fraction
](/docs/reference/layout/fraction/)*/ence/int/*[ none
](/docs/reference/foundations/none//*[ str ](/docs/reference/foundations/str/)*/nce/intr/*[ str ](/docs/reference/foundations/str/)*/l

Que/*[ content ](/docs/reference/foundations/content/)*/ when the context is known

Finds elements in the document.

The ` query ` functions lets you search your document for elements of a
particular type or with a particular label. To use it, you first need to/*[Preview](/assets/docs/yVFFVjYQ7xibSWu-658yNwAAAAAAAAAA.png)*/ is available./*[ str ](/docs/reference/found/*![â](/assets/icons/16-arrow-right.svg)*/ce/foundations/bytes/)*/stead of using
the [ ` outline ` ](/docs/r/*![â](/assets/icons/16-arrow-
right.svg)*/tion.

To do this, we first query for all headings in the document at level 1 and
where ` o/*[ auto ](/docs/refe/*![Docs](/assets/icons/16-docs-dark.svg)*/ocs/refere/*![](/assets/icons/16-arrow-right.svg)*/ple, sub-headings are not included in/*![](/assets/icons/16-arrow-right.svg)*/d ` field is used to exclude the "Table of
Contents" he/*![](/assets/icons/16-arrow-right.svg)*/context ` to be able to use the ` query ` function.

    
    
    #set page(numbering: "1")
    
    #heading(outlined: false)[
      Table of Contents
    ]
    #context {
      let chapters = query(
      /*[ auto ](/docs/reference/foundations/auto/)*/ /*[ relative
](/docs/reference/layout/relative/)*/ chapter in chapters {
        let loc = /*[ auto ](/docs/reference/foundations/auto/)*/n/*[ relative
](/docs/reference/layout/relative/)*/./*[ fraction
](/docs/reference/layout/fraction/)*/pter.body #h(1fr) #nr \ ]
      }
    }/*[ none ](/docs/reference/foundations/none/)*/ /*[ str
](/docs/reference/foundations/str/)*/#lorem(8)
    
    = Discussion
    #lorem(/*[ str ](/docs/reference/foundations/str/)*/3jFROfNLdVe33CwAAAAAAAAAA.png)
![Preview](/assets/docs/jo-em7a3jFROfNLdVe33CwAAAAAAAAAB.png)

To ge/*![Preview](/assets/docs/fizxN7L7L7E8uWpTd8_mMgAAAAAAAAAA.png)*/ returned by
` query ` with [ ` location `
](/docs/reference/foundations/content/#definitions-location) . We then also
retrieve the [ page numbering
](/docs/reference/introspection/location/#defini/*![â](/assets/icons/16-arrow-right.svg)*/ ](/docs/reference/introspection/counter/#page-counter/*![â](/assets/icons/16-arrow-right.svg)*/ng to the counter.

==  A word of caution

To resolve all your queries, Typst evaluates and layouts part/*![Docs](/assets/icons/16-docs-dark.svg)*/assets/icons/16-arrow-right.svg)*/ your queries can actually
be completely resolved. If you ar/*[ ![â](/assets/icons/16-arrow-
right.svg)*/ading to a result that never stabilizes.

In the example below, we query for all headings in t/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/dings. In the beginning, there's just one heading, t/*[ Reference ](/docs/reference/)*/` is ` 1 ` and one ` Fake ` heading is gene/*[ Visualize ](/docs/reference/visualize/)*/ has changed and processes it again. This
t/*[ Path ](/docs/reference/visualize/path/)*/headings are generated. This goes on
and on. As we can see, the output has a finite amount of headings. This is
because Typst simply gives up after a few attempts.

In general, you should try not to write queries that affect themselves. The
same words of caution also apply to other introspection features like [
counters ](/docs/reference/introspection/cou/*[Preview](/assets/docs/fHH_90d6MEksjFQh_gCkDwAAAAAAAAAA.png)*/tate") .

    
    
    = Real
    #context {
      let elems = query(heading)
      let count = elems.len()
      count * [= Fake]
    }
    

![Pr/*[ none ](/docs/reference/foundations/none//*[ color
](/docs/reference/visualize/color//*[ gradient
](/docs/reference/visualize/gradient//*[ pattern
](/docs/reference/visualize/pattern/)*/s command exec/*[ str
](/docs/reference/foundations/str/)*/nd returns
/*[ none
](/docs/reference/foundations/none//*[ auto
](/docs/reference/foundations/auto//*[ length
](/docs/reference/layout/length//*[ color ](/docs/reference/visualize/color//*[ gradient ](/docs/reference/visualize/gradient//*[ stroke
](/docs/reference/visualize/stroke//*[ pattern
](/docs/reference/visualize/pattern//*[ dictionary
](/docs/reference/foundations/dictionary/)*/e>"
    [
 /*[ bool
](/docs/reference/foundations/bool/)*/"val/*[ array
](/docs/reference/foundations/array/)*/e>"
  /*[ content ](/docs/reference/foundations/content/)*/n only one sp/*[ none ](/docs/reference/foundations/none/)*/t/*[ color
](/docs/reference/visualize/color/)*/v/*[ gradient
](/docs/reference/visualize/gradient/)*/a/*[ pattern
](/docs/reference/visualize/pattern/)*/t.

    
    
    $ typst query example.typ "<note>" --field value
    ["This is a note"]
    

If you are interested in just a single element, you can use the ` --one ` flag
to extract just it.

    
    
    $ typst query example.typ "<note>" --field value --one
    "This is a note"
    

==  Parameters

Questio/*[ str ](/docs/reference/foundations/str/)*/nction. They are specified in parentheses
after the function name.

query  (

[ label ](/docs/reference/foundations/label/) [ selector
](/docs/reference/foundations/selector/) [ location
](/docs/reference/introspection/location/) [ function
](/docs/reference/foundations/function/) ,  [ none
](/docs/reference/foundations/none/) [ location
](/docs/reference/introspection/location/) ,

)  -> [ array ](/docs/reference/foundations/array/)

===  ` target `

[ label ](/docs/reference/foundations/label/) or  [ selector
](/docs/reference/foundations/selector/) or  [ location
](/docs/reference/introspection/location/) or  [ function
](/docs/reference/foundations/function/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

Can be

  - an element function like a ` heading ` or ` figure `/*[Preview](/assets/docs/MJEOUf62l7aK0PG-Hl3HKgAAAAAAAAAA.png)*/heading  .  whe/*[ none ](/docs/reference/foundations/none/)*/o/*[ auto
](/docs/reference/foundations/auto/)*/ /*[ length
](/docs/reference/layout/length/)*/e/*[ color
](/docs/reference/visualize/color/)*/
/*[ gradient
](/docs/reference/visualize/gradient/)*/n/*[ stroke
](/docs/reference/visualize/stroke/)*/l/*[ pattern
](/docs/reference/visualize/pattern/)*/n/*[ dictionary
](/docs/reference/foundations/dictionary/)*/e specified in order, without names.

_Compatibility:_ This argument is deprecated. It only exists for compatibility
with Typst 0/*[ stroke ](/docs/reference/visualize/stroke/ "stroke")*/ ` none  `

[ ![â](/assets/icons/16-arrow-right.svg) Metadata  Previous page
](/docs/reference/introspection/metadata/) [ ![â](/assets/icons/16-arrow-
right.svg) State  Next page  ](/d/*[ bool ](/docs/reference/foundations/bool/)*/ocs/reference/introspection/locate.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Introspection ](/docs/reference/introspection/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Locate ](/docs/reference/introspection/locate/)

=  ` locate ` Context/*[ array ](/docs/reference/foundations/array/)*/only be used when the context is known

Determines the location of an element in the document.

Takes a selector that must match exactly one element and returns that
element's [ ` location ` ](/docs/reference/introspection/location/
"`location`") . This location can, in particul/*[ ` line ` ](/docs/reference/visualize/line/ "`line`")*//*[ ` polygon ` ](/docs/reference/visualize/polygon/ "`polygon`")*/nd [ ` position `
](/docs/reference/introspection/location/#definitions-position) (page, x, y)
for that element.

==  Examples

Locating a specific element:

    
    
    #context [
      Introduction is at: \
      #locate(<intro>).position()
    ]
    
    = Introduction <intro>
    

![Preview](/assets/docs/fizxN7L7L7E8uWpTd8_mMgAAAAAAAAAA.png)

==  Compatibility

In Typst 0.10 and lower, the ` locate ` function took a closure that made the
current location in the document available (like [ ` here `
](/docs/reference/introspection/here/ /*[ ![â](/assets/icons/16-arrow-right.svg)*/ deprecated. Compatibility with the old way will rem/*[ ![â](/assets/icons/16-arrow-right.svg)*/me to upgrade. To that effect, ` locate ` detects whether it
received a selector or a user-defined fun/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ly. This behaviour will be removed in the future.

=/*[ Reference ](/docs/reference/)*/arameters are the inputs to a function. The/*[ Visualize ](/docs/reference/visualize/)*/function name.

locate  (

[ label ](/docs//*[ Square ](/docs/reference/visualize/square/)*/ocs/reference/foundations/selector/) [ location
](/docs/reference/introspection/location/) [ function
](/docs/reference/foundations/function/)

)  -> [ content ](/docs/reference/foundations/content/) [ location
](/docs/reference/introspection/location/)

=/*![â](/assets/icons/16-arrow-right.svg)*/nce/found/*[Preview]/*![](/assets/icons/16-arrow-right.sv/*[ ![â](/assets/icons/16-arrow-right.svg)*/](/docs/reference/introspection/location/) or  [ function
](/docs/reference/foundations/function/)

Req/*![Docs](/assets/icons/16-docs-dark.svg)*/eference/foundations/auto//*[ length
](/docs/reference/layout/length/)*/tor that s/*[ auto
](/docs/reference/foundations/auto//*![/*[ Visualize ](/docs/reference/visualize/)*/e/)*/ombination //*![Preview](/assets/docs//*[ Ellipse ](/docs/reference/visualize/ellipse/)*//layout/relative//*[ fraction
](/docs/reference/layout/fraction/)*//referenc/*[ none
](/docs/reference/foundations/none//*[ color
](/docs/reference/visualize/color//*[ gradient
](/docs/reference/visualize/gradient//*[ pattern
](/docs/reference/visualize/pattern/)*/ontent. 

[/*[ none
](/docs/reference/foundations/none//*[ auto
](/docs/reference/foundations/auto//*[ length
](/docs/reference/layout/length//*[ color ](/docs/reference/visualize/color//*[ gradient ](/docs/reference/visualize/gradient//*[ stroke
](/docs/reference/visualize/stroke//*[ pattern
](/docs/reference/visualize/pattern//*[ dictionary
](/docs/reference/foundations/dictionary/)*/)
  - [ Ref/*[ relative
](/docs/reference/layout/relative//*[ dictionary
](/docs/reference/foundations/dictionary/)*/ence/visua/*[ relative
](/docs/reference/layout/relative//*[ dictionary
](/docs/reference/foundations/dictionary/)*/=  ` image /*[ relative
](/docs/reference/layout/relative//*[ dictionary
](/docs/reference/foundations/dictionary/)*//*[ none
](/docs/reference/foundations/none//*[ content
](/docs/reference/foundations/content/)*/del/fi/*[ content ](/docs/reference/foundations/content/)*/.

Like most /*[ auto ](/docs/reference/foundations/auto/)*/l/*[ length
](/docs/reference/layout/length/)*/o adjacent paragraphs. To force an image to become
inline, put it into a [ ` box ` ](/docs/reference/layout/box/ "`box`") .

==  Example

    
    
    #figure(
      image("molecular.jpg", width: 80%),
      caption: [
        A step in the mo/*[ auto ](/docs/reference/foundations/auto/)*/./*[ relative
](/docs/reference/layout/relative/)*/znWnPh4HT5GrpkEcbnfOxAAAAAAAAAAA.png)

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

image  (

[ str ](/docs/reference/foundations/str/) ,  format  :  [ auto
](/docs/reference/foundations/auto/) [ str ](/docs/reference/foundations/st/*[ auto ](/docs/reference/foundations/auto/)*/o/*[ relative
](/docs/reference/layout/relative/)*/l/*[ fraction
](/docs/reference/layout/fraction/)*/reference/foundations/auto/) [ relative
](/docs/reference/layout/relative/) [ fraction
](/docs/reference/layout/fraction/) ,  alt  :  [ none
](/docs/reference/foundations/none/) [ str ](/docs/reference/foundations/str/)
,  fit  :  [ str ](/docs/reference/foundations/str/) ,

)  -> [ content ](/docs/reference/foundati/*[ none ](/docs/reference/foundations/none/)*///*[ color
](/docs/reference/visualize/color/)*/t/*[ gradient
](/docs/reference/visualize/gradient/)*/p/*[ pattern
](/docs/reference/visualize/pattern/)*/age file

For more details, see the [ Paths section ](/docs/reference/syntax/#paths) .

===  ` format `

[ auto ](/docs/reference/foundations/auto/) or  [/*[ rectangle's documentation
](/docs/reference/visualize/rect/#parameters-fill)*/rameters can be customized for all following uses of /*[ none ](/docs/reference/foundations/none/)*/e/*[ auto
](/docs/reference/foundations/auto/)*/t/*[ length
](/docs/reference/layout/length/)*/n/*[ color
](/docs/reference/visualize/color/)*/r/*[ gradient
](/docs/reference/visualize/gradient/)*/i/*[ stroke
](/docs/reference/visualize/stroke/)*/ /*[ pattern
](/docs/reference/visualize/pattern/)*/n/*[ dictionary
](/docs/reference/foundations/dictionary/)*/aster format suitable for photos.   
` "  gif  " ` |  Raster format that is typically used for/*![â](/assets/icons/16-arrow-
right.svg)*/  The vector graphics/*[ rectangle's documentation
](/docs/reference/visualize/rect/#parameters-/*![Docs](/assets/*[ rectangle's documentation
](/docs/reference/visualize/rect/#parameters-stroke)*/ut/relative/)*/r/*[ dictionary
](//*![](/assets/icon/*[ relative ](/docs/reference/layout/relative/)*/n
with a ` set ` rule.

The width of the image.

Default: ` auto  `

===  ` height `

[ auto ](/docs/reference/foundations/auto/) or  [ relative
](/*[ rectangle's documentation
](/docs/reference/visualize/rect/#parameters-radius)*/on/)

Settable

Question mark

Settable parameters can /*[ relative ](/docs/reference/layout/relative/)*/n/*[ dictionary
](/docs/reference/foundations/dictionary/)*/efault: ` auto  `

===  ` alt `

[ none ](/docs/reference/foundations/none/) or  [ str
/*![Preview](/assets/docs/fHH_90d6MEksjFQh_gCkDwAAAAAAAAAA.png)*/
Settable parameters/*[ box's documentation
](/docs/reference/layout/box/#parameters-inset)*/t ` rule.

A text describing the image.

Default: ` none  `/*[ relative ](/docs/reference/layout/relative/)*/t/*[ dictionary
](/docs/reference/foundations/dictionary/)*/s can be customized for all following uses of the function
with a ` set ` rule.

How the image should adjust itself to a given area (the area is defined by the
` width ` and ` height ` fields). Not/*[
box's documentation ](/docs/reference/layout/box/#parameters-outset)*/atio is the same as the image's one.

Variant  |  Deta/*[ none ](/docs/reference/foundations/none/)*/g/*[ content
](/docs/reference/foundations/content/)*/ect ratio by cropping the imag/*![â](/assets/icons/16-arrow-right.svg)*/ is the default.   
` "  contain  " ` |  The image shoul/*![â](/assets/icons/16-arrow-right.svg)*/ves aspect ratio; doesn't crop the image; one dimension can be narrower than specified).   
` "  stretch /*![Docs](/assets/icons/16-docs-dark.svg)*/o that it exactly fills the area, even if this means that the image will be distorted (doesn't preserve aspect /*[ ![â](/assets/icons/16-arrow-right.svg)*/efault: ` "cover"  `

![](/assets/icons/16-arrow-right.sv/*[ ![â](/assets/icons/16-arrow-right.svg)*/idth: 300pt, height: 50pt, margin: 10pt)
    #image("tiger.jpg", width: 100%, fit: "cover")
    #imag/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/")
    #image("tiger.jpg", width: 100%, fit: "stretc/*[ Reference ](/docs/reference/)*/cs/oZRwamqZZ0p_tV8oioYxxgAAAAAAAAAA.png)
![/*[ Visualize ](/docs/reference/visualize/)*/xxgAAAAAAAAAB.png)
![Preview](/assets/docs//*[ Ellipse ](/docs/reference/visualize/ellipse/)*/nitions

Question mark

Functions and types and can have associated definitions. These are accessed by
specifying the function or type, followed by a period, and then the
definition's name.

===  ` decode `

Decode a raster or vector graphic from bytes or a string.

image  .  decode  (

[ str ](/docs/reference/foundations/str/) [ bytes
](/docs/reference/found/*[Preview](/assets/docs/u35LFJMn0LDLxUBqOdjmvgAAAAAAAAAA.png)*/tions/auto/) [ str ](/docs/reference/foundations/str/)
,  width  :  [ auto ](/docs/reference/foundations/auto/) [ relative
](/docs/reference/layout/rela/*[ auto ](/docs/reference/foundations/auto//*[ relative
](/docs/reference/layout/relative/)*/ference/lay/*[ auto
](/docs/reference/foundations/auto//*[ relative
](/docs/refe/*![Preview](/assets/docs/MJEOUf62l7aK0PG-Hl3HKgAAAAAAAAAA.png)*/raction/)*/s/referen/*[ none
](/docs/reference/foundations/none//*[ color
](/docs/reference/visualize/color//*[ gradient
](/docs/reference/visualize/gradient//*[ pattern
](/docs/reference/visualize/pattern/)*/gram.svg")
/*[ none
](/docs/reference/foundations/none//*[ auto
](/docs/reference/foundations/auto//*[ length
](/docs/reference/layout/length//*[ color ](/docs/reference/visualize/color//*[ gradient ](/docs/reference/visualize/gradient//*[ stroke
](/docs/reference/visualize/stroke//*[ pattern
](/docs/reference/visualize/pattern//*[ dictionary
](/docs/reference/foundations/dictionary/)*/al

Questi/*[ relative
](/docs/reference/layout/relative//*[ dictionary
](/docs/reference/foundations/dictionary/)*/age. Can be/*[ relative
](/docs/reference/layout/relative//*[ dictionary
](/docs/reference/foundations/dictionary/)*//*[ none
](/docs/reference/foundations/none//*[ content
](/docs/reference/foundations/content/)*/ariant/*[ content ](/docs/reference/foundations/content/)*/ format for il/*[ auto ](/docs/reference/foundations/auto/)*/"/*[ relative
](/docs/reference/layout/relative/)*/ photos.   
` "  gif  " ` |  Raster format that is typically used for short animated clips.   
` "  svg  " ` |  The vector graphics format of the web.   
  
====  ` width `

[ auto ](/docs/reference/foundations/auto/*[ auto ](/docs/reference/foundations/auto/)*/r/*[ relative
](/docs/reference/layout/relative/)*/i/*[ fraction
](/docs/reference/layout/fraction/)*/to/) or  [ relative
](/docs/reference/layout/relative/) or  [ fraction
](/docs/reference/layout/fraction/)

The height of the image.

====  ` alt `

[ none ](/docs/reference/foundations/none/) or  [ str
](/docs/ref/*[ none ](/docs/reference/foundations/none/)*/ /*[ color
](/docs/reference/visualize/color/)*/f/*[ gradient
](/docs/reference/visualize/gradient/)*/j/*[ pattern
](/docs/reference/visualize/pattern/)*/s   
---|---  
` "  cover  " ` |  The image should completely cover the area (preserves aspect ratio by cropping the image only horizontally or vertically)/*[ rectangle's documentation
](/docs/reference/visualize/rect/#parameters-fill)*/ined in the area (preserves aspect ratio; doesn't cro/*[ none ](/docs/reference/foundations/none/)*/t/*[ auto
](/docs/reference/foundations/a/*![â](/assets/icons/16-arrow-right.svg)*/out/length/)*/l/*[ color
](/docs/reference/visualize/c/*![â](/assets/icons/16-arrow-right.svg)*/visualize/gradient/)*/t/*[ stroke
](/docs/reference/visualize/stroke/)*/[/*[ pattern
](/docs/reference/v/*![Docs](/assets/icons/16-docs-dark.svg)*/docs/refer/*![](/assets/icons/16-arrow-right.svg)*/](/assets/icons/16-arrow-
right.svg) /*![](/assets/icons/1/*[ Jet
](https://jakevdp.github.io/blog/2014/10/16/how-bad-is-your-colormap/)*/[ ![Docs](/assets/*[ rectangle's documentation
](/docs/reference/visualize/rect/#parameters-stroke)*/[ Reference ](/docs/reference/)
  - ![](/assets/icon/*[ relative ](/docs/reference/layout/relative/)*/r/*[ dictionary
](/docs/reference/foundations/dictionary/)*/ht.svg)
  - [ Path ](/docs/reference/visualize/path/)

=  ` path ` Element

Question mark

Element functions can be customized /*![Preview](/assets/docs/DjWoCmaGrn_miIIjOqjv7gAAAAAAAAAA.png)*/tion
](/docs/reference/layout/box/#parameters-inset)*/   
    
    #path(
      fill: blue.lighten(80%),
      st/*[ relative ](/docs/reference/layout/relative/)*/p/*[ dictionary
](/docs/reference/foundations/dictionary/)*/,
    )
    

![Preview](/assets/docs/fHH_90d6MEksjFQh_gCkDwAAAAAAAAAA.png)

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the funct/*[
box's documentation ](/docs/reference/layout/box/#parameters-outset)*//) [ color
](/docs/reference/visualize/color/) [ gradi/*[ none ](/docs/reference/foundations/none/)*/[/*[ content
](/docs/reference/foundations/content/)*/ fill-rule  :  [ str
](/docs/reference/foundations/str/) ,  stroke  :  [ none
](/docs/reference/foundations/none/) [ auto
](/docs/reference/foundations/auto/) [ length
](/docs/reference/layout/length/) [ color ](/docs/reference/visualize/color/)
[ gradient ](/docs/reference/visualize/gradient/) [ stroke
](/docs/reference/visualize/stroke/) [ pattern
](/docs/refere/*[ ![â](/assets/icons/16-arrow-right.svg)*/cs/reference/foundations/dictionary/) ,  closed  :  [ /*[ ![â](/assets/icons/16-arrow-right.svg)*/,  ..  [ array
](/docs/reference/foundations/array/) ,

)  -> [ content ](/docs/reference/foundations/c/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/eference/foundations/none/) or  [ color
](/docs/refe/*[ Reference ](/docs/reference/)*/radient
](/docs/reference/visualize/gradien/*[ Visualize ](/docs/reference/visualize/)*/lize/pattern/)

Settable

Question mark

Se/*[ Color ](/docs/reference/visualize/color/)*/ following uses of the function
with a ` set ` rule.

How to fill the path.

When /*[ ` rgb ` function ](/docs/reference/visualize/color/#definitions-rgb)*/ith
both fill and str/*[ ` cmyk ` function ](/docs/reference/visualize/color/#definitions-cmyk)*/

[ str ](/docs/refere/*[ ` luma ` function ](/docs/reference/visualize/color/#definitions-luma)*/be customized for a/*[ ` oklab ` function ](/docs/reference/visualize/color/#definitions-oklab)*/sed to fill the pat/*[ ` oklch ` function ](/docs/reference/visualize/color/#definitions-oklch)*/"inside" is computed by /*[ ` color.linear-rgb ` function ](/docs/reference/visualize/color/#definitions-linear-rgb)*/is computed by an/*[ ` color.hsl ` function ](/docs/reference/visualize/color/#definitions-hsl)*/cons/16-arrow-rig/*[ ` color.hsv ` function ](/docs/reference/visualize/color/#definitions-hsv)*/nction that has the common
    // arguments pre-ap/*[Preview](/assets/docs/k-6wh2l9TTXmPhzZxpahjQAAAAAAAAAA.png)*/sed: true,
      (25pt, 0pt),
      (10pt, 50pt),
      (50pt, 20pt),
      (0pt, 20pt),
      (40pt, 50pt),
    )
    
    #star(fill-rule: "non-zero")
    #star(fill-rule: "even-odd")
    

![Preview](/assets/docs/MJEOUf62l7aK0PG-Hl3HKgAAAAAAAAAA.png)

===  ` stroke `

[ none ](/docs/reference/foundations/none/) or  [ auto
](/docs/reference/foundations/auto/) or  [ length
](/docs/reference/layout/length/) or  [ color
](/docs/reference/visualize/color/) or  [ gradient
](/docs/reference/visualize/gradient/) or  [ stroke
](/docs/reference/visualize/stroke/) or  [ pattern
](/docs/reference/visualize/pattern/) or  [ dictionary
](/docs/reference/foundations/dictionary/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

How to [ stroke ](/docs/reference/visualize/stroke/ "stroke") the path. This
can be:

Can be set to ` none  ` to disable the stroke or to ` auto  ` for a stroke of
` 1pt  ` black if and if only if no fi/*[Preview](/assets/docs/IWvUAQq21Ue1zu9gwjch-gAAAAAAAAAA.png)*//docs/reference/foundations/bool/)

Settable

Question mark

Settable parameters can be customiz/*[
gradients ](/docs/reference/visualize/gradient/#definitions-linear)*/er to close this path with one last bezier curve. This curve will takes
into account the adjacent control points. If you want to close with a s/*[Preview](/assets/docs/uG6iVgmQwH_6_-1N42yKHwAAAAAAAAAA.png)*/he start point.

Default: ` false  `

===  ` vertices `

[ array ](/docs/reference/foundatio/*[ this blog post ](https://ai.googleblog.com/2019/08/turbo-improved-rainbow-colormap-for.html)*/ without names.

Variadic

Question mark

Variadic parameters can be spec/*[ this blog post ](https://bids.github.io/colormap/)*/ch vertex can be defined in 3 ways:

  - A regular point, as given to the [ ` line ` ](/docs/reference/visualize/line/ "`line`") or [ ` polygon `/*[ HSL ](/docs/reference/visualize/color/#definitions-hsl)*/on. 
  - An array of two points, the first being the vertex and the second being the control point. The control point is expressed relative to the vertex and is mirrored to get the second control point. The given control point is the one that affects the curve coming _into_ this vertex (even for the first point). The mirrored control point affects the curve going out of this vertex. 
  - An array of three points, the first being the vertex and the next being the control points (control point for curves coming in and out, respectively). 

[ ![â](/assets/icons/16-arrow-right.svg) Line  Previous page
](/docs/reference/visualize/line/) [ ![â](/assets/icons/16-arrow-right.svg)
Pattern  Next page  ](/docs/reference/visualize/pattern/)



= *docs/reference/visualize/square.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/1/*[ Jet
](https://jakevdp.github.io/blog/2014/10/16/how-bad-is-your-colormap/)*/sets/icons/16-arrow-right.svg)
  - [ Square ](/docs/reference/visualize/square/)

=  ` square ` Element

Question mark

Element functions can/*[Preview](/assets/docs/S2ExoTDRK30Xf9wXJbWIZgAAAAAAAAAA.png)*/ith optional content.

==  Example

    
    
    // Without content.
    #square(size: 40pt)
    
    // With content.
    #square[
      Automatically \
      sized to fit.
    ]
    

![Preview](/assets/docs/DjWoCmaGrn_miIIjOqjv7gAAAAAAAAAA.png)

==  Parameters

Question ma/*![â](/assets/icons/16-arrow-right.svg)*/ion. They are specified in parentheses
after the f/*[ ` components `
](/docs/reference/visualize/color/#definitions-components)*/o/) [ length
](/docs/refe/*[ int ](/docs/reference/foundations/int//*[ ratio
](/d/*![D/*[ color ](/docs/reference/visualize/color/)*/refer/*![](/assets/icons/16-arrow-right.svg)*//reference/visualize/color/)*/ence/f//*![](/assets/icons/16-arrow-right.svg)*/color/)*/nce/layout/relative/) [ fraction
](/do/*![](/assets/icons/16-arrow-right.svg)*/l  :  [ none
](//*[Preview](/assets/docs/bCTOWkOtpDPjuD2iPgTajQAAAAAAAAAA.png)*/visualize/color/) [/*[ int ](/docs/reference/foundations/int/)*/d/*[ ratio
](/docs/reference/layout/ratio/)*/lize/pattern/) ,  stroke  :  [ none
](/docs/reference/foundations/none/) [ auto
](/docs/reference/foundations/auto/) [ length
](/docs/refere/*[ ratio ](/docs/reference/layout/ratio/)*/rence/visualize/color/)
[ gradient ](/docs//*![Preview](/assets/docs/u35LFJMn0LDLxUBqOdjmvgAAAAAAAAAA.p/*[ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`")*/erence/visualize/color/)*/y
](/docs/reference/foundations/dictionary/) ,  radius  :  [ relative
](/docs/reference/layout/relative/) [ dictionary
](/docs/reference/foundations/dictionary/) ,  inset  :  [ relative
](/docs/reference/layout/relative/) [ dictiona/*[ Oklab ](https://bottosson.github.io/posts/oklab/)*/tset  :  [ relative
](/docs/reference/layout/relative/) [ dictionary
](/docs/reference/foundations/dictionary/) ,  [ none
](/docs/reference/foundations/none/) [ content
](/docs/reference/foundations/content/) ,

)  -> [ content ](/docs/reference/foundations/content/)

===  ` size `

[ auto ](/docs/reference/foundations/auto/) or  [ length
](/docs/reference/layo/*[ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`")*/ers can /*[ ` float ` ](/docs/reference/foundations/float/ "`float`")*//*[ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`")*/ally exclusive with ` width ` and `
height ` .

Default: ` auto  `

===  ` width `/*[ ` float ` ](/docs/reference/foundations/float/ "`float`")*//*[ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`")*/ion mark

Settable parameters can be customized for all following uses of the function/*[ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`")*/ually exclusive with ` size ` and ` height ` .
/*[ ` components `
](/docs/reference/visualize/color/#definitions-components)*/idth.

Default: ` auto  `
/*[ ratio ](/docs/reference/layout/ratio/)*//*[ float
](/docs/reference/foundations/float//*[ ratio ](/docs/reference/layout/ratio/)*//*[ float ](/docs/reference/foundations/float//*[ ratio
](/docs/reference/layout/ratio/)*//*[ ratio ](/docs/reference/layout/ratio/)*/*[ color ](/docs/reference/visualize/color/)*/.

The/*[ color ](/docs/reference/visualize/color/)*/e with ` size ` and ` width ` .

In contrast to ` size ` , this can be r/*[Preview](/assets/docs/1dGzDbwdYzYb5NzJEzQzFAAAAAAAAAAA.png)*/`

===  ` fill `

[/*[ ratio ](/docs/reference/layout/ratio/)*//) or  [ color
](/docs/reference/visualize/color/) or  [ gradient
](/docs/reference/visualize/gradient/) or  [ pattern
](/docs/reference/*[ float ](/docs/reference/foundations/float/)*/
/*[ ratio
](/docs/reference/layout/ratio/)*/or all following uses of the function
with a ` set ` rule.

How to fill the square. See the [ rectangle's documentation
](/docs/reference/visu/*[ float ](/docs/reference/foundations/float/)*/./*[ ratio
](/docs/reference/layout/ratio/)*/ none ](/docs/reference/foundations/none/) or  [ auto
](/docs/reference/foundations/auto/) or  [ length
](/docs/reference/layout/length/) or  [ colo/*[ ratio ](/docs/reference/layout/ratio/)*/  [ gradient
](/docs/reference/visualize/gradient/) or  [ stroke
](/docs/reference/visualize/stroke/) or  [ pattern
](/docs/reference/vi/*[ color ](/docs/reference/visualize/color/)*/reference/foundations/dictionary/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

How to stroke the square. See the [ rectangle's documentation
](/docs/refere/*[ Oklch ](https://bottosson.github.io/posts/oklab/)*/ails.

Default: ` auto  `

===  ` radius `

[ relative ](/docs/reference/layout/relative/) or  [ dictionary
](/docs/reference/foundations/dictionary/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

How much to round the square's corners. See the [ rectangle's documentation
]/*[ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`")*/r more detail/*[ ` float ` ](/docs/reference/foundations/float/ "`float`")*//*[ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`")*/s/reference/foundations/dictionary/)

Settable

Question mark

Settable parameters c/*[ ` angle ` ](/docs/reference/layout/angle/ "`angle`")*/n
with a ` s/*[ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`")*/the [ box's documentation
](/docs/reference/lay/*[ ` components `
](/docs/reference/visualize/color/#definitions-components)*/  ` outset `

[ relative ]/*[ ratio ](/docs/reference/layout/ratio/)*//*[ float
](/docs/reference/foundations/float//*[ ratio ](/docs/reference/layout/ratio/)*//*[ angle ](/docs/reference/layout/angle/)*//*[ ratio
](/docs/reference/layout/ratio/)*//*[ color
](/docs/reference/visualize/color/)*/uare's/*[ color ](/docs/reference/visualize/color/)*/ [
box's documentation ](/docs/reference/layout/box/#parameters-outset) for/*[Preview](/assets/docs/gEJt1PBpGTajcUm46S-JNgAAAAAAAAAA.png)*/ ](/docs/reference//*[ ratio ](/docs/reference/layout/ratio/)*//reference/foundations/content/)

Positional

Question mark

Positional parameters are specified in order, without names.

Settable

Question/*[ float ](/docs/reference/foundations/float/)*/f/*[ ratio
](/docs/reference/layout/ra/*![â](/assets/icons/16-arrow-right.svg)*/o place into the square. The square expands to fit this content,
keeping the 1-1 aspect ratio.

When t/*[ angle ](/docs/reference/layout/angle/)*/fault size of at most ` 30pt  `
.

Default: ` none  `

[ ![â](/as/*![Docs](/assets/icons/16-docs-dark.svg)*/e  Previou/*![](/assets/icons/16-arrow-right.svg)*/eference/layout/ratio/)*//icons/16-ar/*![](/assets/icons/16-arrow-right.svg)*/docs/reference/visualize/stroke/)



= *docs/re/*![](/assets/icons/16-arrow-right.svg)*/![D/*[ color ](/docs/reference/visualize/color/)*/s)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Visualize ](/docs/reference/visualize/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Ellipse ](/docs/reference/visualize/ellipse/)

=  ` ellipse ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

An ellipse with optional content.

==  Example

    
    
    // Without content.
    #ellipse(width: 35%, height: 30pt)
    
    // Wi/*[ ` oklab ` function ](/docs/reference/visualize/color/#definitions-
oklab)*/d \
      to fit the content.
    ]
    

![Preview](/assets/docs/u35LFJMn0LDLxUBqOdjmvgAAAAAAAAAA.p/*[ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`")*/ inputs to a/*[ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`")*/ function n/*[ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`")*/oundations/a/*[ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`")*/  height  :  [ auto
](/docs/reference/foundatio/*[ ` components `
](/docs/reference/visualize/color/#definitions-components)*//reference/layout/fraction/) , /*[ int ](/docs/reference/foundations/int//*[ ratio
](/docs/reference/layout/ratio/)*//*[ int ](/docs/reference/foundations/int//*[ ratio ](/docs/reference/layout/ratio/)*//*[ int
](/docs/reference/foundations/int//*[ ratio ](/docs/reference/layout/ratio/)*/*[ int ](/docs/reference/foundations/int//*[ ratio
](/docs/reference/layout/ratio/)*//*[ color
](/docs/reference/visualize/color/)*/cs/ref/*[ color ](/docs/reference/visualize/color/)*//reference/visualize/gradient/) [ stroke
](/docs/reference/visualize/stroke/) [/*[Preview](/assets/docs/C39dYHKq1AmgEkOU8XX2kQAAAAAAAAAA.png)*/](/docs/refer/*[ int ](/docs/reference/foundations/int/)*/ /*[ ratio
](/docs/reference/layout/ratio/)*/ative/) [ dictionary
](/docs/reference/foundations/dictionary/) ,  outset  :  [ relative
](/docs/reference/layout/relative/) [ diction/*[ int ](/docs/reference/foundations/int/)*/a/*[ ratio
](/docs/reference/layout/ratio/)*/ions/none/) [/*![Preview](/assets/docs/IWvUAQq21Ue1zu9gwjch-gAAAAAAAAAA.png)*/ontent ](/docs/reference/foundations/content/)

===  ` width /*[ int ](/docs/reference/foundations/int/)*/u/*[ ratio
](/docs/reference/layout/ratio/)*/yout/relative/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` r/*[ int ](/docs/reference/foundat/*![Preview](/ass/*[ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`")*/`

[ auto ](/docs/reference/foundations/auto/) or  [ relative
](/docs/reference/layout/relative/) or  [ fraction
](/docs/r/*[ color ](/docs/reference/visualize/color/)*/ion mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The ellipse's height, relative to its parent container.

Default: ` auto  `

===  ` fill `

[ none ](/docs/reference/foundations/none/) or  [ color
](/docs/reference/visualize/color/) or  [ gradient
](/docs/reference/visualize/gradient/) or  [ pattern
](/docs/reference/visualize/pa/*[ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`")*/can be custo/*[ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`")*/set ` rule./*[ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`")*/entation
](//*[ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`")*/re details.

Default: ` none  `

===  ` stroke /*[ ` components `
](/docs/reference/visualize/color/#definitions-components)*//foundations/auto/) or  /*[ int ](/docs/reference/foundations/int//*[ ratio
](/docs/reference/layout/ratio/)*//*[ int ](/docs/reference/foundations/int//*[ ratio ](/docs/reference/layout/ratio/)*//*[ int
](/docs/reference/foundations/int//*[ ratio ](/docs/reference/layout/ratio/)*/*[ int ](/docs/reference/foundations/int//*[ ratio
](/docs/reference/layout/ratio/)*//*[ str ](/docs/reference/foundations/str/)*//*[ color ](/docs/reference/visualize/color/)*/f the /*[ color ](/docs/reference/visualize/color/)*/e the ellipse. See the [ rectangle's documentation
](/docs/reference/visualize/rect/#parameters-stroke) for more details.

D/*[Preview](/assets/docs/eWivZbkq7oFotM06OeK92AAAAAAAAAAA.png)*/nce/layout/re/*[ int ](/docs/reference/foundations/int/)*/c/*[ ratio
](/docs/reference/layout/ratio/)*/estio/*![Preview](/assets/docs/S2ExoTDRK30Xf9wXJbWIZgAAAAAAAAAA.png)*/ng uses of the function
with a ` set ` rule.

How much to pad the el/*[ int ](/docs/reference/foundations/int/)*/a/*[ ratio
](/docs/reference/layout/ratio/)*/eters-inset) for more details.

Default: ` 0%  +  5pt  `

===  ` outset `

[ relative ](/docs/reference/layout/relative/) or  [ diction/*[ int ](/docs/reference/foundations/int/)*/a/*[ ratio
](/docs/reference/layout/ratio/)*/parameters can be customized for all following uses of the function
with a ` set ` rule.

How much to expand the ellipse's size without/*[ int ](/docs/reference/foundations/int/)*/c/*[ ratio
](/docs/reference/layout/ratio/)*/#parameters-outset) for more
details.

Default: ` (  :  )  `

===  ` body `

[ none ](/docs/reference/foundations/none/) or  [ content/*[ str ](/docs/reference/foundations/str/)*/
Positional

Question mark

Positional parameters are specified in order, without names.

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The content to place into the ellipse.

When this is omitted, the ellipse takes on a default size of at most ` 45pt  `
by ` 30pt  ` .

Default: ` none  `

[ ![â](/assets/icons/16-arrow-right.svg) Color  Pr/*[Preview](/assets/docs/rKfIt6nqSzoBRXt7k7BMOwAAAAAAAAAA.png)*/sets/icons/16-a/*[ color ](/docs/reference/visualize/color/)*/s/reference/visualize/gradient/)



= *docs/reference/visualize/color.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Visualize ](/docs/reference/visualize/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Color ](/docs/reference/visualize/color/)

=  color

A color in a specific color space.

Typst supports:

  - sRGB through the [ ` rgb ` functio/*[ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`")*/  - Device CMY/*[ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`")*/ize/color/#de/*[ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`")*/nction ](//*[ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`")*/Oklab through the [ ` oklab ` function ](/docs//*[ ` components `
](/docs/reference/visualize/color/#definitions-components)*/ch ` function ](/docs/reference/visualize/color/#definitions-oklch)
  - Linear RGB through the [ ` color.l/*[ ratio ](/docs/reference/layout/ratio/)*//*[ ratio
](/docs/reference/layout/ratio/)*//*[ ratio ](/docs/reference/layout/ratio/)*/*[ ratio ](/docs/reference/layout/ratio/)*//*[ color
](/docs/reference/visualize/color/)*/olor.h/*[ color ](/docs/reference/visualize/color/)*/olor/#definitions-hsv)

==  Example

    
    
    #rect(fill: aqua)/*[Preview](/assets/docs/1LHigtpFCZVjSNs83fP0eAAAAAAAAAAA.png)*/AAA.png)

==  /*[ ratio ](/docs/reference/layout/ratio/)*/lowing built-in colors:

Color  |  Definition   
---|---  
` black ` |  ` luma  (  0  )  `  
` gray ` |  ` luma  (  170  )  `  
` silver /*[ ratio ](/docs/reference/layout/ratio/)*/ ` luma  (  255  )  `  
` navy ` |  ` rgb  (  "#001f3f"  )  `  
` blue ` |  ` rgb  (  "#0074d9"  )  `  
` aqua ` |  ` rgb  (  "#7fdbff"  ) /*[ ratio ](/docs/reference/layout/ratio/)*/ `  
` eastern ` |  ` rgb  (  "#239dad"  )  `  
` purple ` |  ` r/*![Previe/*[ ` rgb ` ](/docs/reference/visualize/color/#definitions-rgb)*/*[ ratio ](/docs/reference/layout/ratio/)*/` red ` |  ` rgb  (  "#ff4136"  )  `  
` orange ` |  ` rgb  (  "#ff851b"  )  `  
` yellow ` |  ` rgb  (  "#ffdc00"  )  `  
` olive ` |/*[ color ](/docs/reference/visualize/color/)*/` rgb  (  "#2ecc40"  )  `  
` lime ` |  ` rgb  (  "#01ff70"  )  `  
  
The predefined colors and the most important color constructors are available
globally and also in the color type's scope, so you can write either `
color.red ` or just ` red ` .

![Preview](/assets/docs/IWvUAQq21Ue1zu9gwjch-gAAAAAAAAAA.png)

==  Predefined color maps

Typst also includes a number of preset color maps that can be used for [
gradients ](/docs/reference/visualize/gradient/#definitions-linear) . These
are simply /*[ ` angle ` ](/docs/reference/layout/angle/ "`angle`")*/

    
    
    #/*[ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`")*/
![Preview](/ass/*[ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`")*/  Details   /*[ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`")*/-like color map. Read [ this blog post ](https:/*[ ` components `
](/docs/reference/visualize/color/#definitions-components)*/ore details.   
` cividi/*[ angle ](/docs/reference/layout/angle/)*//*[ int
](/docs/reference/foundations/int//*[ ratio ](/docs/reference/layout/ratio/)*/*[ int ](/docs/reference/foundations/int//*[ ratio
](/docs/reference/layout/ratio/)*//*[ int ](/docs/reference/foundations/int//*[ ratio ](/docs/reference/layout/ratio/)*//*[ color
](/docs/reference/visualize/color/)*/bow gr/*[ color ](/docs/reference/visualize/color/)*/tion because it is not perceptually uniform, so the differences between v/*[Preview](/assets/docs/MqR1NhT-m_ImBDX23hY7xgAAAAAAAAAA.png)*/ for decorati/*[ angle ](/docs/reference/layout/angle/)*/ellow to blue color map.   
` viridis ` |  A purple to teal to yellow color map.   
` inferno ` |  A black to red to yellow color map. /*[ int ](/docs/reference/foundations/int/)*/o/*[ ratio
](/docs/reference/layout/ratio/)*/o pink to yellow color map.   
` rocket ` |  A black to red to white color map.   
` mako ` |  A black to teal to yellow color map.   
` vlag ` |/*[ int ](/docs/reference/foundations/int/)*/ /*[ ratio
](/docs/reference/layout/ratio/)*/to yellow color map.   
` flare ` |  A orange to purple color map that is perceptually uniform.   
` crest ` |  A blue to white to red color/*[ int ](/docs/reference/foundations/int/)*/i/*[ ratio
](/docs/reference/layout/ratio/)*/nder a
free licence. Others, like [ Jet
](https://jakevdp.github.io/blog/2014/10/16/how-bad-is-your-colormap/) , are
not included becaus//*![Preview](/assets/docs/gEJt1PBpGTajcUm46S-JNgAAAAAAA/*[ ratio ](/docs/reference/layout/ratio/)*/ that are useful to you!

![Preview](/assets/docs/S2ExoTDRK30Xf9wXJbWIZgAAAAAAAAAA.png)

==  Definitions

Question mark

Functions and types and can have associated definitions. These are accessed by
specifying the function or type, followed by a period, and then the
definition's name.

===  ` luma `

Create a grayscale color.

A grayscale color is represented internally by a single ` lightness `
component.

These components are also available/*[ ` angle ` ](/docs/reference/layout/angle/ "`angle`")*/e/color/#definiti/*[ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`")*/ocs/referenc/*[ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`")*/atio/) ,  [ /*[ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`")*/cs/reference/visualize/color/) ,

)  -> [ color/*[ ` components `
](/docs/reference/visualize/color/#definitions-components)*/ep: 50) {
      box(squa/*[ angle ](/docs/reference/layout/angle/)*//*[ int
](/docs/reference/foundations/int//*[ ratio ](/docs/reference/layout/ratio/)*/*[ int ](/docs/reference/foundations/int//*[ ratio
](/docs/reference/layout/ratio/)*//*[ int ](/docs/reference/foundations/int//*[ ratio ](/docs/reference/layout/ratio/)*//*[ color
](/docs/reference/visualize/color/)*/compon/*[ color ](/docs/reference/visualize/color/)*/rence/layout/ratio/)

Required  Positional

Question mark

Positional par/*[Preview](/assets/docs/dEOjXMxlVX8xgAuMFF-gkQAAAAAAAAAA.png)*/mponent.

===/*[ angle ](/docs/reference/layout/angle/)*/visualize/color/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

Alternatively: Th/*[ int ](/docs/reference/foundations/int/)*/ /*[ ratio
](/docs/reference/layout/ratio/)*/e given.

===  ` oklab `

Create an [ Oklab ](https://bottosson.github.io/posts/oklab/) color.

This color space is well suited for the follo/*[ int ](/docs/reference/foundations/int/)*/u/*[ ratio
](/docs/reference/layout/ratio/)*/ hue 
  - Creating grayscale images with uniform perceived lightness 
  - Creating smooth and uniform color transition and gradients 

A/*[ int ](/docs/reference/foundations/int/)*/a/*[ ratio
](/docs/reference/layout/ratio/)*/ lightness ( [ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`") ) 
  - a ( [ ` float ` ](/docs/reference/foundations/float/ "`float`/*[ color ](/docs/reference/visualize/color/)*/ratio/ "`ratio`") . Ratios are relative to ` 0.4  ` ; meaning ` 50%  ` is equal to ` 0.2  ` ) 
  - b ( [ ` float ` ](/docs/reference/foundations/float/ "`float`") or [ ` ratio/*![Preview](/a/*[ color ](/docs/reference/visualize/color/)*/ relative to ` 0.4  ` ; meaning ` 50%  ` is equal to ` 0.2  ` ) 
  - alpha ( [ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`") ) 
/*[ ` space `
](/docs/reference/visualize/color/#definitions-space)*/(/docs/reference/visualize/color/#definitions-components) method.

color  .  oklab  (

[ ratio ](/docs/reference/layout/rati/*[ ` luma ` ](/docs/reference/visualize/color/#definitions-luma)*//docs/reference/layout/*[ ` oklab ` ](/docs/reference/visualize/color/#definitions-oklab)*/
](/docs/reference/layout/ratio/) ,  [ ra/*[ ` oklch ` ](/docs/reference/visualize/color/#definitions-oklch)*/visualize/color/) ,

)  -> [ color ](/docs/*[ ` linear-rgb ` ](/docs/reference/visualize/color/#definitions-linear-rgb)*/ 20%, -3%, 50%)
    )
    

![Previe/*[ ` rgb ` ](/docs/reference/visualize/color/#definitions-rgb)*/` lightness `

[ ratio ](/docs/refer/*[ ` cmyk ` ](/docs/reference/visualize/color/#definitions-cmyk)*/ional parameters are specified in order/*[ ` hsl ` ](/docs/reference/visualize/color/#definitions-hsl)*/oat ](/docs/reference/foundations/float/) or  /*[ ` hsv ` ](/docs/reference/visualize/color/#definitions-hsv)*/l

Question mark

Positional parameters are specified in order, without names.

The a ("green/red") component.

====  ` b `

[ float ](/docs/reference/foundations/float/) or  [ ratio
](/docs/reference/layout/ratio/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The b ("blue/yellow") component.

====  ` alpha `

[ ratio ](/docs/referenc/*[ bool ](/docs/reference/foundations/bool/)*/stio/*[ array ](/docs/reference/foundations/array/)*/n order, without names.

The alpha component.

====  ` color `

[ color ](/docs/reference/visualize/color/)

Req/*[Preview](/assets/docs/dzB_dzQf4SM_Ou0eAcFH9AAAAAAAAAAA.png)*/specified in or/*[ bool ](/docs/reference/foundations/bool/)*/or to convert to Oklab.

If this is given, the individual components should not be given.

===  ` oklch `

Create an [ Oklch ](https://bo/*[ ` luma ` ](/docs/reference/visualize/color/#definitions-luma)*/l/*[ ` oklab ` ](/docs/reference/visualize/color/#definitions-oklab)*/l/*[ ` oklch ` ](/docs/reference/visualize/color/#definitions-oklch)*/t/*[ ` linear-rgb ` ](/docs/reference/visualize/color/#definitions-linear-rgb)*/t/*[ ` rgb ` ](/docs/reference/visualize/color/#definitions-rgb)*/n/*[ ` cmyk ` ](/docs/reference/visualize/color/#definitions-cmyk)*/ /*[ ` hsl ` ](/docs/reference/visualize/color/#definitions-hsl)*/[/*[ ` hsv ` ](/docs/reference/visualize/color/#definitions-hsv)*/ [ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`") . Ratios are relative to/*![â](/assets/icons/16-arrow-right.svg)*/ew](/assets/docs/tfic_6Fu9JDbk4Tz2rYgKAAAAAAAAAAA.png)*//l/*![â](/assets/icons/16-arrow-
right.svg)*/` ratio ` ](/docs/reference/layout/ratio/ "`ratio`") ) 

These components are also available using the [ /*![Docs](/assets/icons/16-docs-dark.svg)*/ize/color/#definitions-components) method.

colo/*[ str ](/docs/reference/foundations/str/)*//layout/ratio/) ,  [ float
](/docs/reference/foundations/float/) [ ratio ]/*[ ratio ](/docs/reference/layout/ratio/)*/le ]/*[ color ](/docs/reference/visualize/color/)*/](/docs/referenc/*[ ratio ](/docs/reference/layout/ratio/)*/rence/visualize/color/) ,

)  -> [ color ](/docs/reference/visualize/color/)

    
    
    #square(
      fill: oklch(40%, 0.2, 160deg, 50%)
    )
    

![Preview](/assets/docs/gEJt1PBpGTajcUm46S-JNgAAAAAAA/*[ ratio ](/docs/reference/layout/ratio/)*/(/do/*[ color ](/docs/reference/visualize/color/)*/tional

Question/*[ ratio ](/docs/reference/layout/ratio/)*/ed in order, without names.

The lightness component.

====  ` chroma `

[ float ](/docs/reference/foundations/float/) or  [ ratio
](/docs/reference/layout/ratio/)
/*![](/assets/icons/16-arrow-right.svg)*/
Positional parameters are sp/*[ ratio ](/docs/reference/layout/ratio/)*/roma/*[ col/*![Preview](/assets/docs/rKfIt6nqSzoBRXt7k7BMOwAAAAAAAAAA.png)*/atio ](/docs/reference/layout/ratio/)*/n mark

Positional parameters are specified in order, without names.

The hue component.

====  ` alpha `

[ ratio ](/docs/reference/layout/ratio/)

Required  Positional

Question mark

Positional parameters are specified in order, with/*[ ratio ](/docs/reference/layout/ratio/)*/` co/*[ color ](/docs/reference/visualize/color/)*/color/)

Require/*[ ratio ](/docs/reference/layout/ratio/)*/ parameters are specified in order, without names.

Alternatively: The color to convert to Oklch.

If this is given, the individual components should not be given.

===  ` linear-rgb `

Create an RGB(A) color with linear luma.

This color space is similar to sRGB, but with the distinction that the color
component are/*[ color ](/docs/reference/visualize/color/)*/to perform color
operations such as blending and interpolation. Although, you should prefer to
use the [ ` oklab ` functi/*[Preview](/assets/docs/oBWZW_i_eZ8A9K_46wXLaQAAAAAAAAAA.png)*/r these.

A linear RGB(A) color is represented internally by an array of four
components:

  - red ( [ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`") ) 
  - green ( [ ` ratio ` ](/docs/reference/layout/ratio/ "`/*[ angle ](/docs/reference/layout/angle/)*/cs/reference/layout/rati/*[ color ](/docs/reference/visualize/color/)*//docs/reference/*[ angle ](/docs/reference/layout/angle/)*/onents are also available using the [ ` compon/*![Preview](/assets/docs/1LHigtpFCZVjSNs83fP0eAAAAAAAAAAA.png)*/nts) method.

color  .  linear-rgb  (

[ int ](/docs/reference/foundations/int/) [ ratio
](/docs/reference/layout/ratio/) ,  [ int ]/*[ ` oklch ` ](/docs/reference/visualize/color/#definitions-oklch)*/ut/ratio/) ,  [ int
](/docs/reference/foundations/int/) [ ratio ](/docs/reference/layout/ratio/) ,
[ int ](/docs/reference/foundations/int/) [ ratio
](/docs/reference/layout/ratio/) ,  [ color
](/docs/reference/visualize/color/) ,

)  -> [ color ](/docs/reference/vis/*[ color ](/docs/reference/visualize/color//*[ array
](/docs/reference/foundations/array/)*/  ))
    

![Preview](/a/*[ color ](/docs/reference/visualize/color/)*/.png)

====  ` red `

[ int ](/docs/reference/foundations/int/) or  [ ratio
](/docs/reference/layout/ratio/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The red component.

===/*[Preview](/assets/docs/0jAT6gZPo0X02CVXUm7YpAAAAAAAAAAA.png)*/[ ratio
](/docs//*[ color ](/docs/reference/visualize/color/)*/n/*[ array
](/docs/reference/foundations/array/)*/specified in order, without names.

The green component.

====  ` blue `

[ int ](/docs/reference/foundations/int/) or  [ ratio
](/docs/reference/layout/ratio/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The blue component.

====  ` alpha `

[ int ](/docs/reference/foundations/int/) or  [ ratio
](/docs/reference/layout/ratio/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The /*[ ` oklab ` ](/docs/reference/visualize/color/#definitions-oklab)*/alize/color/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

Alternatively: The color to convert to linear RGB(A).

If this is given, the individual components should not be given.

===  ` rgb `

Create an RGB(A) color.

The color is specified in /*[ ratio ](/docs/reference/layout/ratio/)*/s re/*[ color ](/docs/reference/visualize/color/)*/mponents:

  - red ( [ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`") ) 
  - green ( [ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`") ) 
  -/*[Preview](/assets/docs/bnNXhQKfjc4AYVaZ1T3e3wAAAAAAAAAA.png)*/") ) 
  - alpha/*[ ratio ](/docs/reference/layout/ratio/)*/ratio/ "`ratio`") ) 

These components are also available using the [ ` components `
](/docs/reference/visualize/color/#definitions-components) method.

color  .  rgb  (

[ int ](/docs/reference/foundations/int/) [ ratio
](/docs/reference/layout/ratio/) ,  [ int ](/docs/reference/foundations/int/)
[ ratio ](/docs/reference/layout/ratio/) ,  [ int
](/docs/reference/foundations/int/) [ ratio ](/docs/reference/la/*[ ratio ](/docs/reference/layout/ratio/)*/ound/*[ color ](/docs/reference/visualize/color/)*/ut/ratio/) ,  [ str ](/docs/reference/foundations/str/)
,  [ color ](/docs/reference/visualize/color/) ,

)  -> [ color ](/docs/reference/visualize/color/)

    
    
    #square(fill: rgb("#b1f2eb"))
    #square(fil/*![â](/assets/icons/16-arrow-right.svg)*/2OrISH1g8_dvUBroAAAAAAAAAAA.png)*/eview](/assets//*[ r/*![â](/assets/icons/16-arrow-right.svg)*/)

====  ` red `

[ int ](/docs/reference/foundations/int/) or  [ ratio
](/docs/reference/layout/ratio/*![Docs](/assets/icons/16-docs-dark.svg)*/![â](/assets/icons/16-arrow-right.svg)*/in order, without names.

The red component.

====  ` gr/*[ ![â](/assets/icons/16-arrow-
right.svg)*/int/) or  [ ratio
](/docs/reference/layout/ratio/)

Required  Positional

Question mark

Positional par/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ames.

The green component.

====  ` blue `

[ int ]/*[ Reference ](/docs/reference/)*/t/) or  [ ratio
](/docs/reference/layout/ra/*[ Visualize ](/docs/reference/visualize/)*/k

Positional parameters are specified in o/*[ Pattern ](/docs/reference/visualize/pattern/)*/  ` alpha `

[ int ](/docs/reference/foundations/int/) or  [ ratio
](/docs/reference/layout/ratio/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The alpha component.

====  ` hex `

[ str ](/docs/reference/foundations/str/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

Alternatively: The color in hexadecimal notation.

Accepts three, four, six or eight hexadecimal digits and optionally a leading
hash.

If this is given, the individual components should not be given.

![](/assets/icons/16-arrow-right.svg) View example

    
    /*[Preview](/assets/docs/coeD6IerbqenB1CPjs7dfAAAAAAAAAAA.png)*/![Preview](/assets/docs/rKfIt6nqSzoBRXt7k7BMOwAAAAAAAAAA.png)/*[ relativeness
](/docs/reference/visualize/pattern/#parameters-relative)*/  Positional

Question mark

Positional parameters are specified in order, without names.

Alternatively: The color to convert to RGB(a).

If this is given, the /*[ boxes
](/docs/reference/layout/box/)*/ven.

===  ` cmyk `/*[ show rule
](/docs/reference/styling/#show-rules)*/ to target a specific printer. The conversion to RGB
for display preview might differ from how your printer reproduces the color.

A CMYK color is represented internally by an array of four components:

  - cyan ( [ ` ratio ` ](/docs/reference/layo/*[Preview](/assets/docs/Vk9hYVErruhpSxeZVudFjQAAAAAAAAAA.png)*/ference/layout/ratio/ "`ratio`") ) 
  - yellow ( [ ` ratio ` ](//*[ ` spacing
` ](/docs/reference/visualize/pattern/#parameters-spacing)*/cs/reference/layout/ratio/ "`ratio`") ) 

These components are also available using the [ ` components `
](/docs/reference/visualize/color/#definitions-components) method.

Note that CMYK colors are not currently supported when PDF/A output is
enabled.

color  .  cmyk  (

[ ratio ](/docs/reference/layout/ratio/) ,  [ ratio
](/docs/reference/layout/ratio/) ,  [ ratio ](/docs/reference/layout/ratio/) ,
[ ratio ](/docs/reference/layout/ratio/) ,  [ color
](/docs/reference/visualize/color/) ,

)  -> [ color/*[Preview](/assets/docs/yPTj9FTOvqrbv-4eK83U7gAAAAAAAAAA.png)*/
      fill: cmyk(27%, 0%, 3%, 5%)
    )
    

![Preview](/assets/docs/1LHigtpFCZVjSNs83fP0eAAAAAAAAAAA.png)

====  ` cyan `

[ ratio ](/docs/reference/layout/ratio/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The cyan component.

====  ` magenta `

[ ratio ](/docs/reference/layout/ratio/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The magenta component.

====  ` yellow `

[ ratio ](/docs/reference/layout/ratio/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The yellow component.

====  ` key `

[ ratio ](/docs/refere/*[ ` block ` ](/docs/reference/layout/block/ "`block`")*//*[ ` box ` ](/docs/reference/layout/box/ "`box`")*/ without names.

The key component.

====  ` color `

[ color ](/docs/reference/visualize/color/)

Required  Positional

Questio/*[ ` rotate ` ](/docs/reference/layout/rotate/ "`rotate`")*/hout names.

Alternatively: The color to conv/*[ ` grid ` ](/docs/reference/layout/grid/ "`grid`")*/onents should not be given.

===  ` hsl `

Create an HSL color.

This color space is useful for specifying colors by hue, saturation and
lightness. It is also useful for color manip/*[ auto ](/docs/reference/foundations/auto//*[ array
](/docs/reference/foundations/array/)*/ internally /*[ array
](/docs/reference/foundations/array/)*/` angle ` ](//*[ auto
](/docs/reference/foundations/auto//*[ str ](/docs/reference/foundations/str/)*//*[ content ](/docs/reference/foundations/content/)*/s ( [ /*[ pattern ](/docs/reference/visualize/pattern/)*/io`") ) 
  - alpha ( [ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`") ) 

These components are also available using the [ ` components `
](/docs/reference/visualize/color/#definitio/*![Preview](/assets/docs/dzB_dzQf4SM_Ou0eAcFH9AAAAAAAAAAA.png)*/erence/layout/angle/) ,  [ int
](/docs/refer/*[Preview](/assets/docs/s7EOLk1zJeZ_4afTw83qRwAAAAAAAAAA.png)*/o/) ,
[ int ](/*[ auto ](/docs/reference/foundations/auto/)*/(/*[ array
](/docs/reference/foundations/array/)*/cs/reference/foundations/int/)
[ ratio ](/docs/reference/layout/ratio/) ,  [ color
]/*[ array ](/docs/reference/foundations/array/)*/ color ](/docs/reference/visualize/color/)

    
    
    #square(
      fill: color.hsl(30deg/*[ auto ](/docs/reference/foundations/auto/)*/d/*[ str
](/docs/reference/foundations/str/)*/

====  ` hue `

[ angle ](/docs/reference/layout/angle/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The hue angle.

====  ` saturation `

[ int ](/docs/reference/foundations/int/) or  [ ratio
](/docs/reference/layout/ratio/)

Required  Positional

Question mark

Positional para/*![Preview](/assets/docs/tfic_6Fu9JDbk4Tz2rYgKAAAAAAAAAAA.png)*/ component.

====  ` lightness `

[ int ](/docs/reference/foundations/int/) or  [ ratio
]/*[ content ](/docs/reference/foundations/content/)*/onal

Question mark

Positional parameters are specified in order, without names.

The lightness component.

====  ` alpha `

[ int ](/docs/*[ ![â](/assets/icons/16-arrow-right.svg)*/(/docs/reference/layout/ratio/)

Required  Positiona/*[ ![â](/assets/icons/16-arrow-right.svg)*/e specified in order, without names.

The alpha component.

====  ` color `

[ color ](/docs/referen/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/l

Question mark

Positional parameters are specifie/*[ Reference ](/docs/reference/)*/ernatively: The color to convert to HSL.

I/*[ Visualize ](/docs/reference/visualize/)*/s should not be given.

===  ` hsv `

Creat/*[ Rectangle ](/docs/reference/visualize/rect/)*/r specifying colors by hue, saturation and value.
It is also useful for color manipulation, such as saturating while keeping
perceived hue.

An HSV color is represented internally by an array of four components:

  - hue ( [ ` angle ` ](/docs/reference/layout/angle/ "`angle`") ) 
  - saturation ( [ ` ratio ` ](/docs/reference//*[Preview](/assets/docs/uMLkrKs8AmOe9L-qU4CYKgAAAAAAAAAA.png)*/reference/layout/ratio/ "`ratio`") ) 
  - alpha ( [ ` ratio ` ](/docs/reference/layout/ratio/ "`ratio`") ) 

These components are also available usin/*[ auto ](/docs/reference/foundations/auto//*[ relative
](/docs/reference/layout/relative/)*/od.

color /*[ auto
](/docs/reference/foundations/auto//*[ relative
](/docs/reference/layout/relative//*[ fraction
](/docs/reference/layout/fraction/)*/t/ratio/)/*[ none
](/docs/reference/foundations/none//*[ color
](/docs/reference/visualize/color//*[ gradient
](/docs/reference/visualize/gradient//*[ pattern
](/docs/reference/visualize/pattern/)*/  [ color
]/*[ none
](/docs/reference/foundations/none//*[ auto
](/docs/reference/foundations/auto//*[ length
](/docs/reference/layout/length//*[ color ](/docs/reference/visualize/color//*[ gradient ](/docs/reference/visualize/gradient//*[ stroke
](/docs/reference/visualize/stroke//*[ pattern
](/docs/reference/visualize/pattern//*[ dictionary
/*![Preview](/assets/docs/oBWZW_i_eZ8A9K_46wXLaQAAAAAAAAAA.png)*/lative
](/docs/reference/layout/relative//*[ dictionary
](/docs/reference/foundations/dictionary/)*//int/) or /*[ relative
](/docs/reference/layout/relati/*![â](/assets/icons/16-arrow-right.svg)*/dations/dictionary/)*/ers are spe/*[ relative
](/docs/refere/*![â](/assets/icons/16-arrow-
right.svg)*/s/reference/foundations/dictionary/)*//*[ none
](/docs/reference/foundations/none//*[ content
](/docs//*![Docs](/assets/icons/16-docs-dark.svg)*//*[ content ](/docs/reference/foundations/content/)*/rder, without /*[ auto ](/docs/reference/foundations/auto/)*/ /*[ relative
](/docs/reference/layout/relative/)*/r  [ ratio
](/docs/reference/layout/ratio/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The alpha component.

====  ` color `

[ color ](/docs/reference/visualiz/*[ auto ](/docs/reference/foundations/auto/)*/a/*[ relative
](/docs/reference/layout/relative/)*/e/*[ fraction
](/docs/reference/layout/fraction/)*/ convert to HSL.

If this is given, the individual components should not be given.

===  ` components `

Extracts the components of this color.

The size and values of this array depends on the color space. You can o/*[ none ](/docs/reference/foundations/none/)*/d/*[ color
](/docs/reference/visualize/color/)*/s/*[ gradient
](/docs/reference/visualize/gradient/)*/t/*[ pattern
](/docs/reference/visualize/patt/*![Preview](/assets/docs/0jAT6gZPo0X02CVXUm7YpAAAAAAAAAAA.png)*//reference/visualize/color/#definitions-luma) |  Lightness  |  |  |   
[ ` oklab ` ](/docs/reference/visualize/color/#definitions-oklab) |  Lightness  |  ` a ` |  ` b ` |  Alpha   
[ ` oklch ` ](/docs/reference/visualize/color/#definitions-oklch) |  Lightness  |  Chroma  |  Hue  |  Alpha   
[ ` linear-rgb ` ](/docs/reference/visualize//*[Preview](/assets/docs/Xp0gewyTPs1ard61igAjJAAAAAAAAAAA.png)*/ Alpha   
[ ` r/*[ none ](/docs/reference/foundations/none/)*/i/*[ auto
](/docs/reference/foundations/auto/)*/A/*[ length
](/docs/reference/layout/length/)*/l/*[ color
](/docs/reference/visualize/color/)*/g/*[ gradient
](/docs/reference/visualize/gradient/)*/r/*[ stroke
](/docs/reference/visualize/stroke/)*/ /*[ pattern
](/docs/reference/visualize/pattern/)*/s/*[ dictionary
](/docs/reference/foundations/dictionary/)*/ |  Hue  |  Saturation  |  Value  |  Alpha   
  
For the meaning and type of each individual value, see the documentation of
the corresponding color space. The alpha component is optional and only
included if the ` alpha ` argument is ` true ` . The length of the returned
array depends on the number /*[ stroke ](/docs/reference/visualize/stroke/ "stroke")*/ded.

self  .  components  (

alpha  :  [/*![Preview](/assets/docs/bnNXhQKfjc4AYVaZ1T3e3wAAAAAAAAAA.png)*/docs/reference/foundations/array/)

    
    
    // note that the alpha component is included by default
    #rgb(40%, 60%, 80%).components()
    

![Preview](/assets/docs/dzB_dzQf4SM_Ou0eAcFH9AAAAAAAAAAA.png)

====  ` alpha `

[ bool ](/docs/reference/foundations/bool/)

Whether to include the alpha component.

Default: ` true  `

===  ` space `

Returns the constructor function for this color's space:

  - [ ` luma ` ](/docs/reference/visualize/color/#definitions-luma)
  - [ ` oklab ` ](/docs/reference/visualize/color/#definitions-oklab)
  - [ ` oklch ` ](/docs/reference/*[Preview](/assets/docs/RNPJxaHVa6js_P-8fJFExAAAAAAAAAAA.png)*//docs/reference/*[ relative ](/docs/reference/layout/relative/)*/[/*[ dictionary
](/docs/reference/foundations/dictionary/)*/-rgb)
  - [ ` cmyk ` ](/docs/reference/visualize/color/#definitions-cmyk)
  - [ ` hsl ` ](//*![Pr/*[ stroke ](/docs/reference/visualize/stroke/)*/- [ ` hsv ` ](/docs/reference/visualize/color/#definitions-hsv)

self  .  space  (

)  -> any

    
    
    #let color = cmyk(1%, 2%, 3%, 4%)
    #(color.space() == cmyk)
    

![Preview](/assets/docs/tfic_6Fu9JD/*![â](/ass/*[Preview](/assets/docs/oulcXDNcpunCSxVvCPXMJQAAAAAAAAAA.png)*/ex representation (such as ` #ffaa32 ` or `
#020304fe ` ). The alpha component (last two digits in ` #020304fe ` ) is
omitted if it is equal to ` ff ` (255 / 100%).

self  .  to-hex  (

)  -> [ str ](/docs/reference/foundations/str/)

===  ` lighte/*![](/assets/icons/16-arrow-right.svg)*/or.

self  .  lighten  (

[ ratio ](//*![](/assets/icons/16-arrow-right.svg)*/[ color ](/docs/reference/visualize/color/)

==/*![](/assets/icons/16-arrow-right.svg)*/ence/layout/ratio/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The factor to lighten the color by.

===  ` darken `

Darkens a color by a given factor.

self  .  darken  (

[ ratio ](/docs/reference/layout/ratio/)

)  -> [ color ](/docs/reference/visualize/color/)

====  ` factor `

[ ratio ](/docs/reference/layout/ratio/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The factor to d/*[Preview](/assets/docs/P93tDNSSrvmdfXv2L7MmYQAAAAAAAAAA.png)*/tion of a colo/*[ relative ](/docs/reference/layout/relative/)*/r/*[ dictionary
](/docs/reference/foundations/dictionary/)*//docs/reference/visualiz/*![Preview](/assets/docs/coeD6IerbqenB1CPjs7dfAAAAAAAAAAA.png)*//ratio/)

Required  Positional

Question mark

Positional parameters are specified in /*[ box's documentation
](/docs/reference/layout/box/#parameters-outset)*/saturate `

Decreases the saturation of a color by a given /*[ relative ](/docs/reference/layout/relative/)*/c/*[ dictionary
](/docs/reference/foundations/dictionary/)*/ence/visualize/color/)

====  ` factor `

[ ratio ](/docs/reference/layout/ratio/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The factor to des/*[ box's documentation ](/docs/reference/layout/box/#parameters-outset)*/or using a provided color space. You can think
of it a/*[ none ](/*![Preview](/assets/docs/Vk9hYVErruhpSxeZVudFjQAAAAAAAAAA.png)*/rence/foundations/content/)*/cs/reference/visualize/color/)

    
    
    #square(fill: yellow)
    #square(fill: yellow.negate())
    #square(fill: yellow.negate(space: rgb))
    

![Preview](/assets/docs/oBWZW_i_eZ8A9K_46wXLaQAAAAAAAAAA.png)

====  ` space `

any

The color space used for the transformation. By default, a perceptual color
space is used.

Default: ` oklab `

===  ` rotate `

R/*[ ![â](/assets/icons/16-arrow-right.svg)*/le.

self  .  rotate  (

[ angle ](/docs/reference/layout//*[ ![â](/assets/icons/16-arrow-
right.svg)*/](/docs/reference/visualize/color/)

====  ` angle `

[ angle ](/docs/reference/layout/angle/)

Requ/*[ ![Docs](/ass/*![Preview](/assets/docs/yPTj9FTOvqrbv-4eK83U7gAAAAAAAAAA.png)*/rder, without names./*[ Reference ](/docs/reference/)*/y.

====  ` space `

any

The color space u/*[ Visualize ](/docs/reference/visualize/)*/n a perceptual color
space ( [ ` oklch ` ](/*[ Stroke ](/docs/reference/visualize/stroke/)*/oklch) ).

Default: ` oklch `

===  ` mix `

Create a color by mixing two or more colors.

In color spaces with a hue component (hsl, hsv, oklch), only two colors can be
mixed at once. Mixing more than two colors in such a space will result in an
error!

color  .  mix  (

..  [ color ](/docs/reference/visualize/color/) [ array
](/docs/reference/foundations/array/) ,  space  :  any  ,

)  -> [ color ](/docs/reference/visualize/color/)

    
    
    #set block(height: 20pt, width: 100%)
    #block(fill: red.mix(blue))
    #block(fill: red.mix(blue, spac/*[Preview](/assets/docs/3NofubbwIllodsFawlNd8wAAAAAAAAAA.png)*/block(fill: color.mix((red, 70%), (blue, 30%)))
    

![Preview](/assets/docs/0jAT6gZPo0X02CVXUm7YpAAAAAAAAAAA.png)

====  ` colors `

[ color ](/docs/reference/visualize/color/) or  [ array
](/docs/reference/foundations/array/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

Variadic

Question mark

Variadic parameters can be specified multiple times.

The colors, optionally with weights, specified as a pair (array of length two)
of color and weight (float or rat/*[ dictionary
](/docs/reference/foundations/dictionary/ "dictionary")*/e to the sum of
all weights.

====  ` space `

any

The color space to mix in. By default, this happens in a perceptual color
space ( [ ` oklab ` ](/docs/reference/visualize/color/#definitions-oklab) ).

Default: ` oklab `

===  ` transparentize `

Makes a color more transparent by a given factor.

This method is relative to the existing alpha value. If the scale is positive,
calculates ` alpha - alpha * scale ` . Negative scales behave like `
color.opacify(-scale) ` .

self  .  transparentize  (

/*![Preview](/assets/docs/s7EOLk1zJeZ_4afTw83qRwAAAAAAAAAA.png)*/cs/reference/visualize/color/)

    
    
    #block(fill: red)[opaque]
    #block(fill: red.transparentize(50%))[half red]
    #block(fill: red.transparentize(75%))[quarter red]
    

![Preview](/assets/docs/bnNXhQKfjc4AYVaZ1T3e3wAAAAAAAAAA.png)

====  ` scale `

[ ratio ](/docs/reference/layout/ratio/)

Required  Positi/*[/*![â](/assets/icons/16-arrow-right.svg)*///*[ color
](/docs/reference/visualize/color//*[ gradient
/*![â](/assets/icons/16-arrow-
right.svg)*/pattern
](/docs/reference/visualize/pattern/)*//*[ auto
](/docs/reference/foundations/auto//*[ length
](/doc/*![Docs](/assets/icons/16-docs-dark.svg)*/(/docs/reference/foundations/auto//*[ str ](/docs/reference/foundations/str/)*//*[ auto ](/docs/reference/foundations/auto//*[ str
](/docs/reference/foundations/str/)*//*[ none
](/docs/reference/foundations/none//*[ auto
](/docs/reference/foundations/auto//*[ str ](/docs/reference/foundations/str//*[ array ](/docs/reference/foundations/array//*[ dictionary
](/docs/reference/foundations/dictionary/)*//*[ auto
](/docs/reference/foundations/auto//*[ float
](/docs/reference/foundations/float/)*/

![Pr/*[ stroke ](/docs/reference/visualize/stroke/)*/AAAAAAA.png)

====  ` scale `

[ ratio ](/docs/reference/layout/ratio/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The scale to change the alpha value by.

[ ![â/*![Docs](/assets/icons/16-docs-dark.svg)*/punCSxVvCP/*![](/assets/icons/16-arrow-right.svg)*/*[ auto ](/docs/reference/foundations/*![](/assets/icons/16-arrow-right.svg)*//visualize/color/)*/e/*[ gradient
](/docs/refer/*![](/assets/icons/16-arrow-right.svg)*/rn
](/docs/reference/visualize/pattern/)*/ns/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Visualize ](/docs/reference/visualize/)
  - ![](/assets/icons/16-arrow-right.svg)/*[ auto ](/docs/reference/foundations/auto/)*/p/*[ length
](/docs/reference/layout/length/)*/fill.

Ty/*![Preview](/assets/docs/uMLkrKs8AmOe/*[Preview](/assets/docs/_ynuy5GKkV7ADtX87C9EiAAAAAAAAAAA.png)*/-like fashion, covering the entire area of an element
that is filled or stroked. The pattern is define/*[ auto ](/docs/reference/foundations/auto/)*/n/*[ str
](/docs/reference/foundations/str/)*/ontal or vertical
spacing between the cells of the pattern.

==  Examples

    
    
    #let pat = pattern(size: (30pt, 30pt))[
      #place(line(start: (0%, 0%), end: (100%, 100%)))
      #place(line(start: (0%, 100%), end: (100%, 0%)))
    ]
    
    #rect(fill: pat, width: 100%, height: 60pt, stroke: 1pt)
    

![Preview](/assets/docs/coeD6IerbqenB1CPjs7dfAAAAAAAAAAA.png)

Patterns are also supported on text, but only when setting the [ relativeness
](/docs/reference/visualize/pattern/#parame/*[ auto ](/docs/reference/foundations/auto/)*/a/*[ str
](/docs/reference/foundations/str/)*/ord-by-word or glyph-by-
glyph patterns, you can wrap the words or characters of your text in [ boxes
](/docs/reference/layout/box/) manually or through a [ show rule
](/docs/reference/styling/#show-rules) .

    
    
    #let pat = pattern(
      size: (30pt, 30pt),
      relative: "parent",
      square(
        size: 30pt,
        fill: gradient
          .conic(..color.map.rainbow),
      )
    )
    
    #set text(fill: pat)
    #lorem(10)
    

![Preview](/assets/docs/Vk9hYVErruhpSxeZVudFjQAAAAAAAAAA.png)

You can also space the elements further /*[ none ](/docs/reference/foundations/none/)*/d/*[ auto
](/docs/reference/foundations/auto/)*/-/*[ str
](/docs/reference/foundations/str/)*/p/*[ array
](/docs/reference/foundations/array/)*/t/*[ dictionary
](/docs/reference/foundations/dictionary/)*/ill have gaps of the same color as
the background of the pattern.

    
    
    #let pat = pattern(
      size: (30pt, 30pt),
      spacing: (10pt, 10pt),
      relative: "parent",
      square(
        size: 30pt,
        fill: gradient
         .conic(..color.map.rainbow),
      ),
    )
    
    #rect(
      width: 100%,
      height: 60pt,
      fill: pat,
    )
    

![Preview](/assets/docs/yPTj9FTOvqrbv-4eK83U7gAAAAAAAAAA.png)

==  Relativeness/*[ array ](/docs/reference/foundations/array/ "array")*/s dependent on the
dimensions of a container. This container can either be the shape that it is
being painted on, or the closest su/*[ dictionary ](/docs/reference/foundations/dictionary/ "dictionary")*/ of a pattern constructor. By default, patterns are
relative to the sha/*[ length ](/docs/reference/layout/length/ "length")*/ applied
on text, in which case they are relative to the closest ancestor container.

Typst determines the ancestor container as follows:

  - For shapes that are placed at the root/top level of the document, the closest ancestor is the page itself. 
  -/*![](/assets/icons/16-arrow-right.svg)*/e innermost [ ` block ` ](/docs/reference/layout//*![Preview](/assets/docs/Xp0gewyTPs1ard61igAjJAAAAAAAAAAA.png)*/"`box`") that contains the shape. This includes the boxes and blocks that are implicitly created by show rules and elements. For example, a [ ` rotate ` ](/docs/reference/layout/rotate/ "`rotate`") will not affect the parent of a gradient, but a [ ` grid ` ](/docs/reference/layout/grid/ "`grid`") will. 

==  Constructor

Question mark

If a type has a constructor, you can call it like a function to create a /*[Preview](/assets/docs/P38gFluKZcw64WdZR85nHgAAAAAAAAAA.png)*/

size  :  [ auto ](//*[ auto ](/docs/reference/foundations/auto/)*/(/*[ float
](/docs/reference/foundations/float/)*/g  :  [ array
](/docs/reference/foundations/array/) ,  relative  :  [ auto
](/docs/reference/foundations/auto/) [ str ](/docs/reference/foundations/str/)
,  [ content ](/docs/reference/foundations/content/) ,

)  -> [ pattern ](/docs/reference/visualize/pattern/)

    
    
    #let pat = pattern(
      size: (20pt, 20pt),
      relative: "parent",
      place(
        dx: 5pt,
        dy: 5pt,
        rotate(45deg, square(
          size: 5pt,
          fill: black,
        )),
      ),
    )
    
    #rect(width: 100%, height: 60pt, fill: pat)
    

![Preview](/assets/docs/s7EOLk1zJeZ_4afTw83qRwAAAAAAAAAA.png)

====  ` size `

[ auto ](/docs/reference/foundations/auto/) or  [ array
](/docs//*![](/assets/icons/16-arrow-right.svg)*/unding box of each cell of the pattern.

Default: ` auto  `

====  ` spacing `

[ array ](/docs/reference/foundations/array/)

The spacing betwee/*[Preview](/asse/*![Preview](/asse/*[Preview](/assets/docs/cXgxeaTP2ci7NL16a3rB_gAAAAAAAAAA.png)*/-right.svg)*/ce/foundations/auto/) or  [ str
](/docs/reference/founda/*[ ![â](/assets/icons/16-arrow-
right.svg)*/e pattern.

For an element placed at the root/top level of the document, the parent is the
page itself. Fo/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/most block, box,
column, grid, or stack that contain/*[ Reference ](/docs/reference/)*/ails   
---|---  
` "  self  " ` |  The gra/*[ Visualize ](/docs/reference/visualize/)*/ding box).   
` "  parent  " ` |  The gradi/*[ Gradient ](/docs/reference/visualize/gradient/)*/ing box).   
  
Default: ` auto  `

====  ` body `

[ content ](/docs/refe/*[ ` gradient.linear ` function
](/docs/reference/visualize/gradient/#definitions-linear)*/are specified in order, with/*[ ` gradient.radial ` function
](/docs/reference/visualize/gradient/#definitions-radial)*/ght.svg) Path  Previous page
](/*[ ` gradient.conic ` function
](/docs/reference/visualize/gradient/#definitions-conic)*/ext page  ](/docs/reference/visualize/polygon/)



= *docs/reference/visualize/rect.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/ic/*![](/assets/icons/16-arrow-right.svg)*/ze ](/docs/reference/visualize/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Rectangle ](/docs/referenc/*[ sample ](/docs/reference/visualize/gradient/#definitions-sample)*/nctions can be customized with ` set ` and  ` show ` rules.

A rectangle with optional content.

==  Example

    
    
    // Without content.
    #rect(width: 35%, height: 30pt)
    
    // With content.
    #rect[
      Automatically sized \
      to fit the content.
    ]
    

![Preview](/assets/docs/uMLkrKs8AmOe/*[Preview](/assets/docs/_ynuy5GKkV7ADtX87C9EiAAAAAAAAAAA.png)*/rameters are the inputs to a function. They are specified in p/*[ relativeness
](/docs/reference/visualize/gradient/#definitions-relative)*/erence/foundations/auto/) [ relative
](/docs/reference/layout/relative/) ,  height  :  [ auto
](/docs/reference/foundations/auto/) [ relative
](/docs/reference/l/*[ boxes
](/docs/reference/layout/box/)*/ference/layout/frac/*[ show rule
](/docs/reference/styling/#show-rules)*/tions/none/) [ color
](/docs/reference/visualize/color/) [ gradient
](/docs/reference/visualize/gradient/) [ pattern
](/docs/reference/visualize/pattern/) ,  stroke  :  [ none
](/docs/reference/foundations/none/) [ auto
](/docs/reference/founda/*[Preview](/assets/docs/ch0LALUCwuQoVDnxrE_UZwAAAAAAAAAA.png)*/lor ](/docs/reference/visualize/color/)
[ gradient ](/docs/reference/visualize/gradient/) [ stroke
](/docs/reference//*[ ratio ](/docs/reference/layout/ratio/)*/erence/visualize/pattern/) [ dictionary
](/docs/reference/foundations/dictionary/) ,  radius  :  [ relative
](/docs/reference/layout/relative/) [ dictionary
](/docs/reference/foundations/dictionary/) ,  inset  :  [ relative
](/docs/reference/layout/relative/) [ dictionary
](/docs/refere/*![â](/assets/icons/16-arrow-right.svg)*/:  [ relative
](/docs/reference/layout/relative/) [ dictiona/*![â](/assets/icons/16-arrow-
right.svg)*/ry/) ,  [ none
](/docs/reference/foundations/none/) [ content
](/docs/reference/foundations/content/) ,

)  -> [ content ](/docs/reference/foundations/content//*![](/assets/icons/16-arrow-right.svg)*/erence/foundations/auto/) or  [ relat/*![](/assets/icons/16-arrow-right.svg)*//)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The rectangle's width, relative to its parent container.

Default: ` auto  `

===  ` height `

[ auto ](/docs/reference/foundations/auto/) or  [ relative
](/docs/reference/layout/relative/) or  [ fraction
](/doc/*[ ` block ` ](/docs/reference/layout/block/ "`block`")*//*[ ` box ` ](/docs/reference/layout/box/ "`box`")*/following uses of the function
with a ` set ` rule.

The rectangle's height, relative to its parent container.

Default: ` auto /*[ ` rotate ` ](/docs/reference/layout/rotate/ "`rotate`")*/one/) or  [ color
](/docs/reference/visualize/*[ ` grid ` ](//*![Preview](/assets/docs/3NofubbwIllodsFawlNd8wAAAAAAAAAA.png)*/ern
](/docs/reference/visualize/pattern/)

Settable

Question mark

Settable parameters can be customized for all f/*[ Oklab ](/docs/reference/visualize/color/#definitions-
oklab)*/l the rectangle.

Whe/*[ perceptually uniform
](https://programmingdesignsystems.com/color/perceptually-uniform-color-
spaces/index.html)*/igure both.

Default: ` none  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #rect(fill: blue)
    

![Preview](/assets/docs/Xp0gewyTPs1ard61igAjJAAAAAAAAAAA.png)

===  ` stroke `

[ none ](/docs/reference/foundations/none/) or  [ auto
](/docs/reference/foundations/auto/) or  [ length
](/docs/reference/layout/length/) or  [ color
](/docs/reference/visualize/color/) or  [ gradient
](/docs/reference/visualize/gradient/) or  [ strok/*[ Oklab ](/docs/reference/visualize/color/#definitions-oklab)*/referenc/*[ Oklch ](/docs/reference/visualize/color/#definitions-oklch)*/dations//*[ sRGB ](/docs/reference/visualize/color/#definitions-rgb)*/ can be/*[ linear-RGB ](/docs/reference/visualize/color/#definitions-linear-rgb)*/

How to/*[ CMYK ](/docs/reference/visualize/color/#definitions-cmyk)*/le stro/*[ Grayscale ](/docs/reference/visualize/color/#definitions-luma)*/only if /*[ HSL ](/docs/reference/visualize/color/#definitions-hsl)*/ence/vi/*[ HSV ](/docs/reference/visualize/color/#definitions-hsv)*/ stroke for/*[Preview](/assets/docs/hDyhl3_sixunf7X8Ctx-hAAAAAAAAAAA.png)*/owing keys in order of precedence: 
    - ` top ` : The top stroke. 
    - ` right ` : The right stroke. 
    - ` bottom ` : The bottom stroke. 
    - ` left ` : The left stroke. 
    - ` x ` : The horizontal stroke. 
    - ` y ` : The vertical stroke. 
    - ` rest ` : The stroke on all sides except those for which the dictionary explicitly sets a size. 

Default: ` auto  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #stack(
      dir: ltr,
      spacing: 1fr,
      rect(stroke: red),
      rect(stroke: 2pt),
      rect(stroke: 2pt + red),
    )
    

![Preview](/asse/*[Preview](/assets/docs/cXgxeaTP2ci7NL16a3rB_gAAAAAAAAAA.png)*/ `

[ relative ](/docs/reference/layout/relative/) or  [ dictionary
](/docs/reference/*[ `
color ` ](/docs/reference/visualize/color/#predefined-color-maps)*/rs can be customized for all following uses of the function
with a ` set ` rule.

How much to round the rectangle's corners, relative to the minimum of the
width and height divided by two. This can be:

  - A relative length for a uniform corner radius. 
  - A dictionary: With a dictionary, the stroke for each side can be set individually. The dictionary can contain the /*![Preview](/assets/docs/oulcXDNcpunCSxVvCPXMJQAAAAAAAAAA.png)*/ ` ](/docs/reference/visualize/color/#definitions-oklab)*/*[ ` color.hsv ` ](/docs/reference/visualize/color/#definitions-hsv)*/*[ ` color.hsl ` ](/docs/reference/visualize/color/#definitions-hsl)*/rad/*[ ` color.oklch ` ](/docs/reference/visualize/color/#definitions-oklch)*/- ` top ` : The top-left and top-r/*[ ` color.rgb ` ](/docs/reference/visualize/color/#definitions-rgb)*/t corner radii. 
    - ` bottom ` : The bottom-left and bottom-right corner radii. 
    - ` rest ` : The radii for all corners except those for which the dictionary explicitly sets a size. 

Default: ` (  :  )  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set rect(stroke: 4pt)
    #rect(
      radius: (
        left: 5pt,
        top-right: 20pt,
        bottom-right: 10pt,
      ),
      stroke: (
        left: red,
        top: yellow,
        right: green,
        bottom: blu/*[ color ](/docs/reference/visualize/color//*[ array
](/docs/reference/foundations/array/)*/

===  ` inset `

[ relative ](/*[ auto
](/docs/reference/foundations/auto//*[ str ](/docs/reference/foundations/str/)*//*[ direction ](/docs/reference/layout/direction/)*//*[ angle
](/docs/reference/layout/angle/)*/lowing/*[ gradient ](/docs/reference/visualize/gradient/)*/uch to pad the rectangle's content. See the [ box's documentation
](/docs/reference/layout/box/#parameters-outset) for more details.

Defa/*[Preview](/assets/docs/3vCVaADmPcUqYOLma4-wcgAAAAAAAAAA.png)*/ference/layout//*[ color ](/docs/reference/visualize/color/)*/c/*[ array
](/docs/reference/foundations/array/)*/n mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

How much to expand the rectangle's size without affecting the layout. See the
[ box's documentation ](/docs/reference/layout/box/#parameters-outset) for
more details.

Default: ` (  :  )  `

===  ` body `

[ none ](/docs/reference/found/*[ Oklab
](/docs/reference/visualize/color/#definitions-oklab)*/tent/)

Positional

Question mark

Posit/*[ auto ](/docs/reference/foundations/auto/)*/t/*[ str
](/docs/reference/foundations/str/)*/table parameters can be customized for all following uses of the function
with a ` set ` rule.

The content to place into the rectangle.

When this is omitted, the rectangle takes on a default size of at most ` 45pt
` by ` 30pt  ` .

Default: ` none  `

[ ![â](/assets/icons/16-arrow-right.svg) Polygon  Previous page
](/docs/reference/visualize/polygon/) [ ![â](/assets/icons/16-arrow-
right.svg) Square  Next page  ](/docs/reference/visualize/square/)



= *docs/reference/visuali/*[ direction ](/docs/reference/layout/direction/)*/cs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Visual/*[ angle ](/docs/reference/layout/angle/)*/](/assets/icons/16-arrow-right.svg)
  - [ Stroke ](/docs/reference/visualize/stroke/)

=  stroke

Defines how to draw a line.

A stroke has a _paint_ (a solid color or gradient), a _thickness,_ a line
_cap,_ a line _join,_ a _miter limit,_ and a _dash_ pattern. All of these
values are optional and have sensible defaults.

==  Example

    
    
    #set line(length: 100%)
    #stack(
      spacing: 1em,
      line(stroke: 2pt + red),
      li/*![](/assets/icons/16-arrow-right.svg)*/pt, cap: "round")),
      line(stroke: (paint: blue, thickness: 1pt, dash: "dashed")),
      line(stroke: 2pt + gradient.linear(..color.map.rainbow)),
    )
    

![Preview](/assets/docs/3NofubbwIllodsFawlNd8wAAAAAAAAAA.png)

==  Simple strokes

You can create a simple solid stroke from a color, a thickness, or a
combination of the two. Sp/*![](/assets/icons/16-arrow-right.svg)*/cted you can
pass any of the following values:

  - A length specifying the s/*[ color ](/docs/reference/visualize/color//*[ array
](/docs/reference/foundations/array/)*/or the stroke. The thickness is/*[ auto
](/docs/reference/foundations/auto//*[ str ](/docs/reference/foundatio/*![Preview](/assets/docs/P38gFluKZcw64WdZR85nHgAAAAAAAAAA./*[ ratio ](/docs/reference/layout/ratio/)*/reference/layout/ratio/)*/y
](/docs/referen/*[ auto
](/docs/reference/foundations/auto//*[ array
](/docs/reference/foundations/array/)*/expects a stroke./*[ ratio
](/docs/reference/layout/ratio/)*/f the /*[ gradient ](/docs/reference/visualize/gradient/)*/low.

==  Fields

On a stroke object, you can access any of the fields listed in the constructor
function. For example, ` (  2pt  +  blue  )  .  thickness ` is ` 2pt  ` .
Meanwhile, ` stroke  (  red  )  .  cap ` is ` auto  ` because it's
unspecified. Fields set to ` auto  ` are /*[Preview](/assets/docs/IfkE7bIcLhrH24l0nk0sIQAAAAAAAAAA.png)*/cons/*![](/assets/icons/16-arrow-right.svg)*/e/visualize/color/)*/e/*[ array
](/docs/reference/foundations/array/)*/troke or constructs a stroke with the given parameters.

Note that in most cases you do not need to convert values to strokes in order
to use them, as they will be converted automatically. However, this
constructor can be useful to ensure a value has all the fields of a stroke.

stroke  (

[ auto ](/docs/reference/foundations/auto/) [ color
//*![â](/assets/ico/*[ array ](/docs/reference/foundations/array/)*/ce/visualize/gradient/) [ pattern
](//*![â](/assets/icons/16-arrow-
right.svg)*/auto/)*/]/*[ str
](/docs/reference/foundations/str/)*/gth
](/docs/reference/layout/length/) ,  [ auto
](/docs/reference/foundations/auto/) [ str ](/docs/reference/fo/*![](/assets/icons/16-arrow-right.svg)*/erence/foundations/auto/) [ str
](/docs/reference/foundations/str/) ,  [ none
](/docs/reference/foundations/none/) [ auto
](/docs/ref/*![](/assets/icons/16-arrow-right.svg)*/cs/reference/foundations/str/)
[ array ](/docs/reference/foundations/array/) [ dictionary
](/docs/reference/foundations/dictionary/) ,  [ auto
](/docs/reference/foundation/*[ array ](/docs/reference/foundations/array/)*/s/float/) ,

)  -> [ stroke ](/docs/reference/visualize/stroke/)

    
    
    #let my-func(x) = {
        x = stroke(x) // Convert to a stroke
        [Stroke has thickness #x.thickness.]
    /*[ ratio ](/docs/reference/layout/ratio/)*/\
    #my-func(stroke(cap: "round", thickness: 1pt))
    

![Preview](/assets/docs/oulcXDNcpunCSxVvCPXMJQAAAAAAAAAA.png)

====  ` paint `

[ auto ](/docs/reference/foundations/auto//*[ auto ](/docs/reference/foundations/auto/)*/o/*[ array
](/docs/reference/foundations/array/)*/ize/gradient/) or  [ pattern
](/docs/reference/visualize/pattern/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The color or gradient to use for the stroke.

If set to ` auto  ` , the value is inherited, defaulting to ` black ` .

====  ` thickness `

[ au/*[ ratio ](/docs/reference/layout/ratio/)*/or  [ length
](/docs/reference/layout/length/)

Required  Positional

Question mark

Positional parameters are specified in order, without na/*![â](/assets/icons/16-arrow-right.svg)*/ ` auto  /*![Preview](/assets/docs/_ynuy5GKkV7ADtX87C9EiAA/*[ ![â](/assets/icons/16-arrow-
right.svg)*/e/foundations/auto/) or  [ str
](/docs/reference/foundations/str/)

Required  Positional

Question m/*![Docs](/assets/icons/16-docs-dark.svg)*/d in order, without names.

How the ends of the stroke are r/*[ color ](/docs/reference/visualize/color//*[ array
](/docs/reference/foundations/array/)*/Variant  |/*[ angle
](/docs/reference/layout/angle/)*/ Square stroke cap with the edg/*[ auto
](/docs/reference/foundations/auto//*[ str ](/docs/reference/foundations/str/)*/t the strok/*[ array ](/docs/reference/foundations/array/)*/stroke/*[ gradient ](/docs/reference/visualize/gradient/)*/==  ` join `

[ auto ](/docs/reference/foundations/auto/) o/*![Preview](/assets/docs/ch0LALUCwuQoVDnxrE_UZwAAAAAAAAAA.png)*/ional

Question mark

Positional parameters are specified in order, without names.

How sharp turns are rendered.

If set to /*[Preview](/assets/docs/Mqmcewscuekk2Rsln7oKygAAAAAAAAAA.png)*/ ` .

Variant  /*[ color ](/docs/reference/visualize/color/)*/S/*[ array
](/docs/reference/foundations/array/)*/nds exceeding the miter limit are bevelled instead.   
` "  round  " ` |  Segments are joined with circular corners.   
` "  bevel  " ` |  Segments are joined with a bevel (a straight edge connecting the butts of the joined segme/*[ angle ](/docs/reference/layout/angle/)*/cs/reference/foundations/none/) or  [ auto
](/docs/reference/foundations/auto/) or  [ str
](/docs/reference/foundations/str/) or  [ array
](/docs/reference/foundations/array/) o/*[ Oklab
](/docs/reference/visualize/color/#definitions-oklab)*/equired  Positional

Question mark

Posi/*[ auto ](/docs/reference/foundations/auto/)*/i/*[ str
](/docs/reference/foundations/str/)*/is can be:

  - One of the predefined patterns: 
    - ` "solid"  ` or ` none  `
    - ` "dotted"  `
    - ` "densely-dotted"  `
    - ` "loosely-dotted"  `
    - ` "dashed"  `
    - ` "densely-dashed"  `
    - ` "loosely-dashed"  `
    - ` "dash-dotted"  `
    - ` "densely-dash-dotted"  `
    - ` "loosely-dash-dotted"  `
  - An [ array ](/docs/reference/foundations/array/ "array") with alternating lengths for dashes and gaps. You can also use the string ` "dot"  ` for a length equal /*[ array ](/docs/reference/foundations/array/)*//docs/reference/foundations/dictionary/ "dictionary") with the keys ` array ` (same as the array above), and ` phase ` (of type [ length ](/docs/reference/layout/length/ "length") ), which defines where in the pattern to start drawing. 

If set to ` auto  ` , the value is inherited, defaulting to ` none  ` .

![](/assets/icons/16-arrow-right.svg) View options

Variant  |  Details   
---|---  
` "  solid  " ` |   
/*[ int ](/docs/reference/foundations/int/)*/  " ` |   
` " /*[ ratio
](/docs/reference/layout/ratio/)*/ ` |  /*[ gradient ](/docs/reference/visualize/gradient/)*/ed  " ` |   
` "  dash-dotted  " ` |   
` "  densely-dash-dotted  " ` |   
` "  loosely-dash-dotted  " ` |   
  
![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set line(length: 100%, stroke:/*[Preview](/assets/docs/k1IrJvVHW9DTjXfwHdfh_QAAAAAAAAAA.png)*/sh: "dashed")),/*[ int ](/docs/reference/foundations/int/)*/ot", 5pt))),
      line(stroke: (dash: (array: (10pt, 5pt, "dot", 5pt), phase: 10pt))),
    )
    

![Preview](/assets/docs/P38gFluKZcw64WdZR85nHgAAAAAAAAAA./*[ ratio ](/docs/reference/layout/ratio/)*/ocs/reference/foundations/auto/) or  [ float
](/docs/reference/foundations/float/)

Required  Positional

Question mark

Positional parameters are specified in order, without name/*[ int ](/docs/reference/foundations/int/)*/s are rende/*[ bool
](/docs/reference/foundations/bool/)*/he hig/*[ gradient ](/docs/reference/visualize/gradient/)*/e it is
bevelled. Only applicable if ` join ` is ` "miter"  ` .

Specifically, the miter limit is the maximum ratio between /*[Preview](/assets/docs/ydbGAMwgwvGMCJpfMs1wAAAAAAAAAAAA.png)*/If set to ` auto  ` ,/*[ int ](/docs/reference/foundations/int/)*/4.0  ` .

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #let points = ((15pt, 0pt), (0pt, 30pt), (30pt, 30pt), (10pt, 20pt))
    #set path(s/*[ bool ](/docs/reference/foundations/bool/)*/ ltr,
        spacing: 1cm,
        path(stroke: (miter-limit: 1), ..points),
        path(stroke: (miter-limit: 4), ..points),
        path(strok/*[ function ](/docs/reference/foundations/function/)*/ew](/assets/docs/3zeU1BuQq8_VfdTfAQbv5QAAAAAAAAAA.png)

[ ![â](/assets/ico/*[ array ](/docs/reference/foundations/array/)*/](/docs/reference/visualize/square/) [ ![â](/assets/icons/16-arrow-
right.svg) Introspection  Next page  ](/docs/reference/introspection/)



= *docs/reference/visualize/gradient.md*
/*[ auto ](/docs/reference/foundations/auto/)*/vg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/do/*[ none ](/docs/reference/foundations/none//*[ angle
](/docs/reference/layout/angle/)*//reference/visualize/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Gradient ](/docs/reference/visualize/gradi/*[ ratio
](/docs/reference/layout/ratio/ "ratio")*/ports linear gradients through the /*[ angle ](/docs/reference/layout/angle/ "angle")*//visualize/gradient/#definitions-linear) , radial gradients
through t/*[ angle ](/docs/reference/layout/angle//*[ ratio
](/docs/reference/layout/ratio/)*/itio/*[ color ](/docs/reference/visualize/color/)*/e [ ` gradi/*[ angle ](/docs/reference/layout/angle/)*/i/*[ ratio
](/docs/reference/layout/ratio/)*/A gradient can be used for the following purposes:

  - As a fill to paint the interior of a shape: ` rect  (  fill  :  gradient  .  linear  (  ..  )  )  `
  - As a stroke to paint the outline of a shape: ` rect  (  stroke  :  1pt  +  gradient  .  linear  (  ..  )  )  `
  - A/*[ angle ](/docs/reference/layout/angle//*[ ratio
](/docs/reference/layout/ratio/)*/  `
/*[ array ](/docs/reference/foundations/array/)*/eference/vis/*[ angle ](/docs/reference/layout/angle/)*/m/*[ ratio
](/docs/reference/layout/ratio/)*/mp/*![â](/assets/icons/16-arrow-right.svg)*/ 
    #stack(
      dir: ltr,
      spacing: 1fr,
    /*![â](/assets/icons/16-arrow-right.svg)*/ap.rainbow)),
      square(fill: gradient.radial(..color.map.rainbow)),
      square(fil/*[ ![â](//*![Docs](/assets/icons/16-docs-dark.svg)*/    

![Preview](/assets/docs/_ynuy5GKkV7ADtX87C9EiAA/*[ ![â](/assets/icons/16-arrow-
right.svg)*/d on text, but only when setting the [ relativeness
](/docs/reference/visualize/gradient/#definiti/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ault value) or ` "parent"  ` . To create word-by-wor/*[ Reference ](/docs/reference/)*/ you can wrap the words or characters of yo/*[ Visualize ](/docs/reference/visualize/)*/ut/box/) manually or throug/*![Preview](/assets/docs/3vCVaADmPcUqYOLma4-wcgAAAAAAAAAA.png)*//)*/ 
    
    #set text(fill: gradient.linear(red, blue))
    #let rainbow(content) = {
      set text(fill: gradient.linear(..color.map.rainbow))
      box(content)
    }
    
    This is a gradient on text, but with a #rainbow[twist]!
    

![Preview](/assets/docs/ch0LALUCwuQoVDnxrE_UZwAAAAAAAAAA.png)

==  Stops

A gradient is composed of a /*[Preview](/assets/docs/H1niwFeoKUTVgzuqcmZ_VgAAAAAAAAAA.png)*/et. The offset is a [ ratio ](/docs/reference/layout/ratio/)
between ` 0%  ` and ` 100%  ` or an angle between ` 0deg  ` and ` 360deg  ` .
The offset is/*[ length ](/docs/reference/layout/length/)*/ar along t/*[ auto
](/docs/reference/foundations/auto//*[ relative
](/docs/reference/layout/relative/)*/
position. /*[ auto
](/docs/reference/foundations/auto//*[ relative
](/docs/reference/layout/relative//*[ fraction
](/docs/reference/layout/fraction/)*/The locat/*[ none
](/docs/reference/foundations/none//*[ color
](/docs/reference/visualize/color//*[ gradient
](/docs/reference/visualize/gradient//*[ pattern
](/docs/reference/visualize/pattern/)*/ng containe/*[ none
](/docs/reference/foundations/none//*[ auto
](/docs/reference/foundations/auto//*[ length
](/docs/reference/layout/length//*[ color ](/docs/reference/visualize/color//*[ gradient ](/docs/reference/visualize/gradient//*[ stroke
](/docs/reference/visualize/stroke//*[ pattern
](/docs/reference/visualize/pattern//*[ dictionary
](/docs/reference/foundations/dictionary/)*/t the root/*[ relative
](/docs/reference/layout/relative//*[ dictionary
](/docs/reference/foundations/dictionary/)*/cestor is t/*[ relative
](/docs/reference/layout/relative//*[ dictionary
](/docs/reference/foundations/dictionary/)*//*[ none
](/docs/reference/foundations/none//*[ content
](/docs/reference/foundations/content/)*/e impl/*[ content ](/docs/reference/foundations/content/)*/ample, a [ ` ro/*[ length ](/docs/reference/layout/length/)*/rotate`") will not affect the parent of a gradient, but a [ ` grid ` ](/docs/reference/layout/grid/ "`grid`") will. 

==  Color spaces and interpolation

Gradients can be interpolated in any color space. By default, gradients are
interpol/*[ auto ](/docs/reference/foundations/auto/)*/l/*[ relative
](/docs/reference/layout/relative/)*/ich is a [ perceptually uniform
](https://programmingdesignsystems.com/color/perceptually-uniform-color-
spaces/index.html) color space. This means that the gradient will be perceived
as having a smooth progression of colors. This is particularly useful for data
visualization.

However, you can choose to interpolate the g/*[ auto ](/docs/reference/foundations/auto/)*/n/*[ relative
](/docs/reference/layout/relative/)*/u/*[ fraction
](/docs/reference/layout/fraction/)*/colors. Consult the table below when
choosing an interpolation space.

Color space  |  Perceptually uniform?   
---|---  
[ Oklab ](/docs/reference/visualize/color/#definitions-oklab) |  _Yes_  
[ Oklch ](/docs/reference/visualize/color/#definitions-oklch) |  _Yes_  
[ sRGB ](/docs/reference/visualize/color/#definitions-/*[ none ](/docs/reference/foundations/none/)*/c/*[ color
](/docs/reference/visualize/color/)*/|/*[ gradient
](/docs/reference/visualize/gradient/)*/r/*[ pattern
](/docs/reference/visualize/pattern/)*/cs/reference/visualize/color/#definitions-luma) |  _Yes_  
/*![Preview](/as/*[
relative lengths ](/docs/reference/layout/relative/)*/HSV ](/docs/reference/vis/*[ rectangle's documentation
](/docs/reference/visualize/rect/#parameters-fill)*/unf7X8Ctx-hAAAAAAAAAAA.png)

==  Direction

Some grad/*[ none ](/docs/reference/foundations/none/)*/l/*[ auto
](/docs/reference/foundations/auto/)*/r/*[ length
](/docs/reference/layout/length/)*/e/*[ color
](/docs/reference/visualize/color/)*/9/*[ gradient
](/docs/reference/visualize/gradient/)*/
/*[ stroke
](/docs/reference/visualize/stroke/)*/#/*[ pattern
](/docs/reference/visualize/pattern/)*/ /*[ dictionary
](/docs/reference/foundations/dictionary/)*/
      square(fill: gradient.linear(red, blue, angle: 90deg)),
      square(fill: gradient.linear(red, blue, angle: 180deg)),
      square(fill: gradient.li/*[ rectangle's documentation
](/docs/reference/visualize/rect/#parameters-stroke)*/7NL16a3rB_gAAAAAAAAAA.png)

==  Presets

Typst prede/*[ relative ](/docs/reference/layout/relative/)*/a/*[ dictionary
](/docs/reference/foundations/dictionary/)*//color/#predefined-color-maps)
documentation for more details.

==  Note on file sizes

Gradients can be quite large, especially if they have many stops. This is
becaus/*[ box's documentation
](/docs/reference/layout/box/#parameters-inset)*/e
up a lot of space. If you are concerned about file sizes,/*[ relative ](/docs/reference/layout/relative/)*/r/*[ dictionary
](/docs/reference/foundations/dictionary/)*/be improved in the future. 
  - PDF gradients in the [ ` color.oklab ` ](/docs/reference/visualize/color/#definitions-oklab) , [ ` color.hsv ` ](/docs/reference/visualize/color/#definitions-hsv) , /*[
box's documentation ](/docs/reference/layout/box/#parameters-outset)*/and [ ` color.oklch ` ](/docs/reference/visualize/colo/*[ none ](/docs/reference/foundations/none/)*/e/*[ content
](/docs/reference/foundations/content/)*/visualize/color/#definitions-rgb) colors with extra stops in between. This avoids needing to encode these color spaces in your PDF file, but it does add extra stops to your gradient, which can increase the file size. 

==  Definitions

Question mark

Functions and types and can have associated definitions. These are accessed by
specifying/*[ ![â](/assets/icons/16-arrow-right.svg)*/d, and then the
definition's name.

===  ` linear `
/*[ ![â](/assets/icons/16-arrow-right.svg)*/olors transition along a straight
line.

gradient  .  linear  (

..  [ color ](/docs/reference/vis/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/foundations/array/) ,  space  :  any  ,  relative  :/*[ Reference ](/docs/reference/)*/dations/auto/) [ str ](/docs/reference/foun/*[ Visualize ](/docs/refere/*![â](/assets/icons/16-arrow-
right.svg)*/ ,  [ angle
](/docs/*[ Polygon ](/docs/reference/visualize/polygon/)*/(/docs/reference/visualize/grad/*![Docs](/assets/icons/16-docs-dark.svg)*/h: 100%,
      height: 20pt,
      fill: gradient.linear(
        ..color.map.viridis,
      ),
    )
    

![Preview](/assets/docs/3vCVaADmPcUqYOLma4-wcgAAAAAAAAAA.png)

====  ` stops `

[ color ](/docs/reference/visualize/color/) or  [ array
](/docs/reference/foundations/array/)

Required  Positional
/*[Preview](/assets/docs/TuzATomarVg-0NmUVu3QFAAAAAAAAAAA.png)*/, without names.

Variadic

Question mark

Variadic parameters can be specified multiple times.

The color  stops  of the gradient.

====  ` space `

a/*[ none ](/docs/reference//*![Preview](/assets/docs/Mqmcewscue/*[Preview](/assets/docs/IBdLCKW0h9kNWs6W_8DKAwAAAAAAAAAA.png)*/alize/gradient//*[ pattern
](/docs/reference/visualize/pattern/)*/) .

Default: /*[ str
](/docs/reference/foundations/str/)*/docs/refere/*[ none
](/docs/reference/foundations/none//*[ auto
](/docs/reference/foundations/auto//*[ length
](/docs/reference/layout/length//*[ color ](/docs/reference/visualize/color//*[ gradient ](/docs/reference/visualize/gradient//*[ stroke
](/docs/reference/visualize/stroke//*[ pattern
](/docs/reference/visualize/pattern//*[ dictionary
](/docs/reference/foundations/dictionary/)*/  
`/*[ array
](/docs/reference/foundations/array/)*/itself/*[ content ](/docs/reference/foundations/content/)*/he gradient i/*[ none ](/docs/reference/foundations/none/)*/d/*[ color
](/docs/reference/visualize/color/)*/ /*[ gradient
](/docs/reference/visualize/gradient/)*/t/*[ pattern
](/docs/reference/visualize/pattern/)*/rameters are specified in order, without names.

The direction of the gradient.

Default: ` ltr `

====  ` angle `

[ angle ](/docs/reference/layout/angle/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The angle of the gradient.

===  ` radial `

Creates a new ra/*[ str ](/docs/reference/foundations/str/)*/ay from an origin.

The gradient is defined by two circles: the focal circle and the end circle.
The focal circle is a circle with center ` focal-center ` and radius ` focal-/*[ path documentation ](/docs/reference/visualize/path/#parameters-
fill-rule)*/color of the first stop. The end circle is a circle with center ` center ` and
radius ` radius ` , that defines the points at which the gradient ends and has
the color of the last stop. The gradient is then interpolated between these
two circles.

Using these four values, also called the focal /*[ none ](/docs/reference/foundations/none/)*/r/*[ auto
](/docs/reference/foundations/auto/)*/n/*[ length
](/docs/reference/layout/length/)*/i/*[ color
](/docs/reference/visualize/color/)*/ /*[ gradient
](/docs/reference/visualize/gradient/)*/l/*[ stroke
](/docs/reference/visualize/stroke/)*/i/*[ pattern
](/docs/reference/visualize/pattern/)*/ /*[ dictionary
](/docs/reference/foundations/dictionary/)*//reference/foundations/str/)
,  center  :  [ array ](/docs/reference/foundations/array/) ,  radius  :  [
ratio ](/docs/reference//*[ stroke ](/docs/reference/visualize/stroke/ "stroke")*/rence/foundations/auto/) [ array
](/docs/reference/foundations/array/) ,  focal-radius  :  [ ratio
](/docs/reference/layout/ratio/) ,

)  -> [ gradient ](/docs/reference/visualize/gradient/)

 /*[ array ](/docs/reference/foundations/array/)*/acing: 1fr,
      circle(fill: gradient.radial(
        ..color.map.viridis,
      )),
      circle(fill: gradient.radial(
        ..color.map.viridis,
        focal-center: (10%, 40%),
        focal-radius: 5%,
      )),
    )
    

![Preview](/as/*[
relative lengths ](/docs/reference/layout/relative/)*/ ` stops `

[ color ](/docs/reference/visualize/color/) or  [ array
](/docs/refer/*![â](/assets/icons/16-arrow-right.svg)*/tional

Question mark

Positional parameters are specifi/*![â](/assets/icons/16-arrow-right.svg)*/uestion mark

Variadic parameters can be specified multiple times.

The color  stops  of the/*![Docs](/assets/icons/16-docs-dark.svg)*/ions/none//*[ color
](/docs/reference/visualize/color//*[ gradient
](/docs/reference/visualize/gradient//*[ pattern
](/docs/reference/visualize/pattern/)*//color/#def/*[ none
](/docs/reference/foundations/none//*[ auto
](/docs/reference/foundations/auto//*[ length
](/docs/reference/layout/length//*[ color ](/docs/reference/visualize/color//*[ gradient ](/docs/reference/visualize/gradient//*[ stroke
](/docs/reference/visualize/stroke//*[ pattern
](/docs/reference/visualize/pattern//*[ dictionary
](/docs/reference/foundations/dictionary/)*/olumn, gr/*[ length
](/docs/reference/layout/length/)*/ariant  |  De/*[ int
](/docs/reference/foundations/int/)*/gradie/*[ content ](/docs/reference/foundations/content/)*/  
` "  parent  " ` |  The gradient is relative to its parent (the parent's bounding box).   
  
Default: ` auto  `

====  ` center/*[Preview](/assets/docs/nSKAw-cASGAIxDorv3UyHgAAAAAAAAAA.png)*/r of the end c/*[ none ](/docs/reference/foundations/none/)*/ /*[ color
](/docs/reference/visualize/color/)*/c/*[ gradient
](/docs/reference/visualize/gradient/)*/0/*[ pattern
](/docs/reference/visualize/pattern/)*/ocs/reference/layout/ratio/)

The radiu/*[ polygon's documentation
](/docs/reference/visualize/polygon/#parameters-fill)*/nding radius must be bigger than t/*[ none ](/docs/reference/foundations/none//*![â](/assets/icons/16-arrow-right.svg)*/ns/auto/)*/o/*[ length
](/docs/reference/layout/lengt/*![â](/assets/icons/16-arrow-right.svg)*/ize/color/)*/f/*[ gradient
](/docs/reference/visualize/gradient/)*/s/*[ stroke
](/docs/refe/*![Docs](/assets/icons/16-docs-dark.svg)*/](/docs/reference/visualize/pattern/)*/ /*[ dictionary
](/docs/reference/foundations/dictionary/)*/set to the same as the center of the last/*[ polygon's documentation
](/docs/reference/visualize/polygon/#parameters-stroke)*/ayout/ratio/)

The radius of the/*[ length ](/docs/reference/layout/length/)*/center must be ins/*[ circumcircle
](https://en.wikipedia.org/wiki/Circumcircle)*/he focal radius must be smaller than the
ending radius`.

Def/*[ int ](/docs/reference/foundations/int/)*/new conic gradient, in which c/*![â](/assets/icons/16-arrow-right.svg)*/ets/icons/16-arrow-right.svg)*/enter point of the gradient b/*![â](/assets/icons/16-arrow-
right.svg)*/assets/icons/16-arrow-
right.svg)*/ter of the shape.

gradient  .  conic  (

..  [ color ](/docs/reference/visualize/color/) [ array
]/*[ ![Docs](/assets/icons/1/*![](/assets/icons/16-arrow-right.svg)*//docs/reference/layout/angle/) , /*[ /*![](/assets/icons/16-arrow-right.svg)*/o
](/docs/reference/foundations/auto//*[ Visualize ](/docs/reference/visualize/)*//)
,  center  :  [ array ](/docs/reference//*[ Line ](/docs/reference/visualize/line/)*/(/docs/reference/visualize/gradient/)

    
    
    #stack(
      dir: ltr,
      spacing: 1fr,
      circle(fill: gradient.conic(
        ..color.map.viridis,
      )),
      circle(fill: gradient.conic(
        ..color.map.viridis,
        center: (20%, 30%),
      )),
    )
    

![Preview](/assets/docs/Mqmcewscue/*[Preview/*![Preview](/assets/docs/H1niwFeoKUTVgzuqcmZ_VgAAAAAAAAAA.png)*/ence/visualize/color/) or  [ array
](/docs/reference/foundations/array/)

Required  Positional

Question mark

Positional parameters are speci/*[ array ](/docs/reference/foundations/array/)*/tion mar/*[ none
](/docs/reference/foundations/none//*[ array
](/docs/reference/foundations/array/)*/dient.

===/*[ relative
](/docs/reference/layout/relative/)*//angle/)

/*[ angle
](/docs/reference/layout/angle/)*/deg  `

===/*[ length
](/docs/reference/layout/length//*[ color ](/docs/reference/visualize/color//*[ gradient ](/docs/reference/visualize/gradient//*[ stroke
](/docs/reference/visualize/stroke//*[ pattern
](/docs/reference/visualize/pattern//*[ dictionary
](/docs/reference/foundations/dictionary/)*/ons/au/*[ content ](/docs/reference/foundations/content/)*/)

The  relati/*[ array ](/docs/reference/foundations/array/)*/t placed at the root/top level of the document, the parent is the
page itself. For other elements, the parent/*![â](/assets/icons/16-arrow-right.svg)*/id, or stack that contains the element.

Variant  |/*![â](/assets/icons/16-arrow-right.svg)*/ The gradient is relativ/*[ none ](/docs/reference/foundations/none/)*/ /*[ array
](/docs/refere/*![Docs](/assets/icons/16-docs-dark.svg)*/parent's bounding box).   
  
Default: ` auto  `

====  ` center `

[ array ](/docs/reference/foundations/array/)

The center of the last circle of the gradient.

A value of ` (  50%  ,  50%  )/*[ relative ](/docs/reference/layout/relative/)*/de
of its container.

Default: ` (  50%  ,  50%  )  `

===  ` sharp `

Creates a sharp version of this gradient.

Sharp gradients have discrete jumps between colors, instead of a smooth
transition. They are particularly useful for cre/*[ angle ](/docs/reference/layout/angle/)*/

self  .  sharp  (

[ int ](/docs/reference/foundations/int/) ,  smoothness  :  [ ratio
](/docs/reference/layout/ratio/) ,

)  -> [ gradient ](/docs/reference/visualize/gradient/)

    
    
    #set rect(width: 100%, height: 20pt)
    #let grad = gradient.linear(./*[ length ](/docs/reference/layout/length/)*/ /*[ color
](/docs/reference/visualize/color/)*/l/*[ gradient
](/docs/reference/visualize/gradient/)*/]/*[ stroke
](/docs/reference/visualize/stroke/)*/A/*[ pattern
](/docs/reference/visualize/pattern/)*///*[ dictionary
](/docs/reference/foundations/dictionary/)*/
Positional parameters are specified in order, without names.

The number of stops in the gradient.

====  ` smoothness `

[ rati/*[ stroke ](/docs/reference/visualize/stroke/ "stroke")*/ the gradient.

Default: ` 0%  `

===  ` repeat `

Repeats this gradient a given number of times, optionally mirroring it at each
repetition.

self  .  repeat  (

[ int ](/docs/reference/foundations/int/) ,  mirror  :  [ bool
](/docs/reference/foundations/bool/) ,

)  -> [ gradient ](/docs/reference/visualize/gradient/)

    
    
    #circle(
      radius: 40pt,
      fill: gradient
        .radial(aqua, white)/*[Preview](/assets/docs/Shwqpl9XrWkg6A1XzBok6AAAAAAAAAAA.png)/*[ ![â](/assets/icons/16-arrow-right.svg)*/  ` repetitions `

[ int ](/docs/reference/foun/*![â](/assets/icons/16-arrow-right.svg)*/-right.svg)*/k

Positional parameters are specified in /*![â](/assets/icons/16-arrow-right.svg)*/es to re/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ool ](/docs/reference/foundations/bool/*![Docs](/assets/icons/16-docs-dark.svg)*/erence/)*/petition.

Default: ` false  `

===  ` kind/*[ Math ](/docs/reference/math/)*/adient.

self  .  kind  (

)  -> [ function/*[ Binomial ](/docs/reference/math/binom/)*/

===  ` stops `

Returns the stops of this gradient.

self  .  stops  (

)  -> [ array ](/docs/reference/foundations/array/)

===  ` space `

Returns the mixing space of this gradient.

self  .  space  (

)  -> any

===  /*[Preview](/assets/docs/x7e1yoGny67cX0IzBxp69AAAAAAAAAAA.png)*/t.

self  .  relative  (

)  -> [ auto ](/docs/reference/foundations/auto/)

===  ` angle `

Returns the angle of this gradient.

self  .  angle  (

/*[ content ](/docs/reference/foundations/content/)*/ [ a/*[ content
](/docs/reference/foundations/content/)*/ple `
/*[ content ](/docs/reference/foundations/content/)*/sition is eith/*[ content ](/docs/reference/foundations/content/)*/cs/reference/layout/ratio/ "ratio") between ` 0%  ` and ` 100%  ` ) or an
[ angle ](/docs/reference/layout/angle/ "angle") . Any value outside/*[ content ](/docs/reference/foundations/content/)*/ (

[ angle ](/docs/reference/layout/angle/) [ ratio
](/docs/reference/layout/ratio/)

)  -> [ color ](/docs/reference/visualize/color/)

====  ` t `

[ angle ](/docs/reference/layout/angle/) or  [ ratio
]/*[ ![â](/assets/icons/16-arrow-right.svg)*/ Positional

Question mark

Positional parameters a/*[ ![â](/assets/icons/16-arrow-right.svg)*/ position at which to sample the gradient.

===  ` samples `

Samples the gradient at mul/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/esults as
an array.

self  .  samples  (

..  [ angl/*[ Reference ](/docs/reference/)*/e/) [ ratio
](/docs/reference/layout/ratio//*[ Math ](/docs/reference/math/)*/nce/foundations/array/)

====  ` ts `

[ an/*[ Class ](/docs/reference/math/class/)*/r  [ ratio
](/docs/reference/layout/ratio/)

Required  Positional
/*![â](/assets/icons/16-arrow-right.svg)*/e specified in order, without names.

Variadic

Quest/*![â](/assets/icons/16-arrow-right.svg)/*![â](/assets/icons/16-arrow-right.svg)*/at which to sample the gradient.

[ ![â](/assets/ico/*![Docs](/assets/icons/16-docs-dark.svg)*/s page
/*![Docs](/assets/icons/16-docs-dark.svg)*/ ![â](/assets/icons/16-arrow-
right.svg) Image  Next page  ](/docs/re/*[ `
limits ` ](/docs/reference/math/attach/#functions-limits)*/l/*[ ` scripts `
](/docs/reference/math/attach/#functions-scripts)*/ - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Visualize ](/do/*[Preview](/assets/docs/4-1urHqzMZfIf7fLTw_1MAAAAAAAAAAA.png)*/t.svg)
  - [ Circle ](/docs/reference/visualize/circle/)

=  ` circle ` Element

Question mark

Element functions can be customized with ` set ` and /*[ str ](/docs/reference/foundations/str/)*//*[ content
](/docs/reference/foundations/content/)*/*![P/*[ ` align `
](/docs/reference/math/mat/#parameters-align)*/t.
    #circ/*[ str ](/docs/reference/foundations/str/)*/    Automatically \
      sized to fit.
    ]
    

![Preview](/assets/docs/H1niwFeoKUTVgzuqcmZ_VgAAAAAAAAAA.png)

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

circle  (

radius  :  [ length ](/docs/reference/layout/length/) ,  width  :  [ auto
](/docs/reference/foundations/auto/) [ relative
](/docs/reference/layout/relative/) ,  height  :  [ auto
](/docs/reference/foundations/auto/) [ relative
](/docs/reference/layout/relative/) [ fraction
](/docs/reference/layout/fraction/) ,  fill  :  [ none
](/docs/reference/foundations/none/) [ color
](/docs/reference/visualize/color/) [ gradient
](/docs/reference/visualize/gradient/) [ pattern
](/docs/reference/visualize/pattern/) ,  stroke  :  [ none
](/docs/reference/foundations/none/) [ auto
](/docs/reference/foundatio/*[ content ](/docs/reference/foundations/content/)*/h/) [ color ](/docs/reference/visualize/color/)
[ gradient ](/docs/reference/visualize/gradient/) [ stroke
](/docs/reference/visualize/stroke/*[ ![â](/assets/icons/16-arrow-right.svg)*/attern/) [ dictionary
](/docs/reference/foundatio/*[ ![â](/assets/icons/16-arrow-right.svg)*//docs/reference/layout/relative/) [ dictionary
](/docs/reference/foundations/dictionary/) ,  o/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/yout/relative/) [ dictionary
](/docs/reference/found/*[ Reference ](/docs/reference/)*/(/docs/reference/foundations/none/) [ conte/*[ Math ](/docs/reference/math/)*/s/content/) ,

)  -> [ content ](/docs/refe/*[ Styles ](/docs/reference/math/styles)*/ius `

[ length ](/docs/reference/layout/length/)

Settable

Question mark

Settable pa/*[ ` text ` ](/docs/reference/text/text/
"`text`")*/ of the function
with a ` set ` rule.

The circle's radius. T/*![Preview](/assets/docs/CpCAX34oIjWq-jvec_NKoQAAAAAAAAAA.png)*/fault: ` 0pt  `

===  ` width `

[ auto ](/*[ content ](/docs/reference/foundations/content/)*/
](//*[ content ](/docs/reference/foundations/content/)*/ion mark

Settable parameters can be cu/*[Preview](/assets/docs/I3XzlEtlEFD5Cw96srS1ngAAAAAAAAAA.png)*/ ` rule.

The /*[ content ](/docs/reference/foundations/content/)*/ radius ` and ` height `
.

In contrast to ` radius ` , this can be relative to the parent container's
width.

Default: ` auto  `

===  ` height `

[ auto ](/docs/reference/foundations/auto/) or  [ relative
](/docs/reference/layout/relative/) or  [ fraction
](/d/*[ content ](/docs/reference/foundations/content/)*/on m/*[ content ](/docs/reference/foundations/content/)*/l following us/*[ content ](/docs/reference/foundations/content/)*/le's height. This is mutually exclusive with ` radius ` and ` width `
.

In contrast to ` radius ` , this can be relative to the parent container's
height.

Default: ` auto  `

==/*[ content ](/docs/reference/foundations/content/)*//non/*[ content ](/docs/reference/foundations/content/)*//) or  [ gradient
](/docs/reference/vi/*[Preview](/assets/docs/8-9k5ChF2PO13_x1ipPkAAAAAAAAAAAA.png)*//pattern/)

Se/*[ content ](/docs/reference/foundations/content/)*/ customized for all following uses of the function
with a ` set ` rule.

How to fill the circle. See the [ rectangle's d/*[ ![â](/assets/icons/16-arrow-right.svg)*/ect/#parameters-fill) for more details.

Default: ` n/*[ ![â](/assets/icons/16-arrow-right.svg)*/ference/foundations/none/) or  [ auto
](/docs/reference/foundations/auto/) or  [ length
]/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/lor
](/docs/reference/visualize/color/) or  [ gradie/*[ Reference ](/docs/reference/)*/gradient/) or  [ stroke
](/docs/reference/v/*[ Math ](/docs/reference/math/)*/
](/docs/reference/visualize/pattern/) or  /*[ Text Operator ](/docs/reference/math/op/)*/dictionary/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

How to stroke the circle. See the [ rectangle's documentation
](/docs/reference/visualize/rect/#parameters-stroke) /*[Preview](/assets/docs/n9yefElmfwTi92ejfLzhZwAAAAAAAAAA.png)*/ative ](/docs/reference/layout/relative/) or  [ dictionary
](/docs/reference/foundations/dictionary/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

How much to pad the circle's content. See the [ box's documentation
](/docs/reference/layout/box/#parameters-inset) for more details.

Default: ` 0%  +  5/*![Preview](/assets/docs/nSKAw-cASGAIxDorv3UyHgAAAAAAAAAA.png)*/elative/) or  [ dictionary
](/docs/reference/foundations/dictionary/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` r/*[ content ](/docs/reference/foundations/content/)*/t affecting/*[ bool
](/docs/reference/foundations/bool/)*/](/doc/*[ content ](/docs/reference/foundations/content/)*/re
details.

/*[ content ](/docs/reference/foundations/content/)*/ocs/reference/foundations/none/) or  [ content
](/docs/reference/foundations/content/)

Positional

Question mark

Positional parameters/*[ bool ](/docs/reference/foundations/bool/)*/ttable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The content to place into the circle. The circle expands to fit this content,
keeping the 1-1 /*[ ![â](/assets/icons/16-arrow-right.svg)*/](/assets/icons/16-arrow-right.svg) Visualize  Prev/*[ ![â](/assets/icons/16-arrow-right.svg)*/![â](/assets/icons/16-arrow-right.svg) Color
Next page  ](/docs/reference/visualize/color/)
/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](//*[ Reference ](/docs/reference/)*/arrow-right.svg)
  - [ Reference ](/docs/re/*[ Math ](/do/*![â](/assets/icons/16-arrow-right.svg)*/)
  - [ Visualize ](/doc/*[ Matrix ](/docs/reference/math/ma/*![â](/assets/icons/16-arrow-
right.svg)*/olygon ](/docs/reference/visualize/polygon/)

=  ` polygon ` Element

Question mark

Element function/*![Docs](/assets/icons/16-docs-dark.svg)*/ show ` ru/*![](/assets/icons/16-arrow-right.svg)*/is defined by its corner points and is closed automatically.

==  Example

    
    
    /*![â](/assets/icons/16-arrow-right.svg)*//*![](/assets/icons/16-arrow-right.svg)*/,
      (60%/*![â](/assets/icons/16-arrow-right.svg)*/m),
    )
    

![P/*[ ` align `
](/docs/reference/math/mat/#parameters-align)*/)

==  Par/*![Docs](/assets/icons/16-docs-dark.svg)*/the inputs to a function. They are specified in parentheses
after the function name.

polygon  (

fill  :  [ none ](/docs/reference/foundations/none/) [ color
](/docs/reference/visualize/colo/*![Preview](/ass/*[ Roots ](/docs/reference/math/roots)*/AAAAAAAAAA.png)*/docs/reference/visualize/pattern/) ,  fill-rule  :  [ str
](/docs/reference/foundations/str/) ,  stroke  :  [ none
](/docs/reference/foundations/none/) [ aut/*[ none ](/docs/reference/foundations/none//*[ str
](/docs/reference/foundations/str//*[ array
](/docs/reference/foundations/array//*[ symbol
](/docs/reference/symbols/symbol/)*/e/gradient/*[ alignment
](/docs/reference/layout/alignment/)*/ [ pattern
]/*[ none
](/docs/reference/foundations/none//*[ int ](/docs/reference/foundations/int//*[ dictionary ](/docs/reference/foundations/dictionary/)*/ions/arr/*[ relative
](/docs/reference/layout/relative/)*/dations/cont/*[ relative
](/docs/reference/layout/relative/)*//foundations/no/*[ relative
](/docs/reference/layout/relative/)*/olor/*[ array
](/docs/reference/foundations/array/)*//gradi/*[ content ](/docs/reference/foundations/content/)*/attern/)

Sett/*[ none ](/docs/reference/foundations/none/)*/n/*[ str
](/docs/reference/foundations/str/)*/t/*[ array
](/docs/reference/foundations/array/)*/ /*[ symbol
](/docs/reference/symbols/symbol/)*/ult stroke disappears. To create a rectangle with
both fill and stroke, you have to configure both.

Default: ` none  `

===  ` fill-rule `

[ str ](/docs/reference/foundations/str/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The drawing rule used to fill the polygon.

See the [ path documentation ](/docs/reference/visualize/path/#parameters-
fill-rule) f/*[")
    $ mat(1, 2; 3, 4) $
    

![Preview](/assets/docs/CpCAX34oIjWq-jvec_NKoQAAAAAAAAAA.png)*/is computed by/*[ alignment ](/docs/reference/layout/alignment/)*/  even-odd  " ` |  Specifies that "inside" is computed by an odd/*![â](/assets/icons/16-arrow-right.svg)*/: ` "non-zero"  `

===  ` stroke `

[ none ](/docs/re/*![â](/assets/icons/16-arrow-right.svg)*//docs/reference/foundations/auto/) or  [ length
](/docs/reference/layout/length/) or  [ color/*![Docs](/assets/icons/16-docs-dark.svg)*/  [ gradien/*[Preview](/assets/docs/X3QXNtgXqEVUQfvJRQOPRwAAAAAAAAAA.png)*/s/reference/visu/*[ none ](/docs/reference/foundations/none/)*/n/*[ int
](/docs/reference/foundations/int/)*/(/*[ dictionary
](/docs/reference/foundations/dictionary/)*/stion mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

How to [ stroke ](/docs/reference/visualize/stroke/ "stroke") the polygon.
This can be:

Can be set to ` none  ` to disable the stroke or to ` auto  ` for a stroke of
` 1pt  ` black if and if only if no fill is given.

Default: ` auto  `

===  `/*![](/*[ content ](/docs/reference/foundations/content/)*/y/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

Variadic

Question mark

Variadic parameters can be specified multiple times.

The vertices of the polygon. Each point is specified as an array of two [
relative lengths ](/docs/reference/layout/relative/) .

==  Definitions

Quest/*![Preview](/assets/docs/Shwqpl9XrWkg6A1XzBok6AAAAAAAAAAA.png)*//*![â](/assets/icons/16-arrow-right.svg)*/he function or type, followed by a period, and then the
/*![â](/assets/icons/16-arrow-/*[ content ](/docs/reference/foundations/content/)*/number of vertices.

polygon  .  regular  (

fill  :  [ non/*![Docs](/assets/icons/16-docs-dark.svg)*/[ color
](/docs/reference/visualize/color/) [ gradient
](/docs/reference/visualize/gradient/) [ pattern
](/docs/reference/visualize/pattern/) ,  stroke  :  [ none/*[ stroke ]/*![](/assets/icons/16-arrow-right.svg)*/](/docs/reference/foundations/auto/) [ length
](/docs/reference/layout/length/) [ color ](/docs/reference/visualize/color/)
[ gradient ](/docs/reference/visualize/gradient/) [ stroke
](/docs/reference/visualize/stroke/) [ pattern
](/docs/reference/visualize/pattern/) [ dictionary
](//*[Preview](/assets/docs/4iip0Z9ppDA0SxnJHJihkQAAAAAAAAAA.png)*/
](/docs/reference/layout/length/) ,  vertices  :  [ int
](/docs/reference/foundations/i/*[Preview](/assets/docs/3PHAJpsviSZ-Rqtb3sBd4AAAAAAAAAAA.png)*/t/)

    
  /*[ relative ](/docs/reference/layout/relative/)*/ten(80%),
      stroke: blue,
      size: 30pt,
      vertices: 3,
    )
    

![Preview](/assets/docs/nSKAw-cASGAIxDorv3UyHgAAAAAAAAAA.png)

====  ` fill `

[ none ](/docs/reference/foundations/none/) or  [ color
](/docs/reference/visualize/color/) or  [ gradient
](/docs/reference/visualize/gradient/) or  [ pattern
](/docs/reference/visualize/pattern/)

How to fill the polygon. /*[Preview](/assets/docs/kaypJSdE1P1lOWZ-cMMpyAAAAAAAAAAA.png)*/visualize/polygo/*[ relative ](/docs/reference/layout/relative/)*/ stroke `

[ none ](/docs/reference/foundations/none/) or  [ auto
](/docs/ref/*![â](/assets/icons/16-arrow-right.svg)*/(/docs/reference/layout/length/) or  [ color
](/docs//*![â](/assets/icons/16-arrow-right.svg)*/nt
](/docs/reference/visualize/gradient/) or  [ stroke
](/docs/reference/visualize/strok/*[Preview](/assets/docs/YNVJ8uCnPvrs8e0YkWIQFgAAAAAAAAAA.png)*/[ dictionary
](/doc/*[ relative ](/docs/reference/layout/relative/)*/troke the polygon. See the general [ polygon's documentation
](/docs/reference/visualize/polygo/*![](/assets/icons/16-arrow-right.svg)*/s.

====  ` size `

[ length ](/docs/reference/layout/length/)

The diameter of the [ circumcircle
](https://en.wikipedia.org/wiki/Circumcircle) of the regular polygon.

De/*[Preview](/assets/docs/tKmrTRxYwVIL8x7N4tnRyQAAAAAAAAAA.png)*//foundations//*[ array ](/docs/reference/foundations/array/)*/

Default: ` 3  `

[ ![â](/assets/icons/16-arrow-right.svg) Pattern  Previous page
](/docs/reference/visualize/pattern/) [ ![â](/assets/icons/16-arrow-
right.svg) Rectangle  Next page  ](/docs/reference/visualize/rect/)



= *docs/reference/visualize/line.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/re/*[Preview](/assets/docs/N-7caJ4FsPlOdlVrUrNk9gAAAAAAAAAA.png)/*[ ![â](/assets/icons/16-ar/*![Preview](/assets/docs/4-1urHqzMZfIf7fLTw_1MAAAAAAAAAAA.png)*/ Line /*[ ![â](/assets/icons/16-arrow-right.svg)*/ine ` Element

Question mark

Element functions can be customized with ` set ` and  ` sh/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ther.

==  Example

    
    
    #set page(height: /*[ Reference ](/docs/reference/)*/00%)
    #line(end: (50%, 50%))
    #line(
/*[ Math ](/docs/reference/math/)*/: 2pt + maroon,
    )
    

![Preview](/ass/*[ Roots ](/docs/reference/math/roots)*/AAAA.png)

==  Parameters

Question mark

Parameters are the inputs to a function. They /*![](/assets/icons/16-arrow-right.svg)*/e fu/*[Preview](/assets/docs/YJMQ-3S5QEsCnosYijnvKwAAAAAAAAAA.png)*/oundations/array/) ,  end  :  [ none
](/docs/reference/foundations/none/) [ array
](/docs/reference/foundations/array/) ,  length  :  [ relative
](/docs/refe/*[ none ](/docs/reference/foundations/none//*[ content
](/docs/reference/foundations/content/)*//*[ content
](/docs/reference/foundations/content/)*/olor ]/*[ content ](/docs/reference/foundations/content/)*/docs/reference/visualize/gradient//*[Preview](/assets/docs/5dcBKGUow3rGrUB1Eg_gjwAAAAAAAAAA.png)*//docs/reference/*[ none ](/docs/reference/foundations/none/)*/e/*[ content
](/docs/reference/foundations/content/)*/nt ](/docs/reference/foundations/content/)

===  ` start `

[ array ](/docs/reference/foundations/array/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The start point of the line.

Must be an array of exactly/*[ content ](/docs/reference/foundations/content/)*/ ,  0%  +  0pt  ) /*![â](/assets/icons/16-arrow-right.svg)*/ce/foundations/none/) or  [ array
](/docs/reference/foundations/array/)

Settable

Question mark/*![Docs](//*[ none ](/docs/reference/foundations/none/)*/ence/foundations/content/)*/
wit/*[ content ](/docs/reference/foundations/content/*![](/assets/icons/16-arrow-right.svg)*/  `

===  ` length `

[ /*[Preview](//*![](/assets/icons/16-arrow-right.svg)*/AAAAAAA.png)*/tion mark

Settabl/*[ content ](/docs/reference/foundations/content/)*/uses of the function
with a ` set ` rule.

The line's length. This is only respected if ` end ` is ` none  ` .

Default: ` 0%  +  30pt  `

==/*[ ![â](/assets/icons/16-arrow-right.svg)*/yout/angle/)

Settable

Question mark

Settable par/*[ ![â](/assets/icons/16-arrow-right.svg)*/g uses of the function
with a ` set ` rule.

The angle at which the line points away from t/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/d ` is ` none  ` .

Default: ` 0deg  `

===  ` strok/*[ Reference ](/docs/reference/)*//layout/length/) or  [ color
](/docs/refere/*[ Math ](/docs/reference/math/)*/dient
](/docs/reference/visualize/gradient//*[ Under/Over ](/docs/reference/math/underover)*/oke/) or  [ pattern
](/docs/reference/visualize/pattern/) or  [ dictionary
](/docs/reference/foundations/dictionary/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

How to [ stroke ](/docs/reference/visualize/stroke/ "stroke") the line.

Default: ` 1pt  +  black `

![](/*[ content ](/docs/reference/foundations/content/)*/   
/*[ content ](/docs/reference/foundations/content/)*/  spacing: 1em,
      line(stroke: 2pt + red),
   /*[Preview](/assets/docs/kPv2rkuOYqE5xrS9gynyqwAAAAAAAAAA.png)*/,
      line(s/*[ content ](/docs/reference/foundations/content/)*/d")),
      line(stroke/*![Preview](/assets/docs/8-9k5ChF2PO13_x1ipPkAAAAAAAAAAAA.png/*[ content ](/docs/reference/foundations/content/)*/g6A1XzBok6AAAAAAAAAAA.png)

[ ![â](/assets/icons/16-arrow-right.svg) Image  Previous page
](/docs/reference/visualize/image/) [ ![â](/assets/icons/16-a/*![â](/assets/icons/16-arrow-right.svg)*/ations/content/)*/uali/*[ content ](/docs/reference/foundations/content/)*/- [ ![Docs](/assets/icons/16-docs-dark.svg) ](/do/*[Preview](/assets/docs/brbtze6pYcbdDHZXqYtX4QAAAAAAAAAA.png)*/e ](/docs//*![Docs](/assets/icons/16-docs-dark.svg)*/ations/con/*![](/assets/icons/16-arrow-right.svg)*//math/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Binomial ](/docs/reference/math/binom/)

=  ` binom ` Element

Ques/*![](/assets/icons/16-arrow-right.svg)*/ustomized with ` set ` and  ` show ` rules.

A binomial expression.

==  Example

    
    
    $ binom(n, k) $
    $ binom(n, k_1, k_2, k_3, ...,/*[ content ](/docs/reference/foundations/content/)*//*[ none
](/docs/reference/foundations/none//*[ content
](/docs/reference/foundations/content/)*/ fun/*![Preview](/assets/docs/n9yefElmfwTi92ejfLzhZwAAAAAAAAAA.png)*/on name.

math  .  binom  (

[ content ](/docs/reference/*[Preview](/assets/docs/CQPrguDXpL2KqqF50rooNAAAAAAAAAAA.png)*/undations/cont/*[ content ](/docs/reference/foundations/content/)*/tions/content/)

===  ` upper `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are sp/*[ none ](/docs/reference/foundations/none/)*/i/*[ content
](/docs/reference/foundations/content/)*/ocs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

Variadic

Question mark

Variadic parameters can be specified multiple times.

The binomial's lower index.

[ ![â](/assets/icons/16-arrow-right.svg) Attach  Previous page
](/docs/reference/math/attach/) [ ![â](/assets/icons/16-arrow-right.svg)
Cancel  Next page  ](/docs/reference/math/cancel/)



= *docs/reference/math/class.md*

  - /*[ content ](/docs/reference/foundations/content/)*//*[ none
](/docs/reference/foundations/none//*[ content
](/docs/reference/foundations/content/)*/assets/*[ content ](/docs/reference/foundations/content/)*/erence/math/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [/*[Preview](/assets/docs/kkBGSVxyTk5_L1k_EG8I3gAAAAAAAAAA.png)*/
Question mark/*[ content ](/docs/reference/foundations/content/)*/` and  ` show ` rules.

Forced use of a certain math class.

This is useful to treat certain symbols as if they were of a different class,
e.g. to ma/*[ none ](/docs/reference/foundations/none/)*/s/*[ content
](/docs/reference/foundations/content/)*/luding spacing around it, and how its scripts are
attached by default. Note that the latter can always be overridden using [ `
l/*![](/assets/icons/16-arrow-right.svg)*//#functions-limits) and [ ` scripts `/*![](/assets/icons/16-arrow-right.svg)*/ions-scripts) .

==  Example

    
    
    #let loves = math.class(
      "relation",
      sym.suit.heart,
    )
    
    $x loves y and y loves 5$
    

![Preview](/assets/docs/4-1urHqzMZfIf7fLTw_1MAAAAAAAAAAA.png)

==  Parameters

Question ma/*[ content ](/docs/reference/foundations/content/)*//*[ none
](/docs/reference/foundations/none//*[ content
](/docs/reference/foundations/content/)*/refere/*[ conte/*![â](/assets/icons/16-arrow-right.svg)*//)*/nce/foundations/content/) ,

)  -> [ content ](/docs/*![â](/assets/icons/16-arrow-right.svg)*/p15FKm4cOEOHbW4H-OwAAAAAAAAAA.png)*/e/foundations//*[ content ](/docs/reference/foundations/conten/*![Docs](/assets/icons/16-docs-dark.svg)*/order, without names.

The class to apply to the content.

![](/assets/icons/16-arrow-right.svg) View options

Varian/*[ none ](/docs/reference/foundations/none/)*/ /*[ content
](/docs/reference/foundations/content/)*/ "  punctuation  " ` |  Punctuation, e.g. a comma.   
` "  opening  " ` |  An opening delimiter, e.g. ` ( ` .   
` "  closing  " ` |  A closing delimiter, e.g. ` ) ` .   
` "  fence  " ` |  A delimiter that is the same on both sides, e.g. ` | ` .   
` "  large  " ` |  A large operator like ` sum ` .   
` "  relation  " ` |  A relation like ` = ` or ` prec ` .   
` "  unary  " ` |  A unary operator like ` not ` .   
` "  binary  " ` |  A binary operator like ` times ` .   
` "  va/*[ content ](/docs/reference/foundations/content/)*//*[ none
](/docs/reference/foundations/none//*[ content
](/docs/reference/foundations/content/)*/)

Req/*[ content ](/docs/reference/foundations/content/)*/meters are specified in order, without names.

The content to w/*[Preview](/assets/docs/1FDacJmC0p-s0HOdRor7WgAAAAAAAAAA.png)*/right.svg) Cas/*[ content ](/docs/reference/foundations/content/)*/[ ![â](/assets/icons/16-arrow-right.svg)
Equation  Next page  ](/docs/reference/math/equation/)



= *docs/reference/math/styles.md*

  - [ ![Docs](//*[ none ](/docs/reference/foundations/none/)*/ /*[ content
](/docs/reference/foundations/content/)*/ence ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Math ](/docs/reference/math/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Styles ](/docs/reference/math/styles)

=  Styles

Alternate letterforms within formulas.

These functions are distinct from the [ ` text ` ](/docs/reference/text/text/
"`text`") function because math fonts contain multiple variants of each
letter.

==  Functions

===  ` upright `/*![Preview](/assets/docs/CpCAX34oIjWq-jvec_NKoQAAAAAAAAAA.png)*/ontent ](/docs/reference/foundations/content/)*//*[ none
](/docs/reference/foundations/none//*[ content
](/docs/reference/foundations/content/)*/ht(A) /*[ content ](/docs/reference/foundations/content/)*/Cw96srS1ngAAAAAAAAAA.png)

====  ` body `

[ content ](/docs/r/*[Preview](//*![](/assets/icons/16-arrow-right.svg)*/AAAAAAA.png)*/on mark

Posit/*[ content ](/docs/reference/foundations/content/)*/names.

The content /*![Preview](/assets/docs/X3QXNtgXqEVUQfvJRQOPRwAAAAAAAAAA.png)*/oman letters and greek lowercase letters, this is already the default.

ma/*[ none ](/docs/reference/foundations/none/)*/c/*[ content
](/docs/reference/foundations/content/)*/reference/foundations/content/)

====  ` body `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The content to style.

===  ` bold `

Bold font style in math.

math  .  bold  (

[ content ](/docs/reference/foundations/content/)

)  -> [ content ](/docs/reference/foundations/content/)

    
    
    $ bold(A) := B^+ $
    

![Preview](/assets/docs/8-9k5ChF2PO13_x1ipPkAAAAAAAAAAAA.png/*[ content ](/docs/reference/foundations/content/)*//*[ none
](/docs/reference/foundations/none//*[ content
](/docs/reference/foundations/content/)*/fied i/*[ content ](/docs/reference/foundations/content/)*/ ![â](/assets/icons/16-arrow-right.svg) Stretch  Previous p/*[Preview](/assets/docs/0O_PdeP9aD4IdbiAFPLHcwAAAAAAAAAA.png)*/16-arrow-right/*[ content ](/docs/reference/foundations/content/)*//math/op/)



= *docs/reference/math/op.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Referen/*[ none ](/docs/reference/foundations/none/)*/s/*[ content
](/docs/reference/foundations/content/)*//math/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Text Operator ](/docs/reference/math/op/)

=  ` op ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

A text operator in an equation.

==  Example

    
    
    $ tan x = (sin x)/(cos/*![](/assets/icons/16-arrow-right.svg)*/its: #true)_(n->oo) n $
    

![Preview](/assets/docs/n9yefElmfwTi92ejfLzhZwAAAAAAAAAA.png)

==  Predefined Operators

Typst predefines the op/*![Preview](/assets/docs/4iip0Z9ppDA0/*[ ![â](/assets/icons/16-arrow-right.svg)*/ontent/)*//*[ none
](/docs/reference/foundations/none//*[ co/*![â](/assets/icons/16-arrow-right.svg)*/ent/)*/ ` , `/*[ content ](/docs/reference/foundations/content/)*/lg ` , ` lim ` , ` limin/*![Docs](/assets/icons/16-docs-dark.svg)*/*[Preview](/assets/docs/qJR4zaGYtEbCSgwj0kBzVgAAAAAAAAAA.png)*/` sin ` , `
si/*[ content ](/docs/reference/foundations/content/)*/` tg ` and ` tr ` .

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

math  .  op  /*[ none ](/docs/reference/foundations/none/)*/c/*[ content
](/docs/*![Preview](/assets/docs/kaypJSdE1P1lOWZ-cMMpyAAAAAAAAAAA.png)*/[ content ](/docs/reference/foundations/content/)

===  ` text `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The operator's text.

=/*![](/assets/icons/16-arrow-right.svg)*/nce/foundations/bool/)

Settable

Question mark

Settable parameters can be customi/*![Preview](/assets/docs/YNVJ8uCnPvrs8e0YkWIQFgAAAAAAAAAA.png)*/e.

Whether the operator should show attachments as limits in d/*[ content ](/docs/reference/foundations/content/)*//*[ none
](/docs/reference/foundations/none//*[ content
](/docs/reference/foundations/content/)*/](/as/*[ content ](/docs/reference/foundations/content/)*/age  ](/docs/reference/math/underover/)



= *docs/reference//*[Preview](/assets/docs/vPA0v0E_JXwsC1BpaClcEgAAAAAAAAAA.png)*/](/docs)
  - !/*[ content ](/docs/reference/foundations/content/)*/nce ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Math ](/docs/reference/math/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Matrix ](/docs/r/*[ none ](/docs/reference/foundations/none/)*/e/*[ content
](/docs/reference/foundations/content/)*/ith ` set ` and  ` show `/*![](/assets/icons/16-arrow-right.svg)*/ row should be separated by commas, while the rows themselves
should be separated by semicolons. The semicolon syntax mer/*![Preview](/assets/docs/N-7caJ4FsPlOdlVrUrNk/*[ ![â](/assets/icons/16-arrow-right.svg)*/
syntax of math /*[ ![â](/assets/icons/16-arrow-r/*![â](/assets/icons/16-arrow-right.svg)*/n cells can be aligned wi/*[ ![â](/assets/icons/16-arrow-right.svg)*/mat/#parameters-align/*![Docs](/assets/icons/16-docs-dark.svg)*/re in the same row can be aligned wi/*[/*![](/assets/*[ Reference ](/docs/reference/)*/ 
    $ mat(
      1, 2, ..., 10;
/*![](/as/*[ Math ](/docs/reference/math/)*/ference/)*/.down, dots.v;
      10, 10, ..., 10;
    )/*[ Math ](/docs/reference/math/)*/s/yiSilYGQ1wRBpIK3ON349AAAAAAAAAAA.png)

==/*[ Variants ](/docs/reference/math/variants)*/ the inputs to a function. They are specified in parentheses
after the fun/*![Preview](/assets/docs/YJMQ-3S5QEsCnosYijnvKwAAAAAAAAAA.png)*/`")*/ce/foundations/none/) [ str
](/docs/reference/foundations/str/) [ array
](/docs/reference/foundations/array/) [ symbol
](/docs/reference/symbols/symbol/) ,  align  :  [ alignment
](/d/*[ content ](/docs/reference/foundations/content/)*/ non/*[ content ](/docs/reference/foundations/content/)*/ocs/reference//*[ content ](/docs/reference/foundations/content/)*/foundations/dictionary/) ,  gap  :  [ relative
](/docs/reference/layout/relative/) ,  row-gap  :  [ relative
](/docs/reference/layout/relative/) ,  column-gap  :  [ relative
](/docs/ref/*[ content ](/docs/reference/foundations/content/)*/efer/*[ content ](/docs/reference/foundations/content/)*/cs/reference/foundations/content/)
/*[Preview](/assets/docs/QH7JeXflCs-wCjP8nkBWrQAAAAAAAAAA.png)*/ or  [ str
](//*[ content ](/docs/reference/foundations/content/)*/ocs/reference/foundations/array/) or  [ symbol
](/docs/reference/symbols/symbol/)

Settable

Question mark

Settable parameters can be customized for all following uses of the functi/*[ content ](/docs/reference/foundations/content/)*/an b/*[ content ](/docs/reference/foundations/content/)*/r, in which case the
right deli/*[Preview](/assets/docs/e8XkJAdgWXZDqbWs94GeeQAAAAAAAAAA.png)*/eft and
a righ/*[ content ](/docs/reference/foundations/content/)*/](/assets/icons/16-arrow-right.svg) View example

    
   /*![Preview](/assets/docs/5thyKdLM1Lrfm53ILJWqaQAAAAAAAAAA.png)*/
![Preview](/assets/docs/CpCAX34oIjWq-jvec_NKoQAAAAAAAAAA.png)

=/*[ content ](/docs/reference/foundations/content/)*/ut/a/*[ content ](/docs/reference/foundations/content/)*/ameters can be customized for all follo/*![â](/assets/icons/16-arrow-right.svg)*/xDZHcnwAAAAAAAAAA.png)*/al alignment t/*[ content ](//*![â](/assets/icons/16-arrow-right.svg)*/](/assets/icons/16-arrow-right.svg) View example

    
    
    #set math.mat(align: right)
    $ mat(-1, 1, 1; 1, -1, 1; 1, 1, -1) $
    

![Preview](/assets/docs/X3QXNtgXqEVUQfvJRQOPRwAAAAAAAAAA.png)

===  ` augment `

[ none ](/d/*![](/assets/icons/16-arrow-right.svg)*/mbols ](/docs/reference/symbols/sym/)/*![](/assets/icons/16-arrow-right.svg)*/erence/foun/*[ content ](/docs/reference/foundations/content/)*/ttab/*[ content ](/docs/reference/foundations/content/)*/ uses of the function
with a ` set ` rule.

Draws augmentation lines/*[Preview](/assets/docs/7qs4sC1Ha0vO_Ei_dnjHuQAAAAAAAAAA.png)*/ngle number: A/*[ content ](/docs/reference/foundations/content/)*/ecified column number. Negative numbers start from the end. 
  - A dictionary: With a dictionary, multiple augmentation lines can be drawn both horizontally and vertically. Additionally/*[ content ](/docs/reference/foundations/content/)*/ry c/*[ /*![Preview](/assets/docs/kPv2rkuOYqE5xrS9gynyqwAAAAAAAAAA.png)*/ at which horizontal lines should be d/*[Preview](/assets/docs/kqxr3_NhGcBq3QZhkIfIjwAAAAAAAAAA.png)*/zontal line being drawn after the second row of the matrix. Accepts either an integer for a single line, or an array of integers for multiple lines. Like for a single number, negative numbers start fr/*[ font features
](/docs/reference/text/text/#parameters-features)*/s should be drawn. For example, an offset of ` 2 ` would result in a vertical line being drawn after the second column of the matrix. Accepts either an integer for /*![Preview](/assets/docs/brbtze6pYcbdDHZXqYtX4QAAAAAAAAAA.png)*/ke for a single number, negative numbers start from the end. 
    - ` stroke /*[Preview](/assets/docs/PLEOQqYY9qiWLwCVv8j_HAAAAAAAAAAA.png)*/ line. If set to ` auto  ` , takes on a thickness of 0.05em and square line caps. 

Default: ` none  `

![](/assets/icons/16-arrow-right.svg) View exa/*[ content ](/docs/reference/foundations/content/)*/nt: #2) $
    // Equivalent to:
    $ mat(1, 0, 1; 0, 1, 2; augment: #(-1)) $
    

![Preview](/assets/docs/4iip0Z9ppDA0/*[ ![â](/assets/icons/16-arrow-right.svg)*/ mat(0, 0, 0; 1, 1, 1; augment: #(hline: 1, stroke: 2pt + /*[ ![â](/assets/icons/16-arrow-right.svg)*/HAJpsviSZ-Rqtb3sBd4AAAAAAAAAAA.png)

===  ` gap `

[ relative ](/docs/reference/layout/r/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ble parameters can be customized for all following u/*[ Reference ](/docs/reference/)*/t ` rule.

The gap between rows and columns/*[ Math ](/docs/reference/math/)*/ row-gap ` and ` column-gap ` to the same v/*[ Stretch ](/docs/reference/math/stretch/)*/ts/icons/16-arrow-right.svg) View example

    
    
    #set math.mat(gap: 1em)
    $ mat(1, 2; 3, 4) $
    

![Preview](/assets/docs/kaypJSdE1P1lOWZ-cMMpyAAAAAAAAAAA.png)

===  ` row-gap `

[ relative ](/docs/reference/layout/relative/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The gap between rows.

Default: ` 0%  +  0.2em  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set math.mat(row-gap: 1em)
   /*![â](/assets/icons/16-arrow-right.svg)*/ssets/docs/YNVJ8uCnPvrs8e0YkWIQFgAAAAAAAAAA.png)

=== /*![â](/assets/icons/16-arrow-right.svg)*/y_QW-bLAAAAAAAAAAA.png)*//)

Settable

Question mark

Settable parameters can be customize/*![Docs](/assets/icons/16-docs-dark.svg)*/n
with a ` set ` rule.

The gap between columns/*[ content ](/docs/reference/foundations/content/)*/16-arrow-/*[ auto
](/docs/reference/foundations/auto//*[ relative
](/docs/reference/layout/relative/)*/3, 4) /*[ content ](/docs/reference/foundations/content/)*/tnRyQAAAAAAAA/*[ content ](/docs/reference/foundations/content/)*//foundations/array/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

Variadic

Ques/*[ auto ](/docs/reference/foundations/auto/)*/f/*[ relative
](/docs/reference/layout/relative/)*/he rows of the matrix.

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #let data = ((1, 2, 3), (4, 5, 6))
    #let matrix = math.mat(..data)
    $ v := matrix $
    

![Preview](/assets/docs/N-7caJ4FsPlOdlVrUrNk/*[ ![â](/assets/icons/16-arrow-right.svg)*/16-arrow-right.svg) Left/Right  Previous page
](//*[ ![â](/assets/icons/16-arrow-right.svg)*/icons/16-arrow-right.svg) Primes
Next page  ](/docs/reference/math/primes/)



= *docs/ref/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ets/icons/16-docs-dark.svg) ](/docs/*![â](/assets/icons/16-arrow-right.svg)*/eference/)*/[ Reference ](/docs/reference/)
  - ![/*![â](/assets/icons/16-arrow-right.svg)*/  - [ Math ](/docs/reference/math/)
  - ![]/*[ Cancel ](/docs/reference/math/cancel/)*/*![Docs](/assets/icons/16-docs-dark.svg)*/=  Roots

Square and non-square roots.

==  Example

    
    
    $ sqrt(3 - 2 sqrt(2)) = sqrt(2) - 1 $
    $ root(3, x) $
    

![Preview](/assets/docs/YJMQ-3S5QEsCnosYijnvKwAAAAAAAAAA.png)

==  Functions

===  ` root ` Element

Question mark

Element functions can be customized with ` s/*[Preview](/assets/docs/fVEZvXjKTk2s3WO88t3K8AAAAAAAAAAA.png)*/

[ none ](/docs/reference/foundations/none/) [ content
](/docs/reference/foundations/content/) ,  [ content
](/docs/reference/foundations/content/) ,/*[ content ](/docs/reference/foundations/content/)*/ontent/)

 /*[ relative
](/docs/reference/layout/relative/)*/assets/docs/5/*[ bool
](/docs/reference/foundations/bool/)*/ ` index `/*[ bool
](/docs/reference/foundations/bool/)*//) or  [ c/*[ auto
](/docs/reference/foundations/auto//*[ angle ](/docs/reference/layout/angle//*[ function ](/docs/reference/foundations/function/)*/ names.

Se/*[ length
](/docs/reference/layout/length//*[ color ](/docs/reference/visualize/color//*[ gradient ](/docs/reference/visualize/gradient//*[ stroke
](/docs/reference/visualize/stroke//*[ pattern
](/docs/reference/visualize/pattern//*[ dictionary
](/docs/reference/foundations/dictionary/)*/onal

/*[ content ](/docs/reference/foundations/content/)*/d in order, w/*[ content ](/docs/reference/foundations/content/)*/.

===  ` sqrt `

A square root.

math  .  sqrt  (

[ content ](/docs/reference/foundations/content/)

)  -> [ content ](/docs/reference/foundations/content/)

    
/*[ relative ](/docs/reference/layout/relative/)*/
    

![Preview](/assets/docs/5thyKdLM1Lrfm53ILJWqaQAAAAAAAAAA.png)

====  ` radicand `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The expression to take the square root of.

[ ![â](/assets/icons/16-arrow-right.svg) Primes  Previous page
](/docs/reference/math/primes/) [ ![â](//*![Preview](/assets/docs/5LFZJ9d25bljXFp6kARHcgAAAAAAAAAA.png)*/ference/math/sizes/)



= *docs/re/*[Preview](/assets/docs/_RSKVrNDnF5_pAJyRMmcrAAAAAAAAAAA.png)*/ocs-dark.svg) ](//*[ bool ](/docs/reference/foundations/bool/)*/svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg/*![Preview](/assets/docs/L9b8yvtULgB5qqliYqLlbAAAAAAAAAAA.png)*/6-arrow-right.svg)
  - [ Under/Over ](/docs/reference/math/underover)

=  Under/Over

Delimiters above or below parts of an equation.

The braces and brackets further allow you to add an optional annotation below
or above themselves.

==  Functions

===  ` underline ` Element

Question mark

Element functions can be customized with `/*[Preview](/assets/docs/GWluRapeZy8kHQiZ5c3XbQAAAAAAAAAA.png)*/.

math  .  un/*[ bool ](/docs/reference/foundations/bool/)*/ndations/content/)

)  -> [ content ](/docs/reference/foundations/content/)

    
    
    $ underline(1 + 2 + ... + 5) $
    

![Preview](/assets/docs/kPv2rkuOYqE5xrS9gynyqwAAAAAAAAAA.png)

====  ` body `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.
/*[Preview](/assets/docs//*![â](/assets/icons/16-arrow-right.svg)*/tion mark

El/*[ auto ](/docs/reference/foundations/auto//*![â](/assets/icons/16-arrow-right.svg)*/ngle/)*/n/*[ function
](/docs/reference/foundations/function/)*//docs/reference/foundati/*![Docs](/assets/icons/16-docs-dark.svg)*/reference/foundations/content/)

    
    
    $ overline(1 + 2 + ... + 5) $
    

![Preview](/assets/docs/brbtze6pYcbdDHZXqYtX4QAAAAAAAAAA.png)

====  ` body `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The content below the line.

===  ` underbrace ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

A horizontal brace under content, with an optional annotation below.

math  .  underbrace  (

[ content ](/docs/reference/foundations/content/) ,  [ none
](/docs/reference/foundations/none/) [ content
](/docs/reference/foundations/content/) ,

)  -> [ content ](/docs/reference/foundations/content/)

    
    
    $ underbrace(1 + 2 + /*[Preview](/assets/docs/OCEmML9KQSY4Sru0zk3XGwAAAAAAAAAA.png)*/pL2KqqF50rooNAA/*[ length ](/docs/reference/layout/length/)*/]/*[ color
](/docs/reference/visualize/color/)*/u/*[ gradient
](/docs/reference/visualize/gradient/)*/e/*[ stroke
](/docs/reference/visualize/stroke/)*/T/*[ pattern
](/docs/reference/visualize/pattern/)*/ /*[ dictionary
](/docs/reference/foundations/dictionary/)*/ntent
](/docs/reference/foundations/content/)

Positional

Question mark

Positional parameters are specified in order, without n/*[ stroke ](/docs/reference/visualize/stroke/)*/meters can be customized for all following uses of the function
with a ` set ` rule.

The optional content below the brace.

Default: ` none  `

===  ` overbrace ` Element

Question mark

Element functions can be customized with ` set `/*[Preview](/assets/docs/KCV7eimRh0Q3LxZudj8IDAAAAAAAAAAA.png)/*[ ![â](/assets/icons/16-arrow-right.svg)*/ overbrace  (

[ content ](/docs/reference/foundatio/*[ ![â](/assets/icons/16-arrow-right.svg)*/oundations/none/) [ content
](/docs/reference/foundations/content/) ,

)  -> [ content ]/*[ ![Docs](/assets/icons/16-docs/*![Preview](/assets/docs/bErdOHWWOQLSKtsxtJeY5QAAAAAAAAAA.png)*/s")/*[ Reference ](/docs/reference/)*/s/kkBGSVxyTk5_L1k_EG8I3gAAAAAAAAAA.png)

==/*[ Math ](/docs/reference/math/)*//reference/foundations/content/)

Required /*[ Primes ](/docs/reference/math/primes/)*/arameters are specified in order, without names.

The content below the brace.

====  ` annotation `

[ none ](/docs/reference/foundations/none/) or  [ content
](/doc/*[Preview](/assets/docs/uHgNvego3SyqChIc3iZ9sQAAAAAAAAAA.png)*/

Positional parameters are specified in order, without names.

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The optional content above the brace.

Default: ` none  `

===  ` underbracket ` Element

Question mark

Element functions can be customized /*[ int ](/docs/reference/foundations/int/)*/zont/*[ content ](/docs/reference/foundations/content/)*/tion below.

m/*[ int ](/docs/reference/foundations/int/)*/s/reference/foundations/content/) ,  [ none
](/docs/reference/foundations/none/) [ content
](/docs/reference/foundations/content/*[ ![â](/assets/icons/16-arrow-right.svg)*/undations/content/)

/*![â](/assets/icons/16-arrow-right.svg)*/s/*![â](/assets/icons/16-arrow-right.svg)*/assets/docs/gOJ/*![â](/assets/icons/16-arrow-righ/*[ ![â](/assets/icons/16-arrow-right.svg)*/ts/icons/16-docs-dark.svg)*/
Required  Positional

Question mark/*![Docs](/assets/icons//*[ ![Docs](/assets/icons/16-docs-dark.svg)*/.

The content above the brac/*[ Math ](/docs/reference/math/)*/one ](/docs/reference/foundations/none/) or/*[ Vector ](/docs/reference/math/vec/)*/ions/content/)

Positional

Question mark

Positional parameters are specified in order, without names.

Settable

Question mark

Settable parameters can be customized for all fol/*[ ` align `
](/docs/reference/math/vec/#parameters-align)*/ional content below the bracket.

Default: ` none  `

===  ` overbracket ` Element

Question mark

Element functions can/*[Preview](/assets/docs/LnRm06lLMggD8fCQZdA66QAAAAAAAAAA.png)*/al bracket over content, with an optional annotation above.

math  .  overbracket  (

[ content ](/docs/reference/foundations/content/) ,  [ none
](/docs/ref/*[ none ](/docs/reference/foundations/none//*[ str
](/docs/reference/foundations/str//*[ array
](/docs/reference/foundations/array//*[ symbol
](/docs/reference/symbols/symbol/)*/(1 + 2 + ./*[ alignment
](/docs/reference/layout/alignment/)*/cs/1FDac/*[ relative
](/docs/reference/layout/relative/)*/ `

/*[ content
](/docs/reference/foundations/content//*![Preview](/assets/docs/QH7JeXflCs-wCjP8nkBWrQAAAAAAAAAA.png)*//eters are spec/*[ none ](/docs/reference/foundations/none/)*/ /*[ str
](/docs/reference/foundations/str/)*/
/*[ array
](/docs/reference/foundations/array/)*/r/*[ symbol
](/docs/reference/symbols/symbol/)*/ontent/)

Positional

Question mark

Positional parameters are specified in order, without names.

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The optional content above the bracket.

Default: ` none  `

===  ` underparen ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

A horizontal parenthesis under content, /*[")
    $ vec(1, 2) $
    

![Preview](/assets/docs/5LFZJ9d25bljXFp6kARHcgAAAAAAAAAA.png)*/oundations/con/*[ alignment ](/docs/reference/layout/alignment/)*/one/) [ content
](/docs/reference/foundations/content/) ,

)  -> [ content ](/docs/reference/foundations//*![Preview](/assets/docs/V/*[Preview](/assets/docs/hP1S-FGMSbXQwhVNN2LoxQAAAAAAAAAA.png)*/ssets/docs/L9b8yvtULgB5qqliYqLlbAAAAAAAAAAA.png)

====  ` body `

[ content ](/docs/reference/foundations/content/)

Required  Posit/*[Preview](/assets/docs/ZtHlp9Y4zEtz53Ydf5unLAAAAAAAAAAA.png)*/ order, with/*[ relative ](/docs/reference/layout/relative/)*/

====  ` annotation `

[ none ](/docs/reference/foundations/none/) or  [ content
](/docs/reference/foundations/content/)

Positional

Question mark

Positional parameters are specified in order, without names.

Settable

Question mark

Settable parameters can be customized for all following/*[Preview](/assets/docs/uiK2bQUKjIzcO3I/*![Preview](/assets/docs/7qs4sC1Ha0vO_Ei_dnjHuQAAAAAAAA/*[ none ](/docs/reference/foundations/none/)*/ment

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

A horizontal parenthesis over content, with an optional annotation above.

math  .  overparen  (

[ content /*[ ![â](/assets/icons/16-arrow-right.svg)*/ [ none
](/docs/reference/foundations/none/) [ content
/*[ ![â](/assets/icons/16-arrow-right.svg)*/
)  -> [ content ](/docs/reference/foundations/content/)

    
    
    $ overparen(1 /*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ew](/assets/docs/0O_PdeP9aD4IdbiAFPLHcwAAAAAAAAAA.pn/*[ Reference ](/docs/reference/)*/(/docs/reference/foundations/content/)

Req/*[ Math ](/docs/reference/math/)*/k

Positional parameters are specified in o/*[ Cases ](/docs/reference/math/cases/)*/w the parenthesis.

====  ` annotation `

[ none ](/docs/reference/foundations/none/) or  [ content
](/docs/reference/foundations/content/)

Positional

Question mark

Positional parameters are specified in order, without names.

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The/*[Preview](/assets/docs/0X1AFPDieBd9jiawKpc0-AAAAAAAAAAA.png)*/

===  ` undershell ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

A horizontal tortoise shell bracket under /*[ none ](/docs/reference/foundations/none//*[ str
](/docs/reference/foundations/str//*[ array
](/docs/reference/foundations/arra/*![â](/assets/icons/16-arrow-right.svg)*/ymbol/)*//) [ content/*[ bool
](/docs/reference/foundations//*![â](/assets/icons/16-arrow-right.svg)*/erence/layout/relative/)*//)

/*[ content
](/docs/reference/foundations/content/)*/ers") //*![Docs](/assets/icons/16-docs-dark.svg)*/s/content//*![](/assets/icons/16-arrow-right.svg)*/erence/foundations/none/)*/e/*[ str
](/docs/reference/foundations/str/)*/P/*[ array
](/docs/reference/foundations/array/)*//*![](/assets/icons/16-arrow-right.s/*[Preview](/assets/docs/yVmcJ82GwTKFuNMU4shSjAAAAAAAAAAA.png)*/==  ` annotation `

[ none ](/docs/reference/foundations/none/) or  [ content
](/docs/reference/foundations/content/)

Positional

Question mark

Positional parameters are specified in order, without names.

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The optional content below the tortoise shell bracket.

Defau/*[")
    $ x = cases(1, 2) $
    

![Preview](/assets/docs/bErdOHWWOQLSKtsxtJeY5QAAAAAAAAAA.png)*/ith ` set ` and /*[ bool ](/docs/reference/foundations/bool/)*/ll bracket over content, with an optional annotation
above.

math  .  overshell  (

[ content ](/docs/reference/foundations/content/) ,  [ none
](/docs/reference/foundations/none/) [ content
](/docs/reference/foundations/content/) ,

)  -> [ content ](/docs/reference/foundations/content/)

    
    
    $ overshell(1 + 2 /*[Preview](/assets/docs/z6AQZKJsH9nM95e6Aw0hGgAAAAAAAAAA.png)*/E_JXwsC1BpaC/*[ relative ](/docs/reference/layout/relative/)*/ ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The content below the tortoise shell bracket.

====  ` annotation `

[ none ](//*![â](/assets/icons/16-arrow-right.svg)*/content
](/docs/reference/foundations/co/*[Preview](//*![â](/assets/icons/16-arrow-right.svg)*/AAAA.png)*/e specified in or/*[ content ](/docs/reference/foundations/content/)*/table param/*![Docs](/assets/icons/16-docs-dark.svg)*/ng uses of the function
with a ` set ` rule.

The optional content above the tortoise shell bracket.

De/*![â](/assets/icons/16-/*[ Math ](/docs/reference/math/)*/vg) /*[ ![â](/assets/icons/16-arrow-/*![â/*[ Sizes ](/docs/reference/math/sizes)*/s/icons/16-arrow-righ/*[ ![â](/assets/icons/16-arrow-right.svg)*/nce/math/variants/)



= *d/*![Docs](/assets/icons/16-docs-dark.svg)*/![Docs](/a/*![](/assets/icons/16-arrow-right.svg)*//16-docs-dark.svg)*/s/icons/16-arrow-/*![](/assets/icons/16-arrow-right.svg)*/[ Reference ](/docs/reference/)*/ns/1/*![](/assets/icons/16-arrow-right.svg)*//r/*[ Math ](/docs/reference/math/)*//icons/16-arrow-right.svg)
  - [ Variants ]/*[ Attach ](/docs/reference/math/attach)*/iants

Alternate typefaces within formulas.

These functions are distinct from the [ ` text ` ](/docs/reference/text/text/
"`text`") function because math fonts contain multiple variants of each
letter.

==  Functions

===  ` serif `

Serif (roman) font style in math.
/*![Preview](/assets/docs/fVEZvXjKTk2s3WO88t3K8AAAAAAAAAAA.png)*/(/docs/reference/foundations/content/)

)  -> [ content ](/docs/refer/*[ ` stretch `
](/docs/reference/math/stretch/)*/content ](/docs/reference/foundations/content/)

Required  Positional

Q/*[Preview](/assets/docs/QRQ31w2n3rdGvD8KZ-ysUQAAAAAAAAAA.png)*/without names.

The content to style.

===  ` sans `

Sans-serif font style in math.

math  .  sans  (

[ content ](/docs/reference/foundations/content/)

)  -> [ content ](/docs/reference/foundations/content/)

    
    
    $ sans(A B C) $
    

![Preview](/assets/docs/QH7JeXflCs-wCjP8nkBWrQAAAAAAAAAA.png)

====  ` body `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question /*[ content ](/docs/reference/foundations/content/)*/r, wit/*[ none
](/docs/reference/foundations/none//*[ content
](/docs/reference/foundations/content/)*/frak  /*[ none
](/docs/reference/foundations/none//*[ content
](/docs/reference/foundations/content/)*/oundati/*[ none
](/docs/reference/foundations/none//*[ content
](/docs/reference/foundations/content/)*/GeeQAAA/*[ none
](/docs/reference/foundations/none//*[ content
](/docs/reference/foundations/content/)*/  Posit/*[ none
](/docs/reference/foundations/none//*[ content
](/docs/reference/foundations/content/)*/ontent /*[ none
](/docs/reference/foundations/none//*[ content
](/docs/reference/foundations/content/)*/ocs/re/*[ content ](/docs/reference/foundations/content/)*//docs/reference/foundations/content/)

    
    
    $ mono(x + y = z) $
    

![Preview](/assets/docs/V/*[Preview](/assets/docs/hP1S-FGMSbXQwhVNN2LoxQAAAAAAAAAA.png)*/*![](/assets/icons/16-arrow-right.svg)*/ference/foundations/content/)*/al

Question mark

Positional parameters are specified in order, without/*![Preview](/assets/docs/_RSKVrNDnF5_pAJyRMmcrAAAAAAAAAAA.png)*/(double-struck) f/*[ none ](/docs/reference/foundations/none/)*/t/*[ content
](/docs/reference/foundations/content/)*/rough
[ symbols ](/docs/reference/symbols/sym/) of the form ` NN ` and ` RR ` .

math  .  bb  (

[ content ](/docs/reference/foundations/content/)

)  -> [ content ](/docs/reference/foundations/content/)

    
    
    $ bb(b) $
    $ bb(N) = NN $
    $ f: NN -> RR $
    

![Prev/*![](/assets/icon/*[Preview](/assets/docs/EpmDoJiJrfbN7kA0Km7ujwAAAAAAAAAA.png)*/ndations/none/)*/r/*[ content
](/docs/reference/foundations/content/)*/nal

Ques/*![Preview](/assets/docs/GWluRapeZy8kHQiZ5c3XbQAAAAAAAAAA.png)*/out names.

The content to style.

===  ` cal `

Calligraphic font style in math.

math  .  cal  (

[ content ](/docs/reference/foundations/content/)

)  -> [ content ](/docs/reference/foundations/content/)

    
    
   /*![â](/assets/icons/16-arrow-right.svg)*/Preview]/*[ none ](/docs/reference/foundations/none/*![â](/assets/icons/16-arrow-right.svg)*/ations/content/)*/cal ` and ` \mathscr ` as both of
these styles sha/*![Preview](/assets/d/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ thus only possible if supported by the font via [ font features
](/docs/reference/text/*[ none ](/docs/reference/foundations/none/)*/u/*[ content
](/docs/reference/foundations/content/)*/rough the ` ss01
` feature. Therefore, you could define your own version of ` \mathscr ` like
this:

    
    
    #let scr(it) = text(
      features: ("ss01",),
      box($cal(it)$),
    )
    
   /*[ none ](/docs/reference/foundations/none/)*/r/*[ content
](/docs/reference/foundations/content/)*/AAA.png)

(The box is not conceptually necessary, but unfortunately currently needed due
to limitations in Typst's text style handling in math.)

====  ` body `

[ content ](/docs/reference/foundation/*[ none ](/docs/reference/foundations/none/)*/ /*[ content
](/docs//*![](/assets/icons/16-arrow-right.svg)*/ithout names.

The content to style.

[ ![â](/assets/icons/16-arrow-right.svg) Under/Over  Previous page
](/docs/reference/math/underover/) [ ![â](/assets/icons/16-arrow-right.svg)
Vector  Next page  ](/docs/reference/math/vec/)



= *docs/reference/math/stretch.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)/*[ content ](/docs/reference/foundations/content/)*/ets//*[ content ](/docs/reference/foundations/content/)*/rence/math/)
  - ![](/assets/icons/16-arrow-right.s/*[Preview](/assets/docs/yVmcJ82GwTKFuNMU4shSjAAAAAAAAAAA.png)*/etch ` Element/*[ content ](/docs/reference/foundations/content/)*/zed with ` set ` and  ` show ` rules.

Stretches a glyph.

This fu/*![â](/assets/icons/16-arrow-right.svg)*/ stretch the base of an
attachment, so that it fits the t/*![â](/assets/icons/16-arrow-right.svg)/*![](/assets/icons/16-arrow-right.svg)*/d which ones can depend on the
math font being used. /*![Docs](/assets/icons/16-docs-dark.svg)*/cs/reference/foundations/content/)*/H stretch(=/*[ bool
](/docs/reference/foundations/bool/)*/>, siz/*[ content ](/docs/reference/foundations/content/)*/ns.ltrb, size: #3em) y
        stretch(\[, siz/*[Preview](/assets/docs/_7kc3fTt948a-U1_9wdyzgAAAAAAAAAA.png)*/QW-bLAAAAAAAAA/*[ content ](/docs/reference/foundations/content/)*/s are the inputs to a function. They are spec/*![Docs](/assets/icons/16-docs-dark.svg)*/ name.

ma/*![](/assets/icons/16-arrow-right.svg)*/reference/foundatio/*[ bool ](/docs/r/*![](/assets/icons/*[Preview](/assets/docs/wdLZED2cvtXKAU75vKtAKwAAAAAAAAAA.png)*/*![](/assets/icons/16-arrow-right.svg)*/ntent ](/docs/reference/foundations/content/)

===  ` body `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

/*[ ![â](/assets/icons/16-arrow-right.svg)*/to ](/docs/reference/foundations/auto/) or  [ relat/*[ ![â](/assets/icons/16-arrow-right.svg)*/ettable

Question mark

Settable parameters can be customized for all following uses of th/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ to stretch to, relative to the maximum size of the /*[ Reference ](/docs/reference/)*/ault: ` auto  `

[ ![â](/assets/icons/16-/*[ Math ](/docs/reference/math/)*/s page
](/docs/reference/math/sizes/) [ ![â/*[ Sizes ](/docs/reference/math/sizes)*/
Styles  Next page  ](/docs/reference/math/styles/)



= *docs/reference/math/cancel.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Ref/*![â](/assets/icons/16-arrow-right.svg)*/ts/icons/16-arrow-right.svg)
  - [ Math ](/docs/re/*![â](/assets/icons/16-arrow-right.svg)*/arrow-right.svg)
  - [ Cancel ](/docs//*[ content ](/docs/reference/foundations/conten/*![Docs](/assets/icons/16-docs-dark.svg)*/ence/found/*![](/assets/icons/16-arrow-right.svg)*/ocs/reference/foundations/content/)*//*![](/assets/icons/16-arrow-right.svg)*/commonly used to sh/*[Preview](/asset/*![](/assets/icons/16-arrow-right.svg)*/AA.png)*/re, we can sim/*[ content ](/docs/reference/foundations/content/)*/ncel(x) $
    

![Preview](/assets/docs/fVEZvXjKTk2s3WO88t3K8AAAAAAAAAAA.png)

==  Parameters

Question mark

Parameters are the inputs to/*[ bool ](/docs/reference/foundations/bool/)*/ses
after the function name.

math  .  cancel  (

[ content ](/docs/reference/foundations/content/) ,  length  :  [ relative
](/docs/referen/*![Preview](/assets/docs/LnRm06lLMggD8fCQZdA66QAAAAAAAAAA.png)*//foundations/bool/) ,  cross  :  /*[ content ](/docs/reference/foundations/content/)*/gle  :  [ au/*[ bool
](/docs/reference/foundations/bool/)*/ngle ]/*[ content ](/docs/reference/foundations/content/)*/s/reference/foundations/function/) ,  stroke  :  [ length
](/docs/*[Preview](/assets/docs/yhhyiAgPa8_SZLz7nNtNqAAAAAAAAAA/*![â](/assets/icons/16-arrow-right.svg)*/s/reference/foundations/content/)*/stroke
](/*![â](/assets/icons/16-arrow-right.svg)*/tern
](/docs/reference/visualize/pattern/) [ dictionary
](/docs/reference/foundations/d/*![Docs](/assets/icons/16-docs-dark.svg)*/s/bool/)*/nce/foundations/content/)

===  ` body `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The content over which the line should be placed.

===/*[ content ](/docs/reference/foundations/content/)*//relative/)
/*[ bool
](/docs/reference/foundations/bool/)*/rs can/*[ content ](/docs/reference/foundations/content/)*/tion
with a ` set ` rule.

The length of the line, rela/*[Preview](/assets/docs/UAO0CCEy42RrRJk6xg_ljgAAAAAAAAAA.png)*/t being "cance/*[ content ]/*![](/assets/icons/16-arrow-right.svg)*/)*/ine
span precisely the element's diagonal.

Default: ` 100%  +  3pt  `

/*![Preview](/assets/docs/5LFZJ9d25bljXFp6kARHcgAAAAAAAAAA.png)*/
    /*[ bool ](/docs/reference/foundations/bool/)*/ncel(x, length: #200%) $
    

![Preview](/assets/docs/_RSKVrNDnF5_pAJyRMmcrAAAAAAAAAAA.png)

===  ` inverted `

[ bool ](/docs/reference/foundations/bool/)

Settable

Question mark

Settable parameters can be customiz/*![](/assets/icons/16-arrow-right.svg)*/tion
with a ` set ` rule.

W/*[ content ](/docs/reference/foundations/content/)*/d/*![Preview](/assets/docs/ZtHlp9Y4zEtz53Ydf5un/*[ auto ](/docs/reference/foundations/auto//*[ relative
](/docs/reference/layout/relative/)*/Default: ` false  `

![](/assets/icon/*[Preview](/assets/docs/EpmDoJiJrfbN7kA0Km7ujwAAAAAAAAAA.png)*/l((b + c), inv/*[ content ](/docs/reference/foundations/content/)*/#true) $
    

![Preview](/assets/docs/GWluRapeZy8kHQiZ5c3XbQAAAAAAAAAA.png)

===  ` cross `

[ bool ](/docs/reference/foundations/boo/*![Preview](/assets/docs/uiK2bQUKjIzcO3IGp7RZPwAAAAAAAAAA.png)*/customized for all following uses of the function
with a ` set ` rule.

Whether two opposing cancel li/*[ ![â](/assets/icons/16-arrow-right.svg)*/the
element. Overrides ` inverted ` .

Default: `/*[ ![â](/assets/icons/16-arrow-right.svg)*/t.svg) View example

    
    
    $ c/*![â](/assets/icons/16-arrow-right.svg)*/w](/assets/d/*[ ![Docs](/assets/icons/16-docs-dark.svg)*//*![â](/assets/icons/16-arrow-right.svg)*/ce/foundatio/*[ Reference ](/docs/reference/)*/eference/layout/angle/) or  [ function
](/d/*[ Math ](/docs/reference/math/)*/ion/)

Settable

Question mark

Settable pa/*[ Fraction ](/docs/reference/math/frac/)*/wing uses of th/*![](/assets//*[Preview](/assets/docs/op-SkIh83R9BuQA_mC41YAAAAAAAAAAA.png)*/If g/*![](/ass/*[ content ](/docs/reference/foundations/content/)*/with respect to the y-axis. 
  - If ` auto  ` , the line assumes/*[Preview](/assets/docs/9RFsr-VSObielPb4Nrr-zQAAAAAAAAAA.png)*/e content box. 
  - If given a function ` angle => angle ` , the line is rotated, with respect to the y-axis, by the angle returned by that function. The function receives the default angle as its input. 

Default: ` auto  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    $ cancel(Pi)
      cancel(Pi, angle: #0deg)
      cancel(Pi, angle: #45deg)
      cancel(Pi, angle: #90deg)
      cancel(1/(1+x), angle: #(a => a + /*[ content ](/docs/reference/foundations/content/)*//*[ content
](/docs/reference/foundations/content/)*/Y4Sru0/*[ content ](/docs/reference/foundations/content/)*/](/docs/refe/*[ content ](/docs/reference/foundations/content/)*/ce/visualize/color/) or  [ gradient
](/docs/reference/visualize/gradient/) or  [ stroke
](/docs/reference/visualize/stroke/) or  [ pattern
]/*[ content ](/docs/reference/foundations/content/)*/nary
](/docs/reference/foundations/dictionary/)

Settable

Question mark

Settable parameters can be customized for all follow/*[ ![â](/assets/icons/16-arrow-right.svg)*/le.

How to [ stroke ](/docs/reference/visualize/stroke/*[ ![â](/assets/icons/16-arrow-right.svg)*/![](/assets/icons/16-arrow-right.svg) View example

    
    
    $ cancel(
      sum x,
 /*[ ![Docs](/assets/icons/16-docs-dark.svg)*/   thickness: 1.5pt,
        dash: "dashed",
      )/*[ Reference ](/docs/reference/)*/ets/docs/KCV7eimRh0Q3LxZudj8IDAAAAAAAAAAA.p/*[ Math ](/docs/reference/math/)*/arrow-right.svg) Binomial  Previous page
](/*[ Accent ](/docs/reference/m/*![](/assets/icons/16-arrow-right.svg)*/ght.svg)
Cases  Next page  ](/docs/reference/math/cases/)



= *docs/reference/math/primes.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/*[Preview](/assets/docs/wdLZED2cvtXKAU75vKtAKwAAAAAAAAAA.png)*/ ![](/assets/icons/16-arrow-right.svg)
  - [ Primes ](/docs/reference/math/primes/)

=  ` primes ` Element

Question mark

Element functions can be cu/*[ content ](/docs/reference/foundations/content/)*//*[ str
](/docs/reference/foundations/str//*[ content
](/docs/reference/foundations/content/)*/yqChIc3iZ/*[ auto
](/docs/reference/foundations/auto//*[ relative
](/docs/reference/layout/relative/)*/stead /*[ content ](/docs/reference/foundations/content/)*/previous elem/*[ content ](/docs/reference/foundations/content/)*/Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

math  .  primes  (

[ int ](/docs/reference/foundations/int/)

)  -> [ content ](/docs/reference/foundations/content/)

===  ` count/*[Preview](/assets/docs/aVpZuZcTglBCvF8kbjxN7AAAAAAAAAAA.png)*/itional

Questi/*[ str ](/docs/reference/foundations/str/)*/i/*[ content
](/docs/reference/foundations/content/)*/d primes.

[ ![â](/assets/icons/16-arrow-right.svg) Matrix  Previous page
](/docs/reference/mat/*![â](/assets/icons/16-arrow-right.svg)*/right.svg) Roots
Next page  ](/docs/reference/math/ro/*![â](/assets/icons/16-arrow-right.svg)*/
  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Math ](/docs/reference/math/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Vector ](/docs/reference/math/vec/)

=  ` vec ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

A column vector.

Content in the vector's elements can be aligned with the [ ` align `
](/docs/reference/math/vec/#parameters-align) parameter, or the ` & ` symbol.

==  Example

    
    
    $ vec(a, b, c) dot vec(1, 2, 3)
        = a + 2b + 3c $
    

![Preview](/assets/docs/LnRm06lLMggD8fCQZdA66QAAAAAAAAAA.pn/*![â](/assets/icons/16-arrow-right.svg)*/ocs/reference/foundations/auto/)*/t/*[ relative
](/do/*![â](/assets/icons/16-arrow-right.svg)*/ion name.

math  .  vec  (

delim  :  [ none ](/docs/reference/foundations/none/) [ str
](//*![Docs](/assets/icons/16-docs-dark.svg)*/y
](/docs/reference/foundations/array/) [ symbol
](/docs/referen/*[ ![â](/assets/icons/16-arrow-right.svg)*/nt
](/docs/reference/layout/alignment/) , /*[ ![â](/assets/icons/16-arrow-right.svg)*/ut/relative/) ,  ..  [ content
](/docs/reference/foundations/content/) ,

)  -> [ con/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/t/)

===  ` delim `

[ none ](/docs/reference/founda/*[ Reference ](/docs/reference/)*/reference/foundations/str/) or  [ array
](//*[ Math ](/docs/reference/math/)*/y/) or  [ symbol
](/docs/reference/symbols//*[ Left/Right ](/docs/reference/math/lr)*/able parameters can be customized for all following uses of the function
with a ` set ` rule.

The delimiter to use.

Can be a single character specifying the left delimiter, in which case the
right delimiter is inferred. Otherwise, can be an array containing a left and
a right delimiter.

Default: ` (  "("  ,  ")"  )  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set math.vec(delim: "[")
    $ vec(1, 2) $
    

![Preview](/assets/docs/5LFZJ9d25bljXFp6kARHcgAAAAAAAAAA.png)

===  ` align `

[ alignment ](/docs/reference/layout/alignment/)

/*[Preview](/assets/docs/ftGuzhHsliOe05r2qFQMwQAAAAAAAAAA.png)*/ed for all following uses of the function
with a ` set ` rule.

The horizon/*![Preview](/assets/docs/hP1S-FGMSbXQwhVNN2LoxQAAAAAAAAAA.png)*/er `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set math.vec(align: right)
    $ vec(-1, 1, -1) $
    

![Preview](/assets/docs/ZtHlp9Y4zEtz53Ydf5un/*[ auto ](/docs/reference/foundations/auto//*[ relative
](/docs/reference/layout/relative/)*//*[ content
](/docs/reference/foundations/content/)*/stomiz/*[ content ](/docs/reference/foundations/content/)*/` set ` rule.
/*[ auto ](/docs/reference/foundations/auto/)*/+/*[ relative
](/docs/reference/layout/relative/)*/vg) View example

    
    
    #set math.vec(gap: 1em)
    $ vec(1, 2) $
    

![Preview](/assets/docs/uiK2bQUKjIzcO3IGp7RZPwAAAAAAAAAA.png)

===  ` children `

[ content ](/docs/reference/foundations/content/)

Required  Positiona/*[ content ](/docs/reference/foundations/content/)*/fied in order, without names.

Variadic

Question mark

Variadic parameters can be specified multiple times.

The elements of the vector.

[ ![â](/assets/icons/16-arrow-right.svg) Variants  Previous page
](/docs/reference/math/variants/) [ ![â](/assets/icons/16-arrow-right.svg)
Symbols  Next page  ](/docs/reference/symbols/)



= *docs/referenc/*[ content ](/docs/reference/foundations/content/)*/docs/*[ content ](/docs/reference/foundations/content/)*/w-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets//*[Preview](/assets/docs/op-SkIh83R9BuQA_mC41YAAAAAAAAAAA.png)*/)
  - ![](/ass/*[ content ](/docs/reference/foundations/content/)*//reference/math/cases/)

=  ` cases ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

A case distinction.

Content across different branches can be aligned with /*[ auto ](/docs/reference/foundations/auto//*[ relative
](/docs/reference/layout/relative/)*//*[ content
](/docs/reference/foundations/content/)*/ x in /*[ content ](/docs/reference/foundations/content/)*/ets/docs/0X1AFPDieBd9jiawKpc0-AA/*[Preview](/assets/docs/WJLuRK0YgTAAKX7q_RtueAAAAAAAAAAA.png)*/e the inputs t/*[ auto ](/docs/reference/foundations/auto/)*/e/*[ relative
](/docs/reference/layout/relative/)*/(

delim  :  [ none ](/docs/reference/foundations/none/) [ str
](/docs/reference/foundat/*[ content ](/docs/reference/foundations/content/)*/array/) [ symbol
](/docs/reference/symbols/symbol/) ,  reverse  :  [ bool
](/docs/reference/foundations/bool/) ,  gap  :  [ relative
](/docs/reference/layout/relative/) ,  ..  [ content
](/docs/reference/foundations/cont/*[ auto ](/docs/reference/foundations/auto//*[ relative
](/docs/reference/layout/relative/)*//*[ content
](/docs/reference/foundations/content/)*/
](/do/*[ content ](/docs/reference/foundations/content/)*/s/reference/foundations/array/) o/*[Preview](/assets/docs/YC6RjZ5CBxOUd9-0Ud9TzQAAAAAAAAAA.p/*![Preview](/assets/docs/yVmcJ82GwTKFuNMU4shSjAAAAAAAAAAA.png)*/o/)*/l/*[ relative
](/docs/reference/layout/relative/)*/ rule.

The delimiter to use.

Can be a single character specifying the left delimiter, /*[ content ](/docs/reference/foundations/content/)*/herwise, can be an array containing a left and
a right delimiter.

Default: ` (  "{"  ,  "}"  )  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set math.cases(delim: "[")
    $ x/*[ auto ](/docs/reference/foundations/auto//*[ relative
](/docs/reference/layout/relative/)*//*[ content
](/docs/reference/foundations/content/)*/tions//*[ content ](/docs/reference/foundations/content/)*/ers can be customized for all foll/*[Preview](/assets/docs/PDEHlUdVGIVhIYs9pZubiAAAAAAAAAAA.png)*/ direction of /*[ auto ](/docs/reference//*![â](/assets/icons/16-arrow-right.svg)*/s/reference/layout/relative/)*/ example

    
    
/*![â](/assets/icons/16-arrow-right.svg)*/ cases(1, 2) = x $
    

![P/*[ content ](/docs/reference/foundations/content/)*/AAAA.png)

===  `/*![Docs](/assets/icons/16-docs-dark.svg)*/yout/relative/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set/*[ auto ](/docs/reference/foundations/auto//*[ relative
](/docs/reference/layout/relative/)*//*[ content
](/docs/reference/foundations/content/)*/ math./*[ content ](/docs/reference/foundations/cont/*![â](/assets/icons/16-arrow-right.svg)*//*[Preview](/assets/docs/8M0cDo0mVWiDmMeZvIBqOAAAAAAAAAAA.png)*/ocs/reference//*[ auto ](/do/*![Docs](/assets/icons/16-docs-dark.svg)*/elative
](/*![](/assets/icons/16-arrow-right.svg)*/ied in order, without names.

Variadic

Question mark

Variadic parameters can be spec/*[ content ](/docs/reference/foundations/content/)*/istinction.

[ ![â](/assets/icons/16-arrow-right.svg) Cancel  Previous page
](/docs/reference/math/cancel/) [ ![â](/assets/icons/16-arrow-right.svg)
Class  Next page  ](/docs/reference//*[ auto ](/docs/reference/foundations/auto//*[ relative
](/docs/reference/layout/relative/)*//*[ content
](/docs/reference/foundations/content/)*/w-righ/*[ content ](/docs/reference/foundations/content/)*/](/assets/icons/16-arrow-right.svg/*[Preview](/assets/docs/tF8zASmAKWpzYdWTOE8zPAAAAAAAAAAA.png)*/16-arrow-right/*[ auto ](/docs/reference/foundations/auto/)*/t/*[ relative
](/docs/reference/layout/relative/)*/ limits.

Attachments can be displayed either as sub/superscript/*![Preview](/assets/docs/Kw_xKFEpG79sGcim5bh7SgAAAAAAAAAA.png)*/ions/content/)*/g on the base, but you
can also control this manually with the ` scripts ` and ` limits ` functions.

If you want the base /*[ ![â](/assets/icons/16-arrow-right.svg)*/chments (for
example, an arrow with text above it),/*[ ![â](/assets/icons/16-arrow-right.svg)*/ath/stretch/) function.

==  Example

    
    
    $ sum_(i=0)^n a_i = 2^(1+i) $
    

!/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ysUQAAAAAAAAAA.png)

==  Syntax

This function also /*[ Reference ](/docs/reference/)*/ments after the base: Use
the underscore ( /*[ Math ](/docs/reference/math/)*/ i.e. bottom attachment and
the hat ( ` ^ `/*[ Equation ](/docs/reference/math/equation/)*/ment.

==  Functions

===  ` attach ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

A base with optional attachments.

math  .  attach  (

[ content ](/docs/reference/foundat/*![â](/assets/icons/16-arrow-right.svg)*/eference/foundations/none/) [ content
](/docs/reference/fo/*![â](/assets/icons/16-arrow-right.svg)*/ocs/reference/foundations/none/) [ content
](/docs/reference/foundations/content/) ,  tl  :  [ none
]/*[Pr/*![Docs](/assets/icons/16-docs-dark.svg)*/3_gAAAAAAAAAA.png)*/nce/foundations/content/) ,  bl  :  [ none
](/docs/reference/foundations/none/) [ content
](/docs/reference/foundations/content/) ,  tr  :  [ none
](/docs/reference/foundations/none/) [ content
](/docs/reference/foundations/content/) ,  br  :  [ none
](/docs/reference/foundations/none/) [ content
](/docs/reference/foundations/content/*![Preview](/assets/docs/UAO0CCEy42RrRJk6xg_ljgAAAAAAAAA/*[ byte buffers
](/docs/reference/foundations/bytes/)*/ b/*[ main math page
](/docs/reference/math/)*/,
    ) $
    

![Preview](/assets/docs/hP1S-FGMSbXQwhVNN2LoxQAAAAAAAAAA.png)

====  ` base `

[ content ](/docs/reference/foundations/content/)

Required  Position/*[ bool ](/docs/reference/foundations/bool/)*/e specified in/*[ none
](/docs/reference/foundations/none//*[ str ](/docs/reference/foundations/str//*[ function ](/docs/reference/foundations/function/)*/ntent
](/docs/ref/*[
alignment ](/docs/reference/layout/alignment/)*/ mark

Settable/*[ none
](/docs/reference/foundations/none//*[ auto
](/docs/reference/foundations/auto//*[ content
](/docs/reference/foundations/content//*[ function
](/docs/reference/foundations/function/)*//*[ content
](/docs/reference/foundations/content/)*/` to o/*[ content ](/docs/reference/foundations/content/)*/`

====  ` b `/*[ bool ](/docs/reference/foundations/bool/)*//) or  [ content
](/docs/reference/foundations/content/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The bottom attachment, smartly positi/*[ none ](/docs/reference/foundations/none/)*/
/*[ str
](/docs/reference//*![â](/assets/icons/16-arrow-right.svg)*//reference/foundations/function/)*/ioning.

Default/*![â](/assets/icons/16-arrow-right.svg)*/s/reference/foundations/none/) or  [ content
](/docs/reference/foundation/*[ number ](/docs//*![Docs](/assets/icons/16-docs-dark.svg)*/ers can be/*![](/assets/icons/16-arrow-right.svg)*/ the function
with a ` set ` rule.

T/*![](/assets/icons/16-arrow-right.svg)*/se).

Default: ` none  `

====  ` bl /*![](/assets/icons/16-arrow-right.svg)*/ns/none/) or  [ content
](/docs/reference/foundations/content/)

Settable

Question /*[Preview](/assets/docs/ICkRN4qFA2wn3VV_dGJcKAAAAAAAAAAA.png)*/g uses of the functio/*[ alignment ](/docs/reference/layout/alignment/)*/nt (before base).

Default: ` none  `

====/*![Preview](/assets/docs/9RFsr-VSObielPb4Nrr-zQAAAAAAAAAA.png)*/ontent
](/docs/reference/foundations/content/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The top-right attachment (after the base).

Default: ` none  `

====  ` br `

[ none ](/docs/reference/foundations/none/) or  [ content
](/docs/reference/foundations/content/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The bottom-right attachment (after the base).

Default: ` none  `

===  ` script/*[Preview](/assets/docs/EjQKswH-OBAc5Rwhl-7WNQAAAAAAAAAA.png)*/zed with ` set ` an/*[ none ](/docs/reference/foundations/none/)*/y/*[ auto
](/docs/reference/foundations/auto/)*/ /*[ content
](/docs/reference/foundations/content/)*/t/*[ function
](/docs/reference/foundations/function/)*/ontent/)

    
    
    $ scripts(sum)_1^2 != sum_1^2 $
    

![Preview](/assets/docs/yVmcJ82GwTKFuNMU4shSjAAAAAAAAAAA.png)

====  ` body `

[ content/*![â](/assets/icons/16-arrow-right.svg)*/

Required  Positional

Question mark

Positional paramet/*![â](/assets/icons/16-arrow-right.svg)*/s.

The base to attach the scripts to.

===  ` limits ` Element

Question mark

Element func/*![Docs](/assets/icons/16-docs-dark.svg)*/d  ` show /*![](/assets/icons/16-arrow-right.svg)*/tachments as limits.

math  .  limits/*![](/assets/icons/16-arrow-right.svg)*/dations/content/) ,  inline  :  [ boo/*![](/assets/icons/16-arrow-right.svg)*/eview](/assets/docs/LsvSGn7Nchg2dddv3zDBtAAAAAAAAAAA.png)*/ent/)

    
 /*[ content ](/docs/reference/foundations/content/)*/w](/assets/docs/_7kc3fTt948a-U1_9wdyzgAAAAAAAAAA.png)

====  ` body `

[ content ](/docs/reference/foundations/content/)

Requir/*[ ![â](/assets/icons/16-arrow-right.svg)*/parameters are spe/*![Preview](/assets/docs/wdLZED2cvtXKAU75vKtAKwAAAAAAAAAA.png)*/row-right.svg)*/ ` inline `

[ bool ](/docs/reference/foundations/bool/)

Settable

Question mark

Settable para/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/g uses of the function
with a ` set ` rule.

Whether/*[ Reference ](/docs/reference/)*/ equations.

When applying limits globally /*[ Foundations ](/docs/reference/foundations/)*/a
good idea to disable this.

Default: ` tr/*[ Label ](/docs/reference/foundations/label/)*/svg) Accent  Previous page
](/docs/reference/math/accent/) [ ![â](/assets/icons/16-arrow-right.svg)
Binomial  Next page  ](/docs/reference/math/binom/)



= *docs/reference/math/sizes.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arr/*![](//*[ str ](/docs/reference/foundations/str/)*/rence/model/ref/)*/*[
queried ](/docs/reference/introspection/query/)*/refere/*[ styled
](/docs/reference/styling/)*/arrow-right.svg)
  - [ Sizes ](/docs/reference/math/sizes)

=  Sizes

For/*[ ` str `
](/docs/reference/foundations/str/#constructor)*/unctions allow manual configuration of the size of equation elements /*![â](/assets/icons/16-arrow-right.svg)*/ equation or as if used in a root o/*[Preview](/assets/doc/*![â](/assets/icons/16-arrow-
right.svg)*/ display style in math.

This is the normal size for block equations.

math  .  display  (

[ content /*![Docs](/assets/icons/16-docs-dark.svg)*/ ,  cramped  :  [ bool
](/docs/reference/foundations/bool/) ,

)  -> [ content ](/docs/reference/foundations/content/)

    
    
    $sum_i x_i/2 = display(sum_i x_i/2)$
    

![Preview](/assets/docs/Kw_xKFEpG79sGcim5bh7SgAAAAAAAAAA.png)

====  ` body `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The content to size.

====  ` cramped `

[ bool ](/docs/reference/foundations/bool/)

Whether to impose a height restriction for exponents, like regular sub- and
superscripts do.

Default: ` false  `

===  ` inline `

Forced inline (text) style in math.

This is the normal size for inline equations.

math  .  inline  (

[ content ](/docs/reference/foundations/content/) ,  cramped  :  [ bool
](/docs/reference/foundations/bool/) ,

)  -> [ content/*[ str ](/docs/reference/foundations/str/)*/
   /*[ label ](/docs/reference/foundations/label/)*/_i x_i/2) $
  /*[ str ](/docs/reference/foundations/str/)*/Lz7nNtNqAAAAAAAAAAA.pn/*![â](/assets/icons/16-arrow-right.svg)*/ference/foundations/content/)

Required  Positional

Questi/*[ ![â](/assets/icons/16-arro/*![Docs/*[ int ](/docs/reference/foundations/int/)*/ntent to size.

==== /*[ ![â](/assets/icons/16-arrow-right.svg)*/ndations/bool/)

Whether to impose a height restriction for exponents, like regular sub- and
superscript/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ `

Forced script style in math.

This is the smalle/*[ Reference ](/docs/reference/)*/r superscripts.

math  .  script  (

[ cont/*[ Foundations ](/docs/reference/foundations/)*/  cramped  :  [ bool
](/docs/reference/foun/*[ Plugin ](/docs/reference/foundations/plugin/)*/ence/foundations/content/)

    
    
    $sum_i x_i/2 = script(sum_i x_i/2)$
    

![Preview](/assets/docs/UAO0CCEy42RrRJk6xg_ljgAAAAAAAAA/*[ byte buffers
](/docs/reference/foundations/bytes/)*/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The content to size.

====  ` cramped `

[ bool ](/docs/reference/foundations/bool/)

Whether to impose a height restriction for exponents, like regular sub- and
superscripts do.

Default: ` true  `

===  ` sscript `

Forced second script style in math.

This is the smallest size, used in second-level sub- and superscripts (scrip/*[ WASI ABI ](https://wasi.dev/)*/ript  (

[ content ](/docs/reference/foundations/content/) ,  cramped  :  [ bool
](/docs/reference/foundations/bool/) ,

)  -> [ content ](/docs/reference/foundations/content/)

    
    
    $su/*[ stub all functions
](https://github.com/astrale-sharp/wasm-minimal-protocol/blob/master/wasi-
stub)*/

====  ` body `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The content to size.

====  ` cramped `

[ bool ](/docs/reference/foundations/bool/)

Whether to impose a height restriction for exponents, like regular sub- and
superscripts do.

Default: ` true  `

[ ![â](/assets/icons/16-arrow-right.svg) Roots  Previous page
](/docs/reference/math/roots/) [ ![â](/assets/icons/16-arrow-right.svg)
Stretch  Next page  ](/docs/reference/math/stretch/)



= *docs/reference/math/frac.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Math ](/docs/reference/math/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Fraction ](/docs/reference/math/frac/)

=  ` frac ` Element

Question mark

Element functions can be customize/*[Preview](/assets/docs/Vj65tyYDxxD3OHZUaiQ94QAAAAAAAAAA.png)*/.

==  Example

    
    
    $ 1/2 < (x+1)/2 $
    $ ((x+1)) / 2 = frac(a, b) $
    

![Preview](/assets/docs/9RFsr-VSObielPb4Nrr-zQAAAAAAAAAA.png)

==  Syntax

This function also has dedicated syntax: Use a slash to turn neighbouring
expressions into a fraction. Multiple atoms can be grouped into a single
expression using round grouping parenthesis. Such parentheses are removed from
the output, but you can nest multiple to force them.

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

math  .  frac  (

[ content ](/docs/reference/foundations/content/) ,  [ content
](/docs/reference/foundations/content/) ,

)  -> [ content ](/docs/reference/foundations/content/)

===  ` num `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The fraction's numerator.

===  ` denom `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The fraction's denominator.

[ ![â](/assets/icons/16-arrow-right.svg) Equation  Previous page
](/docs/reference/math/equation/) [ ![â](/assets/icons/16-arrow-right.svg)
Left/Right  Next page  ](/docs/reference/math/lr/)



= *docs/reference/math/accent.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Math ](/docs/reference/math/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Accent ](/docs/reference/math/accent/)

=  ` accent ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

Attaches an accent to a base.

==  Example

    
    
    $grave(a) = accent(a, `)$ \
    $arrow(a) = accent(a, arrow)$ \
    $tilde(a) = accent(a, \u{0303})$
    

![Preview](/assets/docs/wdLZED2cvtXKAU75vKtAKwAAAAAAAAAA.png)

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

math  .  accent  (

[ content ](/docs/reference/foundations/content/) ,  [ str
](/docs/refer/*[ wasm-minimal-protocol repository
](https://github.com/astrale-sharp/wasm-minimal-protocol)*/](/docs/reference/foundations/auto/) [ relative
](/docs/reference/layout/relative/) ,

)  -> [ content ](/docs/reference/foundations/content/)

===  ` base `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The base to which the accent is applied. May consist of multiple letters.

![](//*[ str ](/docs/reference/foundations/str/)*/mple/*[ plugin ](/docs/reference/foundations/plugin/)*/(/assets/docs//*[ str ](/docs/reference/foundations/str/)*/=  ` accent `

[ str ](/docs/reference/foundations/str/) or  [ content
](/docs/reference/foundations/content/)

Required  Positional

Question mark

Pos/*[ Paths section ](/docs/reference/syntax/#paths)*//*[ ![â](/assets/icons/16-arrow-right.svg)*/.

Supported accents include:

Accent  |  Name  |  Codep/*[ ![â](/assets/icons/16-arrow-
right.svg)*/  ` ` `  
Acute  |  ` acute ` |  ` Â´ `  
Circumflex  |  ` hat ` |  ` ^ `  
Tilde  |  ` tilde ` |  `/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/Dash  |  ` dash ` |  ` â¾ `  
Breve  |  ` breve ` |/*[ Reference ](/docs/reference/)*/ . `  
Double dot, Diaeresis  |  ` dot.doub/*[ Foundations ](/docs/reference/foundations/)*/ dot.triple ` |  ` â `  
Quadruple dot  |/*[ Calculation ](/docs/reference/foundations/calc)*/ |  ` â `  
Double acute  |  ` acute.double ` |  ` Ë `  
Caron  |  ` caron ` |  ` Ë `  
Right arrow  |  ` arrow ` , ` -> ` |  ` â `  
Left arrow  |  ` arrow.l ` , ` <- ` |  ` â `  
Left/Right arrow  |  ` arrow.l.r ` |  ` â `  
Right harpoon  |  ` harpoon ` |  ` â `  
Left harpoon  |  ` harpoon.lt ` |  ` â¼ `  
  
===  ` size `

[ auto ](/docs/reference/foundations/a/*[ int ](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float//*[ length
](/docs/reference/layout/length//*[ angle ](/docs/reference/layout/angle//*[
ratio ](/docs/reference/layout/ratio//*[ fraction
](/docs/reference/layout/fraction//*[ decimal
](/docs/reference/foundations/decimal/)*/16-arrow-right.svg) Math  Previous page
](/docs/reference/math/) [ ![â](/assets/icons/16-arrow-righ/*![](/assets/icons/16-arrow-right.svg)*/w](/assets/docs/1nPNk-RAyXUEHrAszyCnU/*![](/assets/icons/16-arrow-right.svg)*/int ](/docs/reference/foundations/int/*![](/assets/icons/16-arrow-right.svg)*/dations/float/)*/-/*[ length
](/docs/reference/layout/length/)*/a/*[ angle ](/docs/reference/layout/angle/)*/t/*[ ratio ](/docs/reference/layout/ratio/)*/t/*[ fraction
](/docs/reference/layout/fraction/)*/(/*[ decimal
](/docs/reference/foundations/decimal/)*/r matching.

The ` lr ` function allows you to match two delimiters and scale them with the
content they contain. While this also happens automatically for delimiters
that match syntactically, ` lr ` allows y/*[ int ](/docs/reference/foundations/int//*[ float
](/docs/referen/*![Preview](/assets/docs/JtxOgQArvspfmmStl8-3_gAAAAAAAAAA.png)*/s/decimal/)*//*[ int
](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float/)*/well a/*[ int ](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float//*[ decimal
](/docs/reference/foundations/decimal/)*/w](/assets/docs/ftGuzhHsliOe05r2qFQMwQAAAAAAAAAA.png)

==  Functions

/*[Preview](/assets/docs/YQoOsFNxPEgW0b-n9B_VrAAAAAAAAAAA.png)*/ customized wi/*[ int ](/docs/reference/foundations/int/)*/e/*[ float
](/docs/reference/foundations/float/)*/d/*[ decimal
](/docs/reference/foundations/decimal/)*/iters and to control the delimiter scaling more precisely.

math  .  lr  (

size  :  [ auto ](/docs/reference/foundations/auto/) [ rel/*[ ` decimal ` ](/docs/reference/foundations/decimal/ "`decimal`")*/ference/foundations/content/*[ integer ](/docs/reference/foundations/int/)*/ations/content/)

==/*[ int ](/docs/reference/foundations/int/)*/u/*[ float
](/docs/reference/foundations/float/)*/nce/layout/relative/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The size of the brackets, relative to the height/*[ int ](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float/)*/eren/*[ float ](/docs/reference/foundations/float/)*/l

Question mark

Positional par/*[Preview](/assets/docs/D3jiA5mgoQIx6MVn4Oy4zwAAAAAAAAAA.png)*/d content, includi/*[ int ](/docs/reference/foundations/int/)*/
/*[ float
](/docs/reference/foundations/float/)*/mized with ` set ` and  ` show ` rules.

Scales delimiters vertically to the nearest surrounding ` lr  (  )  ` group.

math  .  mid  (

[ content ](/docs/reference/foundations/content/)

)  -> [ cont/*[ int ](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float/)*/ w_i/*[ float ](/docs/reference/foundations/float/)*/cs/op-SkIh83R9BuQA_mC41YAAAAAAAAAAA.png)

====  ` body `/*[Preview](/assets/docs/rSjz1bWkkKYqxmWjxezFTwAAAAAAAAAA.png)*/d  Positiona/*![](/assets/icons/16-arrow-right.svg)*/ons/int/)*/s/*[ float
](/docs/reference/foundations/float/)*/t to be scaled.

===  ` abs `

Takes the absolute value of an expression.

math  .  abs  (

size  :  [ auto ](/docs/reference/foundations/auto/) [ relative
](/docs/reference/layout/relative/) ,  [ content
](/docs/reference/foundations/content/) ,

)  -> [ content ](/docs/reference/found/*[ float ](/docs/reference/foundations/float/)*//*[ int
](/docs/reference/foundations/int/)*/AKX7q_/*[ float ](/docs/reference/foundations/float/)*/](/docs/reference/foundations/auto/) or  [ relative
](/docs/refer/*[Preview](/assets/docs/g3rxlqoTGgoCjLtiE7bcKAAAAAAAAAAA.png)*/o the height of th/*[ float ](/docs/reference/foundations/float/)*/ ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in orde/*![](/as/*[Preview](/assets/docs/4te-fP3EFYf9CFfXTNeLbgAAAAAAAAAA.png)*//)*/  ` norm `

Takes the norm of an expression.

math  .  norm  (

size  :  [ auto ](/docs/reference/foundations/auto/) [ relative
](/docs/reference/layout/*![Preview](/assets/docs/EjQKswH-OBAc5Rwhl-7WNQAAAAAAAAAA.png)*/t/) ,

)  -> [ content ](/docs/reference/foundations/content/)
/*[ int ](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float//*[ angle ](/docs/reference/layout/angle/)*/ ](//*[ float ](/docs/reference/foundations/float/)*/ive
](/docs/reference/layout/relative/)

The size of the /*[Preview](/assets/docs/DRz-f64JvhHssm4WgSEL2QAAAAAAAAAA.png)*/==  ` body `

[/*[ int ](/docs/reference/foundations/int/)*/n/*[ float
](/docs/reference/foundations/float/)*/P/*[ angle
](/docs/reference/layout/angle/)*/der, without names.

The expression to take the norm of.

===  ` floor `

Floors an expression.

math  .  floor  (

size  :  [ auto ](/docs/reference/foundations/auto/) [ relative
](/docs/reference/layout/relative/) ,  [ content
](/docs/reference/foundations/content/) ,

)  -> /*[ int ](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float//*[ angle ](/docs/reference/layout/angle/)*/VhIY/*[ float ](/docs/reference/foundations/float/)*/to ](/docs/reference/foundations/auto/) or  [ relative
](/*[Preview](/assets/docs/RQec6gdJF5QvRwZkvI-50gAAAAAAAAAA.png)*/ relative to th/*[ int ](/do/*![â](/assets/icons/16-arrow-right.svg)*/at
](/docs/reference/foundations/float/)*/n/*[ angl/*![â](/assets/icons/16-arrow-right.svg)*/mark

Positional parameters are specified in order, without names.

The expression to floor.

=== /*![Docs](/assets/icons/16-docs-dark.svg)*/.  ceil  (/*![](/assets/icons/16-arro/*[ int ](/docs/reference/foundations/int/)*//docs/reference/layout/relative/) ,  [ content
](/docs/referen/*[ int ](/docs/reference/foundations/int//*[ fl/*![](/assets/icons/16-arrow-right.svg)*/at//*[ angle ](/docs/reference/layout/angle/)*/[Pre/*[ float ](/docs/reference/foundations/float/)*/AAAAAA.png)

====  ` size `

[ auto ](/docs/reference/fou/*[Preview](/assets/docs/Mu6UfN_4464KJhy78wvp_wAAAAAAAAAA.png)*/tive/)

The siz/*[ int ](/docs/reference/foundations/int/)*/ /*[ float
](/docs/reference/foundations/float/)*/n/*[ angle
](/docs/reference/layout/angle/)*/nt/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The expression to ceil.

===  ` round `

Rounds an expression.

math  .  round  (

size  :  [ auto ](/*[ int ](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float/)*/  [ /*[ angle ](/docs/reference/layout/angle/)*/ntent/) ,

)  -> [ content ](/docs/reference/foundati/*[Preview](/assets/docs/R-fP2bsKqek6CrHRxsmlvQAAAAAAAAAA.png)*/(/assets/docs/t/*[ int ](/docs/reference/foundations/int/)*/=/*[ float
](/docs/reference/foundations/float/)*/ons/auto/) or  [ relative
](/docs/reference/layout/relative/)

The size of the brackets, relative to the height of the wrapped content.

====  ` body `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question /*[ int ](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float/)*/to r/*[ angle ](/docs/reference/layout/angle/)*/ight.svg) Fraction  Previous page
](/docs/reference/m/*[Preview](/assets/docs/34tvtgPRx9Zb0oFQtdkEngAAAAAAAAAA.png)*/  Next page  ](/*[ int ](/docs/reference/foundations/int/)*/e/*[ float
](/docs/reference/foundations/float/)*/s/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Math ](/docs/reference/math/)
  - ![](/assets/icons/16-arrow-right.svg)
  -/*[ int ](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float/)*/rk

/*[ angle ](/docs/reference/layout/angle/)*/ ` set ` and  ` show ` rules.

A mathematical equatio/*[Preview](/assets/docs/Ks5iB4MwWXNAVXeSMihDJAAAAAAAAAAA.png)*/.

==  Example
/*[ int ](/docs/reference/foundations/int/)*/t/*[ float
](/docs/reference/foundations/float/)*/ the side
    lengths of right-angled triangle.
    Then, we know that:
    $ a^2 + b^2 = c^2 $
    
    Prove by induction:
    $/*![â](/assets/i/*[Preview](/assets/docs/BsSZQG52_995RG9zgRumuAAAAAAAAAAA.png)*/l8-3_gAAAAAAAAAA.png)

By default, block-level equations will not break ac/*[ int ](/docs/reference/foundations/int//*[ float
](//*![](/assets/icons/16-arrow-right.svg)*/*[ int
](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float/)*/rite m/*[ angle ](/docs/reference/layout/an/*![](/assets/icons/16-arrow-right.svg)*/ and ending the equation with at
/*[Preview](/assets/docs/R3PgftYITRsSLYBeQqKe3wAAAAAAAAAA.png)*/red horizon/*[ int ](/docs/reference/foundations/int/)*/,/*[ float
](/docs/reference/foundations/float/)*/ath/) .

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the func/*[ int ](/docs/reference/foundations/int/)*/:/*[ float
](/docs/reference/foundations/float/)*/ ,  numbering  :  [ none
](/docs/reference/foundations/none/) [ str ](/docs/reference/foundations/str/)
[ function ](/docs/reference/foundations/function/) ,  number-align  :  [
alignment ](/docs/referenc/*[ float ](/docs/reference/foundations/float/)*/
](//*[ float ](/docs/reference/foundations/float/)*/ocs/reference/foundations/auto/) [ content
](/docs/refe/*[Preview](/assets/docs/Si7LVr220y-yjr6frD5mYQAAAAAAAAAA.png)*/ndations/functi/*[ float ](/docs/reference/foundations/float/)*/ns/content/) ,

)  -> [ content ](/docs/reference/foundations/content/)

===  ` block `

[ bool ](/docs/reference/foundations/bool/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` /*[ float ](/docs/reference/foundations/float/)*/d as/*[ float ](/docs/reference/foundations/float/)*/ ` numbering `

[ none ](/docs/reference/foundations/no/*[Preview](/assets/docs/Vut_ujHW8enJAdOI95v6bgAAAAAAAAAA.png)*/ction
](/docs/r/*[ float ](/docs/reference/foundations/float/)*/estion mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

How to [ number ](/docs/reference/model/numbering/) block-level equations.

Default: ` none  `

![](/assets/icons/16-arrow-right.svg) Vie/*[ float ](/docs/reference/foundations/float/)*/umbe/*[ float ](/docs/reference/foundations/float/)*/t := (1 + sqrt(5)) / 2 $ <ratio>
    
    With @ratio, /*[Preview](/assets/docs/8omHKWMEXh9ltcsWpm4RDQAAAAAAAAAA.png)*/review](/assets/*[ float ](/docs/reference/foundations/float/)*/===  ` number-align `

[ alignment ](/docs/reference/layout/alignment/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The alignment of the equation numbering.

By default, the alignment is ` end  +  horizon ` . For the h/*[ int ](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float/)*/ the
text/*[ float
](/docs/reference/foundations/float/)*/an use/*[ float ](/docs/reference/foundations/float/)*/ault: ` end  +  horizon `

![](/as/*[Preview](/assets/docs/4te-fP3EFYf9CFfXTNeLbgAAAAAAAAAA.png)*/set math.equati/*[ int ](/docs/reference/foundations/int/)*/)/*[ float
](/docs/reference/foundations/float/)*/_0^2 + p^2) \
        &approx 125 "GeV" $
    

![Preview](/assets/docs/EjQKswH-OBAc5Rwhl-7WNQAAAAAAAAAA.png)

===  ` supplement `

[ none ](/docs/reference/foundations/none/) or  [ /*[ float ](/docs/reference/foundations/float/)*/ [ content
](/docs/reference/foundations/content/) or  [ function
](/docs/reference/foundations/function/)

Settable

Question mark

Settab/*[ int ](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float/)*/ ` r/*[ float ](/docs/reference/foundations/float/)*/erences to equations, this is added /*[Preview](/assets/docs/ahMgc30uVaXMdJx4f9b76gAAAAAAAAAA.png)*/t is passed the/*[ int ](/docs/reference/foundations/int/)*/n/*[ float
](/docs/reference/foundations/float/)*/16-arrow-right.svg) View example

    
    
    #set math.equation(numbering: "(1)", supplement: [Eq.])
    
    We define:
    $ phi.alt := (1 + sqrt(5)) / 2 $ <ratio>
    
    With @ratio, we get:
    $ F_n = floor(1 / sqrt(5) phi.alt^n/*[ int ](/docs/reference/foundations/int/)*/Nchg/*[ int ](/docs/reference/foundations/int/)*/

[ content ](/docs/reference/fou/*[Preview](/assets/docs/Hx0vydXttNRUJbbdDSvGlwAAAAAAAAAA.png)*/itional paramete/*[ int ](/docs/reference/foundations/int/)*/

The contents of the equation.

[ ![â](/assets/icons/16-arrow-right.svg) Class  Previous page
](/docs/reference/math/class/) [ ![â](/assets/icons/16-arrow-right.svg)
Fraction  Next page  ](/docs/reference/math/frac/)



= *docs/reference/foundations/label.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arro/*[ int ](/docs/reference/foundations/int/)*//*[ int
](/docs/reference/foundations/int/)*/ght.sv/*[ int ](/docs/reference/foundations/int/)*/undations/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Label ](/docs/reference/foundation/*[Preview](/assets/docs/7mAf4sPmhe6rKKzamBE-iAAAAAAAAAAA.png)*/bel into conte/*[ int ](/docs/reference/foundations/int/)*/lement
that is not a space. The preceding element must be in the same scope as the
label, which means that ` Hello  #  [  <label> ]  ` , for instance, would/*[ int ](/docs/reference/foundations/int/)*/ferenced ](/docs/reference/model/ref/) , [
queried ](/docs/reference/introspection/query/) for, and [ styled
](/docs/reference/styling/) through its label.

Once constructed, you can get the name of a label using [ ` str `
](/docs/reference/foundations/str/#constructor) .

==  Example

    
    
    #show <a>: set text(blue)
    #show label("b"): se/*[ int ](/docs/reference/foundations/int/)*//*[ int
](/docs/reference/foundations/int/)*/ts/doc/*[ int ](/docs/reference/foundations/int/)*/==  Syntax

This function/*![â](/assets/icons/16-arrow-right.svg)*/vQc1ME4eQqbzXhrmJ5lAAAAAAAAAAA.png)*/in angle br/*[ int ](/*![â](/assets/icons/16-arrow-
right.svg)*/abel's name
can contain letters, numbers, ` _ ` , ` - ` , ` : ` , and ` . ` .

Note that there is a sy/*![Docs](/assets/icons/16-docs-dark/*[ int ](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float//*[ decimal
](/docs/reference/foundations/decimal/)*/ereas the ` #  label  (  "b"  )  ` is
part of the heading and thus attaches to the heading's text.

    
    
    // Equivalent to `#heading[Introducti/*[ int ](/docs/reference/foundations/int/)*//*[ int
](/docs/reference/foundations/int/)*/abel("/*[ int ](/docs/reference/foundations/int/)*/
Currently, labels can only be attac/*[Preview](/assets/docs/qOIwQyXpCnrSkONAOnIDgAAAAAAAAAAA.png)*/ change in /*[ int ](/docs/reference/foundations/int/)*/rk

If a type has a constructor, you can call it like a function to create a new
value of the type.

Creates a label from a string/*[ int ](/docs/reference/foundations/int/)*/dations/str/)

)  -> [ label ](/docs/reference/foundations/label/)

====  ` name `

[ str ](/docs/reference/foundations/str/)

Required  Positional

Question mark

Positional parameters are specified in o/*[ int ](/docs/reference/foundations/int/)*//*[ int
](/docs/reference/foundations/int/)*/t.svg)/*[ int ](/docs/reference/foundations/int/)*//foundations/int/) [ ![â](/assets/i/*[Preview](/assets/docs/BsSZQG52_995RG9zgRumuAAAAAAAAAAA.png)*/e/foundatio/*[ int ](/docs/reference/foundations/int/)*/ons/plugin.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ]/*[ int ](/docs/reference/foundations/int/)*/16-arrow-right.svg)
  - [ Foundations ](/docs/reference/foundations/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Plugin ](/docs/reference/foundations/plugin/)

=  plugin

A WebAssembly plugin.

Typst is capable of interfacing with plugins compiled to WebAssembly. Plugin
functions may /*[ integer
](/docs/reference/foundations/int/)*/nce/foundations/bytes/) as argu/*[ `
float ` ](/docs/reference/foundations/float/ "`float`")*//*[ ` decimal `
](/docs/reference/foundations/decimal/ "`decimal`")*/ary conversions between native Typst types and bytes.

Plugins run in isolation from your system, which means/*[ int ](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float//*[ decimal
](/docs/reference/foundations/decimal/)*/eds /*[ int ](/docs/reference/foundations/int/)*/mbly
library. Many compilers wi/*![Preview](/assets/docs/YQoOsFNxPEgW0b-n9B_VrAAAAAAAAAAA.png)*/heir only option (e.g. emscripten), which allows printing,
re/*[Preview](/assets/docs/3pMWbIkij09wRgebD43VQgAAAAAAAAAA.png)*/. You will
eith/*[ int ](/docs/reference/foundations/int/)*/o/*[ float
](/docs/reference/foundations/float/)*/s/*[ decimal
](/docs/reference/foundations/decimal/)*/i-
stub) .

==  Plugins and Packages

Plugins are distributed as packages. A package can make use of a plugin simply
by including a WebAssembly file and loading it. Because the byte-based plugin
interface is quite low-level, plugins are typically exposed through wrapper
functions, that also l/*[ integer
](/docs/reference/foundations/int/)*/functions must be pure: Given t/*[ `
float ` ](/docs/reference/foundations/float/ "`float`")*//*[ ` decimal `
](/docs/reference/foundations/decimal/ "`decimal`")*/s quite fundamental to the language design) and, since Typst
function can call plugin functions, this requir/*[ int ](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float//*[ decimal
](/docs/reference/foundations/decimal/)*/d ca/*[ int ](/docs/reference/foundations/int/)*/
    
    
    #let myplugin = plugin("hello.wasm")
    #let concat(a, b) = str(
      myplugin.concatenate(
        bytes(a),
        bytes(b),
    /*[Preview](/assets/docs/XVF6AbxDnXwmraGN-Eh1MgAAAAAAAAAA.png)*/](/assets/docs//*[ int ](/docs/reference/foundations/int/)*/ /*[ float
](/docs/reference/foundations/float/)*/b/*[ decimal
](/docs/reference/foundations/decimal/)*/

===  Exports

A plugin module can export functions to make them callable fro/*![Preview](/assets/docs/rSjz1bWkkKYqxmWjxezFTwAAAAAAAAAA.png)*/uld:

  - Take ` n ` 32-bit integer arguments ` a_1 ` , ` a_2 ` , ..., ` a_n ` (interpreted as lengths, so ` usize/size_t ` may be preferable), and /*[ integer
](/docs/reference/foundations/int/)*/ should first allocate a buffer/*[ `
float ` ](/docs/reference/foundations/float/ "`float`")*//*[ ` decimal `
](/docs/reference/foundations/decimal/ "`decimal`")*/ The ` a_1 ` first bytes of the buffer now constitute the first argument, the ` a_2 ` next bytes the second a/*[ int ](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float//*[ decimal
](/docs/reference/foundations/decimal/)*/houl/*![Preview](/assets/d/*[ int ](/docs/reference/foundations/int/)*/d its result back to the host. 

  - To signal success, the function should return ` 0 ` . 

  - To signal an error, the function should return ` 1 /*[Preview](/assets/docs/0ASdokWmhACxp3cbdBzSiwAAAAAAAAAA.png)*/ed error messag/*[ int ](/docs/reference/foundations/int/)*/ /*[ float
](/docs/reference/foundations/float/)*/ /*[ decimal
](/docs/reference/foundations/decimal/)*/ WAT syntax.)

  - ` (import "typst_env" "wasm_minimal_protocol_write_args_to_buffer" (func (param i32))) `

Writes the arguments for the current function into a plugin-allocated buffer.
When a plugin function is called, it  receives the lengths/*[ int ](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float//*[ decimal
](/docs/reference/foundations/decimal/)*/uld /*[ int ](/docs/reference/foundations/int///*![Preview](/assets/docs/DRz-f64JvhHssm4WgSEL2QAAAAAAAAAA.png)*/ocs/reference/foundations/decimal/)*/ "wasm_minimal_protocol_send_result_to_host" (func (param i32 i32))) `

Sends the output of the current function to the host (Typst). The first/*[Preview](/assets/docs/3TGIWh2MEGFIDAB8C1nEQAAAAAAAAAAA.png)*/ the second is /*[ int ](/docs/reference/foundations/int/)*/e/*[ float
](/docs/reference/foundations/float/)*/m/*[ decimal
](/docs/reference/foundations/decimal/)*/age should be
interpreted as an error message, it should be encoded as UTF-8.

==  Resources

For more resources, check out the [ wasm-minimal-protocol repository
](https://github.com/astrale-sharp/wasm-minimal-protocol) . It contains:

  - A list of example plugin implementations and a test runner for these examples 
  - Wrappers to help you write your plugin in Rust (Zig wrapper in development) 
  - A stubber for WASI 

==  Constructor

Question mark

If a type has a constructor, you can call/*[ ` float ` ](/docs/reference/foundations/float/
"`float`")*/ates a new plugin from a WebAsse/*[ ` decimal `
](/docs/reference/foundations/decimal/ "`decimal`")*/
)  -> [ plugin ](/docs/reference/foundations/plugin/)

====  ` path `

[ str ](/docs/reference/*[ `
int ` ](/docs/reference/foundations/int/ "`int`")*/rk

Positional parameters are specified in order, without names.

Path to a WebAssembly file.

For more details, see the [ Paths section ](/docs/reference/syntax/#paths) .

[ ![â](/assets/icons/16-arrow-right.svg) Panic  Previous page
](/docs/reference/founda/*![Preview](/assets/docs/Mu6UfN_4464KJhy78wvp_wAAAAAAAAAA.png)*/ex  Next page  ](/docs/reference/foundations/regex/)



= *docs/reference/foundations/calc.md*

  - [ ![Docs](/assets/icons/16-docs-dark/*[ int ](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float//*[ decimal
](/docs/reference/foundations/decimal/)*/.svg)
  - [/*[ int
](/docs/reference/foundations/int/)*/s/)
  /*[ int ](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float//*[ decimal
](/docs/reference/foundations/decimal/)*/tions and processing of numeric values.

These definitions are part of the ` calc ` module and not imported by default.
In addition to the functions listed below, the ` calc ` module also defines
the constants ` pi ` , ` tau ` , ` e ` , and ` inf ` .

==  Functions

===  ` abs `

Calculates the absolute value of a numeric value.

calc  .  abs  (

[ int ](/docs/reference/foundations/int/) [ float
](/docs/reference/foundations/float/) [ length
](/docs/reference/layout/length/) [ angle ](/docs/reference/layout/angle/) [
ratio ](/docs/reference/layout/ratio/) [ fraction
](/docs/reference/layout/fraction/) [ decimal
](/docs/reference/foundations/decimal/)

)  ->/*[Preview](/assets/docs/S2fXMNcPylTq6uwl7ZRpoAAAAAAAAAAA.pn/*![Preview](/assets/docs/34tvtgPRx9Zb0oFQtdkEngAAAAAAAAAA.png)*/)*/)/*[ float
](/docs/reference/foundations/float/)*/r/*[ decimal
](/docs/reference/foundations/decimal/)*/(/docs/reference/foundations/int/) or  [ float
](/docs/reference/foundations/float/) or  [ length
](/docs/reference/layout/length/) or  [/*[ int ](/docs/reference/foundations/int/)*/r  [ ratio ](/docs/reference/layout/ratio/) or  [ fraction
](/docs/reference/layout/fraction/) or  [ decimal
](/docs/reference/foundations/decimal/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The/*[ int /*![Preview](/assets/docs/Ks5iB4MwWXNAVXeSMihDJAAAAAAAAAAA.png)*//foundations/float//*[ decimal
](/docs/reference/foundations/decimal/)*//*[ int
](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float//*[ decimal
](/docs/reference/foundations/decimal/)*//*[ int
](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float//*[ decimal
](/docs/reference/foundations/decimal/)*/ [ flo/*[ int ](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float//*[ decimal
](/docs/reference/foundations/decimal/)*/calc.pow(decimal("2.5"), 2)
    

![Preview](/assets/docs/YQoOsFNxPEgW0b-n9B_VrAAAAAAAAAAA.png)

====  ` base `

[ int ](/docs/reference/foundations/int/) or  [ float
](/docs/reference/foundations/float/) or  [ decimal
](/doc/*![Preview](/assets/docs/R3PgftYITRsSLYBeQqKe3wAAAAAAAAAA.png)*/iew](/assets/docs/IT7doIU2fH1UJf0E_SPc6QAAAAAAAAAA.png)*/er, without nam/*[ int ](/docs/reference/foundations/int/)*/ /*[ float
](/docs/reference/foundations/float/)*/e/*[ decimal
](/docs/reference/foundations/decimal/)*/ [ integer ](/docs/reference/foundations/int/) .

====  ` exponent `

[ int ](/docs/reference/foundations/int/) or  [ float
](/docs/re/*[ int ](/docs/reference/foundations/int/)*/s/*[ float
](/docs/reference/foundations/float/)*/ /*[ decimal
](/docs/reference/foundations/decimal/)*/ent of the power.

===  ` exp `

Raises a value to some exponent of e.

calc  .  exp  (

[ int ](/docs/reference/foundations/int/) [ float
](//*[ int ](/docs/reference/foundations/int/)*/ /*[ float
](/docs/referenc/*![Preview](/assets/docs/Si7LVr220y-yjr6frD5mYQAAAAAAAAAA.png)*/ions/decimal/)*/ets/docs/D3jiA5mgoQIx6MVn4Oy4zwAAAAAAAAAA.png)

====  ` exponent `

[ int ](/docs/reference/foundations/int/) or  [ float
](/docs/reference/foundations/float/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The exponent of the power.

===  ` sqrt `

Calculates the /*[Preview](/assets/docs/afOSrjdOAc_1RzzU2hxUIgAAAAAAAAAA.png)*/ference/foundations/int/) [ float
](/docs/reference/foundations/float/)

)  -> [ float ](/docs/reference/foundations/float/)

    
    
    #calc.sqrt(16) \
    #calc.sqrt(2.5)
    

![Preview](/assets/docs/rSjz1bWkkKYqxmWjxezFTwAAAAAAAAAA.png)

====  ` value `

[ int ](/docs/reference/foundations/int/) or  [ float
](/docs/reference/foundations/float/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The number wh/*[Preview](/assets/docs/B8vbsVaOK7Ilt-aRhfDiFwAAAAAAAAAA.png)*/root `

Calculates the real nth root of a number.

If the number is negative, then n must be odd.

calc  .  root  (

[ float ](/docs/reference/foundations/float/) ,  [ int
](/docs/reference/foundations/int/) ,

)  -> [ float ](/docs/reference/foundations/float/)

    
    
    #calc.root(16.0, 4) \
    #calc.root(27.0, 3)
    

![Preview](/assets/d/*[ int ](/docs/reference/foundations/int/)*/

==/*[ bool ](/docs/reference/foundations/bool/)*//foundations/float/)

Required  Positional

Question mark

Positional parameters are spe/*[Preview](/assets/docs/YVF-q96_WeIoAbwweursAAAAAAAAAAAA.png)*/root of

====  /*[ in/*![â](/assets/icons/16-arrow-right.svg)*/ions/int/)

Required  Positional

Question mark

Positiona/*![â](/assets/icons/16-arrow-
right.svg)*/out names.

Which root of the radicand to ta/*![Preview](/assets/docs/4te-fP3EFYf9CFfXTNeLbgAAAAAAAAAA.p/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/*/ll b/*[ bool ](/docs/reference/foundations/bool/)*/
[ int ](/docs/reference/foundations/int/) [ float
](/docs/reference/foundations/floa/*[Preview](/assets/docs/54xiVFQnQ9FIdgInF0A_jAAAAAAAAAAA.png)*/](/docs/referen/*[ int ](/docs/reference/foundations/int/)*/lc.sin(1.5) \
    #calc.sin(90deg)
    

![Preview](/assets/docs/DRz-f64JvhHssm4WgSEL2QAAAAAAAAAA.png)

====  ` angle `

[ int ](/docs/reference/foundations/int/) or  [ float
](/docs/reference/foundations/float/) or  [ angle
](/docs/reference/layout/angle/)

Required  Positional

Question mark

Positional parameters ar/*[ ` decimal ` ](/docs/reference/foundations/decimal/*![Preview](/assets/docs/ahMgc30uVaXMdJx4f9b76gAAAAAAAAAA.png)*/of an angle.

When called with an integer or/*[ int ](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float//*[ decimal
](/docs/reference/foundations/decimal/)*//*[ int
](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float//*[ decimal
](/docs/reference/foundations/decimal/)*/    #c/*[ int ](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float//*[ decimal
](/docs/reference/foundations/decimal/)*/(/docs/re/*![Preview](/assets/docs/Hx0vydXttNRUJbbdDSvGlwAAAAA/*[ ![â](/assets/icons/16-arrow-right.svg)*//reference/layout/angle/)

R/*[Preview](/assets/docs/h9kAd/*![â](/assets/icons/16-arrow-
right.svg)*/fied in ord/*[ int ](/docs/reference/foundations/int/)*/e/*[ float
](/docs/reference/foundations/float/)*/t/*[ /*![Docs](/assets/icons/16-docs-dark.svg)*/ecimal/)*/or a float, they will be interpreted as radians.

calc  .  tan  (

[ int ](/docs/reference/foundations/int/) [ float
](/docs/reference/foundations/f/*[ int ](/docs/reference/foundations/int/)*/n/*[ float
](/docs/reference/foundations/float/)*/t/*[ decimal
](/docs/reference/foundations/decimal/)*/#calc.tan(90deg)
    

![Preview](/assets/docs/Mu6UfN_4464KJhy78wvp_wAAAAAAAAAA.png)

====  ` angle `

[ int ](/docs/reference/foundations/int/) or  [ float
](/docs/reference/foundations/float/) or  [ angle
](/docs/reference/layout/angle/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The angle whose tangent to calculate./*[ int ](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float//*[ decimal
](/docs/reference/foundations/decimal/)*//*[ int
](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float//*[ decimal
](/docs/reference/foundations/decimal/)*/   

!/*[ int ](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float//*[ decimal
](/docs/reference/foundations/decimal/)*/oat
](/docs/reference/foundations/float/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The number whose arcsine to calculate. Must be between -1 and 1.

===  ` acos `

/*[Preview](/assets/docs/496IGVvoarlmERajiTFs_gAAAAAAAAAA.png)*/nt ](/docs/referen/*[ int ](/docs/reference/foundations/int/)*/r/*[ float
](/docs/reference/foundations/float/)*/c/*[ decimal
](/docs/reference/foundations/decimal/)*/cos(0) \
    #calc.acos(1)
    

![Preview](/assets/docs/34tvtgPRx9Zb0oFQtdkEngAAAAAAAAAA.png)

====  ` value `

[ int ](/docs/reference/foundation/*[ int ](/docs/reference/foundations/int/)*/n/*[ float
](/docs/reference/foundations/float/)*/o/*[ decimal
](/docs/reference/foundations/decimal/)*/der, without names.

The number whose arcsine to calculate. Must be between -1 and 1.

===  ` atan `

Calculates the arcta/*![Preview](/assets/docs/qOIwQyXpC/*[ show rule ](/docs/reference/styling/#show-
rules)*/t
](/docs/reference/foundations/float/)

)  -> [ angle ](/docs/reference/layout/angle/)

    
    
    #calc.atan(0) \
    #calc.atan(1)
    

![Preview](/assets/docs/Ks5iB4MwWXNAVXeSMihDJAAAAAAAAAAA.png)

====  ` value `

[ int ](/docs/reference/foundations/int/) or  [ float
](/docs/refe/*[ ` decimal `
](/docs/reference/foundations/decimal/ "`decimal`")*/ositional parameters are specified in order, without names.

The number whose arctangent to calc/*[ int ](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float//*[ decimal
](/docs/reference/foundations/decimal/)*//*![Preview](/assets/docs/BsSZQG52_995RG9zgRumuAAAAAAAAAAA.png)*/eference/foundations/float//*[ decimal
](/docs/reference/foundations/decimal/)*/erence/*[ int ](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float//*[ decimal
](/docs/reference/foundations/decimal/)*/ #calc.atan2(1, 1) \
    #calc.atan2(-2, -3)
    

![Preview](/assets/docs/R3PgftYITRsSLYBeQqKe3wAAAAAAAAAA.png)

====  ` x `

[ int ](/docs/reference/foundations/int/) or  [ float
](/docs/reference/foundations/float/)

Req/*[Preview](/assets/docs/ysX2HLC-rfWACinwigYcWgAAAAAAAAAA.png)*/specified in order/*[ int ](/docs/reference/foundations/int/)*/ /*[ float
](/docs/reference/foundations/float/)*/n/*[ decimal
](/docs/reference/foundations/decimal/)*/at/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The Y coordinate.

===  ` sinh `

Calculate/*[ int ](/docs/reference/foundations/int/)*/l/*[ float
](/docs/reference/foundations/float/)*/c/*[ decimal
](/docs/reference/foundations/decimal/)*/rence/foundations/float/)

    
    
    #calc.sinh(0) \
    #calc.sinh(1.5)
    

![Preview](/assets/docs/Si7LVr220y-yjr6frD5mYQAAAAAAAAAA.png)

====  ` value `

[ float ](/docs/reference/foundations/float/)

Required  Positional

Question mark

P/*[ integer
](/docs/reference/foundations/int/)*/without names.

The hyperbolic /*[ `
float ` ](/docs/reference/foundations/float/ "`float`")*//*[ ` decimal `
](/docs/reference/foundations/decimal/ "`decimal`")*/cosh  (

[ float ](/docs/reference/foundations/float/)

)  -> [ float ](/docs/reference/foundations/float/)/*[ int ](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float//*[ decimal
](/docs/reference/foundations/decimal/)*//*[ int
](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float//*[ decimal
](/docs/reference/foundations/decimal/)*/in ord/*[ int ](/docs/reference/foundations/int/)*/whose hyperbolic cosine to calculate.

===  ` tanh `

Calculates the hyperbolic tangent of an hyperbolic angle.

calc  .  tanh /*![â](/assets/icons/16-arrow-right.svg)*/IvOjgCcBZo0GMCLQ9tQAAAAAAAAAA.png)*//reference/foundat/*[ int ]/*![â](/assets/icons/16-arrow-
right.svg)*/float
](/docs/reference/foundations/float/)*/s/*[ decimal
](/docs/reference/foundations/decimal/)*/  ` value /*![Docs](/assets/icons/16-docs-dark.svg)*/s/float/)

Required  Positional

Question mark

Positional parameters are specified in order, with/*[ int ](/docs/reference/foundations/int/)*/p/*[ float
](/docs/reference/foundations/float/)*/C/*[ decimal
](/docs/reference/foundations/decimal/)*/ is not specified, the logarithm is calculated in base 10.

calc  .  log  (

[ int ](/docs/reference/foundations/int/) [ float
/*[ ![â](/assets/icons/16-arrow-right.svg)*/ase  :  [ float
](/docs/reference/foundations/float/) ,
/*[ ![â](/assets/icons/16-arrow-
right.svg)*/s/float/)

    
    
    #calc.log(100)
    

![Preview](/assets/docs/4te-fP3EFYf9CFfXTNeLbgAAAAAAAAAA.p/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ence/foundations/int/) or  [ float
](/docs/reference/*[ Reference ](/docs/reference/)*/ Positional

Question mark

Positional para/*[ Foundations ](/docs/reference/foundations/)*/

The number whose logarithm to calculate. /*[ Representation ](/docs/reference/foundations/repr/)*/(/docs/reference/foundations/float/)

The base of the logarithm. May not be zero.

Default: ` 10.0  `

===  ` ln `

Calculates the natural logarithm of a number.

calc  .  ln  (

[ int ](/docs/reference/foundations/int/) [ float
](/docs/reference/foundations/float/)

)  -> [ float ](/docs/reference/foundations/float/)

    
    
    #calc.ln(calc.e)
    

![Preview](/assets/docs/ahMgc30uVaXMdJx4f9b76gAAAA/*![Preview](/assets/docs/0ASdokWmhACxp3cbdBzSiwAAAAAAAAAA.png)*/ions/int/) or  [ float
](/docs/reference/foundations/float//*[Preview](/assets/docs/hOvQAQDTPr3WAVu4x8HkgwAAAAAAAAAA.png)*/s are specified in order, without names.

The number whose logarithm to calculate. Must be strictly positive.

===  ` fact `

Calculates the factorial/*[ str ](/docs/reference/foundations/str/)*//docs/reference/foundations/int/)

)  -> [ int ](/docs/reference/foundations/int/)

    
    
    #cal/*![â](/assets/icons/16-arrow-right.svg)*/Hx0vydXttNRUJbbdDSvGlwAAAAA/*[ ![â](/assets/icons/16-arrow/*![â](/assets/icons/16-arrow-
right.svg)*/)

Required  Positional

Que/*[ ![â](/assets/icons/16-arrow-
right.svg)*/fied in order, without names.

The/*![Docs](/assets/icons/16-docs-dark.svg)*/ust be non-negative.

===  ` perm `
/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ k ` -permutation of ` n ` , or the number of ways t/*[ Reference ](/docs/reference/)*/ of ` n ` with regard to order.

calc  .  p/*[ Foundations ](/docs/reference/foundations/)*/nt/) ,  [ int
](/docs/reference/foundations/*[ Content ](/docs/reference/foundations/content/)*/ns/int/)

    
    
    $ "perm"(n, k) &= n!/((n - k)!) \
      "perm"(5, 3) &= #calc.perm(5, 3) $
    

!/*[ functions
](/docs/reference/foundations/function/)*/AAA.png)

====  ` base `

[ int ](/docs/reference/foundations/int/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The base number. Must be non-negative.

====  ` numbers `
/*[Preview](/assets/docs/X4qekl24YgH3SaXf1J0tagAAAAAAAAAA.png)*/onal

Question mark

Positional parameters a/*[ joined together
](/docs/reference/scripting/#blocks)*/ermutations. Must be non-negative.

===  ` binom `

Calculates a binomial coe/*[ string
](/docs/reference/foundations/str/)*/ ` n ` , or the number of ways to choose ` k
` items from a set of ` n ` without regard to order.

calc  .  binom  (

[ int ](/docs/reference/foundations/int/) ,  [ int
](/docs/reference/foundations/int/) ,

)  -> [ int ](/docs/reference/*[ field access syntax
](/docs/reference/scripting/#field-access)*/view](/assets/docs/3evQc1ME4eQqbzXhrmJ5lAAAAAAAAAAA.png)

====  ` n `

[ int ](/docs/reference/foundations/int/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The upper coefficient. Must be non-negative.

====  ` k `

[ int ](/docs/reference/foundations/int/)

Required  Positional

Question mark

Positional parameters are specified in order, withou/*[ set rules ](/docs/reference/styling/#set-rules)*/tive.

===  ` gcd `

Calculates the greatest common divisor of two integers.

calc  .  gcd  (

[ int ](/docs/reference/foundations/int/) ,  [ int
](/docs/reference/foundations/int/) ,

)  -> [ int ](/docs/reference/foundations/int/)

    
    
    #calc.gcd(7, 42)
    

![Preview](/assets/docs/qOIwQyXpC/*[ show rule ](/docs/reference/styling/#show-
rules)*//docs/reference/foundations/int/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The first integer.

====  ` b `

[ int ](/docs/reference/foundations/int/)

Required  Positional

Question mark

Positional parameters are specified in order, with/*[ ` repr `
](/docs/reference/foundations/repr/ "`repr`")*/s the least common multiple of two integers.

calc  .  lcm  (

[ int ](/docs/reference/foundations/int/) ,  [ int
](/docs/reference/foundations/int/) ,

)  -> [ int ](/docs/reference/foundation/*![Preview](/assets/docs/S2fXMNcPylTq6uwl7ZRpoAAAAAAAAAAA./*[Preview](/assets/docs/Vicm2VF6Z98sgjNZQYlaBgAAAAAAAAAA.png)*/ `

[ int ](/docs/reference/foundations/int/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The first integer.

====  ` b `

[ int ](//*[ function ](/docs/reference/foundations/function/)*/nal

Question mark

Positional parameters are specified in order, without n/*[ str ](/docs/reference/foundations/str/)*/`

R/*[ bool ](/docs/reference/foundations/bool/)*/

If the number/*[ str ](/docs/reference/foundations/str/)*/changed.

Note that this function will always return an [ integer
](/docs/reference/foundations/int/) , and will error if the resulting [ `
float ` ](/docs/reference/foundations/float/ "`float`") or [ ` decimal `
](/docs/reference/foundations/decimal/ "`decimal`") is larger than the maximum
64-bit signed /*[ str ](/docs/reference/foundations/str/)*/hat type.

calc  .  floor  (

[ int ](/docs/refe/*[ str ](/docs/reference/foundations/str/)*/eference/foundations/float/) [ decimal
](/docs/reference/foundations/decimal/)

)  -> [ int ](/docs/reference/foundations/int/)

    
    
    #calc.floor(500.1)
    #assert(calc.floor(3) == 3)
    #assert(calc.floor(3.14) == 3)
    #assert(calc.floor(decimal("-3.14")) == -4)
  /*[ dictionary ](/docs/reference/foundations/dictionary/)*/AAAAA.png)

====  ` value `

[ int ](/docs/reference/foundations/int/) or  [ flo/*[Preview](/assets/docs/zNlYUwJ_V8GS40gGav-GlwAAAAAAAAAA.png)*/cs/reference/foundations/decimal/*![Preview](/assets/docs/IT7doIU2fH1UJf0E_SPc6QAAAAAAAAAA.png)*/*[
query ](/docs/reference/introspection/query/ "query")*/o round down.
/*[ show
rule ](/docs/reference/styling/#show-rules)*/integer.

If the number is already an integer, it is returned unchanged.

Note t/*[ counters
](/docs/reference/introspection/counter/)*/*[ state
](/docs/reference/introspection/state/ "state")*/t/*[ queries
](/docs/reference/introspection/query/)*/tions/float/ "`float`") or [/*[ none ](/docs/reference/foundations/none//*[ location
](/docs/reference/introspection/location/)/*[ ![â](/assets/icons/16-arrow-right.svg)*/ minimum for that type.

calc  .  ceil  (

[ int ](/docs/refe/*[ ![â](/assets/icons/16-arrow-
right.svg)*/erence/foundations/float/) [ decimal
](/docs/reference/foundations/decimal/)

)  -> [ int ](/docs/reference/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/eil(500.1)
    #assert(calc.ceil(3) == 3)
    #asser/*[ Reference ](/docs/reference/)*/sert(calc.ceil(decimal("-3.14")) == -3)
   /*[ Foundations ](/docs/reference/foundations/)*/h1MgAAAAAAAAAA.png)

====  ` value `

[ int/*[ Regex ](/docs/reference/foundations/regex/)*/oat
](/docs/reference/foundations/float/) or  [ /*[ show rule selector ](/docs/reference/styling/#show-rules)*/Positi/*[ string methods ](/docs/reference/foundations/str/)*/fied in order, without names.

The number to/*[ See here ](https://docs.rs/regex/latest/regex/#syntax)*/a number.

If the number is already an integer, it is returned unchanged.

Note that this function will always return an [ integer
](/docs/reference/foundations/int/) , and will error if the resulting [ `
float ` ](/docs/reference/foundations/f/*[Preview](/assets//*![Preview](/as/*[ int ](/docs/reference/foundations/int/)*/"`decimal`") is larger than the maximum
64-bit signed integer or smaller than the minimum for that type.

calc  .  trunc  (

[ int ](/docs/reference/foundations/int/) [/*[ str ](/docs/reference/foundations/str/)*/t/) /*[ regex ](/docs/reference/foundations/regex/)*/al/)

)  -> [ i/*[ str ](/docs/reference/foundations/str/)*/   
    
    #calc.trunc(15.9)
    #assert(calc.trunc(3) == 3)
    #assert(calc.trunc(-3.7) == -3)
    #assert(calc.trunc(decimal("8493.12949582390")) == 8493)
    

![Preview](/assets/docs/0ASdokWmhACxp3cbdBzSiwAAAAAAAAAA.png)

==/*![Preview](/assets/docs/YVF-q96_WeIoAbwweursAAAAAAAAAAAA.png)*/[ float
](/docs/reference/foundations/float/) or  [ decimal
](/docs/reference/foundations/decimal/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The number to truncate.

===  ` fract `

Returns the fractional part of a number.

If the number is an integer, returns ` 0 ` .

calc  .  fract  (

[ int ]/*[ ![â](/assets/icons/16-arrow-right.svg)*/
](/docs/reference/foundations/float/) [ deci/*![Preview](/assets/docs/54xiVFQnQ9FIdgInF0A_jAAAAAAAAAAA.png)*/](/docs/reference/foundations/int/) [ float
](/docs/reference/foundations/float/) [ decimal
](/docs/refere/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/#calc.fract(-3.1)
    #assert(calc.fract(3) == 0)
  /*[ Reference ](/docs/reference/)*/34.23949211")) == decimal("0.23949211"))
  /*[ Foundations ](/docs/reference/foundations/)*/1nEQAAAAAAAAAAA.png)

====  ` value `

[ in/*[ Integer ](/docs/reference/foundations/int/)*/loat
](/docs/reference/foundations/float/) or  [ decimal
](/docs/reference/foundations/decimal/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The number to truncate.

===  ` round `

Rounds a number to the nearest integer away from zero.

Optionally, a number of decimal places can be specified.

If the number of digits is negative, its absolute value will indicate the
amount of significant integer digits to remove before the decimal point.

Note that this function will return the s/*[Preview](/assets/docs/wfpxRJDZrNeGDA3RjEgFJgAAAAAAAAAA.png)*/` float ` ](/docs/reference/foundations/float/
"`float`") will return a ` float ` , and to a [ ` de/*![Preview](/assets/docs/h9kAd8BZ_4qaZUm7WWIpgQAAAAAAAAAA.png)*/ another ` decimal ` .
You may explicitly convert the output of this function to an integer with [ `
int ` ](/docs/reference/foundations/int/ "`int`") , but note that such a
conversion will error if the ` float ` or ` decimal ` is larger than the
maximum 64-bit signed integer or smaller than the minimum integer.

In /*[ bool ](/docs/reference/foundations/bool//*[ int
](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float//*[ str
](/docs/reference/foundations/str//*[ decimal
](/docs/reference/foundations/decimal/)*/oat /*[ int ](/docs/reference/foundations/int/)*/minimum respectively.

calc  .  round  (

[ int ](/docs/reference/foundations/int/) [ float
](/docs/reference/foundations/*[Preview](/assets/docs/4vDM_wHvGAGqziHd9y2LQQAAAAAAAAAA.png)*/  digits  :  [ /*[ bool ](/docs/reference/foundations/bool/)*/)/*[ int
](/docs/reference/foundations/int/)*/i/*[ float
](/docs/reference/foundations/float/)*/o/*[ str
](/docs/reference/foundations/str/)*/o/*[ decimal
](/docs/reference/foundations/decimal/)*/igits: 2)
    #assert(calc.round(3) == 3)
    #assert(calc.round(3.14) == 3)
    #assert(calc.round(3.5) == 4.0)
    #assert(calc.round(3333.45, digits: -2) == 3300.0)
    #assert(calc.round(-48953.45, digits: -3) == -49000.0)
    #assert(calc.round(3333, digits: -2) == 3300)
    #assert(calc.round(-48953, digits: -3) == -49000)
    #assert(calc.round(decimal("-6.5")) == decimal("-7"))
    #assert(calc.round(decimal("7.123456789"), digits: 6) == decimal("7.123457"))
    #assert(/*![Preview](/assets/docs/496IGVvoarlmERajiTFs_gAAAAAAAAAA.png)*/)
    #assert(calc.round(deci/*[ int ](/docs/reference/foundations/int/)*/"-49000"))
    

![Preview](/assets/docs/S2fXMNcPylTq6uwl7ZRpoAAAAAAAAAAA./*[Preview](/assets/docs/Vicm2VF6Z98sgjNZQYlaBgAAAAAAAAAA.png)*/nt/) or  [ /*![â](/assets/icons/16-arrow-right.svg)*/t/) or  [ decimal
](/docs/reference/foundations/decimal/)

Requi/*![â](/assets/icons/16-arrow-
right.svg)*/l parameters are spec/*[ int ](/docs/reference/foundations/int/)*/r to round.

====  ` digits `

[ int/*![Docs](/assets/icons/16-docs-dark.svg)*/ocs/3AYO-p6E-z3VLH4vNyWEKgAAAAAAAAAA.png)*/s.

If negative, the number of significant integer digits that should be removed
before the decimal point.

Default: ` 0  `

===  ` clamp `

Clamps a number between a minimum and /*[ int ](/docs/reference/foundations/int/)*/](/d/*[ int ](/docs/reference/foundations/int/)*/(/docs/reference/foundations/float/) /*[Preview](/assets/docs/knwTrW-Xbj5sqbcdza7ewgAAAAAAAAAA.png)*/(/docs/refere/*[ int ](/docs/reference/foundations/int/)*/erence/foundations/float/) [ decimal
](/docs/reference/foundations/decimal/) ,  [ int
](/docs/reference/foundations/int/) [ float
](/docs/reference/foundations/float/) [ decimal
](/docs/reference/foundations/decimal/) ,

)  -> [/*![â](/assets/icons/16-arrow-right.svg)*/ [ float
](/docs/reference/foundations/float/) [ de/*[ int ]/*![â](/assets/icons/16-arrow-
right.svg)*/*[ int ](/docs/reference/foundations/int/)*/#assert(calc.clamp(5, 0, 10) == 5)/*[Preview](/assets/docs/*![Docs](/assets/icons/16-docs-dark.svg)*//mp(decimal("5/*[ int ](/docs/reference/foundations/int/)*/45"))
    #assert(calc.clamp(decimal("5.45"), decimal("6.75"), 12) == decimal("6.75"))
    

![Preview](/assets/docs/IT7doIU2fH1UJf0E_SPc6QAAAAAAAAAA.png)

====  ` value `

[ int ](/docs/reference/foundations/int/) or  [ float
](/docs/reference/foundation/*![Preview](/assets/docs/ysX2HLC-rfWACinwigYcWgAAAAAAAAAA.png)*//)

R/*[ int ](/docs/reference/foundations/int/)*/iona/*[ int ](/docs/reference/foundations/int/)*/out names.

The number to clamp.

=/*[Preview](/assets/docs/KUPqsOL5IXWcGSfAhFpL6wAAAAAAAAAA.png)*/[ float
](/do/*[ int ](/docs/reference/foundations/int/)*/cimal
](/docs/reference/foundations/decimal/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The inclusive minimum value.

====  ` max `

[ int ](/docs/reference/foundations/int/) or  [ float
](/docs/reference/foundations/float/) or  [ decimal
](/docs/reference/foundations/decimal/)

Required  Positional

Question mark

Positional parameters are specified in or/*[ int ](/docs/reference/foundations/int/)*/m /*![â](/assets/icons/16-arrow-right.svg)*/int/)*/m of a sequence of values.

calc  .  min  (

..  an/*![â](/assets/icons/16-arrow-
right.svg)*/SyJsbGpK3k_fu59O2AAAAAAAAAAA.png)*/in("typst", "is/*[ int ](/docs/reference/foundations/int/)*/afOSrjdOA/*![Docs](/assets/icons/16-docs-dark.svg)*/alues `

any

Required  Positional

Question mark

Positional parameters are specified in order, without names.

Variadic

Question mark

Variadic parameters can be specified multiple times.

The sequence of values from which to extract the minimum. Must not be empty.

===  ` max `

Determines the maximum of a sequence of values.

calc  .  max  (

..  any

)  -> any

    
    
    #calc.max(1, -3, -5, 20, 3, 6) \
    #calc.max("typst", "is", "cool")
    

![Preview](/as/*[ int ](/docs/reference/foundations/int/)*/A.png)

==/*![Preview](/assets/docs/AEhIvOjgCcBZo0GMCLQ9tQAAAAAAAAAA.png)*/t ](/docs/reference/foundations/int/)*/d in order, without names.

Variadic

Question mark

Variadic parameters can be specified multiple times/*[Preview](/assets/docs/gebaB-CZOzDtnvfjDfjtTgAAAAAAAAAA.png)*/ Must not be em/*[ int ](/docs/reference/foundations/int/)*/n integer is even.

calc  .  even  (

[ int ](/docs/reference/foundations/int/)

)  -> [ bool ](/docs/reference/foundations/bool/)

    
    
    #calc.even(4) \
    #calc.even(5) \
    #range(10).filter(calc.even)
    

![Preview](/assets/docs/YVF-q96_WeIoAbwweursAAAAAAAAAAAA.png)

====  ` value `

[ int ](/docs/reference/foundations/int/)

Required  Positional

Question mark

Positional parameters are specified in order, without /*![â](/assets/icons/16-arrow-
right.svg)*/

===  ` odd `

Determines whether an integer is odd.

calc  .  odd  (

[ int ](/*[ bool ](/docs/reference/*![Docs](/assets/icons/16-docs-dark.svg)*/ence/found/*![](/assets/icons/16-arrow-right.svg)*/d(4) \
    #calc.odd(5) \
    #range(10).filter(calc.odd)
    

![Preview](/assets/docs/54xiVFQnQ9FIdgInF0A_jAAAAAAAAAAA.png)

====  ` va/*![](/assets/icons/16-arrow-right.svg)*/tions/int/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The number to check for oddness.

===  ` rem /*[ bytes ](/docs/reference/foundations/bytes/)*/The value `/*[ str
](/docs/reference/foundations/str/)*/n as ` x ` /*[ bool
](/docs/reference/foundations/bool/)*/
This /*[ int ](/docs/reference/foundations/int/)*/s/reference/foundations/decimal/
"`decimal`") input and the dividend is too small in magnitude compared to the
divisor.

calc  .  rem  (

/*[Preview](/assets/docs/I0LPQ0WUii0fthcD20cosAAAAAAAAAAA.png)*/ference/foundat/*[ bytes ](/docs/ref/*![Preview](/a/*[ `
assert.eq ` ](/docs/reference/foundations/assert/#definitions-eq)*//int/) [ float
](/docs/reference/foundations/float/) [ decimal
](/docs/reference/foundations/decimal/) ,

)  -> [ int ](/docs/reference/foundations/int/) [ float
](/docs/reference/foundations/f/*[ str ](/docs/reference/foundations/str/)*/tions/decimal/)

    
    
    #calc.rem(7, 3) \
    #calc.rem(7, -3) \
    #calc.rem(-7, 3) \
    #calc.rem(-7, -3) /*![â](/assets/icons/16-arrow-right.svg)*/ew](/assets/docs/h9kAd8BZ_4qaZUm7WWIpgQAAAAAAAAAA.png)

====  ` dividend `

[ int ](/docs/reference/foundations/int/) or  [ float
](/docs/reference/foundations/*[ bool ](/docs/reference/foundations/bool/)*/undations/de/*![Docs](/assets/icons/16-docs-dark.svg)*/ mark

Pos/*![](/assets/ic/*[ code block
](/docs/reference/scripting/#blocks)*/vidend of the/*![](/assets/icons/16-arrow-right.svg)*/ ](/docs/reference/foundations/int/) or  [ float
](/*![](/assets/icons/16-arrow-right.svg)*/docs/reference/foundations/str/)*//foundati/*[ int
](/docs/reference/foundations/int/)*/tion m/*[ bytes ](/docs/reference/foundations/bytes/)*/rder, without names.

The divisor of the remainder.

===  ` div-euclid `

Performs euclidean di/*[Preview](/assets/docs/FF7gGW4eVOEhYjIZXy8BIgAAAAAAAAAA.png)*/at of a division/*[ str ](/docs/reference/foundations/str/)*/he dividend is greater than or equal to ` n ` times the
divisor.

calc  .  div-euclid  (

[ int ](/docs/reference/foundations/int/) [ float
](/docs/reference/foundations/float/) [ decimal
](/docs/reference/foundations/decimal/) ,  [ int
](/docs/reference/foundations/int/) [ float
](/docs/reference/foundations/flo/*[ int ](/docs/reference/foundations/int/)*/ons/decimal/) ,

)  -> [ int ](/docs/reference/foundations/int/) [ float
](/docs/reference/foundations/float/) [ decimal
](/docs/reference/foundations/decimal/)

    
    
    #calc.div-euclid(7, 3) \
    #calc.div-euclid(7, -3) \
    #calc.div-euclid(-7, 3) \
    #calc.div-euclid(-7, -3) \
    #calc.div-euclid(1.75, 0.5) \
    #calc.div-euclid(decimal("1.75"), decimal("0.5"))
    

![Preview](/assets/docs/496IGVvoarlmERajiTFs_gAAAAAAAAAA.png)

====  ` dividend `

[ int ](/docs/reference/foundations/int/) or  [ float
](/docs/reference/foundations/float/) or  [ decimal
](/docs/reference/foundations/decimal/)

Required  Positional

Question mark

Positional parame/*[ ![â](/assets/icons/16-arrow-right.svg)*/.

The dividend of the division.

====  ` divisor `

[ int ](//*[ ![â](/assets/icons/16-arrow-
right.svg)*/t
](/docs/reference/foundations/float/) or  [ decimal
](/docs/reference/foundations/decimal/)

Requi/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/l parameters are specified in order, without names.
/*[ Reference ](/docs/reference/)*/===  ` rem-euclid `

This calculates the le/*[ Foundations ](/docs/reference/foundations/)*/ning: Due to a floating point round-off err/*[ Auto ](/docs/reference/foundations/auto/)*/lue of the divisor if the dividend is much smaller in magnitude
than the divisor and the dividend is negative. This only applies for floating
point inputs.

In addition, this can error if given a [ ` decimal `
](//*[ text direction
](/docs/reference/text/text/#parameters-dir)*/e dividend is
too small in magnitude compared to the divisor.

calc  .  rem-euclid  (

[ /*[ text language
](/docs/reference/text/text/#parameters-lang)*//*[ ![â](/assets/icons/16-arrow-right.svg)*//reference/foundations/decimal/) ,  [ int
](/docs/referenc/*[ ![â](/assets/icons/16-arrow-
right.svg)*/ce/foundations/float/) [ decimal
](/docs/reference/foundations/decimal/) ,

)  -> [ int ](/docs/refe/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/eference/foundations/float/) [ decimal
](/docs/refer/*[ Reference ](/docs/reference/)*/ 
    
    #calc.rem-euclid(7, 3) \
    #ca/*[ Foundations ](/docs/reference/foundations/)*/7, 3) \
    #calc.rem-euclid(-7, -3) \
    /*[ System ](/docs/reference/foundations/sys)*/-euclid(decimal("1.75"), decimal("0.5"))
    

![Preview](/assets/docs/ysX2HLC-rfWACinwigYcWgAAAAAAAAAA.png)

====  ` dividend/*[ ` version ` ](/docs/reference/foundations/version/ "`version`")*//reference/foundations/float/) or  [ decimal
](/docs/reference/foundations/decimal/)/*[ dictionary ](/docs/reference/foundations/dictionary/ "dictionary")*/cified in order, without names.

The dividend of the remainder.

====  ` divisor `

[ int ](/docs/reference/foundations/int/) or  [ float
](/docs/reference/foundations/float/) or/*![â](/assets/icons/16-arrow-right.svg)*/s/decimal/)

Required  Positional

Question mark

Position/*![â](/assets/icons/16-arrow-
right.svg)*//foundations/str/)*/ divisor of the remainder.

===  ` quo `

Calculates the quot/*[ ` json.decode
` ]/*![Docs](/assets/icons/16-docs-dark.svg)*/initions-decode)*//*[ ![â](/assets/icons/16-arrow-right.svg)*/oundations/int/) , and will error if the resulting [ `
f/*[ ![â](/assets/icons/16-arrow-
right.svg)*/ "`float`") or [ ` decimal `
](/docs/reference/foundations/decimal/ "`decimal`") is larger than the ma/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/an the minimum for that type.

calc  .  quo  (

[ in/*[ Reference ](/docs/reference/)*//int/) [ float
](/docs/reference/foundation/*[ Foundations ](/docs/reference/foundations/)*/ions/decimal/) ,  [ int
](/docs/reference/f/*[ Function ](/docs/reference/foundations/function/)*/ons/float/) [ decimal
](/docs/reference/foundations/decimal/) ,

)  -> [ int ](/docs/reference/foundations/int/)

    
    
    $ "quo"(a, b) &= floor(a/b) \
      "quo"(14, 5) &= #calc.quo(14, 5) \
      "quo"(3.46, 0.5) &= #calc.quo(3.46, 0.5) $
    

![Preview](/assets/docs/AEhIvOjgCcBZo0GMCLQ9tQAAAAAAAAAA.png)

====  ` dividend `

[ int ](/docs/reference/foundations/int/) or  [ float
](/docs/reference/foundations/float/) or  [ decimal
](/docs/reference/foundations/decimal/)

Required  /*![Do/*[ str ](/docs/reference/foundations/str/)*/s are specified in order, without names.

The dividend of the /*[ math
documentation ](//*![](/assets/icons/16-arrow-right.svg)*/ations/int/) or  [ float
](/docs/reference/foundati/*![](/assets/icons/16-arrow-right.svg)*/erence/foundations/decimal/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The di/*[Preview](/assets/docs/h8ulslRsTYE05Pu4qy5C6AAAAAAAAAAA.png)*/t.svg) Bytes  Previous page
](/docs/reference/foundations/bytes/) [ ![â](/assets/icons/16-arrow-
right.svg) Content  Next page  ](/docs/reference/foundations/content/)



= *docs/reference/foundations/repr.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference/*[ set ](/docs/reference/styling/#set-rules)*/1/*[ sh/*![Preview](/assets/docs/UtfXJAklKdjyBZ3HmRwY-AAAAAAAAAAA.png)*/ons/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Representation ](/docs/reference/foundations/repr/)
/*![â](/assets/icons/16-arrow-right.svg)*/ocs/reference/model/heading/)*//*[ tables ](/docs/reference/mode/*![â](/assets/icons/16-arrow-
right.svg)*/
in monospace with syntax-highlighting. The exceptions are ` none  ` ,
integers, floats, stri/*[ set rul/*![Docs](/assets/icons/16-docs-dark.svg)*/)*/*[ show rules
](/docs/reference/styling/#show-rules)*/t b/*[ selectors
](/docs/reference/foundations/selector/)*/ Example

    
    
    #none vs #repr(none) \
    #"hello" vs #repr("hello") \
    #(1, 2) v/*[
module ](/docs/reference/scripting/#modules)*/
    

![Preview](/a/*[ `
assert.eq ` ](/docs/reference/foundations/assert/#definitions-eq)*//*[ `
list.item ` ](/docs/reference/model/list/#definitions-item)*/pecified in parentheses
after the function name.

repr  (

any

)  -> [ str ](/docs/reference/foundations/str/)

===  ` value `

any

Requ/*[ let binding
](/docs/reference/scripting/#bindings)*/rs ar/*![â](/assets/icons/16-arrow-right.svg)*/e value whose string representation to produce.

[ ![â](/assets/icons/16-arrow-right.svg) Regex  Previous p/*[ argument sinks
](/docs/reference/foundations/arguments/)*//icons/16-arrow-
right.svg) Selector  Next page  ](/docs/reference/foundations/selector/)



= *docs/reference/fo/*![â](/assets/icons/16-arrow-right.svg)*/sets/icons/16-docs-dark.svg) /*![](/assets/icons/16-arro/*[ ![â](/assets/icons/16-arrow-
right.svg)*/#blocks)*/eference/)
 /*![](/assets/icons/16-arrow-right.svg)*/vg)
  - [ Foundations ](/docs/referenc/*![Docs](/assets/icons/16-docs-dark.svg)*/6-arrow-right.svg)
  - [ Content ](/docs/reference/foundations/content/)

=  content

A piece of document content.

This type is at the heart of Typst. All markup you write and most [ functions
](/docs/reference/foundations/function/) you call produce co/*[ ` none `
](/docs/reference/foundations/none/ "`none`")*/g markup in square brackets. This is
also how you pass content to functions.

==  Example

    
    
    Type of /*[ ` array.push ` ](/docs/reference/foundations/array/#definitions-push
"`array.push`")*/AAAAAAAA/*![Preview](/assets/docs/wfpxRJDZrNeGDA3RjEgFJgAAAAAAAAAA.png)*/ed together
](/docs/reference/scripting/#blocks) and multiplied with integers. Wherever
content is expected, you can also pass a [ string
](/docs/reference/foundations/str/) or ` none  ` .

==  Representation

Content consists of elements with fields. W/*[Preview](/assets/docs/56wK4TQtzRt7_B3OQOxb7QAAAAAAAAAA.png)*/ provide these fields as arguments and when you
have a content va/*[ ` module `
](/docs/reference/scripting/#modules)*/ syntax
](/docs/reference/scripting/#field-access) .

Some fields are required: These must be provided when constructing an element
and as a consequence, they are always available through field access on
content of that type. Required fields are marked as such in the documentation.

Most fields are optional: Like required fields, they can be passed to the
element function to configure them for a single element. However, these can
also be configur/*![Preview](/assets/docs/4vDM_wHvGAGqziHd9y2LQQAAAAAAAAAA.png)*/apply them to all elements within a scope. Optional fields are only available
with field access syntax when they w/*[ ` footer `
](/docs/reference/layout/page/#parameters-footer)*/esult from a set rule.

Each element has a default appearance. However/*[Preview](/assets/docs/yXee-w_McX_Uho7Ghovc-QAAAAAAAAAA.png)*/show rule ](/docs/reference/styling/#show-
rules) . The show rule is passed the element. It can access the element's
field and produce arbitrary content from it.

In the web app, you can hover over a content variable to see exactly which
elements the content is composed of an/*[ ` array.push(value) `
](/docs/reference/foundations/array/#definitions-push)*/repr `
](/docs/reference/foundations/repr/ "`repr`") function.

==  Definitions

Question mark

Functions and types and can have associated definitions. These are accessed by
specifying the function or type, followed by a period, and then the
definition's name.

===  ` func `

The content's element function./*![Preview](/assets/docs/Vicm2VF6Z98sgjNZQYlaBgAAAAAAAAAA.png)*/ion ](/docs/reference/foundations/function/)*/how rules for
the element. Can be compared with global functions to check whether you have a
specific kind of element.

self  .  func  (

)  -> [ function ](/docs/reference/foundations/function/)

===  ` has `

Whether the content ha/*![Preview](/assets/docs/3AYO-p6E-z3VLH4vNyWEKgAAAAAAAAAA.png)*/nce/foundations/str/)

)  -> [ bool ](/docs/reference/foundations/bool/)

====  ` field `

[ str ](/docs/reference/foundation/*[ selector ](/docs/reference/foundations/selector/)*/ional parameters are specified in order, without names.

The field to look for.

===  ` at `

Access the specified field/*[Previe/*![Preview](/assets/docs/knwTrW-Xbj5sqbcdza7ewgAAAAAAAAAA.png)*/xist or fails with an error if no default value was specified.

self  .  at  (

[ str ](/docs/reference/foundations/str/) ,  default  :  any  ,

)  -> any

====  ` field `

[ str ](/docs/reference/foundations/str/)

Requ/*[ ![â](/assets/icons/16-arrow-right.svg)*/l parameters are specified in order, without names.

The/*[ ![â](/assets/icons/16-arrow-
right.svg)*/A default value to return if the field does not exist.

===  ` fields `

Returns the fields of this /*[ ![Docs](/assets/icons/16-docs-dark.svg)/*![Preview](/assets/docs/zaVKMztfj-8VIfbLXeJFUAAAAAAAAAAA.png)*/erence ](/docs/reference/)*/h: 10cm,
      height: 10cm,
    ).fields()/*[ Foundations ](/docs/reference/foundations/)*/gGav-GlwAAAAAAAAAA.png)

===  ` location `
/*[ Evaluate ](/docs/reference/foundations/eval/)*/lable on content returned by [
query ](/docs/reference/introspection/query/ "query") or provided by a [ show
rule ](/docs/reference/styling/#show-rules) , for other content it will be `
none  ` . The resulting location can be/*[Preview](/assets/docs/KZfqDZ_7V1ElK4um94vvjwAAAAAAAAAA.png)*/r/) , [ state
](/docs/reference/introspection/state/ "state") and [ queries
](/docs/reference/introspection/query/) .

self  .  location  (/*[ str ](/docs/reference/foundations/str/)*/ons/none//*[ str
](/docs/reference/foundations/str/)*/ion/locati/*[ dictionary
](/docs/reference/foundations/dictionary/)*/ation  Previous page
](/docs/*[ str ](/docs/reference/foundations/str/)*/ssets/icons/16-arrow-
right.svg) Datetime  Next page  ](/docs/reference/foundations/datetime/)



= *docs/reference/foundations/regex.md*

  - [ ![Do/*[ str ](/docs/reference/foundations/str/)*/cs/*[ syntactical mode ](/docs/reference/syntax/#modes)*/eference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Foundat/*![Preview](/ass/*[ int ](/docs/reference/foundations/int/)*//16-arrow-right.svg)
  - [ Regex ](/docs/reference/foundations/regex/)

=  regex

A regular expression.

Can be used as a [ show rule selector ](/docs/reference/styling/#show-rules)
and with [ string methods ](/docs/reference/foundations/str/) like ` find ` ,
` spl/*[Preview](/assets/docs/4OYmfbro6ZT1td5j4R5wyAAAAAAAAAAA.png)*//latest/regex//*[ dictionary ](/docs/reference/foundations/dictionary/)*/==  Example

    
    
    // Works with string methods.
    #"a,b;c".split(regex("[,;]"))
    
    // Works with show rules.
    #show regex("\d+"): set text(red)
    
    The numbers 1 to 10.
    

![Preview](/assets/docs/UtfXJAklKdjyBZ3HmRwY-AAAAAAAAAAA.png)

==  Constructor

Question mark

If a type /*[Preview](/assets/docs/0vD-OzSZwxX0Gqmm8_Sk9AAAAAAAAAAA.png)/*[ ![â](/assets/icons/16-arrow-right.svg)*/lar expression from a string.

regex  (

[ str ](/docs/referen/*[ ![â](/assets/icons/16-arrow-
right.svg)*//reference/foundations/regex/)

====  ` regex `

[ str ](/docs/reference/foundations/str/)

Required  /*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ameters are specified in order, without names.

The /*[ Reference ](/docs/reference/)*/

Most regex escape sequences just work bec/*[ Foundations ](/docs/reference/foundations/)*/s. To produce regex escape sequences that a/*[ Module ](/docs/reference/foundations/module/)*/d to escape twice. Thus, to match a verbatim
backslash, you would need to write ` regex  (  "\\\\"  )  ` .

If you need ma/*[ field access notation
](/docs/reference/scripting/#fields)*/xtract its text to use it fo/*[ import
and include syntaxes ](/docs/reference/scripting/#modules)*/View example

` regex  (  `\d+\.\d+\.\d+`  .  text  )  ` .

[ ![â](/assets/icons/16-arrow-right.svg) Plugin  Previous pag/*[ dictionary constructor
](/docs/reference/foundations/dictionary/#constructor)*/.svg) Representation  Next page  ](/docs/reference/foundations/repr/)



= *docs/reference/foundations/int.md*

  - [ /*[Preview](/assets/docs/itOPaialNOb62A81RHFv_wAAAAAAAAAA.png)/*[ ![â](/assets/icons/16-arrow-right.svg)*/erence ](/docs/reference/)
  - ![](/assets/icons/16-arro/*[ ![â](/assets/icons/16-arrow-
right.svg)*/rence/foundations/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Integer ](/docs/reference/found/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/e number can be negative, zero, or positive. As Typs/*[ Reference /*![Preview](/assets/docs/I0LPQ0WUii0fthcD20cosAAAAAAAAAAA.png)*/922/*[ Foundations ](/docs/reference/foundations/)*/36854775807  ` .

The number can also be sp/*[ Array ](/docs/reference/foundations/array/)*/tarting
it with a zero followed by either ` x ` , ` o ` , or ` b ` .

You can convert a value to an integer with this type's constructor.

==  Example

    
    
    #(1 + 2) \
    #(2 - 5) \
    #(3 + 4 < 8)
    
    #0xff \
    #0o10 \
    #0b1001
    

![Preview](/assets/docs/wfpxRJDZrNeGDA3RjEgFJgAAAAAAAAAA.png)

==  Constructor

Question mark

If a /*[ for loop ](/docs/reference/scripting/#loops)*/ function to create a new
value of the type.

Convert/*[ joined together
](/docs/reference/scripting/#blocks)*/n attempt to
produce an integer larger than the maximum 64-bit signed integer or smaller
than the minimum 64-bit signed integer.

  - Booleans are converted to ` 0 ` or ` 1 ` . 
  - Floats and decimals are truncated to the next 64-bit integer. 
  - Strings are parsed in base 10. 

int  (

[ bool ](/docs/reference/foundations/bool/) [ int
](/docs/reference/foundations/int/) [ float
](/docs/reference/foundations/float/) [ str
](/docs/reference/foundations/str/) [ decimal
](/docs/reference/foundations/decimal/)

)  -> [ int ](/docs/reference/foundations/int/)

    
    
 /*[Preview](/assets/docs/u/*![Preview](/assets/docs/FF7gGW4eVOEhYjIZXy8BIgAAAAAAAAAA.png)*/int("27") + int("4"))
    

![Preview](/assets/docs/4vDM_wHvGAGqziHd9y2LQQAAAAAAAAAA.png)

====  ` value `

[ bool ](/docs/reference/foundations/bool/) or  [ int
](/docs/reference/foundations/int/) or  [ float
](/docs/reference/foundations/float/) or  [ str
](/docs/reference/foundations/str/) or  [ decimal
](/docs/reference/foundations/decimal/)

Required  Positional

Question/*[ bytes ](/docs/reference/foundations/bytes//*[ array
](/docs/reference/foundations/array//*[ version
](/docs/reference/foundations/version/)*/ns

/*[ array ](/docs/reference/foundations/array/)*/ve associated definitions. These are accessed by
specifying the /*[Preview](/assets/docs/X4h0etegVnRbtNlLnkRA5AAAAAAAAAAA.png)*/ion's name.

==/*[ bytes ](/docs/reference/foundations/bytes/)*/g/*[ array
](/docs/reference/foundations/array/)*/ /*[ version
](/docs/reference/foundations/version/)*/-  1  ` . 
  - If the number is zero, returns ` 0  ` . 

self  .  signum  (

)  -> [ int ](/docs/reference/foundations/int/)

    
    
    #(5).signum() \
    #(-5).signum() \
    #(0).signum()
    

![Preview](/assets/docs/Vicm2VF6Z98sgjNZQYlaBgAAAAAAAAAA.png)

===  ` bit-not `

Calculates the bitwise NOT of an integer.

For the purposes of this function,/*![â](/assets/icons/16-arrow-
right.svg)*/er
of 64 bits.

se/*[ int ](/docs/reference/foundations/int/)*/ference/foundations/int/)

    
    
  /*![Docs](/assets/icons/16-docs-dark.svg)*/  

![Prev/*![](/assets/icons/16-arrow-right.svg)*/EKgAAAAAAAAAA.png)

===  ` bit-and `

Calculates the bitwise AND between two integers.

For the purposes of this function, the operands are treated as signed integers
of 64 bits.

self  .  bit-and  (

[ int ](/docs/reference/foundations/int/)

)  -> [ int ](/docs/reference/foundations/int/)

    
    
    #128.bit-and(192)
    

![Preview](/assets/docs/knwTrW-Xbj5sqbcdza7ewgAAAAAAAAAA.png)

====  ` rhs `

[ int ](/docs/reference/foundations/int/)

Required  Positional

Quest/*[ int ](/docs/reference/foundations/int/)*/fied in order, without names.

The right-hand op/*[ int ](/docs/reference/foundations/int/)*/`

Calculates the bitwise OR between two integers.
/*![â](/assets/icons/16-arrow-right.svg)*/operands are treated as signed integers
of 64 bits.

self  ./*![â](/assets/icons/16-arrow-
right.svg)*/dations/int/)

)  -> [ int ](/docs/reference/foundations/int/)

    
    
    #64.bit-or(32)
    

![P/*![Docs](/assets/icons/16-docs/*[ bool ](/docs/reference/foundations/bool/)*/
[ int ](/docs/reference/foundations/int/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The right-hand operand of the bitwise OR.

===  ` bit-xor `

Calculates the bitwise XOR between two integers.

For the purposes of this function, the operands are treated as signed integers
of 64 bits.

self  .  bit-xor  (

[ int ](/docs/reference/foundations/int/)

)  -> [ int ](/docs/reference/foundations/int/)

    
    
    #64.bit-xor(/*[ ` at `
](/docs/reference/foundations/array/#definitions-at)*/AAAAA.png)

====  ` /*[ int ](/docs/reference/foundations/int/)*/s/int/)

Required  Positiona/*[ int ](/docs/reference/foundations/int/)*/re specified in order, without names.

The right-hand operand of the bitwise XOR.

===  ` bit-lshift `

Shifts the operand's bits to the left by the specified amount.

For the purposes of this function, the operand is treated as a signed integer
of 64 bits. An error will occur if the result is too large to fit in a 64-bit
integer.

self  .  bit-lshift  (

[ int ](/docs/reference/foundations/int/)

) /*![â](/assets/icons/16-arrow-right.svg)*/ int ](/docs/reference/foundations/int/)*/ \
    #(-1).bit/*![â](/assets/icons/16-arrow-
right.svg)*/(/docs/reference/foundations/int/)*/.png)

====  ` shift `

[ int ](/docs/reference/foundations/int/)

R/*![Docs](/assets/icons/16-docs-dark.svg)*/itional pa/*![](/assets/icons/16-arrow-right.svg)*/out names.

The amount of bits to shi/*![](/assets/icons/16-arrow-right.svg)*/-rshift `

Shifts the operand's bits to the right b/*![](/assets/icons/16-arrow-right.svg)*/rithmetic shift by default (extends the sign bit to the left, such that
n/*[ int ](/docs/reference/foundations/int/)*//*[ none
](/docs/reference/foundations/none//*[ int ](/docs/reference/foundations/int/)*/the operan/*[ int ](/docs/reference/foundations/int/)*/ts.

s/*[ array ](/docs/reference/foundations/array/)*/e/foundations/i/*[ int ](/docs/reference/foundations/int/)*/nce/foundations/bool/) ,

)  -> [ int ](/docs/reference/foundations/int/)

    
    
    #64.bit-rshift(2) \
    #(-8).bit-rshift(2) \
    #(-8).bit-rshift(2, logical: true)
    /*[ none ](/docs/reference/foundations/none/)*/f/*[ int
](/docs/reference/foundations/int/)*/nt ](/docs/reference/foundations/int/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The amount of bits to shift. Must not be negative.

Shifts larger than 63 are allowed and will cause the return value /*[ int ](/docs/reference/foundations/int/)*/e return value saturates a/*![Preview](/assets/docs/h8ulslRsTYE05Pu4qy5C6AAAAAAAAAAA.png)*/1  ` if ` logical ` is set to ` false
` , or ` 0  ` if it is ` true  ` . This behavior is consistent with just
applying this operation multiple times. Therefore, the shift will always
succeed.

====  ` logical `

[ bool ](/docs/reference/foundations/bool/)

Toggles whether a logical (unsigned) ri/*[ bool ](/docs/reference/foundations/bool/)*/ithmetic right shift. If this is ` true  ` , negative operands will not
preserve their sign bit, and bits which appear to the left after the shift
will be ` 0  ` . This parameter has no effect on non-negative operands.

Default: ` false  `

===  ` from-bytes `

Converts bytes to an integer.

int  .  from-byte/*[ function ](/docs/reference/foundations/function/)*/ ,  endia/*[ none ](/docs/reference/foundations/none/)*/tr/) ,  signed  : /*[ function ](/docs/reference/foundations/function/)*/-> [ int ](/docs/reference/foundations/int/)

    
    
    #int.from-bytes(bytes((0, 0, 0, 0, 0, 0, 0, 1))) \
    #int.from-bytes(bytes((1, 0, 0, 0, 0, 0, 0, 0)), endian: "big")
    

![Preview](/assets/docs/I0LPQ0WUii0fthcD20cosAAAAAAAAAAA.png)

====  ` bytes `

[ bytes ](/docs/reference/foundations/bytes/)

Required  Positional

Question /*[ function ](/docs/reference/foundations/function/)*/ wit/*[ none ](/docs/reference/foundations/none//*[ int
](/docs/reference/foundations/int/)*/ at most 8 so that/*[ function ](/docs/reference/foundations/function/)*/=  ` endian `

[ str ](/docs/reference/foundations/str/)

The endianness of the conversion.

Variant  |  Details   
---|---  
` "  big  " ` |  Big-endian byte order: The highest-value byte is at the beginning of the bytes.   
` "  little  " ` |  Little-endian byte order: The lowest-value byte is at the beginning of the bytes.   
  
Default: ` "little"  `

====  ` signed `

[ bool ](/docs/reference/foundations/bool/)

Whether the bytes should be treated as a signed integer. If this /*[ int ](/docs/reference/foundations/int/)*//*[ int
](/docs/reference/foundations/int/)*/ve.

Defa/*[ int
](/docs/reference/foundations/int/)*/ts an /*[ array ](/docs/reference/foundations/array/)*/an  :  [ str ](/docs/reference/foundations/str/) ,  size  :  [ int
](/docs/reference/foundations/int/) ,

)  -> [ bytes ](/docs/r/*[Preview](/assets/docs/zrh5Y9Alyv5p1PUCuyz0bAAAAAAAAAAA.png)*/bytes(endian: "/*[ int ](/docs/reference/foundations/int/)*/4))
    

![Preview](/assets/docs/FF7gGW4eVOEhYjIZXy8BIgAAAAAAAAAA.png)

====  ` endian `

[ str ](/docs/reference/foundations/str/)

The endianness of the /*[ int ](/docs/reference/foundations/int/)*/--  
` "  big  " ` |  Big-endian byte order: The highest-value byte is at the beginning of the bytes.   
` "  little  " ` |  Little-endian byte orde/*[ int ](/docs/reference/foundations/int/)*/ing of the bytes.   
  
Default: ` "little"  `

====  ` size `

[ int ](/docs/reference/foundations/int/)

The size in bytes of the resulting bytes (must be at least zero). If the
integer is too large to /*[ function ](/*![Preview](/assets/docs/56wK4TQtzRt7_B3OQOxb7QAAAAAAAAAA.png)*//reference/foundations/array/)*/ To keep the s/*[ function ](/docs/reference/foundations/function/)*/n, the truncation will happen
at the rightmost bytes. Otherwise, if the endianness is little-endian, the
truncation will happen at the leftmost bytes.

Be aware that if the integer is negative and the size is not enough to make
the number fit, when passing the resulting bytes to ` int.from-by/*[ function ](/docs/reference/foundations/function/)*/the /*[ array ](/docs/reference/foundations/array/)*/Default: ` 8  `
/*[ function ](/docs/reference/foundations/function/)*/n  Previous page
](/docs/reference/foundations/function/) [ ![â](/assets/icons/16-arrow-
right.svg) Label  Next page  ](/docs/reference/foundations/label/)



= *docs/reference/foundations/auto.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](//*[ destructured
](/docs/reference/scripting/#bindings)*/.svg)
  - [ Foundations ](/docs/reference/foundations/)
  - ![]/*[ int ](/docs/reference/foundations/int/)*/Auto/*[ array ](/docs/reference/foundations/array/)*/o

A value that/*[ int ](/docs/reference/foundations/int/)*/e has exactly one value: ` auto  ` .

Parameters that support the ` auto  ` value have some smart default or
contextual behaviour. A good example is the [ text direction
](/docs/reference/text/text/#parameters-dir) parameter. Setting it to ` auto
` lets Typst automatically determine the direction from the [ text language
](/docs/reference/text/text/#parameters-lang) .

[ ![â](/assets/icons/16-arrow-right.svg) Assert  Previous page
](/docs/reference/foundations/assert/) [ ![â](/assets/icons/16-arrow-
right.svg) Boolean  Next page  ](/docs/reference/foundations/bool/)



= *docs/reference/foundations/sys.md*

  - [ ![Docs](/assets/icons/16-docs/*[ bool ](/docs/reference/foundations/bool/)*/6-ar/*[ array
](/docs/reference/foundations/array/)*/nce/)
/*[ array ](/docs/reference/foundations/array/)*/ [ Foundations /*[ bool ](/docs/reference/foundations/bool/)*/sets/icons/16-arrow-right.svg)
  - [ System ](/docs/reference/foundations/sys)

=  System

Module for system interactions.

This module defines the following items:

  - The ` sys.version ` c/*[ array ](/docs/reference/foundations/array/)*/nce/foundations/version/ "`version`") ) that specifies the currently active Typs/*![Preview](/assets/docs/VOR4DpWIitR8ukDkDB2RigAAAAAAAAAA.png)*//*![â](/assets/icons/16-arrow-right.svg)*/dictionary") , which makes external inputs available to the projec/*![â](/assets/icons/16-arrow-
right.svg)*/ as ` --input key=valu/*[ function ](/docs/reference/foundations/function/)*/ "va/*![â](/assets/icons/16/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/single or double quotes. 

The value/*![â](/assets/*[ Reference ](/docs/reference/)*/oundations/str/) .
More comple/*[ function ](/docs/reference/foundations/function/)*/[ ` json.decode
` ]/*![Docs](/assets/icons/16-docs/*[ Datetime ](/docs/reference/foundations/datetime/)*/16-arrow-right.svg) Style  Previous page
](/docs//*![](/assets/icons/16-arrow-right.svg)*/](/assets/icons/16-arrow-
right.svg) Type  Next pag/*![](/assets/icons/16-arrow-right.svg)*//)



= *docs/reference/foundations/function.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Foundations ](/docs/reference/foundations/)
  - !/*![Preview](/assets/docs/KZfqDZ_7V1ElK4um94vvjwAAAAAAAAAA.png)*/eference/foundations/function/)

=  function

A mapping from argument values to a return value.

You can call a function by writing a comma-separated li/*[ function ](/docs/reference/foundations/function/)*/dire/*[ bool ](/docs/reference/foundations/bool/)*/ you can pass /*[ function ](/docs/reference/foundations/function/)*/a function _after_ the normal argument list. If the normal argument list would
become empty, it can be omitted. Typst supports positional and named
arguments. The former are identified by position and type, while the latter
are written as ` name: value ` .

With/*[ function ](/docs/reference/foundations/function/)*/. Se/*[ bool ](/docs/reference/foundations/bool/)*/e/math/) for m/*[ function ](/docs/reference/foundations/function/)*/function.
    #list([A], [B])
    
    // Named argum/*[A][B]*/nd trailing
    // content blocks.
    #enum(st/*[A][B]*/)[A][B]
    
    // Versi/*![](/assets/icons/16-arrow-right.svg)*/B]
    

![Preview](/assets/docs/h8ulslRsTYE05Pu4qy5C6AAAAAAAAAAA.png)

Functio/*[ array ](/docs/refere/*![Preview](/assets/docs/4OYmfbro6Z/*[ ` display `
](/docs/reference/foundations/datetime/#definitions-display)*/u write is ba/*[ array ](/docs/reference/foundations/array/)*/ough functions. This reference lists/*![](/assets/icons/16-arrow-right.svg)*/can use them. Please also r/*[ array ](/docs/reference/foundations/array/)*//reference/styling/#set-rules) and [ show
](/docs/reference/styling/#show-rules) rules to learn about additional ways/*![Preview](/assets/docs/0vD-OzSZwxX0Gqmm8_Sk9AAAAAAAAAAA.png)*//*![â](/assets/icons/16-arrow-right.svg)*/em/*[ none ](/docs/reference/foundations/none/)*/el/heading/) or/*![â](/assets/icons/16-arrow-
right.svg)*/
./*[ none ](/docs/reference/foundations/none/)*/eir respective kind. In contrast
to normal functions, t/*![Docs](/assets/icons/16-docs-dark.svg)*/](/docs/re/*![](/assets/icons/16-arrow-right.svg)*/rules
](/docs/reference/styling/#show/*![](/assets/icons/16-arrow-right.svg)*/erence/foundations/selector/) .

==  Function scope/*![](/assets/icons/16-arrow-right.svg)*/ions in their own scope, similar to a [
module ](/docs/reference/scripting//*[ array ](/docs/reference/foundations/array/)*/q ` ](/docs/reference/foundations/assert/#definitions-eq) or [ `
list.item ` ](/docs/reference/model/list/#definitions-item) . However, this
feature is currently only available for built-in functions.

==  Defining functions

You can define your own function with a [ let binding
](/docs/reference/scripting/#bindings) that has a parameter list after the
binding's name. The parameter list can contain mandatory positional
parameters, named parameters with default values and [ argument sinks
](/do/*[ int ](/docs/reference/foundations//*![Preview](/assets/docs/itOPaialNOb62A81RHFv_wAAAAAAAAAA.png)*//*![â](/assets/icons/16-arrow-right.svg)*/ndations/array/)*/ion. It defines the function's return va/*![â](/assets/icons/16-arrow-
right.svg)*/the function body is a [ code b/*[Preview](/assets/docs/Nt1-jyrzTUv2d90xr98pvAAAAAAAAAAA.png)*/ is th/*![Docs](/assets/icons/16-docs-dark.svg)*//foundatio/*![](/assets/icons/16-arrow-right.svg)*/ body, the ` return ` keyword can be /*![](/assets/icons/16-arrow-right.svg)*/cify a return value. If no explicit return value is/*![](/assets/icons/16-arrow-right.svg)*/ce/foundations/bool/)*/expressions preceding the ` return
` .

Functions that don't return any meaningful value return [ ` none `
](/docs/reference/foundations/none/ "`none`") instead. The return type of such
functions is not explicitly specified in the documentation. (An example of
this is [ ` array.push /*[ int ](/docs/reference/foundations/int/)*/fini/*[ array ](/docs/reference/foundations/array/)*/#let alert(body, fill: red) = {
      set text(white)
      set align(center)
 /*[Preview](/assets/docs/Gacy-jUdBfccX43fxzwqPgAAAAAAAAAA.png)*/adius: 4pt,
        [/*[ int ](/docs/reference/foundations/int/)*/  #alert[
      Danger is imminent!
    ]
    
    #alert(fill: blue)[
      KEEP OFF TRACKS
    ]
    

![Preview](/assets/docs/56wK4TQtzRt7_B3OQOxb7QAAAAAAAAAA.png)

==  Importing functions

Functions can be imported from one file ( [ ` module `
](/docs/reference/scripting/#modules) ) into another using ` import  ` . For
example, assume that we have defined the ` alert ` function from the previous
exa/*[ function ](/docs/reference/foundations/function/)*/t in/*[ array ](/docs/reference/foundations/array/)*/"  :  alert `/*![Preview](/assets/docs/uC3P-2nGePaWZlTLapiUowAAAAAAAAAA.png)*/d function without creating a binding by
specifying a parameter list followed by ` => ` and the function body. If your
function has just one parameter, the parentheses around the parameter list are
optional. Unnamed functions are mainly useful for show rules, but also for
s/*[ function ](/docs/reference/foundations/function/)*/e fu/*[ array ](/docs/reference/foundations/array/)*/t/page/#parameters-footer) property.

    
 /*[Preview](/assets/docs/N8Cp27Nhseeu9VhP3b-g0gAAAAAAAAAA.png)*/view](/assets/*[ function ](/docs/reference/foundations/function/)*/te on function purity

In Typst, all functions are _pure._ This means that for the same arguments,
they alway/*![Preview](/assets/docs/X4h0etegVnRbtNlLnkRA5AAAAAAAAAAA.png)*/oduce
another value when they are called a second time.

The only exception are built-in methods like [ ` array.push(value) `
](/docs/reference/foundation/*[ dictionary ](/docs/reference/foundations/dictionary/)*/s they are called on.

==  Definitions

Question mark

Functions and types and can have associated def/*[Preview](/assets/docs/LmuORFz3ft0CLd-WiUZHngAAAAAAAAAA.png)*/ype, followed by a period, and then the
definition's name.

===  ` with `

Returns a new function that has the given arguments pre-applied.

self  .  with  (

..  any

)  -> [ function ](/docs/reference/foundations/function/)

====  ` arguments `

any

Required  Positional

Question mark

Positional parameters are specified in order, wit/*[ ` array.fold `
](/docs/reference/foundations/array/#definitions-fold "`array.fold`")*/mes.

The arguments to apply to the function.

===  ` where `

Returns a selector that filters for elements belonging to this func/*[ function ](/docs/reference/foundations/function/)*/ments.

self  .  where  (

./*[ function ](/docs/reference/foundations/function/)*/ons/selector/)

    
    
    #show heading.where(level: 2): set text(blue)
    = Section
    == Subsection
    === Sub-subsection
    

![Preview](/assets/docs/VOR4DpWIitR8ukDkDB2RigAAAAAAAAAA.png)/*[ ![â](/assets/icons/16-arrow-right.svg)*/nal

Question mark

Positional parameters are specified in order/*[ ![â](/assets/icons/16-arrow-
right.svg)*/Variadic parameters can be specified multiple times.

The fields to filter for.

[ ![â](/assets/icons/16/*[ ![Docs](/assets/icons/16-docs-dark.svg)*//docs/reference/foundations/float/) [ ![â](/assets/*[ Reference ](/docs/reference/)*/eger  Next page  ](/docs/reference/foundati/*[ Foundations ](/docs/reference/foundations/)*/al.md*

  - [ ![Docs](/assets/icons/16-docs/*[ Datetime ](/docs/reference/foundations/datetime/)*/right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Foundations ](/docs/reference/foundations/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Eval/*[ ` datetime.today `
](/docs/reference/foundations/datetime/#definitions-today)*/ypst code.

This function should only be used as a last resort.

==  Example

    
    
    #eval("1 + 1") \
    #eval("(1, 2, 3, 4)").len() \
    #eval("_Markup!_", mode: "markup") \
    

![Preview](/assets/docs/KZfqDZ_7V1ElK4um94vvjwAAAAAAAAAA.png)

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after th/*[Preview](/assets/docs/aJRkqg11vpsxBq0NzqAo0gAAAAAAAAAA.png)*/ns/str/) ,  mode  :  [ str
](/docs/refe/*[ duration ](/docs/reference/foundations/duration/ "duration")*/rence/foundations/dictionary/) ,

)  -> any

===  ` source `

[ str ](/docs/reference/foundations/str/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

A string of Typst code to evaluate.

===/*[Preview](/assets/docs/xJIPnvV5Iiw8osdkiAUb_AAAAAAAAAAA.png)*/ syntactical mode ](/docs/reference/syntax/#modes) in which the string is
parsed.

Variant  |  Details   
---|---  
` "  code  " ` |  Evaluate as code, as after a hash.   
` "  markup  " ` |  Evaluate as markup, like in a Typst file.   
` "  math  " ` |  Evaluate as math, as in an equation.   
  
Default: ` "code"  `

![](/assets/icons/16-arrow-right.svg) View example

  /*[Preview](/assets/docs/R-BPj6xQMFasAxM1n3h_iwAAAAAAAAAA.png)*/2^3", mode: "math")
    

![Preview](/assets/docs/4OYmfbro6Z/*[ ` display `
](/docs/reference/foundations/datetime/#definitions-display)*/e/foundations/dictionary/)

A scope of definitions that are made available.

Default: ` (  :  )  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #eval("x + 1", scope: (x: 2)) \
    #eval(
      "abc/xyz",
      mode: "math",
      scope: (
        abc: $a + b + c$,
        xyz: $x + y + z$,
      ),
    )
    

![Preview](/assets/docs/0vD-OzSZwxX0Gqmm8_Sk9AAAAAAAAAAA.png)

[ ![â](/assets/icons/16-arrow-right.svg) Duration  Previous page
](/docs/reference/foundations/duration/) [ ![â](/assets/icons/16-arrow-
right.svg) Float  Next page  ](/docs/reference/foundations/float/)



= *docs/reference/foundations/module.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Foundations ](/docs/reference/foundations/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Module ](/docs/reference/foundations/module/)

=  module

An evaluated module, either built-in or resulting from a file.

You can access definitions from the module using [ field access notation
](/docs/reference/scripting/#fields) and interact with it using the [ import
and include syntaxes ](/docs/reference/scripting/#modules) . Alternatively, it
is possible to convert a module to a dictionary, a/*![â](/assets/icons/16-arrow-right.svg)*/ally, using the [ dictionary constructor
](/docs/reference/fou/*![â](/assets/icons/16-arrow-
right.svg)*/Example

    
    
    #import "utils.typ"
    #utils.add(2, 5)
    
    #import utils: sub
    #sub(1, 4)
    
/*![Docs](/assets/icons/16-docs-dark.svg)*/81RHFv_wAAAAAAAAAA.png)

[ ![â](/assets/icons/16-arrow-right.svg) Label  Previous page
](/docs/reference/foundations/label/) [ ![â](/assets/icons/16-arrow-
right.svg) None  Next page  ](/docs/reference/foundations/none/)



= *docs/reference/foundations/array.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Foundations ](/docs/reference/foundations/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Array ](/docs/reference/foundations/array/)

=  array

A sequence of values.

You can construct an array by enclosing a comma-separated sequence of values
in parentheses. The values do not have to be of the same type.

You can access and update array items with the ` .at() ` method. Indices are
zero-based and negative indices wrap around to the end of the array. You can
iterate over an array using a [ for loop ](/docs/reference/scripting/#loops) .
Arrays can be added together with the ` + ` operator, [ joined together
](/docs/reference/scripting/#blocks) and multiplied with integers.

*Note:* An array of length one needs a trailing comma, as in ` (  1  ,  )  `
. This is to disambiguate from a simple parenthesized expressions like ` (  1
+  2  )  *  3  ` . An empty array is written as ` (  )  ` .

==  Example

    
    
    #let values = (1, 7, 4, -3, 2)
    
    #values.at(0) \
    #(values.at(0) = 3)
    #values.at(-1) \
    #values.find(calc.even) \
    #values.filter(calc.odd) \
    #values.map(calc.abs) \
    #values.rev() \
    #(1, (2, 3)).flatten() \
    #(("A", "B", "C")
        .join(", ", last: " and "))
    

![Preview](/assets/docs/uC3P-2nGePaWZlTLapiUowAAAAAAAAAA.png)

==  Constructor

Question mark

If a type has a constructor, you can call it like a function to create a new
value of the type.

Converts a value to an array.

Note that this function is only intended for conversion of a collection-like
value to an array, not for creation of an array from individual items. Use the
array syntax ` (1, 2, 3) ` (or ` (1,) ` for a single-element array) instead.

array  (

[ bytes ](/docs/reference/foundations/bytes/) [ array
](/docs/reference/foundations/array/) [ version
](/docs/reference/foundations/version/)

)  -> [ array ](/docs/reference/f/*[ datetime ](/docs/reference/foundations/datetime/
"datetime")*/array(bytes(hi))
    

![Preview](/assets/docs/X4h0etegVnRbtNlLnkRA5AAAAAAAAAAA.png)

====  ` value `

[ bytes ](/docs/reference/foundations/bytes/) or  [ array
](/docs/reference/foundations/array/) or  [ version
](/docs/reference/foundations/version/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The value that should be converted to an array.

==  Definitions

Question mark

Functions and types and can/*[ ` display `
](/docs/reference/foundations/datetime/#definitions-display)*/n or type, followed by a period, and then the
definition's name.

===  ` l/*[ int ](/docs/reference/foundations/int/)*/
self  .  /*[ int
](/docs/reference/foundations/int/)*/ndations/*[ int
](/docs/reference/foundations/int/)*/ item in /*[ int
](/docs/reference/foundations/int/)*/ide of an
a/*[ int
](/docs/reference/foundations/int/)*/ay is empty/*[ int
](/docs/reference/foundations/int/)*/ast `
/*[ datetime ](/docs/reference/foundations/datetime/)*/ the left-hand side of an
assignment. Fails with an error if the array is empty.

self  .  las/*[Preview](/assets/docs/6mpnNRypNysjXvXstSouiwAAAAAAAAAA.png)*/ied index in t/*[ int ](/docs/reference/foundations/int/)*/ide of an assignment. Returns the default /*[ int ](/docs/reference/foundations/int/)*/ils with an error if no default value was/*[ int ](/docs/reference/foundations/int/)*/s/reference/foundations/int/) ,  default/*[ int ](/docs/reference/foundations/int/)*/[ int ](/docs/reference/foundations/int/)

/*[ int ](/docs/reference/foundations/int/)*/tional parameters are specified in order, wit/*[ int ](/docs/reference/foundations/int/)*/ve the item. If negative, indexes from the back.

====  ` default `

any

A default value to return if the index is out of bounds.

===  ` push `

Adds a value to the end of the array.

self  .  push  (

any

)

====  ` value `

any

Required  Positional

Question mark

Positional parameters are specif/*[ auto ](/docs/reference/foundations/auto//*[ int
](/docs/reference/foundations/int/)*/` po/*[ datetime ](/docs/reference/foundations/datetime/)*/ns it. Fails with an error if
the array is empty.

self  .  pop  (

/*[Preview](/assets/docs/SOSDKByfy_YbHbk7NejgOQAAAAAAAAAA.png)*/t the specified /*[ auto ](/docs/reference/foundations/auto/)*/t/*[ int
](/docs/reference/foundations/int/)*/x is out of bounds.

To replace an element of an array, use [ ` at `
](/docs/reference/foundations/array/#definitions-at) .

self  .  insert  (

[ int ](/docs/reference/foundations/int/) ,  any  ,

)

====  ` index `

[ int ](/docs/reference/foundations/int/)

Required  Positional

Questi/*![â](/assets/icons/16-arrow-right.svg)*/fied in order, without names.

The index at which to insert th/*![â](/assets/icons/16-arrow-
right.svg)*/k.

====  ` value `

any

Required  Positional

Question mark

Positional parameters are/*[ format syntax ](//*![Docs](/assets/icons/16-docs-dark.svg)*/rmat)*/he array.

===  ` remove `

Removes the v/*[ auto ](/docs/reference/foundations/auto//*[ str
](/docs/reference/foundations/str/)*/int /*[ str ](/docs/reference/foundations/str/)*/fault  :  any  ,
/*[ auto ](/docs/reference/foundations/auto/)*/r/*[ str
](/docs/reference/foundations/str/)*/itional

Question mark

Positional parameters are specified in order, without names.

The index at which to remove the item. If negative, indexes from the back.

====  ` default `

any

A default value to return if the index is out of bounds.

===  ` slice `/*[ none ](/docs/reference/foundations/none//*[ int
](/docs/reference/foundations/int/)*/ is out of bounds.

self  .  slice  (

[ int ](/docs/reference/foundations/int/) ,  [ none
](/docs/reference/f/*[ none ](/docs/reference/foundations/none//*[ int
](/docs/reference/foundations/int/)*//docs/reference/foundations/int/) ,

)  -> [ array ](/docs/reference/foundations/array/)

====  ` start `

[ int ](/do/*[ none ](/docs/reference/foundations/none//*[ int
](/docs/reference/foundations/int/)*/arameters are specified in order, without names.

The start index (inclusive). If negative, indexes from/*[ none ](/docs/reference/foundations/none//*[ int
](/docs/reference/foundations/int/)*/](/docs/reference/foundations/int/)

Positional

Question mark

Positional parameters are specified in orde/*[ none ](/docs/reference/foundations/none//*[ int
](/docs/reference/foundations/int/)*/he end of the
array is extracted. If negative, indexes from the back.

Default: ` none  `

====  ` count `

[ int/*[ none ](/docs/reference/foundations/none//*[ int
](/docs/reference/foundations/int/)*/ivalent to passing ` start + count
` as the ` end ` position. Mutually exclusive with ` end ` .

===  ` contains /*[ none ](/docs/reference/foundations/none//*[ int
](/docs/reference/foundations/int/)*/d syntax: You can write ` 2  in  (  1  ,  2  ,  3
)  ` instead of ` (  1  ,  2  ,  3  )  .  contains  (  2  )  ` ./*[ none ](/docs/reference/foundations/none//*[ int
](/docs/reference/foundations/int/)/*[ ![â](/assets/icons/16-arrow-right.svg)*/l

Question mark

Positional parameters are specified in ord/*[ ![â](/assets/icons/16-arrow-
right.svg)*/.

===  ` find `

Searches for an item for which the given function returns ` true  ` and
returns the first ma/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/elf  .  find  (

[ function ](/docs/reference/founda/*[ Reference ](/docs/reference/)*/none ](/docs/reference/foundations/none/)

/*[ Foundations ](/docs/reference/foundations/)*/nce/foundations/function/)

Required  Posit/*[ Dictionary ](/docs/reference/foundations/dictionary/)*/ed in order, without names.

The function to apply to each item. Must return a boolean.

===  ` position `

Searches for an item for which the given function returns ` true  ` and
returns the index of the first match or ` none  ` if there is no match.

self  .  position  (

[ function ](/docs/reference/foundations/function/)

)  -> [ none ](/docs/reference/foundations/none/) [ int
](/docs/reference/foundations/int/)

====  ` searcher `

[ function ](/docs/reference/foundations/function/)

Required  Positional

Question mark

Positional parameter/*[
field access notation ](/docs/reference/scripting/#fields)*/ply to each item. Must return a boolean.

===  ` range `

Create an array consisting /*[
joined together ](/docs/reference/scripting/#blocks)*/onal parameter, it is interpreted as the ` end ` of
the range. If you pass two, they describe the ` start ` and ` end ` of the
range/*[ for loop
](/docs/reference/scripting/#loops)*/y function's scope and globally.

array  .  range  (

[ int ](/docs/reference/foundations/int/) ,  [ int
](/docs/reference/foundations/int/) ,  step  :  [ int
](/docs/reference/foundations/int/) ,

)  -> [ array ](/docs/reference/foundations/array/)

    
    
    #range(5) \
    #range(2, 5) \
    #range(20, step: 4) \
    #range(21, step: 4)/*[Preview](/assets/docs/1ByIQqDPZ4VVxPmFNoQXgwAAAAAAAAAA.png)*/zrh5Y9Alyv5p1PUCuyz0bAAAAAAAAAAA.png)

====  ` start `

[ int ](/docs/reference/foundations/int/)

Positional

Question mark

Positional parameters are specified in order, without names.

The start of the range (inclusive).

Default: ` 0  `

====  ` end `

[ int ](/docs/reference/foundations/int/)

Required  Positional

Question mark

Positional parameters are specified in order, witho/*[ module ](/docs/reference/foundations//*![â](/assets/icons/16-arrow-right.svg)*/erence/foundations/dictionary/)*/he distance between the ge/*![â](/assets/icons/16-arrow-
right.svg)*/ts/docs/vrwNZ5Jfl6kz7gYnEOsM0AAAAAAAAAAA.png)*/he items from t/*[ module ](/docs/reference/foundations/module//*![Docs](/assets/icons/16-docs-dark.svg)*/unction ](/docs/reference/foundations/function/)

)  -> [ array ](/docs/reference/foundations/array/)

====  ` test `

[ function ](/docs/reference/foundations/function/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The function to apply to each item. Must return a boolean.

===  ` map `

Produces a new array in which all items from /*[ int ](/docs/reference/foundations/int/)*/e given function.

self  .  map  (

[ function ](/docs/reference/foundations/function/)

)  -> [ array ](/docs/reference/foundations/array/)

====  ` mapper `

[ function ](/docs/reference/foundations/function/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The function/*[ str ](/docs/reference/foundations/str/)*/ `

Returns a new array with the values alongs/*[ str ](/docs/reference/foundations/str/)*/nsists of ` (index, value) ` pairs in the form of
length-2 arrays. These can be [ destructured
](/docs/reference/scripting/#bindings) with a let binding or for loop.

self  .  enumerate  (

start  :  [ int ](/docs/reference/foundations/int/)

)  -> [ array ](/docs/reference/foundations/array/)

====  ` start `

[ int ](/docs/reference/foundations/int/)

The index returned /*[ str ](/docs/reference/foundations/str/)*/
Default: ` 0  `

===  ` z/*[ str ](/docs/reference/foundations/str/)*/Returns an array of arrays, where the ` i ` th inner array contains all the `
i ` th elements from each original array.

If the arrays to be zipped have different lengths, they are zipped up to the
last element of the shortest array and all remaining elements are ignored.

This function is variadic, meaning that you can zip multiple arrays together
at once: ` (  1  ,  2  )  .  zip  (  (  "A"  ,  "B"  )  ,  (  1/*[ str ](/docs/reference/foundations/str/)*/  ,  10  )  ,  (  2  ,  "B"  ,  20  )  )  ` .
/*[ str ](/docs/reference/foundations/str/)*/s/reference/foundations/bool/) ,  ..  [ array
](/docs/reference/foundations/array/) ,

)  -> [ array ](/docs/reference/foundations/array/)

====  ` exact `

[ bool ](/docs/reference/foundations/bool/)

Whether all arrays have to have the same length. For example, ` (  1  ,  2  )
.  zip  (  (  1  ,  2  ,  3  )  , /*[ array ](/docs/reference/foundations/array/)*/ault: ` false  `

====  ` others `

[ array ](/docs/reference/foundations/array/)

Required  Positional

Questi/*[ array ](/docs/reference/foundations/array/)*/in order, without names.

Variadic

Question mark

Variadic parameters can be specified multiple times.

The arrays to zip w/*![â](/assets/icons/16-arrow-right.svg)*/array ](/docs/reference/*![â](/assets/icons/16-arrow-right.svg)*/con/*![â](/assets/icons/16-arrow-
right.svg)*/ence/fou/*![â](/assets/icons/16-arrow-
right.svg)*/](/assets/icons/16-arrow-
right.svg)*/Question mark

Posi/*![Docs](/assets/icons/16-d/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ value to start wit/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/reference/foundations/function/)

Required  Position/*[ Reference ](/docs/reference/)*/arameters are specified in order, without n/*[ Foundations ](/docs/reference/foundations/)*/rameters: One for the accumulated value
and/*[ Bytes ](/docs/reference/foundations/bytes/)*/ms (works for all types that can be added).

self  .  sum  (

default  :  /*[ integers
](/docs/reference/foundations/int/)*/o return if the array is empty. Must be set if the array can be empty.

===  ` product `

Calculat/*[ for loop
](/docs/reference/scripting/#loops)*/that can be multiplied)/*[ string ](/docs/reference/foundations/str/)*/-> /*[ array ](/docs/reference/foundations/array/ "array")*/ray is empty. Must be set i/*[ ` bytes ` ](/docs/reference/foundations/bytes/ "`bytes`")*/function returns ` true  ` for any item i/*[ ` str ` ](/docs/reference/foundations/str/ "`str`")*/erence/foundations/function/)

)  -> [ bool ](/docs/reference/foundations//*[ ` array ` ](/docs/reference/foundations/array/ "`array`")*/tions/function/)/*[ reading ](/docs/reference/data-loading/read/)*/al parameters are specified in order, without names.

The function to apply to each item. Must return a boolean.

===  ` all `

Whether the given function returns ` true  ` for all items in the arra/*![Preview](/assets/docs/xJIPnvV5Iiw8osdkiAUb_AAAAAAAAAAA.png)*//function/)

)  -> [ bool ](/docs/reference/foundat/*[Preview](/assets/docs/sJtYFgVyQkDZELEHje5ywwAAAAAAAAAA.png)*/undations/function/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The function to apply to each item. Must return a boolean.

===  ` flatten `

Combine all nested arrays into a single flat one.

self  .  fla/*![Preview](/assets/docs/R-BPj6xQMFasAxM1n3h_iwAAAAAAAAAA.png)*/
===  ` rev `

Return a new array with the same items, but in reverse order.

self  .  rev  (

)  -> [ arra/*[ str ](/docs/reference/foundations/str//*[ bytes
](/docs/reference/foundations/bytes//*[ array
](/docs/reference/foundations/array/)*/it  /*[ bytes ](/docs/reference/foundations/bytes/)*/ations/array/)

====  ` at `

any

Required  Positional

Question mark

/*[Preview](/assets/docs/PlfVajGmfDLMY6p8X4S3BwAAAAAAAAAA.png)*/

The value to /*[ str ](/docs/reference/foundations/str/)*/m/*[ bytes
](/docs/reference/foundations/bytes/)*/n/*[ array
](/docs/reference/foundations/array/)*/) ,  last  :  any  ,

)  -> any

====  ` separator `

any  or  [ none ](/docs/reference/foundations/none/)

Positional

Question mark

Positional parameters are specified in order, without names.

A value to insert between each item of the array.

Default: ` none  `

====  ` last `

any

An alternative separator between the last two items.

===  ` intersperse `

Returns an array with a copy of the /*[ int ](/docs/reference/foundations/int/)*/lements.

self  .  intersperse  (

any

)  -> [ array ](/docs/reference/foundations/array/)

====  ` separator `

any

Required  Positional

Question mark

Positional parameters are s/*[ int ](/docs/reference/foundations/int/)*/lue that will be placed between each adjacent el/*[ int ](/docs/reference/foundations/int/)*/into non-overlapping chunks, starting at the beginning, ending
with a single remainder chunk.

All chunks but the last have ` chunk-size ` elements. If ` exact ` is set to `
true  ` , the remainder is dropped if it contains less than ` chunk-size `
elements.

self  .  chunks  (

[ int ](/docs/reference/foundations/int/) ,  exact  :  [ bool
](/docs/refer/*[ int ](/docs/reference/foundations/int/)*//*[ none
](/docs/reference/foundations/none//*[ int ](/docs/reference/foundations/int/)*/ 6, 7, 8)
/*[ int ](/docs/reference/foundations/int/)*/ exact/*[ bytes ](/docs/reference/foundations/bytes/)*/zTUv2d90xr98pvA/*[ int ](/docs/reference/foundations/int/)*/int ](/docs/reference/foundations/int/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

Ho/*[ none ](/docs/reference/foundations/none/)*/a/*[ int
](/docs/reference/foundations/int/)*/rence/foundations/bool/)

Whether to keep the remainder if its size is less than ` chunk-size ` .

Default: ` false  `

===  ` windows `

Returns sliding windows of ` window-size ` elements over an array.

If/*[ int ](/docs/reference/foundations/int/)*/ize ` , this will return an empty
array.

self  .  windows  (

[ int ](/docs/reference/foundations/int/)

)  -> [ array ](/docs/reference//*[ ![â](/assets/icons/16-arrow-right.svg)*/ray = (1, 2, 3, 4, 5, 6, 7, 8)
    #array.windows(5)
    /*[ ![â](/assets/icons/16-arrow-
right.svg)*/zwqPgAAAAAAAAAA.png)

====  ` window-size `

[ int ](/docs/reference/foundations/int/)

Required  Positional/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/e specified in order, without names.

How many eleme/*[ Reference ](/docs/reference/)*/===  ` sorted `

Return a sorted version of/*[ Foundations ](/docs/reference/foundations/)*/on. The
sorting algorithm used is stable.

/*[ Version ](/docs/reference/foundations/version/)*/red or if the key function
(if given) yields an error.

self  .  sorted  (

key  :  [ function ](/docs/reference/foundations/function/)

)  -> [ array ](/docs/reference/foundations/array/)

====  ` key `

[ function ](/docs/reference/foundations/function/)

If given, applies this function to the elements in the array to determine the
keys to sort by.

===  ` dedup `

Deduplicates all items in the array.

Returns a new array with all duplicate items removed. Only the first element
of each duplicate is kept.

self  .  dedup  (

key  :  [ function ](/docs/reference/foundations/function/)

)  -> [ array ](/docs/reference/foundati/*[ ` array ` ](/docs/reference/foundations/array/ "`array`")*/[Preview](/assets/docs/N8Cp27Nhseeu9VhP3b-g0gAAAAAAAAAA.png)

====  ` key `

[ function ](/docs/reference/foundations/function/)

If given, applies this function to the elements in the array to determine the
keys to deduplicate by./*[ int ](/docs/reference/foundations/int//*[ array
](/docs/reference/foundations/array/)*/f ea/*[ version ](/docs/reference/foundations/version/)*/ same key occurs multiple times, the last value is selected.

self  .  to-dict  (

)  -> [ dictionary ](/docs/reference/foundation/*[Preview](/assets/docs/Fx1_6ds8kbJ35Werk0qIqQAAAAAAAAAA.png)*/("peaches", 3),
    /*[ int ](/docs/reference/foundations/int/)*/P/*[ array
](/docs/reference/foundations/array/)*/AAAAAAAA.png)

===  ` reduce `

Reduces the elements to a single one, by repeatedly applying a reducing
operation.

If the array is empty, returns ` none  ` , otherwise, returns the result of
the reduction.

The reducing function is a closure with two arguments: an "accumulator", and
an element.

For arrays with at least one element, this is the same as [ ` array.fold `
](/docs/reference/foundations/array/#definitions-fold "`array.fold`") with the
first element of the array as the initial accumulator value, folding every
subsequent element into it.

self  .  reduce  (

[ function ](/docs/reference/foundations/fun/*[ int ](/docs/reference/foundations/int/)*/func/*[ int ](/docs/reference/foundations/int/)*/on/)

Required /*[ int ](/docs/reference/foundations/int/)*/rameters are specified/*![/*[ str ](/docs/reference/foundations/str/)*/ion. Must have two parameters: One for the accumulated value
and one for an item.

[ ![â](/assets/icons/16-arrow-right.svg) Arguments  Previous pa/*[ ![â](/assets/icons/16-arrow-right.svg)*//) [ ![â](/assets/icons/16-arrow-
right.svg) Assert /*[ ![â](/assets/icons/16-arrow-
right.svg)*/ssert/)



= *docs/reference/foundations/datetime.md*

  - [ ![Docs](/assets/icons/16-d/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ons/16-arrow-right.svg)
  - [ Reference ](/docs/refe/*[ Reference ](/docs/reference/)*/6-arrow-right.svg)
  - [ Foundations ](/doc/*[ Foundations ](/docs/reference/foundations/)*/ns/16-arrow-right.svg)
  - [ Datetime ](/do/*[ String ](/docs/reference/foundations/str/)*/time

Represents a date, a time, or a combination of both.

Can be created by either specifying a custom d/*[ for loop
](/docs/reference/scripting/#loops)*/ or getting the current date with [ ` datetime.today `
](/docs/reference/foundations/datetime/#definitions-today) .

==  Example

    
    
    #let date = datetime(
      year: 2020,
      mon/*[ joined together ](/docs/reference/scripting/#blocks)*/
    #date.display(
      "y:[year repr:last_two]"
    )
    
    #let time = datetime(
      hour: 18,
      minute: 2,
      second: 23,
    )
    
    #time.display() \
    #time.display(
      "h:[hour repr:12/*[ regular expression
](/docs/reference/foundations/regex/)*/xBq0NzqAo0gAAAAAAAAAA.png)

==  Datetime and Duration

You can get a [ duration ](/docs/reference/foundations/duration/ "duration")
by subtracting two datetime:

    
    
    #let first-of-march = datetime(day: 1, month: 3, year: 2024)
    #let first-of-jan = datetime(day: 1, month: 1, year: 2024)
    #let distance = first-of-march - first-of-jan
    #distance.hours()
    

![Preview](/assets/docs/xJIPnvV5Iiw8osdkiAUb_AAAAAAAAAAA.png)

You can also add/subtra/*[Preview](/assets/docs/gK89AnI9k7dy82m9R3F1jgAAAAAAAAAA.png)*/ime:

    
    
    #let date = datetime(day: 1, month: 3, year: 2024)
    #let two-days = duration(days: 2)
    #let two-days-earlier = date - two-days
    #let two-days-later = date + two-days
    
    #date.display() \
    #two-days-earlier.display() \
    #two-days-later.display()
    

![Preview](/assets/docs/R-BPj6xQMFasAxM1n3h_iwAAAAAAAAAA.png)

==  Format

You can specify a customized formatting using the [ ` display `
](/docs/reference/foundations/datetime/#definitions-display) method. The
format of a datetime is specified by providing _components_ with a specified
number of _modifiers_ . A component represents a certain part of the datetime
that you want to display, and with the help of modifiers you can define how
you want to display t/*[ ` to-unicode
` ](/docs/reference/foundations/str/#definitions-to-unicode)*/m/*[ ` from-
unicode ` ](/docs/reference/foundations/str/#definitions-from-unicode)*/dd modifiers, you/*[ int ](/docs/reference/foundations/int//*[ float
](/docs/reference/foundations/float//*[ str
](/docs/reference/foundations/str//*[ bytes
](/docs/reference/foundations/bytes//*[ label
](/docs/reference/foundations/label//*[ decimal
](/docs/reference/foundations/decimal//*[ version
](/docs/reference/foundations/version//*[ type
](/docs/reference/foundations/type/)*/ - ` padd/*[ int
](/docs/reference/foundations/int/)*/` or `/*[ str ](/docs/reference/foundations/str/)*/d. 
    - ` repr ` Can be either ` full ` in which case the full year is displayed or ` last_two ` in which/*[Preview](/assets/docs/06jR9z-fP-M4eu8XB2MFnAAAAAAAAAAA.png)*/` : Can be eith/*[ int ](/docs/reference/foundations/int/)*/f/*[ float
](/docs/reference/foundations/float/)*/ /*[ str
](/docs/reference/foundations/str/)*/i/*[ bytes
](/docs/reference/foundations/bytes/)*/ /*[ label
](/docs/reference/foundations/label/)*/ /*[ decimal
](/docs/reference/foundations/decimal/)*/`/*[ version
](/docs/reference/foundations/version/)*/i/*[ type
](/docs/reference/foundations/type/)*/ or a word. Unfortunately, when choosing the word representation, it can currently only display the English version. In the future, it is planned to support local/*[ int ](/docs/*![â](/assets/icons/16-arrow-
right.svg)*/time. 
    - ` padding ` : Can be either ` zero ` , ` space ` or ` none ` . Specifies how the day is padded. 
  /*![Docs](/assets/icons/16-docs-dark.svg)*/umber of t/*![](/assets/icons/16-arro/*[ str ](/docs/reference/foundations/str//*[ regex
](/docs/reference/foundations/regex/)*/s padded. 
    - ` repr ` : Can be either ` ISO ` , ` sunday ` o/*![](/*[ str ](/docs/reference/foundations/str/)*/ns/int/)*/are between 1 and 53, while the other ones are between 0 and 53. 
  - ` weekday ` : Displays the weekday of the date. 
    - ` repr ` C/*[ str ](/docs/reference/foundations/str/)*/day ` or ` monday ` . In the case of ` long ` and ` short ` , the corresponding English name will be displayed (same as for the mont/*[ str ](/docs/reference/foundations/str/)*/orted). In the case of ` sunday ` and ` monday ` , the numerical value will be displayed (assuming Sunday and Monday as the first day of the week, respectively). 
    - ` one_indexed ` : Can be either ` tr/*[ int ](/docs/reference/foundations/int/)*/umerical representation of the week starts with /*[ int ](/docs/reference/foundations/int/)*/ of the date. 
    - ` padding ` : Can be either ` zero ` , ` space ` or ` none ` . Specifies how the hour is padded. 
    - ` repr ` : Can be either ` 24 ` or ` 12 ` . Changes whether the hour is displayed in the 24-hour or 12-hour format. 
  - ` period ` : The AM/PM part of the hour 
    - ` case ` : Can be ` lower ` to display it in lower case and ` upper ` to di/*[ int ](/docs/reference/foundations/int/)*//*[ none
](/docs/reference/foundations/none//*[ int ](/docs/reference/foundations/int/)*/ space ` o/*[ int ](/docs/reference/foundations/int/)*/padded/*[ str ](/docs/reference/foundations/str/)*/f the date. 
  /*[ int ](/docs/reference/foundations/int/)*/, ` spac/*![Preview](/assets/docs/1ByIQqDPZ4VVxPmFNoQXgwAAAAAAAAAA.png)*/in mind that not always all components can be used. For example, if you
create a new datetime with ` datetime  (  /*[ none ](/docs/reference/foundations/none/)*/3/*[ int
](/docs/reference/foundations/int/)*/e internally, meaning that
you cannot use components such as ` hour ` or ` minute ` , which would only
work on datetimes that have a specified time.

==  Constructor

Question mark

If a type has a constructor, you can call it like a function to create a new
valu/*[ int ](/docs/reference/foundations/int/)*/You can specify the [ datetime ](/docs/reference/foundations/datetime/
"/*![Preview](/assets/docs/vrwNZ5Jfl6kz7gYnEOsM0AAAAAAAAAAA.png)*/.

_Note_ : Depending on which components of the datetime you specify, Typst will
store it in one of the following three way/*[ array ](/docs/reference/foundations/array/)*/ypst will store just a date. 
  - If you specify hour, minute and second, Typst will store just a time. 
  - If you specif/*[ array ](/docs/reference/foundations/array/)*/econd, Typst will store a full datetime. 

Depending on how it is stored, the [ ` display `
](/docs/*[ str ](/docs/reference/foundations/str/)*/ons-/*[ int ](/docs/reference/foundations/int/)*/ormatting by default.

datetime  (

year  :  [ int ](/docs/reference/foundations/int/) ,  month  :  [ int
]/*[Preview](/assets/docs/q50tz6WAJPnwtBCYWbHrIwAAAAAAAAAA.png)*/reference/foundatio/*[ str ](/docs/reference/foundations/str/)*/nce/foundations/int/) ,  minute  :  [ int
](/docs/reference/foundations/int/) ,  second  :  [ int
](/docs/reference/foundations/int/) ,

)  -> [ datetime ](/docs/reference/foundations/datetime/)

    
    
    #datetime(
      year: 2012,
      mon/*[ int ](/docs/reference/foundations/int/)*/

![/*[ str ](/docs/reference/foundations/str/)*/uiwAAAAAAAAAA.png)

====  ` year `

[ int/*[Preview](/assets/docs/vNzcsG/*![â](/assets/icons/16-arrow-right.svg)*/==  ` mo/*[ int ](/docs/reference/foundations/int/)*/s/int/)

Th/*![â](/assets/icons/16-arrow-
right.svg)*/[ int ](/docs/reference/foundations/int/)

The day of the datetime.

====  ` hour `

[ int ](/docs/refe/*![Docs](/assets/icons/16-docs-dark.svg)*/e datetime.

====  ` minute `

[ int ](/docs/reference/foundations/int/)

The minute of the datetime.

====  ` second `

[ int ](/docs/reference/foundations/int/)

/*[ str ](/docs/reference/foundations/str//*[ regex
](/docs/reference/foundations/regex/)*/d ca/*[ bool ](/docs/reference/foundations/bool/)*/cessed by
specify/*[ str ](/docs/reference/foundations/str/)*/e/*[ regex
](/docs/reference/foundations/regex/)*/ today `

Returns the current date.

datetime  .  today  (

offset  :  [ auto ](/docs/reference/foundations/auto/) [ int
](/docs/reference/foundations/int/)

)  -> [ datetime ](/docs/reference/foundations/datetime/)

    
    
/*[ str ](/docs/reference/foundations/str//*[ regex
](/docs/reference/foundations/regex/)*/SOSD/*[ bool ](/docs/reference/foundations/bool/)*/offset `

[ auto /*[ str ](/docs/reference/foundations/str/)*/[/*[ regex
](/docs/reference/foundations/regex/)*/offset to apply to the current UTC date. If set to ` auto  ` , the offset
will be the local offset.

Default: ` auto  `

===  ` display `

Displays the datetime in a specified format.

Depending on whether you have defined just a date,/*[ str ](/docs/reference/foundations/str//*[ regex
](/docs/reference/foundations/regex/)*/will/*[ bool ](/docs/reference/foundations/bool/)*/fied a time, it w/*[ str ](/docs/reference/foundations/str/)*/t/*[ regex
](//*![â](/assets/icons/16-arrow-right.svg)*/]-[day] [hour]:[minute]:[second] ` .

See the [ format sy/*![â](/assets/icons/16-arrow-right.svg)*/ime/#format) for
more information.

self  .  display  (

[ auto ](/docs/reference/foundations/auto/) /*![Docs](/assets/icons/16-docs-dark.svg)*//*![Docs](/assets/icons/16-docs-dark.svg)*/ations/str/)

=/*[ str ](/docs/reference/foundations/str//*[ regex
](/docs/reference/foundations/regex/)*/eren/*[ none ](/docs/reference/foundations/none//*[ str
](/docs/reference/foundations/str/)*/ied in order, wit/*[ str ](/docs/reference/foundations/str/)*/h/*[ regex
](/docs/reference/foundations/regex/)*/`

The year if it was specified, or ` none  ` for times without a date.

self  .  year  (

)  -> [ none ](/docs/reference/foundations/none/) [ int
](/docs/reference/foundations/int/)

===  ` month `

The month if it was specified, or ` none  ` for times without a date.

self  .  month  (

)  -> [ none ](//*[ str ](/docs/reference/foundations/str//*[ regex
/*![â](/assets/icons/16-arrow-right.svg)*/wee/*[ none ](/docs/reference/foundations/none//*[ int
](/do/*![â](/assets/icons/16-arrow-
right.svg)*/  weekda/*[ str ](/docs/reference/foundations/str/)*/d/*[ regex
](/docs/reference/foundations/regex/)*/io/*![Docs](/assets/icons/16-docs-dark.svg)*/as specified, or ` none  ` for times without a date.

self  .  day  (

)  -> [ none ](/docs/reference/foundations/none/) [ int
](/docs/reference/foundations/int/)

===  ` hour `

The hour if it was specified, or ` none  ` for dates without a time.

self  .  hour  (

)  -> [ none ](/docs/reference/foundations/none/) [ int
](/docs/reference/foundations/int/)

===  ` minute `

The minute if it was specified, or ` none  ` for dates without a time.

self/*![Preview](/assets/docs/sJtYFgVyQkDZELEHje5ywwAAAAAAAAAA.png)*/ne/) [ int
](/docs/reference/foundations/int/)

===  ` second `

The second if it was specified, or ` none  ` for dates without a time.

self  .  second  (

)  -> [ none ]/*[ str ](/docs/reference/foundations/str//*[ regex
](/docs/reference/foundations/regex/)*/ ` o/*[ none ](/docs/reference/foundations/none//*[ dictionary
](/docs/reference/foundations/dictionary/)*/al  (

)  -> [ no/*[ str ](/docs/reference/foundations/str/)*/ /*[ regex
](/docs/reference/foundations/regex/)*/â](/assets/icons/16-arrow-right.svg) Content  Previous page
](/docs/reference/foundations/content/) [ ![â](/assets/icons/16-arrow-
right.svg) Decimal  Next page  ](/docs/reference/foundations/decimal/)



= *docs/reference/foundations/dictionary.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arro/*[ str ](/docs/reference/foundations/str//*[ regex
](/docs/reference/foundations/regex/)*/ht.s/*[ array ](/docs/reference/foundations/array/)*/ations/)
  - ![](/*[ str ](/docs/reference/foundations/str/)*/i/*[ regex
](/docs/reference/foundations/regex/)*/nary/)

=  dictionary

A map from string keys to values.

You can construct a dictionary by enclosing comma-separated ` key: value `
pairs in parentheses. The values do not have to be of the same type. Since
empty parentheses already yield an empty array, you have to use the special `
(:) ` syntax to create an empty dictionary.

A dictionar/*[ str ](/docs/reference/foundations/str//*[ regex
](/docs/reference/foundations/regex/)*//*[ str
](/docs/reference/foundations/str//*[ function
](/docs/reference/foundations/function/)*/ the key s/*[ int
](/docs/reference/foundations/int/)*/eld ac/*[ str ](/docs/reference/foundations/str/)*//#fields) ( ` .ke/*[ str ](/docs/reference/foundations/str/)*/a/*[ regex
](/docs/reference/foundations/regex/)*/ed together ](/docs/reference/scripting/#blocks) . To check whether a key
is present in the dictionary, use the ` in ` keyword.

You can iterate ove/*[ str ](/docs/reference/foundations/str/)*/ /*[ function
](/docs/reference/foundations/function/)*/l iterate in the order the pairs
were inserted / declared.

==  Example

    
    
    #let dict = (
      name: "Typst",
      born: 2019,
    )
    
    #dict.name \
    #(dict.launch = 20)
    #dict.len() \
    #dict.keys() \
    #dict.values() \
   /*[ int ](/docs/reference/foundations/int/)*/y", "Berlin ")
    #("name" in dict)
    

![Preview](/assets/docs/1ByIQqDPZ4VVxPmFNoQXgwAAAAAAAAAA.png)

==  Constructor

Question mark

If a type has a constructor, you can call it like a function to create a new
value of/*[ none ](/docs/reference/foundations/none//*[ str
](/docs/reference/foundations/str//*[ regex
](/docs/reference/foundations/regex/)*/ke
valu/*[ alignment
](/docs/reference/layout/alignment/)*/ary from in/*[ bool
](/docs/reference/foundations/bool/)*/ (key:/*[ str ](/docs/reference/foundations/str/)*/le ](/docs/refere/*[ none ](/docs/reference/foundations/none/)*/y/*[ str
](/docs/reference/founda/*![â](/assets/icons/16-arrow-right.svg)*/e/foundations/regex/)*/")
    

![Preview](/assets/docs/vrw/*![â](/assets/icons/16-arrow-/*[ `
float ` ](/docs/reference/foundations/float/ "`float`")*//module/)

Required  Positional

Question mark

Positiona/*[ ali/*![Docs](/assets/icons/16-docs-dark.svg)*/nt/)*/es.
/*![](/assets/icons/16-arrow-right.svg)*/o a dictionary.

==  Definitions

Question mark

Functions and types and can have ass/*[ bool ](/docs/reference/foundations/bool/)*/s/*![](/assets/icons/16-arrow-right.svg)*/wed by a period, and then the
definition's name.

===  ` len `

The number of pairs in the dictionary.

self  .  len  (

)  -> [ int ](/docs/reference/foundations/int/)

===  ` at `

Returns the value as/*[ none ](/docs/reference/foundations/none//*[ str
](/docs/reference/foundations/str//*[ regex
](/docs/reference/foundations/regex/)*/ pre/*[ array ](/docs/reference/foundations/array/)*/alue if the key i/*[ none ](/docs/reference/foundations/none/)*/a/*[ str
](/docs/reference/foundations/str/)*/./*[ regex
](/docs/reference/foundations/regex/)*/ndations/str/) ,  default  :  any  ,

)  -> any

====  ` key `

[ str ](/docs/reference/foundations/str/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The key a/*[ str ](/docs/reference/foundations/str/)/*[ ![â](/assets/icons/16-arrow-right.svg)*/if the key is not part of the dictionary.

===  ` insert `

In/*[ ![â](/assets/icons/16-arrow-
right.svg)*/e dictionary already contains
this key, the value is updated.

self  .  insert  (

[ str ](/docs/refe/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/=  ` key `

[ str ](/docs/reference/foundations/str//*[ Reference ](/docs/reference/)*/on mark

Positional parameters are specifie/*[ Foundations ](/docs/reference/foundations/)*/ir that should be inserted.

====  ` value /*[ Style ](/docs/reference/foundations/style/)*/Positional parameters are specified in order, without names.

The value of/*[ context ](/docs/reference/context/ "context")*/ve `

Removes a pair from the dictionary by key and return the value.

self  .  remove  (

[ str ](/docs/reference/foundations/str/) ,  default  :  any  ,

)  -> any

====  ` key `

[ str ](/doc/*[Preview](/assets/docs/B9BBPtfgbYihKwTWFPTllQAAAAAAAAAA.png)*/n mark

Positional parameters are specified in order, without names.

The key of the pair to remove.

====  ` default `

any

A default valu/*[ function ](/docs/reference/foundations/function/)*/ `

/*[ content ](/docs/reference/foundations/content/)*/ insertion or/*[ function ](/docs/reference/foundations/function/)*/ence/foundations/array/)

===  ` values `

Returns the values of the dictionary as an array in insertion order.

self  .  values  (

)  -> [ array ](/docs/reference/foundations/array/)

===  ` pairs `

Returns the keys and values of the dictionary as an array of pairs. Each pair
is represented as an array of length two.

self  . /*![â](/assets/icons/16-arrow-right.svg)*/ce/fo/*[ ![â/*![â](/assets/icons/16-arrow-right.svg)*/arrow-/*![â](/assets/icons/16-arrow-
right.svg)*//refe/*[ /*![â](/assets/icons/16-arrow-
right.svg)*//ts/icons/16-arrow-
right.svg) Duration  Next page  ](/doc/*![Docs](/assets/icons/16-docs-dark.svg)*/ *d/*[ ![Docs](/assets/icons/16-docs-dark.svg/*![](//*[ Reference ](/docs/reference/)*/k.svg) ](/docs)
 /*[ Reference ](/docs/reference/)*/ight.svg)
  - [ Reference ](/docs/reference/*[ Foundations ](/docs/reference/foundations/)*/  - [ Foundations ](/docs/reference/foundat/*[ None ](/docs/reference/foundations/none/)*/.svg)
  - [ Bytes ](/docs/reference/foundations/bytes/)

=  bytes

A sequence of bytes.

This is conceptually similar to an array of [ integers
](/docs/reference/foundations/int/) between ` 0  ` and ` 255  ` , but
represented much more e/*[ joined
](/docs/reference/scripting/#blocks)*/ for loop
](/docs/reference/scripting/#loops) .

You can convert

  - a [ string ](/docs/refe/*[Preview](/assets/docs/bWChCwjCUgpluIjZfBh2dgAAAAAAAAAA.png)/*[ ![â](/assets/icons/16-arrow-right.svg)*/ytes with the [ ` bytes ` ](/docs/reference/foundations/by/*[ ![â](/assets/icons/16-arrow-
right.svg)*/ string with the [ ` str ` ](/docs/reference/foundations/str/ "`str`") constructor, with UTF-8 encoding/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/the [ ` array ` ](/docs/reference/foundations/array//*[ Reference ](/docs/reference/)*/[ reading ](/docs/reference/data-loading/re/*[ Foundations ](/docs/reference/foundations/)*/ to load it as a string or as raw bytes.

 /*[ Decimal ](/docs/reference/foundations/decimal/)*/es("Hello ð")
    
    #let data = read(
      "rhino.png",
      encoding: none,
    )
    
    // Magic bytes.
    #array(data.slice(0, 4)) \
    #st/*![Previ/*[Preview](/assets/docs/HqIgZy_wqBbnboRlZ-Iv4AAAAAAAAAAA.png)*/ywwAAAAAAAAAA.png)

==  Constructor

Question mark

If a type has a/*[Preview](/assets/docs/W31Kvh6BvfIgTgIeq2uIEQAAAAAAAAAA.png)*/w
value of the type.

Converts a value to bytes.

  - Strings are encoded in UTF-8. 
  - Arrays of integers between ` 0  ` and ` 255  ` are converted directly. The dedicated byte representation is much more efficient than the array representation and thus typically used for large byte buffers (e.g. image data). 

bytes  (

[ str ](/docs/reference/foundatio/*[ integer ](/docs/reference/foundations/int/)*/s/bytes/) [ array
](/docs/reference/foundations/array/)

)  -> [ bytes ](/docs/reference/foundations/bytes/)

    
    
    #bytes("He/*[ floating-point number
](/docs/reference/foundations/float/)*/assets/docs/PlfVajGmfDLMY6p8X4S3BwAAAAAAAAAA.png)

====  ` value `

[ str ](/docs/reference/foundations/str/) or  [ bytes
](/docs/reference/foundations/bytes/) or  [ array
](/docs/reference/foundations/array/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The value that should be converted to bytes.

/*![â](/assets/icons/16-arrow-right.svg)*/s and types and can have associated definitions. These ar/*![â](/assets/icons/16-arrow-right.svg)*/ type, followed by a period, and then the
definition's name.

===  ` len `/*[ ` calc.round `
](/docs/referen/*![Docs](/assets/icons/16-docs-dark.svg)*/e/foundations/int/)

===  ` at `

Returns the byte at the specified index. Returns the default value if the
index is out of bounds or fails with an error if no default value was
specified.

self  .  at  (

[ int ](/docs/reference/foundations/int/) ,  default  :  any  ,

)  -> any

====  ` index `

[ int ](/docs/reference/foundations/int/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The index at which to retrieve the byte.

====  ` default `

any

A default value to return if the index is out of bounds.

===  ` slice `

Extracts a subslice of the bytes. Fails with an error if the start or end
index is out of bounds.

self  .  slice  (

[ int ](/docs/reference/foundations/int/) ,  [ none
](/docs/reference/foundations/none/) [ int ](/docs/reference/foundations/int/)
,  count  :  [ int ](/docs/reference/foundations/int/) ,

)  /*[ round
](/docs/reference/foundations/calc/#functions-round)*/art `

[ int ](/docs/reference/foundations/int/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The start index/*[ ` str `
](/docs/reference/foundations/str/ "`str`")*/e/foundations/none/) or  [ int
](/docs/reference/foundations/int/)

Positional

Question mark

Positional parameters are specified in order, without names.

The end index (exclusive). If omitted, the whole slice until the end is
extracted.

Default: ` none  `

====  ` count `

[ int ](/docs/reference/foundations/int/)

The number of items to extract. This is equivalent to passing ` start + count
` as the ` end ` position. Mutually exclusive with ` end ` .

[ ![â](/assets/icons/16-arrow-right.svg) Boolean  Previous page
](/docs/reference/foundations/bool/) [ ![â](/assets/icons/16-arrow-/*[ `
float ` ](/docs/reference/foundations/float/ "`float`")*/ations/calc/)



= *docs/reference/foundations/version.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
/*[ power ](/docs/reference/foundations/calc/#functions-pow)*/s ](/docs/reference/foundations/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Version ](/docs/reference/foundations/version/)

=  version

A version with an arbitrary number of components.

The first three components have names that can be used as fields: ` major ` ,
` minor ` , ` patch ` . All following components do not have names.

The list of components is semantically extended by an infinite list of zeros.
This means that, for example, ` 0.8 ` is the same as ` 0.8.0 ` . As a special
case, the empty version (that has no components at all) is the same as ` 0 ` ,
` 0.0 ` , ` 0.0.0 ` , and so on.

The current version of the Typst compiler is available as ` sys.version ` .

You can convert a version to an array of explicitly given components using the
[ ` array ` ](/docs/reference/foundations/array/ "`array`") constructor.

==  Constructor

Question mark

If a type has a constructor, you /*[
integer ](/docs/reference/foundations/int/)*/alue of the type.

Creates a new version.

/*![â](/assets/icons/16-arrow-right.svg)*/en zero).

version  (

..  [ int ](/docs/reference/foundat/*![â](/assets/icons/16-arrow-
right.svg)*/dations/array/)

)  -> [ version ](/docs/reference/foundations/version/)

    
    
    #version() \/*![Docs](/assets/icons/16-docs-dark.svg)*/, 4) \
    #version((1, 2, 3, 4)) \
    #version((1, 2)/*[ floating-point numbers
](/docs/reference/foundations/float/)*/AAAAA.png)

====  ` components `

[ int ](/docs/reference/foundations/int/) or  [ array
](/docs/reference/foundations/array/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

Variadic

Question mark

Variadic parameters can be specified multiple times.

The components of the version (array arguments are flattened)

==  Definitions

Question mark

Functions and types and can/*![â](/assets/icons/16-arrow-right.svg)*/accessed by
specifyin/*[ int ](/docs/reference/foundatio/*![â](/assets/icons/16-arrow-
right.svg)*/tions/float//*[ str
](/docs/reference/foundations/str/)*/rsio/*[ decimal ](/docs/reference/foundations//*![Docs](/assets/icons/16-docs-dark.svg)*/
isn't specified to t/*[Preview](/assets/docs/RfqlB85Q5lIVeebJq7RlmgAAAAAAAAAA.png)*/e/foundations/i/*[ int ](/docs/reference/foundations/int/)*/a/*[ float
](/docs/reference/foundations/float/)*/e/*[ str
](/docs/reference/foundations/str/)*/tional

Question mark

Positional parameters are specified in order, without names.

The index at which to retrieve the c/*![Preview](/assets/docs/vNzcsGO4Zd_u-P4qNnxrDQAAAAAAAAAA.png)*/ight.svg)*/ components.

[ ![â](/assets/icons/16-arrow-right.svg) Type /*[ ![â](/assets/icons/16-arrow-
right.svg)*/s/type/) [ ![â](/assets/icons/16-arrow-
right.svg) Model  Next page  ](/docs/reference/model/)



= *docs/re/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](//*[ Reference ](/docs/reference/)*/)
  - [ Reference ](/docs/reference/)
  - !/*[ Foundations ](/docs/reference/foundations/)*/undations ](/docs/reference/foundations/)
 /*[ Type ](/docs/reference/foundatio/*![â](/assets/icons/16-arrow-right.svg)*/foundations/str/)

=  str

A sequence of Unicode codepoi/*![â](/assets/icons/16-arrow-
right.svg)*/lusters of the string using a [ for loop
](/docs/reference/scripting/#loops) . Grapheme clusters are basicall/*![Docs](/assets/icons/16-docs-dark.svg)*/hat belong together, e.g. multiple
codepoints that together form a flag emo/*[ typical
](/docs/reference/foundations/int//*[ types
](/docs/reference/foundations/float//*[ known
](/docs/reference/foundations/str//*[ from
](/docs/reference/foundations/array//*[ programming
](/docs/reference/foundations/dictionary/)*/` split ` , ` trim ` and ` replace ` ) ope/*[ _content._ ](/docs/reference/foundations/content/)*/ or a [ regular expression
](/docs/reference/foundations/regex/) . This makes the methods quite
versatile.

All lengths and indices are expressed in terms of UTF-8 bytes. Indices are
zero-based and negative indices wrap around to the end of the string.

You can convert a value to a string with this type's constructor.

==  Example

    
    
 /*[Preview](/assets/docs/dTjHaEMO5150e0-XVg1OzwAAAAAAAAAA.png)*/3".split() \
    #"1,2;3".split(regex("[,;]")) \
    #(regex("\d+") in "ten euros") \
    #(regex("\d+") in "10 euros")
    

![Previ/*[Preview](/assets/docs/HqIgZy_wqBbnboRlZ-Iv4AAAAAAAAAAA.png)*/Escape sequences

Just like in markup, you can escape a few symbols in strings:

  - ` \\  ` for a backslash 
  - ` \"  ` for a quote 
  - ` \n  ` for a newline 
  - ` \r  ` for a carriage return 
  - ` \t  ` for a tab 
  - ` \u{1f600}  ` for a hexadecimal Unicode escape sequence 

==  Constructor

Question mark

If a type has a constructor, you can call it like a function to create a new
value of the type.

Converts a value to a string.

  - Integers are formatted in base 10. This can be overridden with the optional ` base ` parameter. 
  - Floats are formatted in base 10 and never in exponential notation. 
  - From labels the name is extracted. 
  - Bytes are de/*[ type ](/docs/reference/foundations/type/)*/om and to Unicode code points, see the [ ` to-unicode
` ](/docs/reference/foundations/str/#definitions-to-unicode) and [ ` from-
unicode ` ](/docs/refe/*[Preview](/assets/docs/A7_wGHgPK0Jhrp3CDC6IegAAAAAAAAAA.png)*/
str  (

[ int ](/docs/reference/foundations/int/) [ float
](/docs/reference/foundations/float/) [ str
](/docs/reference/foundations/str/) [ bytes
](/docs/re/*[ ![â](/assets/icons/16-arrow-right.svg)*/s/reference/foundations/label/) [ decimal
](/docs/refer/*[ ![â](/assets/icons/16-arrow-right.svg)*/cs/reference/foundations/version/) [ type
](/docs/reference/foundations/type/) ,  base  :  [ int
](/docs/r/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ ](/docs/reference/foundations/str/)

    
    
    /*[ Reference ](/docs/reference/)*/ 16) \
    #str(2.7) \
    #str(1e8) \
    /*[ Foundations ](/docs/reference/foundations/)*/6jR9z-fP-M4eu8XB2MFnAAAAAAAAAAA.png)

==== /*[ Assert ](/docs/reference/foundations/assert/)*//int/) or  [ float
](/docs/reference/foundations/float/) or  [ str
](/docs/reference/foundations/str/) or  [ bytes
](/docs/reference/foundations/bytes/) or  [ label
](/docs/reference/foundations/label/) or  /*[ ` assert.eq `
](/docs/reference/foundations/assert/#definitions-eq)*/c/*[ ` assert.ne `
](/docs/reference/foundations/assert/#definitions-ne)*/tions/type/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The value that should be converted to a string.

====  ` base `

[ int ](/docs/reference/foundations//*[ bool ](/docs/reference/foundations/bool/)*/ in, between/*[ str
](/docs/reference/foundations/str/)*/ions

Question mark

Fu/*[ bool ](/docs/reference/foundations/bool/)*/efinitions. These are accessed by
specifying the function or type, followed by a period, and then the
definition's name.

===  ` len `

The length of th/*![â](/assets/icons/16-arrow-right.svg)*/eference/foundations/str/)*/(/docs/reference/foundations/i/*![â](/assets/icons/16-arrow-right.svg)*/ grapheme cluster of the string. Fails with an error if the
string is empty.

self  .  first  (

)  -> /*![Docs](/assets/icons/16-docs-dark.svg)*//)

===  ` last `

Extracts the last grapheme cluster of the string. Fails with an error if the
string is empty.

self  .  last  (

)  -> [ str ](/docs/reference/foundations/str/)

===  ` at `

Extracts the first grapheme cluster after th/*[ str ](/docs/reference/foundations/str/)*/lue if the index is out of bounds or fails with an error if no
default value was specified.

self  .  at  (

[ int ](/docs/reference/foundations/int/) ,  default  :  any  ,

)  -> any

====  ` index `

[ int ](/docs/reference/foundations/int/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The byte index. If negative, indexes from the back.

====  ` default /*[ str ](/docs/reference/foundations/str/)*/index is out of bounds.

===  ` slice `

Extracts a substring of the string. Fails with an error if the start or end
index is out of bounds.

self  .  slice  (

[ int ](/docs/reference/foundations/int/) ,  [ none
](/docs/reference/foundations/none/) [ int ](/docs/reference/foundations/int/)
,  count  /*[ str ](/docs/reference/foundations/str/)*/t/) ,

)  -> [ str ](/docs/reference/foundations/str/)

====  ` start `

[ int ](/docs/reference/foundations/int/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The start byte index (inclusive). If negative, indexes from the back.

====  ` end `

[ none ](/docs/reference/foundations/none/) or  [ int
](/docs/reference/foundations/int/)

Positional

Questio/*[ str ](/docs/reference/foundations/str/)*/ed in order, without names.

The end byte index (exclusive). If omitted, the whole slice until/*[ ![â](/assets/icons/16-arrow-right.svg)*/gative, indexes from the back.

Default: ` none  `

====/*[ ![â](/assets/icons/16-arrow-
right.svg)*/tions/int/)

The number of bytes to extract. This is equivalent to passing ` start + count
` as th/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/th ` end ` .

===  ` clusters `

Returns the graphem/*[ Reference ](/docs/reference/)*/array of substrings.

self  .  clusters  (
/*[ Foundations ](/docs/reference/foundations/)*/array/)

===  ` codepoints `

Returns the U/*[ Boolean ](/docs/reference/foundations/bool/)*/ substrings.

self  .  codepoints  (

)  -> [ array ](/docs/reference/foundations/array/)

===  ` to-unicode `

Converts a character into its corresponding code point.

str  .  to-unicode  (

[ str ](/docs/refere/*[Preview](/assets/docs/kY06WRyR--IwV2unWZl-NwAAAAAAAAAA.png)/*[ ![â](/assets/icons/16-arrow-right.svg)*/e() \
    #("a\u{0300}"
       .codepoints()
       .m/*[ ![â](/assets/icons/16-arrow-
right.svg)*/s/docs/q50tz6WAJPnwtBCYWbHrIwAAAAAAAAAA.png)

====  ` character `

[ str ](/docs/reference/foundation/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ark

Positional parameters are specified in order, w/*[ Reference ](/docs/reference/)*/at should be converted.

===  ` from-unicod/*[ Foundations ](/docs/reference/foundations/)*/orresponding string.

str  .  from-unicode /*[ Panic ](/docs/reference/foundations/panic/)*/

)  -> [ str ](/docs/reference/foundations/str/)

    
    
    #str.from-unicode(97)
    

![Preview](/assets/docs/vNzcsGO4Zd_u-P4qNnxrDQAAAAAAAAAA.png)
/*![â](/assets/icons/16-arrow-righ/*[Preview](/assets/docs/AIoKhvpoq-xeueiSPD9O7gAAAAAAAAAA.png)*/

Positional/*![â](/assets/icons/16-arrow-
right.svg)*/ut names.

The code point that should be converted.

===  ` contains `

Whether the string contains the/*![Docs](/assets/icons/16-docs-dark.svg)*/as dedicat/*![](/assets/icons/16-arrow-right.svg)*/"abcd"  `
instead of ` "abcd"  .  con/*![](/ass/*[ float ](/docs/reference/foundations/float/)*/docs/reference/foundations/str/) [ re/*![](/assets/icons/16-arrow-right.svg)*/ex/)

)  -> [ bool ](/docs/r/*[ ![â](/assets/icons/16-arrow-right.svg)*/rn `

[ str ](/docs/reference/foundations/str/) or  [ /*[ ![â](/assets/icons/16-arrow-
right.svg)*/

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The pa/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/`

Whether the string starts with the specified patt/*[ R/*![Preview](/assets/docs/B9BBPtfgbYihKwTWFPTllQAAAAAAAAAA.png)*/ions/str/) [/*[ Foundations ](/docs/reference/foundations/)*/
)  -> [ bool ](/docs/reference/foundations/*[ Arguments ](/docs/reference/foundations/arguments/)*/oundations/str/) or  [ regex
](/docs/reference/foundations/regex/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The pattern the string might start with.

===  ` ends-with `

Whether the string ends with the specified pattern.

self  .  ends-with  (

[ str ](/docs/reference/foundations/str/) [ regex
](/docs/reference/foundations/regex/)

)  -> [ bool ](/docs/reference/foundations/bool/)

====  ` pattern `

[ str ](/docs/reference/foundations/str/) or  [ regex
](/docs/reference/foundations/r/*![â](/assets/icons/16-arrow-right.svg)*/*[Preview](/assets/docs/DWzn69gGuCd1q_LVZvjEEgAAAAAAAAAA.png)*/names.

The pattern the string might end with.

===  ` find `

Searches for the specified pattern in the string and returns the first match
as a st/*![Docs](/assets/icons/16-do/*[Preview](/assets/docs/oyz50tHIOoQRj_5WM6JIbAAAAAAAAAAA.png)*/tions/str/) [ regex
](/docs/referen/*[Preview](/assets/docs/kcmqtH9qxq6Bg8ZwwKnMCQAAAAAAAAAA.png)*/ations/none/) [ str
](/docs/reference/f/*![](/assets/icons/16-arrow-right.svg)*/[ str ](/docs/reference/foundations/str/) or  [ regex
](/docs/reference/foundations/regex/)

Required  Positional

Question mark

Positional parameters are specified in order, withou/*![â](/assets/icons/16-arrow-right.svg)*//foundations/arguments/)*/hes for the specified pattern in t/*![â](/assets/icons/16-arrow-
right.svg)*/rst match as an /*[Preview](/assets/docs/JbzK099-rqq0pkW-oHCQsgAAAAAAAAAA.png)*/n  (

[ str ](/docs/ref/*![Pre/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ce/foundations/re/*![â](/assets/icons/16-arrow-rig/*[ Reference ](/docs/reference/)*/docs/reference/foundations/int/)

====/*![â/*[ Foundations ](/docs/reference/foundations/)*//str/) or  [ regex
](/docs/reference/foundations/regex/)

Required  Positional

Question mark

Positiona/*![Docs](/assets/icons/16-docs-dark.svg)*/thout name/*![](/assets/icons/16-arrow-right.svg)*/` match `

Searches for the specified/*![](/assets/icons/16-arrow-right.svg)*/dictionary with
details about the first match or ` none  `/*[ integer ](/docs/reference/foundations/int/)*/ry has the following keys:

  - ` s/*[ ` pos `
](/docs/reference/foundations/arguments/#definitions-pos)*/t of t/*[ `
array.at ` ](/docs/reference/foundations/array/#definitions-at "`array.at`")*/taining a /*[ string ](/docs/reference/foundations/str/)*/ first item of the array contains t/*[ ` named `
](/docs/reference/foundations/arguments/#defi/*![P/*[ int
](/docs/reference/foundations/int/)*//docs/reference/foundations/dictionary/#definitions-at
"`dictionary.at`")*/tions/str/) [ re/*[ int ](/docs/reference/foundations/int//*[ str
](/docs/reference/foundations/str/)*/ations/none/) [ dictionary
](/docs/reference/f/*[ int ](/docs/reference/foundations/int/)*/`/*[ str
](/docs/reference/foundations/str/)*//) or  [ regex
](/docs/reference/foundations/regex/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The pattern to search for.

===  ` matches `

Searches for the specified pattern in the string and returns an array of
dictionaries with details about all/*[ array ](/docs/reference/foundations/array/)*/ionaries, see above.

self  .  matches  (

[ str ](/docs/reference/foundations/str/) [ regex
]/*[ dictionary ](/docs/reference/foundations/dictionary/)/*[ ![â](/assets/icons/16-arrow-right.svg)*/  ` pattern `

[ str ](/docs/reference/foundations/str/)/*[ ![â](/assets/icons/16-arrow-right.svg)*//regex/)

Required  Positional

Question mark

Positional parameters are specified in order, without /*[ ![Docs](/assets/icons/16-docs-dark.svg)*/` replace `

Replace at most ` count ` occurrences o/*[ Reference ](/docs/reference/)*/acement
string or function (beginning from /*[ Foundations ](/docs/reference/foundations/)*/nces are replaced.

self  .  replace  (

[ /*[ Float ](/docs/reference/foundations/float/)*/ex
](/docs/reference/foundations/regex/) ,  [ str
](/docs/reference/foundations/str/) [ function
](/docs/reference/foundations/function/) ,  count  :  [ int
](/docs/reference/*[ integer
](/docs/reference/foundations/int/)*/erence/foundations/str/)

====  ` pattern `

[ str ](/docs/reference/foundations/str/) or  [ regex
](/docs/reference/foundations/regex/)

Required  Positional

Question mark

Positional parameters are specified in order, without n/*[Preview](/assets/docs/Oh7PyPKhSHHcwVH4CSb0KwAAAAAAAAAA.png)*/str ](/docs/reference/foundations/str/) or  [ function
](/docs/reference/foundations/function/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The string to replace the matches with or a function that gets a dictionary
for each match and can return individual replacement strings.

====  ` count `

[ int ](/docs/reference/fou/*![â](/assets/icons/16-arrow-right.svg)*/ ` count ` matches of the pattern are placed.

===  ` trim `

Remove/*![â](/assets/icons/16-arrow-
right.svg)*/cs/reference/foundations/bool//*[ int
](/docs/reference/foundations/int//*[ float
](/docs/reference/foundati/*![Docs](/assets/icons/16-docs-dark.svg)*/ayout/ratio//*[ str ](/docs/reference/foundations/str//*[ decimal
](/docs/reference/foundations/decimal/)*/ :  /*[ float ](/docs/reference/foundations/float/)*/t/) ,  repeat  :  [ bool
](/docs/reference/foundations/bool/) ,

)  -> [ str ](/docs/reference/foundations/str/)

====  ` patt/*[Preview](/assets/docs/PMa-HqZaL4--FN_1I0OHagAAAAAAAAAA.png)*/
](/docs/refere/*[ bool ](/docs/reference/foundations/bool/)*/e/*[ int
](/docs/reference/foundations/int/)*/Q/*[ float
](/docs/reference/foundations/float/)*/f/*[ ratio
](/docs/reference/layout/ratio/)*/n/*[ str ](/docs/reference/foundations/str/)*/e/*[ decimal ](/docs/reference/foundations/decimal/)*/gnment ](/docs/reference/layout/alignment/)

Can be ` start ` or ` end ` to only trim the start or end of the string. If
omitted, both sides are trimmed.

====  ` repeat `

[ bool ](/docs/reference/foundations/bool/)

Whether to repeatedly removes matches of the pattern or just once. Defaults to
` true  ` .

Default: ` true  `

===  ` split `

Splits a string at matches of a specified pattern and returns an array of the
resulting parts.

self  .  split  (

[ none ](/docs/reference/foundations/none/) [ str
](/docs/reference/foundations/str/) [ regex
/*[ bool ](/docs/reference/foundations/bool/)*/> [ array ](/docs/reference/foundations/array/)

====  ` pattern `

[ none ](/docs/referen/*[Preview](/assets/docs/9jd8hxPcunH7CdCSXWd1dwAAAAAAAAAA.png)*/s/str/) or  [ regex
](/docs/reference/foundations/regex/)

Positional

Question mark

Positional parameters are specified in order, without names.

The pattern to split at. Defaults to whitespace.

Default: /*[ bool ](/docs/reference/foundations/bool/)*/.

self  .  rev  (

)  -> [ str ](/docs/reference/foundations/str/)

[ ![â](/assets/icons/16-arrow-righ/*[Preview](/assets/docs/AIoKhvpoq-xeueiSPD9O7gAAAAAAAAAA.png)*//selector/) [ ![â](/assets/icons/16-arrow-
right.svg) Style  Next page  ](/docs/reference/foundations/style/)



= *docs/reference/foundations/style.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/ass/*[ float ](/docs/reference/foundations/float/)*/ns ](/docs/reference/foundations/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Style ](/docs/reference/*[Preview](/assets/docs/HHp-pldXJoLbqAEsg_2mmQAAAAAAAAAA.png)*/e styles.

*Deprecation planned.* Use [ context ](/docs/reference/contex/*[ bytes ](/docs/reference/foundations/bytes/)*/ing(body) =/*[ str
](/docs/reference/foundations/str/)*/re(bod/*[ float ](/docs/reference/foundations/float/)*/idth]
    })
    
    #thing[Hey] \
    #thing[Welcome]
    

![Preview](/assets/docs/B9BBPtfgbYihKwTWFPTllQAAAAAAAAAA.png)

==  Parameters

Questio/*[Preview](/assets/docs/TbCinqru71JKOm73kOJYdwAAAAAAAAAA.png)*/ecified in pare/*[ bytes ](/docs/reference/foundations/bytes/)*/ function ](/docs/reference/foundations/function/)

)  -> [ content ](/docs/reference/foundations/content/)

===  ` func `

[ function ](/docs/reference/foundations/function/)

Required  Positional
/*![Preview](/assets/docs/RfqlB85Q5lIVeebJq7RlmgAAAAAAAAAA.png)*/nce/foundations/str/)*/function to call with the styles. Its return value is displayed in the
document.

This function is called once for each time the content returned by ` style `
appears in the document. That makes it possible to generate content that
depends on the style context it appears in.

[ ![â/*![â](/assets/icons/16-arrow-right.svg)*/ring  Previous page
](/docs/reference/foundations/str/) /*[ str /*![â](/assets/icons/16-arrow-
right.svg)*//*[ bytes ](/docs/reference/foundations/bytes/)*/s/sys/)



= *docs/reference/foundations/none.md*

  - [ ![Docs](/assets/icons/16-do/*[Preview](/assets/docs/oyz50tHIOoQRj_5WM6JIbAAAAAAAAAAA.png)*/vg)
  - [ Refere/*[ str ](/docs/reference/foundations/str/)*/cons/16-arrow-right.svg)
  - [ Foundations ](/docs/reference/foundations/)
  - ![](/assets/icons/16-arrow/*![](/assets/ico/*[ str ](/docs/reference/foundations/str/)*/)

=  none

A value that indicates the absence of any other value.

The none type has exactly one value: ` none  ` .

When inserted int/*[ ![â](/assets/icons/16-arrow-right.svg)*/ also the value
that is produced by empty code blocks. It /*[ ![â](/assets/icons/16-arrow-
right.svg)*//#blocks) with any value, yielding the other value.

==  Example

    
    
    Not visible: #none
    

![Pre/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/AAAAAAAAAA.png)

[ ![â](/assets/icons/16-arrow-rig/*[ Reference ](/docs/reference/)*/(/docs/reference/foundations/module/) [ ![â/*[ Foundations ](/docs/reference/foundations/)*/ Next page  ](/docs/reference/foundations/p/*[ Duration ](/docs/reference/foundations/duration/)*/

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Foundations ](/docs/reference/foundations/)
  - ![]/*[ duration ](/docs/reference/foundations/duration/
"duration")*/ence/foundations/decimal/)

=  decimal

A fixed-point decimal number type.

This type shoul/*[ datetimes
](/docs/reference/foundations/datetime/)*/rs
represented in base 10/*[ int ](/docs/reference/foundations/int/)*/ency.

==  E/*[ int
](/docs/reference/foundations/int/)*/"0.1") + d/*[ int
](/docs/reference/foun/*![Preview](/assets/docs/HqIgZy_wqBbnboRlZ-Iv4AAAAAAAAAAA.png)*//int/)*/EQAAAAAAAA/*[ int
](/docs/reference/foundations/int/)*/reate /*[ duration ](/docs/reference/foundations/duration/)*/` constructor,
such as in ` decimal  (  "3.141592653"  )  ` *(note the doubl/*[Preview](/assets/docs/GmG9JKsQZEqcWXCc52iIiQAAAAAAAAAA.png)*/l digits, provide/*[ int ](/docs/reference/foundations/int/)*/s specified below (otherwise, an error is
raised).

You ca/*[ int ](/docs/reference/foundations/int/)*/rence/foundations/int/) to a
decimal with the ` decimal /*[ int ](/docs/reference/foundations/int/)*/  (  59  )
` . However, note that constructing a deci/*[ int ](/docs/reference/foundations/int/)*/s/reference/foundations/float/) , while supported, *i/*[ int ](/docs/reference/foundations/int/)*/iscouraged.* A warning will be raised if Typst
detects that there was an accidental ` float ` to ` decimal ` cast through its
constructor, e.g. if writing ` decimal  (  3.14  )  ` (no/*![Preview](/assets/docs/A7_wGHgPK0Jhrp3CDC6IegAAAAAAAAAA.pn/*[ bool ](/docs/reference/foundations/bool/)*/It is recommended to use strings for constant decimal values
instead (e.g. ` decimal  (  "3.14"  )  ` ).

The precision /*![â](/assets/icons/16-arrow-right.svg)*/e slightly im/*[ float ](/docs/reference/foundations/floa/*![â](/assets/icons/16-arrow-right.svg)*/ce/foundations/calc/#functions-round) , but there are still no
precision guarantees for that kind of conversion.

==  Operations

Basic arithmetic operations are supported on two decimals/*[ float ](/docs/reference/foundations/float/)*/t-in operations between ` float ` and ` decimal ` are not supported in
order to guard against accidental loss of precision. They will raise an error
instead.

Certain ` calc ` functions, such as trigonometric funct/*[ float ](/docs/reference/foundations/float/)*/also only supported for ` float ` (although raising `
decimal ` to integer exponents is supported). You can opt into potentially
imprecise operations with the ` float  (  decimal  )  ` constructor, which
casts /*[ float ](/docs/reference/foundations/float/)*/owing for operations
without precision guarantees.

==  Displaying decimals

To display a decimal, simply insert the value into the document. To only
display a certain number of digits, [ round
](/docs/reference/fo/*[ float ](/docs/refere/*![â](/assets/icons/16-arrow-right.svg)*/s/icons/16-arrow-right.svg)*/and other numbers is not yet supporte/*![â](/assets/icons/16-arrow-
right.svg)*/assets/icons/16-arrow-
right.svg)*/g the [ ` str `
](/docs/reference/foundations/str/ "`str`") cons/*![Docs](/assets/icons/16-docs-dark.svg)*/ th/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ce the period with a
comma (as a stand-in for proper/*[ Reference ](/docs/reference/)*/ages that use
the comma).

==  Precision an/*[ Foundations ](/docs/reference/foundations/)*/ 28 to 29 significant base-10 digits. This
/*[ Selector ](/docs/reference/foundations/selector/)*/imal point. As such,
numbers with more fractional digits have a smaller range. The maximum and
minimum ` decimal ` numbers have a value of ` 7922/*[ function ](/docs/reference/foundations/function/ "function")*/50335  ` respectively. In contrast with [ `
f/*[ specific fields ](/docs/reference/foundations/function/#definitions-where)*/su/*![](/assets/icons/16-arrow-right.svg)*/ence/foundations/str/)*//*[ regular expression ](/docs/reference/foundations/regex/)*/ decimal ` numb/*[ ` <label> ` ](/docs/reference/foundations/label/)*/](/docs/referen/*[ ` location ` ](/docs/reference/introspection/location/ "`location`")*/ise due to/*[ ` selector ` ](/docs/reference/foundations/selector/ "`selector`")*/n and division may not preserve all digits in
some edge cases: while they are considered precise, digits past the limits
specifi/*[ apply styling rules ](/docs/reference/styling/#show-
rules)*/beyond the
maximum representable digits /*[ query
](/docs/reference/introspection/query/ "query")*/t only when dividing, but also when multiplying by numbers between
0 and 1, as both operations can push a number's fractional digits beyond the
limits described above, leadin/*[ outline
](/docs/reference/model/outline/ "outline")*/ss the digit limits, they are fully precise.

==  Constructor

Question mark

If a type has a constructor, you can call it like a function to create a new
value of the type.

Converts a value to a ` decimal ` .

It is recommended to use a string to construct the decimal number, or an [
integer ](/docs/reference/foundations/int/) (if desired). The string must
contain a number in the format ` "3.14159"  ` (or ` "-3.14151/*[Preview](/assets/docs/SW-2iLP1LIGQ0ITsB7LGEQAAAAAAAAAA.png)*/ preserved; if that's not
pos/*![â](/assets/icons/16-arrow-right.svg)*/gits (around 28 to 29) having been
reached, an error is raised as the given decimal number wouldn't be
representable.

While this constructor can be used with [ floating-point numbers
](/docs/reference/foundatio/*![Docs](/assets/icons/16-docs-dark.svg)*/, doing so/*![](/assets/icons/16-arrow-right.svg)*/h/*[ str ](/docs/reference/foundations/str//*[ regex
](/docs/reference/foundations/regex//*[ label
](/docs/reference/foundations/label//*[ selector
](/docs/reference/foundations/selector//*[ location
](/docs/reference/introspection/location//*[ function
](/docs/reference/foundations/function/)*/izat/*[ selector ](/docs/reference/foundations/selector/)*/hat are NaN or
i/*[ str ](/docs/reference/foundations/str/)*/l/*[ regex
](/docs/reference/foundations/regex/)*/r/*[ label
](/docs/reference/foundations/label/)*/f/*![â](/assets/icons/16-arrow-right.svg)*/ns/selector/)*/f/*[ location
](/docs/reference/introspec/*![â](/assets/icons/16-arrow-
right.svg)*/ference/foundations/function/)*/22222222222")
    

![Preview](/assets/docs/RfqlB85Q5lIVeebJq7RlmgAAAAA/*![Docs](/assets/icons/16-docs-dark.svg)*/ocs/refere/*![](/assets/icons/16-arrow-right.svg)*/docs/reference/foundations/float/) or/*![](/assets/icons/16-arrow-right.svg)*//str/)

Required  Positional

Question mark
/*![â](/assets/icons/16-arrow-right.svg)*/order, without names.

The value that should be co/*![â](/assets/icons/16-arrow-right.svg)*/icons/16-arrow-right.svg) Datetime  Previous page
](/docs/reference/foundations/datetime/) /*![Docs](/assets/icons/16-docs-dark.svg)*/svg) Dictionary /*[ str ](/docs/reference/foundations/str//*[ regex
](/docs/reference/foundations/regex//*[ label
](/docs/reference/foundations/label//*[ selector
](/docs/reference/foundations/selector//*[ location
](/docs/reference/introspection/location//*[ function
](/docs/reference/foundations/function/)*/)
  /*[ selector ](/docs/reference/foundations/selector/)*/ ![](/assets/ico/*[ str ](/docs/reference/foundations/str/)*///*[ regex
](/docs/reference/foundations/regex/)*/b/*[ label
](/docs/reference/foundations/label/)*/y/*[ sel/*![â](/assets/icons/16-arrow-right.svg)*/ctor/)*/g/*[ location
](/docs/reference/introspection/lo/*![â](/assets/icons/16/*[ cite ](/docs/reference/model/cite/
"cite")*/ into clearly defined _types_ and tells you
where it expects which type of value.

Apart from basic types for numeric values and [ typical
](/docs/reference/foundations/int/) [ types
](/docs/reference/foundations/float/) [ known
](/docs/reference/foundations/str/) [ from
](/docs/reference/foundations/array/) [ /*[ str ](/d/*![](/asset/*[ ` kind `
](/docs/reference/model/figure/#parameters-kind)*/egex//*[ label
](/docs/reference/foundations/label//*[ selector
](/docs/reference/foundations/selector//*[ location
](/docs/reference/introspection/location//*[ function
](/docs/reference/foundations/function/)*/ and/*[ selector ](/docs/reference/foundations/selector/)*/t x = 10
    #if/*[ str ](/docs/reference/foundations/str/)*/
/*[ regex
](/docs/reference/foundations/regex/)*/ /*[ label
](/docs/reference/foundations/label/)*/e/*[ selector
](/docs/reference/foundations/selector/)*/H/*[ location
](/docs/reference/introspection/location/)*/ /*[ function
](/docs/reference/foundations/function/)*/en `
type ` ?

  /*![Preview](/assets/docs/DWzn69gGuCd1q_LVZvjEEgAAAAAAAAAA.png)*/sets/docs/HqIgZy_wqBbnboRlZ-Iv4AAAAAAAAAAA.png)

==  Compatibility

In Typst 0.7 and lower, the ` type ` function returned a string instead of a
type. Compatibility with the old way will remain for a while to give package
authors time to upgrade, but it will be removed at s/*![Preview](/assets/docs/kcmqtH9qxq6Bg8ZwwKnMCQAAAAAAAAAA.png)*/(/docs/reference/foundations/selector//*[ location
](/docs/reference/introspection/location//*[ function
](/docs/reference/foundations/function/)*/uate to ` true/*[ bool
](/docs/reference/foundations/bool/)*/hing t/*[ selector ](/docs/reference/foundations/selector/)*/ a type has a/*[ label ](/docs/reference/foundations/label/)*/ /*[ selector
](/docs/reference/foundations/selector/)*/l/*[ location
](/docs/refer/*![Preview](/assets/docs/JbzK099-rqq0pkW-oHCQsgAAAAAAAAAA.png)*/e/foundations/function/)*/  #type(14.7) \
    #type("hello") \
    #type(<glacier>) \
    #type([Hi]) \
    #type(x => x + 1) \
    #type(type)
    

![Preview](/assets/docs/A7_wGHgPK0Jhrp3CDC6IegAAAAAAAAAA.pn/*[ bool ](/docs/reference/foundations/bool/)*/nal

Question mark

Positional parameters are specified in order, without names.

The value whose type's to determine.

[ ![â](/assets/icons/16-arrow-right.svg) System  Previous page
](/docs/reference/foundations/sys/) [ ![â](/assets/icons/16-arrow-right.svg)
Version  Next page  ](/docs/reference/*[ label ](/docs/reference/foundations/label//*[ selector
](/docs/reference/foundations/selector//*[ location
](/docs/reference/introspection/location//*[ function
](/docs/reference/foundations/function/)*/ference/)
  - /*[ bool
](/docs/reference/foundations/bool/)*/ Found/*[ selector ](/docs/reference/foundations/selector/)*/ets/icons/16-ar/*[ label ](/docs/reference/foundations/label/)*///*[ selector
](/docs/reference/foundations/selector/)*/ /*[ location
](/docs/reference/introspection/location/)*/o/*[ function
](/docs/reference/foundations/function/)*/ut in the document.

If you wish to test equality between two values, see [ ` assert.eq `
](/docs/reference/foundations/assert/#definitions-eq) and [ ` assert.ne `
](/docs/reference/found/*[ bool ](/docs/reference/foundations/bool/)*/le

    
    
    #assert(1 < 2, message: "math broke")
    

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in paren/*[ ![â](/assets/icons/16-arrow-right.svg)*/

[ bool ](/docs/reference/foundations/bool/) ,  message  :  [ s/*[ ![â](/assets/icons/16-arrow-
right.svg)*/

===  ` condition `

[ bool ](/docs/reference/foundations/bool/)

Required  Positional

Question/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/d in order, without names.

The condition that must /*[ Reference ](//*![â](/assets/icons/16-arrow-right.svg)*/
[ str ](/docs/refere/*[ Model ](/docs/reference/model/)*//*![â](/assets/icons/16-arrow-right.svg)*/efi/*[ Document ](/docs/reference/model/document/)*/nd can have associated definitions. These are acces/*![Docs](/assets/icons/16-docs-dark.svg)*/ followed /*![](/assets/icons/16-arrow-right.svg)*/s name.

===  ` eq `

Ensures that tw/*![](/assets/icons/16-arrow-right.svg)*/ror if the first value is not equal to the second. /*![](/assets/icons/16-arrow-right.svg)*/cument/*[ set
rules ](/docs/reference/styling/#set-rules)*/[ str ](/docs/reference/foundations/str/) ,

)

![](/assets/ico/*![â](/assets/icons/16-arrow-right.svg)*/ 
    
    #assert.eq(10, 10)
    

====  ` left `

/*![â](/assets/icons/16-arrow-right.svg)*/

Positional parameter/*[Preview](/assets/docs/g-R4wkXOtFnr5QmDRHynVAAAAAAAAAAA.png)*/ compare.

====  ` righ/*![Docs](/assets/icons/16-docs-dark.svg)*/n mark

Positional parameters are specified in order, without names.

The second value to compare.

====  ` /*![Preview](/assets/d/*[ Model ](/docs/reference/model/)*/n optional message to display on error instead of the repr/*[ none ](/docs/reference/foundations/none//*[ content
](/docs/reference/foundations/content/)*/
Fails with/*[ str
](/docs/reference/foundations/str//*[ array
](/docs/reference/foundations/array/)*/ the document/*[ str
](/docs/reference/foundations/str//*[ array
](/docs/reference/foundations/array/)*/s/str/) ,/*[ none
](/docs/reference/foundations/none//*[ auto
](/docs/reference/foundations/auto//*[ datetime
](/docs/reference/foundations/datetime/)*/onal

/*[ content ](/docs/reference/foundations/content/)*/d in order, wi/*[ none ](/docs/reference/foundations/none/)*/=/*[ content
](/docs/reference/foundations/content/)*/on mark

Positional parameters are specified in order, without names.

The second value to compare.

====  ` message `

[ str ](/docs/reference/foundations/str/)

An optional message to display on error instead of the representations of the
compared values.

[ ![â](/assets/icons/16-arrow-righ/*![Preview](/ass/*[ citation and bibliography styles
](/docs/reference/model/bibliography/#parameters-style)*/)*/v/*[ array
](/docs/reference/foundations/array/)*/ions/auto/)



= *docs/reference/foundations/bool.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference//*[ str ](/docs/reference/foundations/str/)*/g/*[ array
](/docs/reference/foundations/array/)*/ions/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Boolean ](/docs/reference/foundations/bool/)

=  bool

A type with two states.

The boolean type has two values: ` true  ` and `/*[ none ](/docs/reference/foundations/none/)*/ /*[ auto
](/docs/reference/foundations/auto/)*/ /*[ datetime
](/docs/reference/foundations/datetime/)*/w](/assets/docs/kY06WRyR--IwV2unWZl-NwAAAAAAAAAA.png)

[ ![â](/assets/icons/16-arrow-right.svg) Auto  Previous page
](/docs/reference/foundations/auto/) [ ![â](/assets/icons/16-arrow-
right.svg) Bytes  Next page  ](/docs/reference/foundations/bytes/)



= *docs/reference/foundations/panic.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Foundations ](/docs/reference/foundat/*[ ![â](/assets/icons/16-arrow-right.svg)*/t.svg)
  - [ Panic ](/docs/reference/foundations/*[ ![â](/assets/icons/16-arrow-right.svg)*/r.

Arguments are displayed to the user (not rendered in the document) as strings,
conver/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/mple

The code below produces the error ` panicked w/*[ Reference ](/docs/reference/)*/    
    #panic("this is wrong")
    

==  /*[ Model ](/docs/reference/model/)*/ters are the inputs to a function. They are/*[ Reference ](/docs/reference/model/ref/)*/ion name.

panic  (

..  any

)

===  ` values `

any

Required  Positional

Question mark

Positional parameters are specified in order, without names.

Variadic

Question mark

Variadic parameters can be specified multiple times.

The valu/*![Preview](/assets/docs/HHp-pldXJoLbqAEsg_2mmQA/*[ text language ](/docs/reference/text/text/#parameters-lang)*/ocs/reference/foundations/none/) [ ![â](/assets/icons/16/*[ cite ](/docs/reference/model/cite/
"cite")*/s/reference/foundations/plugin/)



= *docs/refere/*[ headings ](/docs/reference/model/heading/)*/*[ figures ](/docs/reference/model/figure/)*/*[ equations
](/docs/reference/math/equation/)*/ - /*[ footnotes
](/docs/reference/mo/*![Preview](/assets/docs/TbCin/*[ bool ](/docs/reference/foundations/bool/)*/rence/foundations/)
  - ![](/asset/*[ ` kind `
](/docs/reference/model/figure/#parameters-kind)*/ce/foundations/arguments/)

=  arguments

Captured arguments to a function.

==  Argument Sinks

Like built-in functions, custom functions can also take a variable number of
arguments. You can specify an _argument sink_ which co/*[ ` link ` ](/docs/reference/model/link/
"`link`")*/sulting ` sink ` value is of the ` arguments `
type. It exposes methods to access the positional and named arguments.

    
    
    #let format(title, ..authors) = {
      let by = authors
        .pos()
        .join(", ", last: " and ")
    
      [*#title* \ _Written by #by;_]
    }
    
    #format("ArtosFlow", "Jane", "Joe")
    

![Preview](/assets/docs/DWzn69gGuCd1q_LVZvjEEgAAAAAAAAAA.png)

==  Spreading

Inversely to an argument sink, you can _spread_ arguments, arrays and
dictionaries into a function call with the/*![Preview](/assets/docs/oyz50tHIOoQRj_5WM6JIbAAAAAAAAAAA.png)*/74BqVarCEGU8wAAAAAAAAAA.png)*/  #let dict = (fill: blue)
    #text(..dict)[Hello]
    

![Preview](/assets/docs/kcmqtH9qxq6Bg8ZwwKnMCQAAAAAAAAAA.png)

==  Constructor

Question mark

If a type has a constructor, you can call it like a function to create a new
value of the type.

Construct spreadable arguments in place.

This function behaves like ` let  args /*![â](/assets/icons/16-arrow-right.svg)*/ (

..  any

)  -> [ arguments ](/docs/reference/foundations/*![â](/assets/icons/16-arrow-
right.svg)*/rguments(stroke: red, inset: 1em, [Body])
    #box(..args)
    

![Preview](/assets/docs/JbzK099-rqq0pkW-oHCQsgA/*![Docs](/assets/icons/16-docs-dark.svg)*/y

Require/*![](/assets/icons/16-arrow-right.svg)*/nal parameters are specified in order/*![](/assets/icons/16-arrow-right.svg)*/mark

Variadic parameters can be specified multiple/*![](/assets/icons/16-arrow-right.svg)*/
==  Definitions

Question mark

Functions and types and can have associated definitions. These are accessed by
specifying the function or type, followed by a period, and then the
definition's name.

===  ` at `

Returns the positional argument at the specified index, or the named argument
with the specified name.

If the key is an [ integer ]/*[Preview](/assets/docs/_2kRnAjhpZZ-kvJsytflygAAAAAAAAAA.png)*/irst calling [ ` pos `
](/docs/reference/foundations/arguments/#definitions-pos) and then [ `
array.at ` ](/docs/reference/foundations/arr/*[ label ](/docs/reference/foundations/label/)*/ [ string ](/do/*[ none
](/docs/reference/foundations/none//*[ auto
](/docs/reference/foundations/auto//*[ content
](/docs/reference/foundations/content//*[ function
](/docs/reference/foundations/function/)*//refer/*[ content ](/docs/reference/foundations/content/)*/tionary.at`") ./*[ label ](/docs/reference/foundations/label/)*/nda/*![Preview](/assets/docs/GmG9JKsQZEqcWXCc52iIiQAAAAAAAAAA.png)*/ult  :  any  ,

)  -> any

====  ` key `

[ int ](/docs/reference/foundations/int/) or  [ str
](/docs/reference/foundations/str/)

Required  Posit/*[ `
bibliography ` ](/docs/reference/model/bibliography/ "`bibliography`")*/t names.

The index o/*[ none ](/docs/reference/foundations/none/)*/a/*[ auto
](/docs/reference/foundations/auto/)*/e/*[ content
](/docs/reference/foundations/content/)*/r/*[ function
](/docs/reference/foundations/function/)*/ (

)  -> [ array ](/docs/reference/foundations/array/)

===  ` named `

Returns the captured named arguments as a dictionary.

self  .  named  (

)  -> [ dictionary ](/docs/reference/foundations/dictionary/)

[ ![â](/assets/icons/16-arrow-right.svg) Foundations  Previous page
](/docs/reference/foundations/) [ ![â](/assets/icons/16-arrow-right.svg)
Array  Next page  ](/docs/reference/foundations/array/)



= *docs/reference/foundations/float.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Foundations ](/docs/reference/foundations/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Float ](/docs/reference/foundations/float/)

=  float/*[Preview](/assets/docs/fh477CUxS1KmPvq1dqsQ5QAAAAAAAAAA.png)/*[ ![â](/assets/icons/16-arrow-right.svg)*/to
store floats. Wherever a float is expected, you/*[ ![â](/assets/icons/16-arrow-right.svg)*/nce/foundations/int/) .

You can convert a value to a float with this type's constructor.

NaN and positive/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/n ` and ` float  .
inf ` respectively.

==  Example
/*[ Reference ](/docs/reference/)*/ \
    #(10 / 4)
    

![Preview](/assets/d/*[ Model ](/docs/reference/model/)*/AAA.png)

==  Constructor

Question mark

I/*[ Bibliography ](/docs/reference/model/bibliography/)*/nction to create a new
value of the type.

Converts a value to a float.

  - Booleans are converted to ` 0.0 ` or ` 1.0 ` . 
  - Integers are converted to the closest 64-bit/*![â](/assets/icons/16-arrow-right.svg)*/ less than ` calc  .  pow  (  2  ,  53  )  ` , this conversion is ex/*![â](/assets/icons/16-arrow-
right.svg)*/- Strings are parsed in base 10 to the closest 64-bit float. Expone/*[ documentation ](https://github.com/ty/*![Docs](/assets/icons/16-docs-dark.svg)*/t.md)*/) [/*![](/assets/icons/16-arrow-right.svg)*/t/) [ float
](/docs/reference/foundat/*![](/assets/icons/16-arrow-right.svg)*/e/layout/ratio/)
[ str ](/docs/reference/foundation/*![](/assets/icons/16-arrow-right.svg)*/
citation ](/docs/reference/model/cite/)*//docs/reference/foundations/float/)

    
    
    #float(false) \
    #float(true) \
    #float(4) \
    #float(40%) \
    #float("2.7") \
    #float("1e5")
    

![Preview](/ass/*[ citation and bibliography styles
](/docs/reference/model/bibliography/#parameters-style)*/foundations/bool/) or  [ int
](/docs/ref/*[ CSL ](https://citationstyles.org/)*/
](/docs/reference/foundations/float/) or  [ ratio
](/docs/reference/layout/ratio/) or  [ str ](/docs/reference/foundations/str/)
or  [ decimal ](/docs/reference/foundations/decimal/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The value that should be converted to a float.

==  Definitions

Question mark

Functions and types and can have associated definitions. These are accessed by
specifying the function or type, followed by a period, and then the
definition's name.

===  ` is-nan `

Checks if a float is not a number.

In IEEE 754, more than one bit pattern represents a NaN. This function re/*[Preview](/assets/docs/IJ3xnmEzh6yEddeM44ev3wAAAAAAAAAA.png)*/elf  .  is-nan  (

)  -> [ bool ](/docs/reference/foundations/bool/)

    
    
    #float.is-nan(0) \
    #float.is-nan(1) \
    #float.is-nan(flo/*[ str ](/docs/reference/foundations/str//*[ array
](/docs/reference/foundations/array/)*/ is-infini/*[ none
](/docs/reference/foundations/none//*[ auto
](/docs/reference/foundations/auto//*[ content
](/docs/reference/foundations/content/)*/ ` if the/*[ bool
](/docs/reference/foundations/bool/)*/e  (

)  -/*[ str
](/docs/reference/foundations/str/)*/ol/)

/*[ content ](/docs/reference/f/*![â](/assets/icons/16-arrow-right.svg)*/tr ](/doc/*![Preview](/assets/docs/SW-2iLP1L/*[ ![â](/assets/icons/16-arrow-right.svg)*//)*/O7gAAAAAAAAAA.png)

===  ` signum `

Calculates the sign of a floating point number.

  - If t/*![Docs](/assets/icons/16-docs-dark.svg)*/.0  ` ), returns ` 1.0  ` . 
  - If the num/*[ none ](/docs/reference/foundations/none/)*/e/*[ auto
](/docs/reference/foundations/auto/)*/a/*[ content
](/docs/reference/foundations/content/)*/ (

)  -> [ float ](/docs/reference/foundations/float/)

    
    
    #(5.0).signum() \
    #(-5.0).signum() \
    #(0.0).signum() \
    #float.nan.signum()
    

![Preview](/assets/docs/HHp-pldXJoLbqAEsg_2mmQA/*[ text language ](/docs/reference/text/text/#parameters-lang)*/t.

float  .  from-bytes  (

[ bytes ](/docs/reference/foundations/bytes/) ,  endian  :  [ str
](/docs/reference/foundations/str/) ,

)  -> [ float ](/docs/reference/foundations/float/)

    
    
    #float.from-bytes(bytes((0, 0, 0, 0, 0, 0, 240, 63))) \
    #float.from-bytes(bytes((63, 240, 0, 0, 0, 0, 0, 0)), endian: "big")
    

![Preview](/assets/docs/TbCin/*[ bool ](/docs/reference/foundations/bool/)*/ytes `

[ bytes ](/docs/reference/foundations/bytes/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The bytes that should be converted to a float.

Must be of length exactly 8 so that the result fits into a 64-bit float.

====  ` endian `

[ str ](/docs/reference/foundations/str/)

The e/*[ ` form `
](/docs/reference/model/cite/#parameters-form)*/---  
` "  big  " ` |  Big-endian byte order: The high/*[ str ](/docs/reference/foundations/str/)*/ bytes.   
` "  little  " ` |  Little-endian byte order: The lowest-value byte is at the beginning of the bytes.   
  
Default: ` "little"  `

===  ` to-bytes `

Converts a float to bytes.

self  .  to-bytes  (

endian/*[ CSL
file ](https://citationstyles.org/)*/str/)

)  -> [ bytes ](/docs/reference/foundations/bytes/)

    
    
    #array(1.0.to-bytes(endian: "big")) \
    #array(1.0.to-bytes())
    

![Preview](/assets/docs/oyz50tHIOoQRj_5WM6JIbAAAAAAAAAAA.png)

====  ` endian `

[ str ](/docs/reference/foundations/str/)

The endianness of the conversion.

Variant  |  Details   
---|---  
` "  big  " ` |  Big-endian byte order: The highest-value byte is at the beginning of the bytes.   
` "  little  " ` |  Little-endian byte order: The lowest-value byte is at the beginning of the bytes.   
  
Default: ` "little"  `

[ ![â](/assets/icons/16-arrow-right.svg) Evaluate  Previous page
](/docs/reference/foundations/eval/) [ ![â](/assets/icons/16-arrow-
right.svg) Function  Next page  ](/docs/reference/foundations/function/)



= *docs/reference/foundations/duration.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Foundations ](/docs/reference/foundations/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Duration ](/docs/reference/foundations/duration/)

=  duration

Represents a positive or negative span of time.

==  Constructor

Question mark

If a type has a constructor, you can call it like a function to create a new
value of the type.

Creates a new duration.

You can specify the [ duration ](/docs/reference/foundations/duration/
"duration") using weeks, days, hours, minutes and seconds. You can also get a
duration by subtracting two [ datetimes
](/docs/reference/foundations/datetime/) .

duration  (

seconds  :  [ int ](/docs/reference/foundations/int/) ,  minutes  :  [ int
](/docs/reference/foundations/int/) ,  hours  :  [ int
](/docs/reference/foundations/int/) ,  days  :  [ int
](/docs/reference/foundations/int/) ,  weeks  :  [ int
](/docs/reference/foundations/int/) ,

)  -> [ duration ](/docs/reference/foundations/duration/)

    
    
    #duration(
      days: 3,
      hours: 12,
    ).hours()
    

![Preview](/assets/docs/GmG9JKsQZEqcWXCc52iIiQAAAAAAAAAA.png)

====  ` seconds `

[ int ](/docs/reference/foundations/int/)

The number of seconds.

Default: ` 0  `

====  ` minutes `

[ int ](/docs/reference/foundations/int/)

The number of minutes.

Default: ` 0  `

====  ` hours `

[ int ](/docs/reference/foundations/int/)

The number of hours.

Default: ` 0  `

====  ` days `

[ int ](/docs/reference/foundations/int/)

The number of days.

Default: ` 0  `

====  ` weeks `

[ int ](/docs/reference/foundations/int/)

The number of weeks.

Default: ` 0  `

==  Definitions

Question mark

Functions and types and can have associated definitions. These are accessed by
specifying the function or type, followed by a period, and then the
definition's name.

===  ` seconds `

The duration expressed in seconds.

This function returns the total duration represented in seconds as a floating-
point number rather than the second component of the duration.

self  .  seconds  (

)  -> [ float ](/docs/reference/foundations/float/)

===  ` minutes `

The duration expressed in minutes.

This function returns the total duration represented in minutes as a floating-
point number rather than the second component of the duration.

self  .  minutes  (

)  -> [ float ](/docs/reference/foundations/float/)

===  ` hours `

The duration expressed in hours.

This function returns the total duration represented in hours as a floating-
point number rather than the second component of the duration.

self  .  hours  (

)  -> [ float ](/docs/reference/foundations/float/)

===  ` days `

The duration expressed in days.

This function returns the total duration represented in days as a floating-
point number rather than the second component of the duration.

self  .  days  (

)  -> [ float ](/docs/reference/foundations/float/)

===  ` weeks `

The duration expressed in weeks.

This function returns the total duration represented in weeks as a floating-
point number rather than the second component of the duration.

self  .  weeks  (

)  -> [ float ](/docs/reference/foundations/float/)

[ ![â](/assets/icons/16-arrow-right.svg) Dictionary  Pr/*![â](/assets/icons/16-arrow-
right.svg)*//dictionary/) [ ![â](/assets/icons/16-arrow-
right.svg) Evaluate  Next page  ](/docs/reference/fo/*![Docs](/assets/icons/16-docs-dark.svg)*/oundations/*![](/assets/icons/16-arrow-right.svg)*/icons/16-docs-dark.svg) ](/docs)
  - /*![](/assets/icons/16-arrow-right.svg)*/
  - [ Reference ](/docs/reference/)
  /*![](/assets/icons/16-arrow-right.svg)*/g)
  - [ Foundations ](/docs/reference/foundations/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Selector ](/docs/reference/foundations/selector/)

=  selector

A filter for selecting elements within the document.

You can construct a selector in the following ways:

  - you can use an element [ function ](/docs/reference/foundations/function/ "function")
  - you can filter for an element function with [ specific fields ](/docs/reference/foundations/function/#definitions-where)
  - you can use a [ string ](/docs/reference/foundations/str/) or [ regular expression ](/docs/reference/foundations/regex/)
  - you can use a [ ` <l/*![Preview](/assets/docs/g-R4wkXOtFnr5QmDRHynVAAAAAAAAAAA.png)*/ a [ ` location ` ](/docs/reference/introspection/location/ "`location`")
  - call the [ ` selector ` ](/docs/reference/foundations/selector/ "`selector`") constructor to convert any of the above types into a selector value and use the methods below to refine it 

Selectors are used to [ apply styling rules ](/docs/reference/styling/#show-
rules) to elements. You can also use selectors to [ query
](/docs/reference/introspection/query/ "query") the document for certain types
of elements.

Furthermore, you can pass a selector to several of Typst's built-in functions
to configure their behaviour. One such example is the [ outline
](/docs/reference/model/outline/ "outline") where it can be used to change
which elements are listed within the outline.

Multiple selectors can be combined using the methods shown below. However, not
all kinds of selectors are supported in all places, at the moment.

==  Example

    
    
    #context query(
      heading.where(level: 1)
        .or(heading.where(level: 2))
    )
    
    = This will be found
/*[ ![â](/assets/icons/16-arrow-right.svg)*/not.
    

![Preview](/assets/docs/SW-2iLP1L/*[ ![â](/assets/icons/16-arrow-right.svg)*/tor

Question mark

If a type has a constructor, you can call it like a function to create a new/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ selector. The following values are accepted:

  - A/*[ Reference ](/docs/reference/)*/ding ` or ` figure ` . 
  - A ` <label> ` ./*[ Model ](/docs/reference/model/)*/e ` heading  .  where  (  level  :  1  )  `/*[ Heading ](/docs/reference/model/heading/)*/oundations/str/) [ regex
](/docs/reference/foundations/regex/) [ label
](/docs/reference/foundations/label/) [ selector
](/docs/reference/foundations/selector/) [ location
](/docs/reference/introspection/location/) [ function
](/docs/reference/foundations/function/)

)  -> [ selector ](/docs/reference/foundations/selector/)

====  ` target `

[ str ](/docs/reference/foundations/str/) or  [ regex
](/docs/reference/foundations/regex/) or  [ label
](/docs/reference/foundations/label/) or  [ selector
](/docs/reference/foundations/selector/) or  [ location
](/docs/reference/introsp/*[ numbering pattern
or function ](/docs/reference/model/numbering/)*/tion/)

Required  Po/*![â](/assets/icons/16-arrow-right.svg)*/meters are sp/*[
outline ](/docs/reference/model/outline/ /*![â](/assets/icons/16-arrow-right.svg)*/r ` figure ` , a ` <label> ` or
a more complex selector like ` heading  .  where  (  level  :/*![Docs](/assets/icons/16-docs-dark.svg)*/mark

Fun/*![â](/assets/icons/16-arrow-right.svg)*/ definitions. These are accessed by
specifying the fun/*![â](/assets/icons//*[ Model ](/docs/reference/model/)*/MMN2eDYZCkAh9ZJwAAAAAAAAAA.png)*/lects all elements that match this or any of the other selectors.

self  .  or  (

..  [ str ](/docs/re/*![](/assets/icons/16-arrow-right.svg)*/docs/reference/foundations/regex/) [ /*![](/assets/icons/16-arrow-right.svg)*/abel/) [ selector
](/docs/reference/fou/*![](/assets/icons/16-arrow-right.svg)*/s/reference/introspection/location/) [ function
](/docs/reference/foundations/function/)

)  -> [ selector ](/docs/reference/foundations/selec/*[ auto ](/docs/reference/foundations/auto//*[ int
](/docs/reference/foundations/int/)*//docs/refe/*[ int
](/docs/reference/foundations/int/)*/docs/refere/*[ int
](/docs/reference/foundations/int/)*//docs/referenc/*[ none
](/docs/reference/foundations/none//*[ str ](/docs/reference/foundations/str//*[ function ](/docs/reference/foundations/function/)*/unction/)

Requ/*[ none
](/docs/reference/foundations/none//*[ auto
](/docs/reference/foundations/auto//*[ content
](/docs/reference/foundations/content//*[ function
](/docs/reference/foundations/function/)*/ other select/*[ bool
](/docs/reference/foundations/bool/)*/ elements that /*[ auto
](/docs/reference/foundations/auto//*[ bool
](/docs/reference/foundations/bool/)*/rence/foundations/s/*[ auto
](/docs/reference/foundations/auto//*[ length
](/docs/reference/layout/length/)*//*[ content
](/docs/reference/foundations/content/)*/ations/*[ content ](/docs/reference/foundations/content/)*/ction/location/*[ auto ](/docs/reference/foundations/auto/)*///*[ int
](/docs/reference/foundations/int/)*/rence/foundations/selector/)

====  ` others `

[ str ](/docs/reference/foundations/str/) or  [ regex
](/docs/reference/foundations/regex/) or  [ label
](/docs/reference/foundations/label/) or  [ selector
](/docs/reference/foundations/selector/) or  [ location
](/docs/reference/introspe/*[ show rules
](/docs/reference/styling/#show-rules)*/oundations/*[ ` where `
](/docs/reference/foundations/function/#definitions-where)*/s are specified in order, without names.

Variadic

Question mark

Variadic parameters can be specified multiple times.

The other selectors to match on.

===  ` /*![Preview](/assets/docs/bzf3klNJ674BqVarCEGU8wAAAAAAAAAA.png)*/ements that occur before
the first match of ` end ` .

self  .  before  (

[ lab/*[Preview](/assets/docs/_pDm-P05bg_jGbl9uvGjlAAAAAAAAAAA.png)*/reference/foun/*[ int ](/docs/reference/foundations/int/)*/erence/introspection/location/) [ function
](/docs/reference/foundations/function/) ,  inclusive  :  [ bool
](/docs/reference/foundations/bool/) ,

)  -> [ selector ](/docs/reference/foundations/selector/)

====  ` end `

[ label ](/docs/reference/foundations/label/) or  [ selector
](/docs/reference/foundations/selector/) or  [ location
](/docs/reference/introspection/location/) or  [ function
](/docs/reference/foundations/function/)

Required  Positional

Question mark

Positional parameters are specified in order, without n/*[ int ](/docs/reference/foundations/int/)*/ the first match of ` end ` .

====  ` inclusive `

[ bool ](/docs/reference/foundations/bool/)

Whether ` end ` itself should match or not. This is only relevant if both
selectors match the same type of element. Defaults to ` true  ` .

Default: ` true  `

===  ` after `

Returns a modified selector that will only match elements that occur after the
first match of ` start ` .

self  .  after  /*![Preview](/assets/docs/_2kRnAjhpZZ-kvJsytflygAAAAAAAAAA.png)*/(/docs/ref/*[Preview](/assets/docs/hKtWik5-HwMMejqOwDVKLAAAAAAAAAAA.png)*/ntrospection/locat/*[ none ](/docs/reference/foundations/none/)*/o/*[ str
](/docs/reference/foundations/str/)*/d/*[ function
](/docs/reference/foundations/function/)*/r ](/docs/reference/foundations/selector/)

====  ` start `

[ label ](/docs/reference/foundations/label/) or  [ selector
](/docs/reference/foundations/selecto/*[ numbering patte/*![â](/assets/icons/16-arrow-right.svg)*/umbering/)*/ function
](/docs/reference/foundations/functio/*![â](/assets/icons/16-arrow-right.svg)*/

Positional parameters are specified in order, without names.

The original selection will star/*![Docs](/assets/icons/16-docs-dark.svg)*/8zFF4SfNqscPeLbAAAAAAAAAAA.png)*/docs/reference/foun/*[ none ](/docs/reference/foundations/none/)*/o/*[ auto
](/docs/reference/foundations/auto/)*/b/*[ content
](/docs/reference/foundations/content/)*/a/*[ function
](/docs/reference/foundations/function/)*/assets/icons/16-arrow-right.svg) Representation  Previous page
](/docs/reference/foundations/repr/) [ ![â](/assets/icons/16-arrow-
right.svg) String  Next page  ](/docs/reference/foundations/str/)



= *docs/reference/model/document.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Model ](/docs/reference/model/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Docume/*![](/assets/icons/16-arrow-right.svg)*/

=  ` document ` Element

Question mark

Element functions can /*[Preview](/assets/docs/OZMUTnmWZCt9L0XUTDaRmQAAAAAAAAAA.png)*/ement of a docume/*[ bool ](/docs/reference/foundations/bool/)*/omatically wrapped in a ` document ` element. You cannot
create a document element yourself. This function is only used with [ set
rules ](/docs/reference/styling//*[ outline
](/docs/reference/model/outline/ "outline")*/rule must not occur inside of any layout container.

    
    
    #set document(title: [Hello])
  /*![â](/assets/icons/16-arrow-right.svg)*/   embeds metadata into the PDF!
    

![Preview](/assets/docs/g-R4wkXOtFnr5QmDRHynVAAAAAAAAAAA.png)

Note th/*![Docs](/assets/icons/16-docs-dark.svg)*/ot rendere/*![](/assets/icons/16-arrow-right.svg)*/ embedded in the compiled PDF file.

/*![](//*[Preview](/assets/docs/SC7LmnRUxtrvxQL331fpfAAAAAAAAAAA.png)*/ion. They are specified in /*[Preview](/assets/docs/q3R6803Mv9D8hpPx5wD4TgAAAAAAAAAA.png)*/ [ none ](/docs/ref/*[ auto ](/docs/reference/foundations/auto/)*///*[ bool
](/docs/reference/foundations/bool/*![â](/assets/icons/16-arrow-right.svg)*/ns/str/) [ array
](/docs/reference/foundations/array/)/*![â](/assets/icons/16-arrow-right.svg)*//foundations/str/) [ array
](/docs/reference/foundations/array/) ,  date  :  [ none
](/docs//*![Docs](/assets/icons/16-docs-dark.svg)*/docs/reference/foundations/auto/) [ datetime
](/docs/reference/foundations/datetime/) ,

)  -> [ content ](/docs/reference/foundations/content/)

===  ` title `

[ none ](/docs/reference/foundat/*[ outline
](/docs/reference/model/outline/ "outline")*/ns/content/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The document's title. This is often rendered as the title of the PDF viewer
window.

While this can be arbitrary content, PDF viewers only support plain text
titles, so the conversion might be lossy.

Default: ` none  `

===  ` author `

[ str ](/docs/reference/foundations//*[Preview](/assets/docs/_UvMUDZOtTdH4i83Hac2iwAAAAAAAAAA.png)*/table

Question mark

S/*[ auto ](/docs/reference/foundations/auto/)*/l/*[ length
](/docs/reference/layout/length/)*/et ` rule.

The document's authors.

Default: ` (  )  `

===  ` keywords `

[ str ](/docs/reference/foundations/str/) or  [ array
](/docs/reference/foundations/array/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The document's keywords.

Default: ` (  )  `

===  ` date `

[ none ](/docs/reference/foundations/none/) or  [ auto
](/docs/reference/foundations/auto/) or  [ datetime
](/docs/reference/foundations/datetime//*[Preview](/assets/docs/35Dg34kG-7rg1-RFp8FaIgAAAAAAAA/*![Preview](/assets/docs/IJ3xnmEzh6yEddeM44ev3wAAAAAAAAAA.png)*/ns/content/)*/le.

The document's creation date.

If this is ` auto  ` (default), Typst uses the current date and time. Setting
it to/*[ ![â](/assets/icons/16-arrow-right.svg)*/ny creation date into the PDF
metadata.

The year compon/*[ ![â](/assets/icons/16-arrow-right.svg)*/mbedded into a PDF.

If you want to create byte-by-byte reproducible PDFs, set this to some/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/auto  `

[ ![â](/assets/icons/16-arrow-right.svg) /*[ Reference ](/docs/reference/)*/erence/model/cite/) [ ![â](/assets/icons//*[ Model ](/docs/reference/model/)*/t page  ](/docs/reference/model/emph/)



=/*[ Numbering ](/docs/reference/model/numbering/)*/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Model ](/docs/reference/model/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/model/ref/)

=  ` ref ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

A reference to a label or bibliography.

Produces a textual reference to a label. For example, a reference to a heading
will yield an appropriate string such as "Section 1" for a reference to the
first heading. The references are also links to th/*[Preview](/assets/docs/ViM4jxlRNjTCcZLHAqTQsQAAAAAAAAAA.png)*/ cite ](/docs/reference/model/cite/
"cite") from a bibliography.

Referenceable elements include [ headings ](/docs/reference/model/heading/) ,
[ figures ](/docs/reference/model/fi/*[ headings
](/docs/reference/model/heading/)*//*[ figures
](/docs/reference/model/figure/)*/ence/model/footnote/) . To create a custom referenceable element
like a theore/*[ ` numbering `
](/docs/reference/model/numbering/#parameters-numbering)*/l/figure/#parameters-kind) and write a show rule for it.
In the future, there might be /*[ function ](/docs/reference/foundations/function/ "function")*/f you just want to link to a l/*[ ` content ` ](/docs/reference/foundations/content/
"`content`")*/der using the [ ` link ` ](/docs/reference/model/link/
"`link`") function instead.

==  Example

    
    
    #set heading(numbering: "1.")
    #set m/*[Preview](/assets/docs/y3Y2xT6PKYJ3nJF6y9bcPwAAAAAAAAAA.png)*/o>
    Recent developments in
    typesetting software have
    rekindled hope in previously
    frustrated researchers. @distress
    As shown /*[ str ](/docs/reference/foundations/str//*[ function
](/docs/reference/foundations/function/)*/riso/*[ int
](/docs/reference/foundations/int/)*/erf>
    @slow demonstrates wha/*[ str ](/docs/reference/foundations/str/)*/)/*[ functio/*![](/assets/icons/16-arrow-right.svg)*/ion/)*/b")
    

![Preview](/assets/docs/bzf3klNJ674BqVarCEGU8wAAAAAAAAAA.png)

==  Syntax

This function also has dedicated syntax: A reference to a label can be created
by typing an ` @ ` followed by the name of the label (e.g. ` = Introduction
<intro> ` can be referenced by typing ` @intro  ` ).

To customize the supplement, add content in square brackets after the
reference: ` @intro  [  Chapter  ]  ` .

==  Customization

If you write a show rule for references, you can access the referenced element
through the ` element ` field of the reference. The ` element ` may be ` none
` even if it exists if Typst hasn't discovered it yet, so you always need to
handle that case in your code.

    
    
    #set heading(numbering: "1.")
    #set math.equation(numbering: "(1)")
    
    #show ref: it => {
      let eq = math.equation
      let el = it.element
      if el != none and el.func() == eq {
        // Override equation references.
        link(el.location(),numbering(
          el.numbering,
          ..counter(eq).at(el.location())
        ))
      } else {
        // Other references as usual.
        it
      }
    }
    
    = Beginnings <beginning>
    In @beginning we prove @pythagoras.
    $ a^2 + b^2 = c^2 $ <pythagoras>
    

![Preview](/assets/docs/_2kRnAjhpZZ-kvJsytflygAAAAAAAAAA.png)

== /*[ int ](/docs/reference/foundations/int/)*/e the inputs to a function. They are specified in parentheses
after the function name.

ref  (

[ label ](/docs/reference/foundations/label/) ,  supplement  :  [ none
](/docs/reference/foundations/none/) [ auto
](/docs/reference/foundations/auto/) [ content
](/docs/reference/foundations/content/) [ function
](/docs/reference/foundations/function/) ,

)  -> [ content /*[ ![â](/assets/icons/16-arrow-right.svg)*/==  ` target `

[ label ](/docs/reference/foundations/lab/*[ ![â](/assets/icons/16-arrow-right.svg)*/
Positional parameters are specified in order, without names.

The target label that should be/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ned in the document or an entry from the [ `
bibliog/*[ Reference ](/docs/reference/)*//bibliography/ "`bibliography`") .

===  ` /*[ Model ](/docs/reference/model/)*/rence/foundations/none/) or  [ auto
](/docs/*[ Strong Emphasis ](/docs/reference/model/strong/)*/s/reference/foundations/content/) or  [ function
](/docs/reference/foundations/function/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

A supplement for the reference.

For references to headings or figures, this is added before the referenced
number. For citations, this can be used to add a /*[Preview](/assets/docs/8PFV4SUNXNbbYe9uHW1ITAAAAAAAAAAA.png)*/eferenced element and should
return content.

Default: ` auto  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set heading(numbering: "1.")
    #set ref(supplement: it => {
      if it.func() == heading {
        "Chapter"
      } else {
        "Thing"
      }
    })
    
    = Introduction <intro>
    In @intro, we see how to turn
    Sections into Chapters. And
    in @i/*[ int ](/docs/reference/foundations/int/)*//*[ content
](/docs/reference/foundations/content/)*/AAAAAA/*[ content ](/docs/reference/foundations/content/)*/vg) Quote  Pre/*[ int ](/docs/reference/foundations/int/)*/) [ ![â](/assets/icons/16-arrow-right.svg)
Strong Emphasis  Next page  ](/docs/reference/model/strong/)



= *docs/reference/model/bibliography.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](//*[Preview](/assets/docs/SC7LmnRUxtrvxQL331fpfAAAAAAAAAAA.png)*/ce/model/)
  /*[ content ](/docs/reference/foundations/content/)*/liography ](/docs/reference/model/bibliography/)

=  ` bibliography ` Element

Question mark

Element functions can be customized wit/*[ ![â](/assets/icons/16-arrow-right.svg)*/aphy / reference listing.

You can create a new bibl/*[ ![â](/assets/icons/16-arrow-right.svg)*/ath to a
bibliography file in either one of two formats:

  - A Hayagriva ` .yml ` file. H/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/t designed for use with Typst. Visit its [ documenta/*[ Reference ](/docs/reference/)*//hayagriva/blob/main/docs/file-format.md) f/*[ Model ](/docs/reference/model/)*/` .bib ` file. 

As soon as you add a bibli/*[ Outline ](/docs/reference/model/outline/)*/ start
citing things with reference syntax ( ` @key  ` ) or explicit calls to the [
citation ](/docs/reference/model/cite/) function ( ` #  cite  (  <key> )  ` ).
The bibliography will only show entries for works that were referenced in the
document.

==  Styles

Typst offers a wide selection of built-in [ citation and bibliography styles
](/docs/reference/model/bibliography/#parameters-style) . Beyond those, you
can add and use custom [ CSL ](https://citationstyles.org/) (Citation Style
Language) files. Wondering which style t/*[Preview](/assets/docs/pxzEoLgfS9GjzIb6I2LlEgAAAAAAAAAA.png)*/you're working in:

Fields  |  Typical Styles   
---|---  
Engineering, IT  |  ` "ieee"  `  
Psychology, Life Sciences  |  ` "apa"  `  
Social sciences  |  ` "chicago-author-date"  `  
Humanities  |  ` "mla"  ` , ` "chicago-notes"  ` , ` "harvard-cite-them-right"  `  
Economics  |  ` "harvard-cite-them-right"  `  
Physics  |  ` "american-physics-society"  `  
  
==  Example

    
    
    This was already noted by
    pirates long ago. @arrgh
  /*[ see here
](/docs/reference/foundations/function/#definitions-where)*/raphy("works.bib")
    

![Preview](/assets/docs/IJ3xnmEzh6yEddeM44ev3wAAAAAAAAAA.png)

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses/*[Preview](/assets/docs/K0Fgir_M6IbOnlxFTpRoyAAAAAAAAAAA.png)*/ference/foundations/str/) [ array
](/docs/reference/foundations/array/) ,  title  :  [ none
](/docs/reference/foundations/none/) [ auto
](/docs/reference/foundations/auto/) [ content
](/docs/reference/foundations/content/) ,  full  : /*[ ` outline.entry `
](/docs/reference/model/outline/#definitions-entry)*//reference/foundations/str/) ,

)  -> [ content ](/docs/reference/foundations/content/)

===  ` path `

[ str ](/docs/reference/foundations/str/) or  [ arr/*![â](/assets/icons/16-arrow-right.svg)*/ions/none//*[ auto
](/docs/reference/foundatio/*![â](/assets/icons/16-arrow-right.svg)*/undations/content/)*/mes.

Path(/*[ label
](/docs/reference/foundations/label//*[ selector
](/docs/reference/foundations/selector//*[ location
](/docs/reference/introspection/location//*[ function
](/docs/reference/foundations/function/)/*![](/assets/icons/16-arrow-right.svg)*/e/foundations/none//*[ int ](/docs/refe/*![](/assets/icons/16-arrow-right.svg)*/*[ none ](/docs/reference/foundations/none//*[ auto
](/docs/reference/foundations/auto//*[ bool
](/docs/reference/foundations/bool//*[ relative
](/docs/reference/layout/relative//*[ function
](/docs/reference/foundations/function/)*/d. This i/*[ none
](/docs/reference/foundations/none//*[ content
](/docs/reference/foundations/content/)*/A cust/*[ content ](/docs/reference/foundations/content/)*/liography's he/*[ none ](/docs/reference/foundations/none/)*/y/*[ auto
](/docs/reference/foundations/auto/)*/ /*[ content
](/docs/reference/foundations/content/)*/g  :  "1."  )  `

Default: ` auto  `

===  ` full `

[ bool ](/docs/reference/foundations/bool/)

Settable

Question mark

Settable parameters can be customized for all foll/*![â](/assets/icons/16-arrow-right.svg)*/t language ](/docs/reference/text/text/#parameters-lang)*/ib/*![â](/assets/icons/16-arrow-right.svg)*/ cited in the document.

To selectively add individual cited works without showing them, you/*![Docs](/assets/icons/16-docs-dark.svg)*/h [ ` form `
](/docs/reference/model/cite/#parameters-form) set to ` none  ` .

Default: ` false  `

===  ` style `

[ str ](//*![/*[ Model ](/docs/reference/model/)*/table

Question /*[ label ](/docs/reference/foundations/label/)*/o/*[ selector
](/docs/reference/foundations/selector/)*/ /*[ location
](/docs/reference/introspection/location/)*/o/*[ function
](/docs/reference/foundations/function/)*/CSL
file ](https://citationstyles.org/) . Some of the styles listed below appear
twice, once with their full name and once with a short alias.

![](/assets/icons/16-arrow-right.svg) View options

Variant  |  Details   
---|---  
` "  alphanumeric  " ` |  Alphanumeric   
` "  american-anthropological-association  " ` |  American Anthropological Association   
` "  american-chemical-society  " ` |  American Chemical Society   
` "  american-geophysical-union  " ` |  American Geophysical Union   
` "  american-institute-of-aeronautics-and-astronautics  " ` |  American Institute of Aeronautics and Astronautics   
` "  american-institute-of-physics  " ` |  American Institute of Ph/*[Preview](/assets/docs/9oD_YO_3aaN85cAixeBP2gAAAAAAAAAA.png)*/|  American Me/*[ none ](/docs/reference/foundations/none/)*/i/*[ int
](/docs/reference/foundations/int/)*/an Meteorological Society   
` "  american-physics-society  " ` |  American Physical Society   
` "  american-physiological-society  " ` |  American Physiological Society   
` "  american-political-science-association  " ` |  American Political Science Association   
` "  american-psychological-association  " ` |  American Psychological Association 7th edition   
` "  american-society-for-microbiology  " ` |  American Society for Microbiology   
` "  american-society-of-civil-engineers  " ` |  America/*[Preview](/assets/docs/fYEfgTUmkbH0skbcMKeSFwAAAAAAAAAA.png)*/hanical-enginee/*[ none ](/docs/reference/foundations/none/)*/n/*[ auto
](/docs/reference/foundations/auto/)*/i/*[ bool
](/docs/reference/foundations/bool/)*/t/*[ relative
](/docs/reference/layout/relative/)*/ /*[ function
](/docs/reference/foundations/function/)*/ "  annual-reviews  " ` |  Annual Reviews (sorted by order of appearance)   
` "  annual-reviews-author-date  " ` |  Annual Reviews (author-date)   
` "  associacao-brasileira-de-normas-tecnicas  " ` |  AssociaÃ§Ã£o Brasileira de Normas TÃ©cnicas (PortuguÃªs - Brasil)   
` "  association-for-computing-machinery  " ` |  Association for Computi/*[ heading numbering ](/docs/reference/model/heading/#parameters-numbering)*/-univ/*[ Relative length ](/docs/reference/layout/relative/)*/ british-medical-journal  " ` |  BMJ   
` "  cell  " ` |  Cell   
` "  chicago-author-date  " ` |  Chicago Manual of Style 17th edition (author-date)   
` "  chicago-fullnotes  " ` |  Chicago Manual of Style 17th edition (full note)   
` "  chicago-notes  " ` |  Chicago M/*[ Function ](/docs/reference/foundations/function/)*/us  " ` |  Copernicus Publications   
` "  council-of-science-editors  " ` |  Council of Science Editors, Citation-Sequence (numeric, brackets)   
` "  council-of-science-editors-author-date  " ` |  Council of Science Editors, Name-Year (author-date)   
` "  current-opinion  " ` |  Current Opinion journals   
` "  deutsche-gesellschaft-fÃ¼r-psychologie  " ` |  Deutsche Gesellschaft fÃ¼r Psychologie 5. Auflage (Deutsch)   
` "  deutsche-sprache  " ` |  Deutsche Sprache (Deutsch)   
` "  elsevier-harvard  " ` |  Elsevier - Harvard (with titles)   
`/*![](/assets/icons/16-arrow-right.svg)*/er - Vancouver   
` "  elsevier-with-titles  " ` |  Elsevier (numeric, with titles)   
` "  frontiers  " ` |  Frontiers journals   
` "  future-medicine  " ` |  Future Me/*![Preview](/assets/docs/hKtWik5-HwMMejqOwDVKLAAAAAAAAAAA.png)*/ Group   
` "  gb-7714-2005-numeric  " ` |  China National Standard GB/T 7714-2005 (numeric, ä¸­æ)   
` "  gb-7714-2015-author-date  " ` |  China National Standard GB/T 7714-2015 (author-date, ä¸­æ)   
` "  gb-7714-2015-note  " ` |  C/*[Preview](/assets/docs/VxzAmxCU1uGgVW2hebfhtwAAAAAAAAAA.png)*/ gb-7714-2015/*[ none ](/docs/reference/foundations/none/)*///*[ content
](/docs/reference/foundations/content/)*/2008-numeric  " ` |  Russian GOST R 7.0.5-2008 (numeric)   
` "  harvard-cite-them-right  " ` |  Cite Them Right 12th edition - Harvard   
` "  institute-of-electrical-and-electronics-engineers  " ` |  IEEE   
` "  institute-of-physics-numeric  " ` |  Institute of Physics (numeric)   
` "  iso-690-author-date  " ` |  ISO-690 (author-date, English)   
` "  iso-690-numeric  " ` |  ISO-690 (numeric, English)   
`/*[Preview](/assets/docs/KQmhOQJ1ylUUEeut6OI0rQAAAAAAAAAA.png)*/vancouver  " ` |  Mary Ann Liebert - Vancouver   
` "  modern-humanities-research-association  " ` |  Modern Humanities Research Association 4th edition (note with bibliography)   
` "  modern-language-association  " ` |  Modern Language Association 9th edition   
` "  modern-language-association-8  " ` |  Modern Language Association 8th e/*![](/assets//*[ int ](/docs/reference/foundations/int/)*/titute  " ` |  Multidisciplinary Digital Publishing Institute   
` "  nature  " ` |  Nature   
` "  pensoft  " ` |  Pensoft Journals   
` "  public-library-of-science  " ` |  Public Library of Science   
` "  royal/*![Preview](/assets/docs/OZMUTnmWZCt9L0XUTDaRmQAAAAAAAAAA.png)*/ "  sage-vancouver  " ` |  SAGE - Vancouver   
` "/*[ int ](/docs/reference/foundations/int/)*//*[ content
](/docs/reference/foundations/content/)*//*[ content
](/docs/reference/foundations/content/)*//*[ none
](/docs/reference/foundations/none//*[ content
](/docs/reference/foundations/content/)*//*[ content
](/docs/reference/foundations/content/)*/pringe/*[ content ](/docs/reference/foundations/content/)*/h)   
` "  springer-humanities-author-date  " ` |  Springer - Humanities (author-date)   
` "  springer-lecture/*![](/assets/icons/16-arrow-right.svg)*/ringer - Lecture Notes in Computer Science   
` "  springer-mathphys  " ` |  Springer - MathPhys (numeric, brackets)   
` "  springer-socpsych-author-date  /*[Preview](/assets/docs/z5yX2QHZa1YP1epncxVx1/*![Preview](/assets/docs/q3R6803Mv9D8hpPx5wD4TgAAAAAAAAAA.png)*/undations/int/)*/taylor-and-francis-chicago-author-date  " ` |  Taylor & Francis - Chicago Manual of Style (author-date)   
` "  taylor-and-francis-national-library-of-medicine  " ` |  Taylor & Francis - National Li/*[ content ](/docs/reference/foundations/content/)*/neering-and-technology  " ` |  The Institution of Engineering and Technology   
` "  the-lancet  " ` |  The Lancet   
` "  thieme  " ` |  Thieme-German (Deutsch)   
` "  tren/*[
` location ` ](/docs/reference/foundations/content/#definitions-location)*/h edition (author-date)   /*[ linked ](/docs/reference/model/link/)*/ian 8th edition (f/*[ content ](/docs/reference/foundations/content/)*/` "  vancouver-superscript  " ` |  Vancouver (superscript)   
  
Default: ` "ieee"  `

[ ![â](/assets/icons/16-arrow-right.svg) Model  Previous page
](/docs/reference/model/) [ ![â](/assets/icons/16-arrow-right.svg) Bullet
List  Next page  ](/docs/reference/model/list/)



= *docs/referen/*[ none ](/docs/reference/foundations/none/)*///*[ content
](/docs/reference/foundations/content/)*/icons//*![Preview](/assets/docs/_UvMUDZOtTdH4i83Hac2iwAAAAAAAAAA.png)*/[](/assets/icons/16-arrow-right.svg)
  - [ Model ](/docs/reference/model/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Heading ](/docs/reference/model/heading/)

=  ` heading ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

A section heading.

With headings, you can structure your document into sect/*[ ` box `
](/docs/reference/layout/box/ "`box`")*/t one and is unbounded upwards. This level ind/*![](/asse/*[ unordered list ](/docs/reference/model/list/)*/ subsection, etc.) A top-
level heading indicates a top-level section of the docu/*[ content ](/docs/referen/*![Preview](/assets/docs/35Dg34kG-7rg1-RFp8FaIgAAAAAAAAAA.png)*/ou. To enable numbering,
specify how you want your headings to be numbered with a [ numbering pattern
or function ](/docs/reference/model/numbering/) .

Independently of the/*[ ![â](/assets/icons/16-arrow-right.svg)*/enerate an [
outline ](/docs/reference/model/outline/ "out/*[ ![â](/assets/icons/16-arrow-right.svg)*/ one or more headings from this outline, you can set the ` outlined
` parameter to ` false/*[ ![Docs](/assets/icons/*![Docs](/assets/icons/16-docs-dark.svg)*/.a)")
    /*![](/assets/icons/16-arrow-right.svg)*/](/docs/reference/)*/== Preliminaries/*![](/assets/icons/16-arrow-right.svg)*/](/docs/reference/model/)*/DYZCkAh9ZJwA/*![](/assets/icons/16-arrow-right.svg)*/mbered List ](/docs/reference/model/enum/)*/ed by starting a line with
one or multiple equals signs, followed by a space. The number of equals signs
determines the heading's logical nesting depth. The ` offset ` field can be
set to configure the starting depth.

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

heading  (

level  :  [ auto ](/docs/reference/foundations/auto/) [ int
](/docs/reference/foundations/int/) ,  depth  :  [ int
](/docs/reference/foundations/int/) ,  offset  :  [ int
](/docs/reference/foundations/int/)/*[Preview](/assets/docs/HrnJ1mRKvbXNf6U4DmZCaAAAAAAAAAAA.png)*/) [ str ](/docs/reference/foundations/str/)
[ function ](/docs/reference/foundations/function/) ,  supplement  :  [ none
](/docs/reference/foundations/none/) [ auto
](/docs/reference/foundations//*[Preview](/assets/docs/hFb68a8DC-Rvf_eMOYtVMwAAAAAAAAAA.png)*/unction
](/docs/*[ ` enum.item ` ](/docs/reference/model/enum/#definitions-
item)*//reference/foundations/bool/) ,  bookmarked  :  [ auto
](/docs/reference/foundations/auto/) [ bool
](/docs/reference/foundations/bool/) ,  hanging-indent  :  [ auto
](/docs/reference/foundations/auto/) /*[Preview](/assets/docs/uRQbjXrkv7FwltBxluVMMAAAAAAAAAAA.png)*/ocs/reference/foundations/content//*![â](/assets/icons/16-arrow-right.svg)*/oundations/content/)

===  ` level `

[ auto ](/do/*![â](/assets/icons/16-arrow-right.svg)*/t
](/docs/reference/foundations/int/)

Settable

Question mark

Settable parameters can be customiz/*![Docs](/assets/icons/16-docs-dark.svg)*/on
with a ` set ` rule.

The a/*![Preview](/assets/d/*[ Reference ](/docs/reference/)*/ne. If set to ` auto
` , it is computed from ` offset  +  depth ` .

This is primarily useful for usage in [ show rules
](/docs/reference/styling/#show-rules) (either with [ ` w/*[ bool ](/docs/reference/foundations/bool/)*/on/#definition/*[ str
](/docs/reference/foundations/str//*[ function
](/docs/reference/foundations/function/)*/to  `

![]/*[ int
](/docs/reference/foundations/int/)*/xample

 /*[ bool
](/docs/reference/foundations/bool/)*/ set text(r/*[ length
](/docs/reference/layout/length/)*/
    #set headin/*[ length
](/docs/reference/layout/length/)*/el 3
    

!/*[ auto
](/docs/reference/foundations/auto//*[ length
](/docs/reference/layout/length/)*/t ](/docs/referen/*[ alignment
](/docs/reference/layout/alignment/)*/etta/*[ content
](/docs/reference/foundations/content//*[ array
](/docs/reference/foundations/array/)*/.

The/*[ content ](/docs/reference/foundations/content/)*/from one. This/*[ bool ](/docs/reference/foundations/bool/)*/ actual ` level ` .

This is set by the heading syntax, such that ` == Heading  ` creates a heading
with logical depth of 2, but actual level /*[ spacing ](/docs/reference/model/enum/#parameters-
spacing)*/ should typically prefer this over setting the absolute
level.

Default/*[ paragraph spacing ](/docs/reference/model/par/#parameters-spacing)*/

Settable

Question mark

Se/*[ paragraph leading
](/docs/reference/model/par/#parameters-leading)*/nction
with a ` set ` rule.

The starting offset of each heading's ` level ` , used to turn its relative `
depth ` into its absolute ` level ` .

Default: ` 0  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    = Level 1
    
    #set heading(offset: 1, numbering: "1.1")
    = Level 2
    
    #heading(offset: 2, depth: 2)[
      I'm level 4
    ]
    

![Preview](/assets/docs/hKtWik5-HwMMejqOwDVKLAAAAAAAAAAA.png)

===  ` numbering `

[ none ](/docs/reference/foundations/none/) or  [ str
](/docs/reference/foundations/str/) or  [ function
](/docs/reference/foundations/function/)

Settable

Question mark

Settable parameters can be customized for all following uses of/*[Preview](/assets/docs/CGCi1WYCPLux25Xc9ZWwDQAAAAAAAAAA.png)*/g. Accepts a [ num/*[ str ](/d/*![â](/assets/icons/16-arrow-right.svg)*/nction
](/docs/reference/foundations/function/)*/sets/icons/*![â](/assets/icons/16-arrow-right.svg)*/    
    #set heading(numbering: "1.a.")
    
    = A section
    == A subsection
    === A sub-/*![Docs](/assets/icons/16-docs-dark.svg)*/or function
](/docs/reference/model/numbering/)*/ ` supplement `

[ none ](/docs/reference/f/*![](/assets/ico/*[ ` table.cell `
](/docs/reference/model/table/#definitions-cell)/*![](/assets/icons/16-arrow-right.svg)*//) or  [ function
](/docs/reference/foundations/function/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

A supplement for the heading.

For references to headings, this is added before the referenced number.

If a function is specified, it is passed the refer/*[Preview](/assets/docs/b_5poTPc-SH9hcwOp4TcbAAAAAAAAAAA.png)*/

![](/assets//*[ int ](/*![Preview](/assets/docs/8PFV4SUNXNbbYe9uHW1ITAAAAAAAAAAA.png)*/numbering: "1.", supplement: [Chapter])
    
    = Introduction <intro>
    In @intro, we see how to turn
    Sections into Chapters. And
    in @intro[Part], it is done
    manually.
    

![Preview](/assets/docs/OZMUTnmWZCt9L0XUTDaRmQAAAAAAAAAA.png)

===  ` outlined `

[ bool ](/docs/refere/*[Preview](/assets/docs/NqaMIUfLtrq2fhf9xChjagAAAAAAAAAA.png)*/rameters can /*[ bool ](/docs/reference/foundations/bool/)*/ function
with a ` set ` rule.

Whether the heading should appear in the [ outline
](/docs/reference/model/outline/ "outline") .

Note that this property, if set to ` true  ` , ensures the heading is also
shown as a bookmark in the exported PDF's outline (when exporting to PDF). To
change that behavior, use the ` bookmarked ` property.

Default: ` true  `

![](/assets/icons/16-arrow-right.svg) View example

/*[Preview](/assets/docs/ecL0fn92ARx_6xbLZYFkVAAAAAAAAAAA.png)*/is a normal hea/*[ length ](/docs/reference/layout/length/)*/idden]
    This heading does not appear
    in the outline.
    

![Preview](/assets/docs/q3R6803Mv9D8hpPx5wD4TgAAAAAAAAAA.png)

===  ` bookmarked `

[ auto ](/docs/reference/foundations/auto/) /*[ length ](/docs/reference/layout/length/)*/ool/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

Whether the heading should appear as a bookmark in the exported PDF's outline.
Doesn't aff/*[ auto ](/docs/reference/foundations/auto/)*/ /*[ length
](/docs/reference/layout/length/)*/the heading will only appear in
the exported PDF's outline if its ` outlined ` property is set to ` true  ` ,
that is, if it would also be listed in Typst's [ outline
](/docs/reference/model/outline/ "outline")/*[ ` leading `
](/docs/reference/model/par/#parameters-leading)*/alse  ` (don't bookmark) bypasses /*[ ` spacing ` ](/docs/reference/model/par/#parameters-spacing)*/-right.svg) View example

    
    
    #heading[Normal heading]
    This he/*[ alignment ](/docs/reference/layout/alignment/)*/tline.
    
    #heading(bookmarked: false)[Not bookmarked]
    This heading won't be
    bookmarked in the resulting
    PDF.
    

![Preview](/assets/docs/_UvMUDZOtTdH4i83Hac2iwAAAAAAAAAA.png)

===  ` hanging-indent `

[ auto ](/docs/reference/foundations/auto/) or  [ length
](/docs/reference/layout/length/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The indent all but the first line of a heading should have.

The default value of ` auto  ` indicates that the subsequent heading lines
will be indented based on the width of the numbering.

Default: ` auto  `

![](/asse/*[ unordered list ](/docs/reference/model/list/)*/
    
    #set heading(numbering: "1.")
    #heading[A very, very, very, very, very, very long heading]
    

![Preview](/assets/docs/35Dg34kG-7rg1-RFp8FaIgAAAAAAAAAA.png)

===  ` body `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The heading/*[Preview](/assets/docs/s-zUl9r9z6yKdW4VnsLi_AAAAAAAAAAA.png)*/te  Previous page/*[ content ](/docs/reference/foundations/content/)*/e/*[ array
](/docs/reference/foundatio/*![Preview](/assets/docs/K0Fgir_M6IbOnlxFTpRoyAAAAAAAAAAA.png)*/nce/model/numbering.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Model ](/docs/reference/model/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Numbering ](/docs/reference/model/numbering/)

=  ` numbering `

Applies a numbering to a sequence of numbers.

A numbering defines how a sequence of numbers/*[Preview](/assets/docs/9haSHPkr8gDAx-1cEtmf8QAAAAAAAAAA.png)*/h a pattern string or an arbitrary function.

A numbering pattern consists of counting symbols, for which the actual number
is substituted, their prefixes, and one suffix. The prefixes and the suffix
are repeated as-is.

==  Example

    
    
    #numbering("1.1)", 1, 2, 3) \
    #numbering("1.a.i", 1, 2) \
    #numbering("I â 1", 12, 2) \
 /*[ none ](/docs/reference/foundations/none//*[ int
](/docs/reference/foundations/int/)*//*[ content
](/docs/reference/foundations/content/)*/iew](//*[ content ](/docs/reference/foundations/content/)*/

==  Numbering /*[ none ](/docs/reference/foundations/none/)*/ /*[ int
](/docs/reference/foundations/int/)*/a numbering pattern or
function in Typst. For example, when defining how to number [ headings
](/docs/reference/model/heading/) or [ figures
](/docs/reference/model/figure/) . Every time, the expected format is the same
as the one described below for the [ ` numberin/*[ content ](/docs/reference/foundations/content/)*/-numbering) parameter.

The following example illustrates that a numbering function is just a regular
[ function ](/*[ ![â](/assets/icons/16-arrow-right.svg)*/ction") that accepts
numbers and returns [ ` con/*[ ![â](/assets/icons/16-arrow-right.svg)*/nt/
"`content`") .

    
    
    #let unary(.., last) = "|" * last
    #set heading(numbering: u/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ading
    = Third heading
    

![Preview](/assets/d/*[ Reference ](/docs/reference/)*/AAAAA.png)

==  Parameters

Question mark

/*[ Model ](/docs/reference/model/)*/nction. They are specified in parentheses
a/*[ Table ](/docs/reference/model/table/)*/[ str ](/docs/reference/foundations/str/) [ function
](/docs/reference/foundations/function/) ,  ..  [ int
](/docs/reference/foundations/int/) ,

)  -> any

===  ` numbering `

[ str ](/docs/reference/foundations/str/) or  [ function
](/docs/reference/foundations/function/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

/*[ table guide ](/docs/guides/table-guide/)*/g symbols* are ` 1 ` , ` a ` , ` A ` , ` i ` , ` I ` , ` ä¸ ` , `
å£¹ ` , ` ã ` , ` ã ` , ` ã¢ ` , ` ã¤ ` , ` × ` , ` ê°/*[ grid documentation
](/docs/reference/layout/grid/)*/re replaced by the number in the sequence,
preserving the original case.

The ` * ` ch/*![](/assets/icons/16-arrow-right.svg)*/used to count, in the order
of ` * ` , ` â ` , ` â¡ ` , ` Â§ ` , ` Â¶ ` , ` â ` . If there are more
than six items, the number is represented using repeated symbols.

*Suffixes* are all characters after the last counting symbol. They are
repeated as-is at the end of any rendered /*![Preview](/assets/docs/9oD_YO_3aaN85cAixeBP2gAAAAAAAAAA.png)*/ing symbols nor
suffixes. They are repeated as-is at in front of their rendered equivalent of
their counting symbol.

This parameter can also be an arbitrary function that gets each number as an
individual argument. When given a function, the ` numbering ` function just
forwards the arguments to that function. While this is not particularly useful
in it/*[ ` table.cell `
](/docs/reference/model/table/#definitions-cell)*/ `
numbering ` function without caring whether they are defined as a pattern or
function.

===  ` numbers `

[ int ](/docs/reference/foundations/int/)

Required  Positional

Question mark

Positional parameters a/*[ referenceable
](/docs/reference/model/ref/)*/ic

Question /*[ figure
](/docs/reference/model/figure/ "figure")*/e times.

The numbers to apply the numbering to. Must be positive.

If ` numbering ` is a pattern and more numbers than counting symbols are
given, the last counting symbol with its prefix is repeated.

[ ![â](/assets/icons/16-arrow-right.svg) Numbered List  Previous page
](/docs/reference/model/enum/) [ ![â](/assets/icons/16-arrow-right.svg)
Outline  Next page  ](/docs/reference/model/outline/)



= *docs/reference/model/strong.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - !/*[Preview](/assets/docs/KSzjBsOqtudzwvK6Zvp9uwAAAAAAAAAA.png)*//reference/)
  - ![](/assets/ico/*[ ` table.cell `
](/docs/reference/model/table/#definitions-cell)*/![](/assets/icons/16-arrow-right.svg)
  - [ Strong Emphasis ](/docs/reference/model/strong/)

=  ` strong ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

Strongly emphasizes content by increasing the font weight.

Increases the current font weight by a given ` delta ` .

==  Example

    
    
    This is _strong._ \
    This is #strong[too.] \
    
    #show strong: set text(red)
    And this is _evermore._
    

![Preview](/assets/docs/8PFV4SUNXNbbYe9uHW1ITAAAAAAAAAAA.png)

==  Syntax

This function also has dedicated syntax: To strongly emphasize content, simply
enclose it in stars/asterisks ( ` * ` ). Note that this only works at word
boundaries. To strongly emphasize part of a word, you have to use the
function.

==/*[Preview](/assets/docs/D_wYQ9Nqm8ZPq6ssgJwiZQAAAAAAAAAA.png)*/function. They are specified in parentheses
after the function name.

strong  (

delta  :  [ int ](/docs/reference/foundations/int/) ,  [ content
](/doc/*[/*![](/assets/icons/16-arrow-right.s/*[ grid documentation ](/docs/reference/layout/grid/#parameters-stroke)*/ference/layout/relative//*[ fraction
](/docs/reference/layout/fraction//*[ array
](/docs/reference/foundations/array/)*/omized fo/*[ auto
](/docs/reference/foundations/auto//*[ int ](/docs/reference/foundations/int//*[ relative ](/docs/reference/layout/relative//*[ fraction
](/docs/reference/layout/fraction//*[ array
](/docs/reference/foundations/array/)*/ No _effect/*[ aut/*![Preview](/assets/docs/VxzAmxCU1uGgVW2hebfhtwAAAAAAAAAA.png)*/e/foundations/int//*[ relative ](/docs/reference/layout/relative//*[ fraction
](/docs/reference/layout/fraction//*[ array
](/docs/reference/foundations/array/)*/d in order, withou/*[ auto
](/docs/reference/foundations/auto//*[ int ](/docs/reference/foundations/int//*[ relative ](/docs/reference/layout/relative//*[ fraction
](/docs/reference/layout/fraction//*[ array
](/docs/reference/foundations/array/)*/cs/reference/mo/*[ auto
](/docs/reference/foundations/auto//*[ int ](/docs/reference/foundations/int//*[ relative ](/docs/refe/*![Preview](/assets/docs/KQmhOQJ1ylUUEeut6OI0rQAAAAAAAAAA.png)*/raction//*[ array
](/docs/reference/foundations/array/)*/-arrow-ri/*[ none
](/docs/reference/foundations/none//*[ color
](/docs/reference/visualize/color//*[ gradient
](/docs/reference/visualize/gradient//*[ array
](/docs/reference/foundations/array//*[ pattern
](/docs/reference/visualize/pattern//*[ function
](/docs/reference/foundations/function/)*/ents, figu/*[ auto
](/docs/reference/foundations/auto//*[ array
](/docs/reference/foundations/array//*[ alignment
](/docs/reference/layout/alignment//*[ function
](/docs/reference/foundations/function/)*/played in t/*[ none
](/docs/reference/foundations/none//*[ length
](/docs/reference/layout/length//*[ color ](/docs/reference/visualize/color//*[ gradient ](/docs/reference/visualize/gradient//*[ array
](/docs/reference/foundations/array//*[ stroke
](/docs/reference/visualize/stroke//*[ pattern
](/docs/reference/visualize/pattern//*[ dictionary
](/docs/reference/foundations/dictionary//*[ function
](/docs/reference/foundations/function/)*/ elements /*[ relative
](/docs/reference/layout/relative//*[ array
](/docs/reference/foundations/array//*[ dictionary
](/docs/reference/foundations/dictionary//*[ function
](/docs/reference/foundations/function/)*/` , /*[ content
](/docs/reference/foundations/content/)*/aining/*[ content ](/docs/reference/foundations/content/)*/e ` where ` sele/*[ auto ](/docs/reference/foundations/auto/)*/o/*[ int
](/docs/reference/foundations/int/)*/ /*[ relative
](/docs/reference/layout/relative/)*/]/*[ fraction
](/docs/reference/layout/fraction/)*/ /*[ array
](/docs/reference/foundations/array/)*/
      caption: [A nice figure!],
    )
    

![Preview](/assets/docs/K0Fgir_M6IbOnlxFTpRoyAAAAAAAAAAA.png)

==  Styling the outline

The outline el/*[ grid documentation ](/docs/reference/layout/grid/)*/ its ` title
` and ` indent ` parameters. If desired, however, it is po/*[ auto ](/docs/reference/foundations/auto/)*/e/*[ int
](/docs/reference/foundations/int/)*/./*[ relative
](/docs/reference/layout/relative/)*/i/*[ fraction
](/docs/reference/layout/fraction/)*/n/*[ array
](/docs/reference/foundations/array/)*/n. They are specified in parentheses
after the function name.

outline  (

title  :  [ none ](/docs/reference/foundations/none/) [ auto
](/docs/r/*[ grid documentation ](/docs/reference/layout/grid/)*/nce/foundations/content/) ,  target  :  [ label
](/docs/reference/foundat/*[ auto ](/docs/reference/foundations/auto/)*/o/*[ int
](/docs/reference/foundations/int/)*/e/*[ relative
](/docs/reference/layout/relative/)*///*[ fraction
](/docs/reference/layout/fraction/)*/ /*[ array
](/docs/reference/foundations/array/)*//) [ int ](/docs/reference/foundations/int/)
,  indent  :  [ none ](/docs/reference/foundations/none/) [ auto
](/docs/reference/foundations/auto/) [ bool
](/docs/reference/foundations/bool/) [ relative
](/docs/reference/layout/relative/) [ function
](/do/*[ grid documentation
](/docs/reference/layout/grid/)*/ne
](/docs/reference/foundations/none/) [ content
](/docs/reference/foundat/*[ auto ](/docs/reference/foundations/auto/)*/e/*[ int
](/docs/reference/foundations/int/)*/l/*[ relative
](/docs/reference/layout/relative/)*///*[ fraction
](/docs/reference/layout/fraction/)*/o/*[ array
](/docs/reference/foundations/array/)*/s/content/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The title of the outline.

  - When set to ` auto  ` ,/*[ grid
documentation ](/docs/reference/layout/grid/)*/s/reference/text/text/#parameters-lang) will be used. This is the defaul/*[ auto ](/docs/reference/foundations/auto/)*/ /*[ int
](/docs/reference/foundations/int/)*/e/*[ relative
](/docs//*![â](/assets/icons/16-arrow-right.svg)*/on
](/docs/reference/layout/fraction/)*/y/*[ array
](/docs/reference/foundations/array/)*/ s/*![Docs](/assets/icons/16-docs-dark.svg)*/ring  :
"1/*![](/assets/icons/16-arrow-right.svg)*/target `

[ label ](/docs/reference/f/*![](/assets/icons/16-arrow-right.svg)*/docs/reference/foundations/*[ grid
documentation ](/docs/reference/layout/grid/)*/ection/location/) or  [ function
](/docs/reference/foundations/fun/*[ none ](/docs/reference/foundations/none/)*/p/*[ color
](/docs/reference/visualize/color/)*/n/*[ gradient
](/docs/reference/visualize/gradient/)*/t/*[ array
](/docs/reference/foundations/array/)*/ /*[ pattern
](/docs/reference/visualize/pattern/)*/e/*[ function
](/docs/reference/foundations/function/)*/ (  kind  :  table  )  ` .

Default: ` heading  .  where  (  outlined  :  true  )  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #outline(
      title: [List of Tables],
      target: figure.where(kind: table),
    )
    
    #figure(
      table(
        columns: 4,
        [t], [1], [2], [3],
        [y], [0.3], [0.7], [0.5],
      ),
      caption: [Experiment results],
    )
    

![Preview](/assets/docs/9oD_YO_3aaN85cAixeBP2gAAAAAAAAAA.png)

===  ` depth `

[ none ](/docs/reference/foundations/none/) or  [ int
](/docs/reference/foundations/int/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The maximum level up to which elements are included in the outline. When this
argument is ` none  ` , all elements are included.

D/*[Preview](/assets/docs/HObhPJHvYkiYqHCjRK1JHwAAAAAAAAAA.png)*/w example

   /*[ auto ](/docs/reference/foundations/auto/)*/ /*[ array
](/docs/reference/foundations/array/)*/v/*[ alignment
](/docs/reference/layout/alignment/)*/ /*[ function
](/docs/reference/foundations/function/)*/assets/docs/fYEfgTUmkbH0skbcMKeSFwAAAAAAAAAA.png)

===  ` indent `

[ none ](/docs/reference/foundations/none/) or  [ auto
](/docs/reference/foundations/auto/) or  [ bool
](/docs/reference/foundations/bool/) or  [ relative
](/docs/reference/layout/relative/) or  [ function
](/docs/reference/foundations/function/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

How to indent the outline's entries.

  - ` none  ` : No indent 
  - ` auto  ` : Indents the numbering of the nested entry with the title of its parent entry. This only has an effect if the entr/*[Preview](/assets/docs/_fBgotCl-LtVjvGU4yJFLQAAAAAAAAAA.png)*/rence/model/hea/*[ none ](/docs/reference/foundations/none/)*/i/*[ length
](/docs/reference/layout/length/)*/e/*[ color
](/docs/reference/visualize/color/)*/l/*[ gradient
](/docs/reference/visualize/gradient/)*/o/*[ array
](/docs/reference/foundations/array/)*/n/*[ stroke
](/docs/reference/visualize/stroke/)*/s/*[ pattern
](/docs/reference/visualize/pattern/)*/s/*[ dictionary
](/docs/reference/foundations/dictionary/)*/]/*[ function
](/docs/reference/foundations/function/)*/ompletely customize this setting with a function. That function receives the nesting level as a parameter (starting at 0 for top-/*[ stroke ](/docs/reference/visualize/stroke/ "stroke")*/gth or content making up the indent. For example, ` n  => n  *  2em  ` would be equivalent to just specifying ` 2em  ` , while ` n  => [  â  ]  *  n ` would indent with one arrow per nesting level. 

_Migration hints:_ Specifying ` true  ` (equivalent to ` auto  `/*[ ` table.hline `
](/docs/reference/model/table/#definitions-hline)*/c/*[ ` table.vline `
](/docs/reference/model/table/#definitions-vline)*/![](/assets/icons/16-arrow-right.s/*[ grid documentation ](/docs/reference/layout/grid/#parameters-stroke)*/   #outline(
      title: [Contents (Automatic)],
      indent: auto,
    )/*[ relative ](/docs/reference/layout/relative/)*/n/*[ array
](/docs/reference/foundations/array/)*/l/*[ dictionary
](/docs/reference/foundations/dictionary/)*/n/*[ function
](/docs/refer/*![](/assets/icons/16-arrow-right.svg)*/story
    === Origins
    #lorem(10)
    
    == Products
    #lorem(10)
    

![Preview](/assets/docs/VxzAmxCU1uGgVW2hebfhtwAAAAAAAAAA.png)

===  ` fill `

[ none ](/docs/reference/foundations/none/) or  [ content
](/docs/referen/*![Preview](/assets/docs/CGCi1WYCPLux25Xc9ZWwDQAAAAAAAAAA.png)*/arameters can be customized for all following uses of the function
with a ` set ` rule.

Content to fill the space between the title and the page numbe/*[Preview](/assets/docs/f1kE1ENTTB02iZKKPoV_XwAAAAAAAAAA.png)*/epeat  (  body  :/*[ content ](/docs/reference/foundations/content/)*/.svg) View example

    
    
    #outline(fill: line(length: 100%))
    
    = A New Beginning
    

![Preview](/assets/docs/KQmhOQJ1ylUUEeut6OI0rQAAAAAAAAAA.png)

==  Definitions

Question mark

Functions and types and can have associated definitions. T/*[ ` table.hline ` ](/docs/reference/model/table/#definitions-hline)*/ /*[ `
table.vline ` ](/docs/reference/model/table/#definitions-vline)*/estion mark

Element functions can be customized with ` set ` and  ` show ` rules.

Represents each entry line in an outline, including the reference to the
outlined element, its page number, and the filler content between both.

This element is intended for use with show rules to control the appearance of
outlines. To customize an entry's line, you can build it from scratch by
accessing the ` level ` , ` element ` , ` body ` , ` fill ` and ` page `
fields on the entry.

outline  .  entry  (

[ int ](/docs/reference/foundations/int/) ,  [ content
](/docs/reference/foundations/content/) ,  [ content
](/docs/reference/foundations/content/) ,  [ none
](/docs/reference/fou/*![Preview](/assets/docs/NqaMIUfLtrq2fhf9xChjagAAAAAAAAAA.png)*/nt/) ,  /*[ content ](/docs/reference/foundations/content/)*/ ,

) /*[ auto
](/docs/reference/foundations/auto//*[ int ](/docs/reference/foundations/int/)*/(numbe/*[ auto ](/docs/reference/foundations/auto//*[ int
](/docs/reference/foundations/int/)*/   v(12pt, w/*[ int
](/docs/reference/foun/*![](/assets/icons/16-arrow-right.svg)*//docs/reference/foundations/int/)*/= Backgro/*[ none
](/docs/reference/foundations/none//*[ auto
](/docs/reference/foundations/auto//*[ color
](/docs/reference/visualize/color//*[ gradient
](/docs/reference/visualize/gradient//*[ pattern
](/docs/reference/visualize/pattern/)*/itional

Q/*[ auto
](/docs/reference/foundations/auto//*[ alignment
](/docs/reference/layout/alignment/)*/level of t/*[ auto
](/docs/reference/foundations/auto//*[ relative
](/docs/reference/layout/relative//*[ dictionary
](/docs/reference/foundations/dictionary/)*/  Positiona/*[ none
](/docs/reference/foundations/none//*[ length
](/docs/reference/layout/length//*[ color ](/docs/reference/visualize/color//*[ gradient ](/docs/reference/visualize/gradient//*[ stroke
](/docs/reference/visualize/stroke//*[ pattern
](/docs/reference/visualize/pattern//*[ dictionary
](/docs/reference/foundations/dictionary/)*/
====  ` body /*[ auto
](/docs/reference/foundations/auto//*[ bool
](/docs/reference/foundations/bool/)*/n mark/*[ content ](/docs/reference/foundations/content/)*/ithout names.

The content which is displayed in place of the referred element at its entry
in the outline. For a heading, this would be its number followed by the
heading's title, for example.

====  ` fill `

[ none ](/docs/reference/foundations/none/) or  [ content
](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The content used to fill the space between the element's outline and its page
number, as defined by the outline element this entry is located /*[Preview](/assets/docs/2rQPm8gbRwbFqiITJlD6oAAAAAAAAAAA.png)*/tead.

Note that, when using show rules to override outline entries, it is
recommended to wrap the filling content in a [ ` box `
](/docs/reference/layout/box/ "`box`") with fractional width. For example, `
box  (  width  :  1fr  ,  repeat  [  -  ]  )  ` would show precisely as many `
- ` characters as necessary to fill a particular gap.

====  ` page `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The page number of the element /*![](/assets/icons/16-arrow-right.svg)*/w](/assets/docs/VtayZlhMrUWzOmBAyEorDQAAAAAAAAAA.png)*/(/assets/icons/16-arrow-right.svg) Numbering  Previous page
](/docs/reference/model/numbering/) [ ![â](/assets/icons/16-arrow-right.sv/*![Preview](/assets/docs/s-zUl9r9z6yKdW4VnsLi_AAAAAAAAAAA.png)*/docs/reference/model/enum.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Model ](/do/*[Preview](/assets/docs/c2SP069qvMBzeFbrjVs8pwAAAAAAAAAA.png)*/g)
  - [ Numbe/*[ content ](/docs/reference/foundations/content/)*/m ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

A numbered list.

Displays a /*[ auto ](/docs/reference/foundations/auto/)*/e/*[ int
](/docs/reference/foundations/int/)*/    Automatically numbered:
    + Preparations
 /*![Preview](/assets/docs/9haSHPkr8gDAx-1cEtmf8QAAAAAAAAAA.png)*/   2. What is the first step?
    5. I am confused.
    +  Moving on ...
    
    Multiple /*[ ` grid.cell ` ](/docs/reference/layout/grid/#definitions-cell)*/ next line
      is indented.
   /*[ auto ](/docs/reference/foundations/auto/)*/d/*[ int
](/docs/reference/foundations/int/)*/bXNf6U4DmZCaAAAAAAAAAAA.png)

You can easily switch all your enumerations to a different numbering style
with a set rule.

    
    
    #set enum(numbering: "a)")
    
    + Starting off ...
    +/*[ `
grid.cell ` ](/docs/reference/layout/grid/#definitions-cell)*/vf_eMOYtVMwAAAAAAAAAA.png)

You can als/*[ int ](/docs/reference/foundations/int/)*/odel/enum/#definitions-
item) to programmatically customize the number of each item in the
enumeration:

    
    
    #enum(
      enum.item(1)[First step],
      enum.item(5)[Fifth step],
      enum.it/*[ int ](/docs/reference/foundations/int/)*/(/assets/docs/uRQbjXrkv7FwltBxluVMMAAAAAAAAAAA.png)

==  Syntax

This functions also has dedicated syntax:

  - Starting a line with a plus sign creates an automatically numbered enumeration item. /*[ none ](/docs/reference/foundations/none/)*/ /*[ auto
](/docs/reference/foundations/*![â](/assets/icons/16-arrow-right.svg)*/sualize/color/)*/i/*[ gradient
](/docs/reference/v/*![â](/assets/icons/16-arrow-right.svg)*/s/reference/visualize/pattern/)*/em's marker becomes part
of that item.

==  Parameters

Question mark
/*![Docs](/assets/icons/16-docs/*[ int ](/docs/reference/foundations/int/)*/](/docs/reference/model/table/#parameters-fill)*/ :  [ bool/*![](/assets/icons/16-arrow-right.svg)*/[ auto ](/docs/reference/foundations/au/*![](/assets/icons/16-arrow-right.svg)*/e/layout/alignment/)*/oundations/function/) ,  start  :  [ int
](/docs/reference/foundations/int/) ,  full  :  [ bool
](/docs/reference/foundations/bool/) /*[ alignment ](/docs/reference/model/table/#parameters-align)*/body-indent  :  [ length
](/docs/reference/la/*[ auto ](/docs/reference/foundations/auto/)*///*[ relative
](/docs/reference/layout/relative/)*/r/*[ dictionary
](/docs/reference/foundations/dictionary/)*/t
](/docs/reference/layout/alignment/) ,  ..  [ content
](/docs/reference/foundations/content/) [ array
](/docs/reference/foundations/*[ inset ](/docs/reference/model/table/#parameters-inset)*/s/content/)

===  ` tight `

[ bool ](/docs/re/*[ none ](/docs/reference/foundations/none/)*/i/*[ length
](/docs/reference/layout/length/)*/i/*[ color
](/docs/reference/visualize/color/)*/w/*[ gradient
](/docs/reference/visualize/gradient/)*/g/*[ stroke
](/docs/reference/visualize/stroke/)*/a/*[ pattern
](/docs/reference/visualize/pattern/)*/ /*[ dictionary
](/docs/reference/foundations/dictionary/)*/docs/reference/model/par/#parameters-spacing) . If
it is ` true  ` , they use [ paragraph leading
](/docs/reference/model/par/#parame/*[ stroke ](/docs/reference/model/table/#parameters-stroke)*/hich can look better if the items are short.

In mar/*[ auto ](/docs/reference/foundations/auto/)*/t/*[ bool
](/docs/reference/foundations/bool/)*/d with a blank line. If items directly follow each other,
this is set to ` true  ` ; if items are separated by a blank line, this is set
to ` false  ` . The markup-defined tightness cannot be overridden with set
rules.

Default: ` true  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    + If an enum has a lot of text, and
      maybe other inline content, it
      should not be tight anymore.
    
    + To make an enum wide, simply
      insert a blank line between the
      items.
    

![Preview](/assets/docs/CGCi1WYCPLux25Xc9ZWwDQAAAAAAAAAA.png)

===  ` numbering `

[ str ](/docs/reference/foundations/str/) or  [ function
](/docs//*[ ` column-gutter ` ](/docs/reference/model/table/#parameters-column-gutter)*/rs can be customized for all following uses of the function
with a ` set ` rule.

How to number the enumeration. Accepts a [ numbering pattern or function
](/docs/refere/*[ table's ` stroke ` ](/docs/reference/model/table/#parameters-
stroke)*/nting /*[ ` table.cell ` 's ` stroke `
](/docs/reference/model/table/#definitions-cell-stroke)*/gument if `
full ` is ` false  ` and multiple arguments if ` full ` is ` true  ` .

Default: ` "1."  `

!/*[ auto ](/docs/reference/foundations/auto//*[ int
](/docs/reference/foundations/int/)*/ing: "1.a)/*[ int
](/docs/reference/foundations/int/)*/+ Nested/*[ none
](/docs/reference/foundations/none//*[ int ](/docs/reference/foundations/int/)*/perscript
 /*[ none ](/docs/reference/foundations/none//*[ length
](/docs/reference/layout/length//*[ color ](/docs/reference/visualize/color//*[ gradient ](/docs/reference/visualize/gradient//*[ stroke
](/docs/reference/visualize/stroke//*[ pattern
](/docs/reference/visualize/pattern//*[ dictionary
](/docs/reference/foundations/dictionary/)*/with.

Defaul/*[ alignment
](/docs/reference/layout/alignment/)*/ View /*[ content ](/docs/reference/foundations/content/)*/   [Skipping],
      [Ahead],
    )
    

![Preview](/assets/docs/NqaMIUfLtrq2fhf9xChjagAAAAAAAAAA.png)

===  ` full `

[ bool ](/docs/reference/foundations/bool/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

Whether to display the full numbering, including the numbers of all parent
enumerations.

Default: ` false  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set enum(numbering: "1.a)", full: true)
    + Cook
   /*[Preview](/assets/docs/Fl-W72wh8hlKb72YjlJ0PgAAAAAAAAAA.png)*/eview](/ass/*[ auto ](/docs/reference/foundations/auto/)*/n/*[ int
](/docs/reference/foundations/int/)*/erence/layout/length/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The indentation of each item.

Default: ` 0pt  `

===  ` body-indent `

[ length ](//*[ ` grid.hline `
](/docs/reference/layout/grid/#definitions-hline-y)*/rameters can be customized for all fo/*[ int ](/docs/reference/foundations/int/)*/ ` rule.

The space between the numbering and the body of each item.

Default: ` 0.5em  `

===  ` spacing `

[ auto ](/docs/reference/foundations/auto/) or  [ length
](/docs/reference/layout/length/)

Settable

Question mark

Set/*[ none ](/docs/reference/foundations/none/)*/f/*[ int
](/docs/reference/foundations/int/)*/t ` rule.

The spacing between the items of the enumeration.

If set to ` auto  ` , uses paragraph [ ` leading `
](/docs/reference/model/par/#parameters-leading) for tight enumerations and
paragraph [ ` spacing ` ](/docs/reference/model//*[ none ](/docs/reference/foundations/none/)*/t/*[ length
](/docs/reference/layout/length/)*/`/*[ color
](/docs/reference/visualize/color/)*/n/*[ gradient
](/docs/reference/visualize/gradient/)*/e/*[ stroke
](/docs/reference/visualize/stroke/)*/o/*[ pattern
](/docs/reference/v/*![â](/assets/icons/16-arrow-right.svg)*/ocs/reference/foundations/dictionary/)*/ault, this is set to ` /*![â](/assets/icons/16-arrow-right.svg)*/s towards
end of the current text direction (in left-to-right script, for example, this
is th/*![Docs](/assets/icons/16-docs-dark.svg)*/ the line. The choice of ` end `
for horizontal alignment of enum numbers is usually preferred over ` start ` ,
as numbers th/*[ alignment ](/docs/reference/layout/alignment/)*/, avoiding
certain visual issues. This option lets you override this behaviour, however.
(Also to note is that the [ unordered list ](/docs/reference/model/list/) uses
a different method for this, by giving the ` marker ` content an alignment
directly.).

Default: ` end  +  top `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set enum(number-align: start + bottom)
    
    Here are some powers of two:
    1. One
    2. Two
    4. Four
    8. Eight
    16. Sixteen
    32. Thirty two
    

![Preview](/assets/docs/s-zUl9r9z6yKdW4VnsLi_AAAAAAAAAAA.png)

===  ` children `

[ content ](/docs/reference/foundations/content/) or  [ array
](/docs/reference/foundations/array/)

Requir/*[ ` grid.vline `
](/docs/reference/layout/grid/#definitions-vline)*/ in order, without names.

Variadic

Question mark

Variadic parameters can be specified multiple times.

The numbered list's items.

When using the enum syntax, adjacent items are automatically collected into
enumerati/*[ ` row-gutter ` ](/docs/reference/model/table/#parameters-row-gutter)*/ow-right.svg) Vie/*[ ` table.hline ` ](/docs/reference/model/table/#definitions-hline)*/rbit",
       "Descent",
    ) [+ #phase]
    

![Preview](/assets/docs/9haSHPkr8gDAx-1cEtmf8QAAAAAAAAAA.png)

==  D/*[ table's ` stroke `
](/docs/reference/model/table/#parameters-stroke)*/ defin/*[ ` table.cell ` 's
` stroke ` ](/docs/reference/model/table/#definitions-cell-stroke)*/nd then the
definition's name.

===  ` item ` Element

Question mark

Element functions can be customized/*[ auto ](/docs/reference/foundations/auto//*[ int
](/docs/reference/foundations/int/)*/e ](/docs//*[ int
](/docs/reference/foundations/int/)*/s/refere/*[ none
](/docs/reference/foundations/none//*[ int ](/docs/reference/foundations/int/)*/-> [ conten/*[ none ](/docs/reference/foundations/none//*[ length
](/docs/reference/layout/length//*[ color ](/docs/reference/visualize/color//*[ gradient ](/docs/reference/visualize/gradient//*[ stroke
](/docs/reference/visualize/stroke//*[ pattern
](/docs/reference/visualize/pattern//*[ dictionary
](/docs/reference/foundations/dictionary/)*/r all followi/*[ alignment
](/docs/reference/layout/alignment/)*/e item/*[ content ](/docs/reference/foundations/content/)*/ content ](/*[ auto ](/docs/reference/foundations/auto/)*/i/*[ int
](/docs/reference/foundations/int/)*/l parameters are specified in order, without names.

The item's body.

[ ![â](/assets/icons/16-arrow-right.svg) Link  Previous page
](/docs/reference/model/link/) [ ![â](/assets/icons/16-arrow-right.svg)
Numbering  Next page  ](/doc/*[ ` grid.vline `
](/docs/reference/layout/grid/#definitions-vline)*/

  - [ ![Docs](/assets/icons/16-docs/*[ int ](/docs/reference/foundations/int/)*//16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Model ](/docs/reference/model/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Table ](/docs/reference/model/table/)

/*[ none ](/docs/reference/foundations/none/)*/t/*[ int
](/docs/reference/foundations/int/)*/ and  ` show ` rules.

A table of items.

Tables are used to arrange content in cells. Cells can contain arbitrary
content, including multiple paragraphs and are specified in row-major order.
For a hands-on explanation of all the ways /*[ none ](/docs/reference/foundations/none/)*/c/*[ length
](/docs/reference/layout/length/)*/t/*[ color
](/docs/reference/visualize/color/)*/d/*[ gradient
](/docs/reference/visualize/gradient/)*/s/*[ stroke
](/docs/reference/visualize/stroke/)*/o/*[ pattern
](/docs/reference/visualize/pattern/)*/o/*[ dictionary
](/docs/reference/foundations/dictionary/)*/
tracks and specify the cell appearance properties.

If you are unsure whether you should be using a table or a grid, consider
whether the content you are arranging semantically belongs together as a set
of related data points or similar or whether you are just want to enhance your
presentation by arranging unrelated c/*[ alignment ](/docs/reference/layout/alignment/)*//*![](/*[ auto ](/docs/reference/foundations/auto/)*/id is more
appropriate. Furthermore, Typst will annotate its output in the future such
that screenreaders will announce content in ` table ` as tabular while a
grid's content will be announced no different than multiple content blocks in
the document flow.

Note that, to override a particular cell's properties or apply show rules on
table cells, you can use the [ ` table.cell `
](/docs/reference/model/table/#definitions-cell) element. See i/*![Preview](/assets/docs/HObhPJHvYkiYqHCjRK1JHwAAAAAAAAAA.png)*/` and the ` grid ` share most properties, set and show
rules on one of them do not affect the other.

To give a table a caption and make it [ referenceable
](/docs/reference/model/ref/) , put it into a [ figure
](/docs/reference/model/figure/ "figure") .

==  Example

The example below demonstrates some of the most common table options.

    
    
    #table(
      columns: (1fr, auto, auto),
      inset: 10pt,
      align: horizon,
      table.header(
        [], [*Volume*], [*Parameters*],
      ),
      image("cylinder.svg"),
      $ pi h (D^2 - d^2) / 4 $,
      [
        $h$: height \
        $D$: outer radius \
        $d$: inner radius
      ],/*![](/assets/icons/16-arrow-right.svg)*/  $ sqrt(2)/*[ bool ](/docs/reference/foundations/bool/)*/
   /*[ content
](/docs/reference/foundations/content/)*/AAAAAA/*[ content ](/docs/reference/foundation/*![Preview](/assets/docs/_fBgotCl-LtVjvGU4yJFLQAAAAAAAAAA.png)*/nitions-cell) to customize the appearance
and the position of each cell.

    
    
    #set table(
      stroke: none,
      gutter: 0.2em,
      fill: (x, y) =>
        if x == 0 or y == 0 { gray },
      inset: (right: 1.5em),
    )
    
    #show table.cell: it => {
      if it.x == 0 or it.y == 0 {
        set text(white)
        strong(it)
      } else if it.body == [] {
        // Replace empty cells with 'N/A'
        pad(..it.inset)[_N/A_]
      } else {
        it
      }
    }
    
    #let a = table.cell(
      fill: green.lighten(60%),
    )[A]
    #let b = table.cell(
      fill: aqua.lighten(60%),
    )[B]
    
    #table(
/*[Preview](/assets/docs/IHpzp-b7mQ7ctAllSxEWfQAAAAAAAAAA.png)/*[Preview](/assets/docs/IHpzp-b7mQ7ctAllSxEWfQAAAAAAAAAB.png)*/[Robert], b, a, /*[ bool ](/docs/reference/foundations/bool/)*/Q9Nqm8ZPq6ssgJwiZQAAAAAAAAAA.png)

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

table  (

columns  :  [ auto ](/docs/reference/fo/*[ content ](/docs/reference/foundations/content/)*/ons/int/) [ relative
](/docs/reference/layout/relative/) [ fraction
](/docs/reference/layout/fraction/) [ array
](/docs/reference/foundations/array/) ,  rows  :  [ auto
](/docs/reference/foundations/auto/) [ int ](/docs/reference/foundations/int/)
[ relative ](/docs/reference/layout/relative/) [ fraction
](/docs/reference/layout/fraction/) [ array
](/docs/reference/f/*[ ` table.header ` ](/docs/reference/model/table/#definitions-
header)*/auto/) [ int ](/docs/reference/foundations/int/)
[ relative ](/docs/reference/layout/relative/) [ fraction
](/docs/reference/layout/fraction/) [ array
](/docs/reference/foundations/array/) ,  column-gutter  :  [ auto
](/docs/reference/foundations/auto/) [ int ](/docs/reference/foundations/int/)
[ relative ](/docs/reference/layout/r/*[ bool ](/docs/reference/foundations/bool/)*/ut/f/*[ content
](/docs/reference/foundations/content/)*/rray/)/*[ content ](/docs/reference/foundations/content/)*/ations/auto/) [ /*[ bool ](/docs/reference/foundations/bool/)*/elative ](/docs/reference/layout/relative/) [ fraction
](/docs/reference/layout/fraction/) [ array
](/docs/reference/foundations/array/) ,  fill  :  [ none
](/docs/reference/foundations/none/) [ color
](/docs/referen/*[ content ](/docs/reference/foundations/content/)*//visualize/gradient/) [ array
](/docs/reference/foundations/array/) [ pattern
](/docs/reference/visualize/pattern/) [ function
](/docs/reference/foundations/function/) ,  align  :  [ auto
](/docs/reference/foundation/*[ ![â](/assets/icons/16-arrow-right.svg)*/ions/array/) [ alignment
](/docs/reference/layout/alignment/)/*[ ![â](/assets/icons/16-arrow-right.svg)*/function/) ,  stroke  :  [ none
](/docs/reference/foundations/none/) [ length
](/docs/refer/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/rence/visualize/color/)
[ gradient ](/docs/reference/*[ Reference ](/docs/reference/)*/(/docs/reference/foundations/array/) [ stro/*[ Model ](/docs/reference/model/)*/roke/) [ pattern
](/docs/reference/visualiz/*[ Paragraph ](/docs/reference/model/par/)*/e/foundations/dictionary/) [ function
](/docs/reference/foundations/function/) ,  inset  :  [ relative
](/docs/reference/layout/relative/) [ array
](/docs/reference/foundations/array/) [ dictionary
](/docs/reference/foundations/dictionary/) [ function
](/docs/reference/foundations/function/) ,  ..  [ content
](/docs/reference/foundations/content/) ,

)  -> [ content ](/docs/reference/foundations/content/)

===  ` columns `

[ auto ](/docs/reference/foundations/auto/) or  [ int
](/docs/reference/foundations/int/) or  [ relative
](/docs/reference/layout/relative/) or  [ fraction
](/docs/reference/layout/fraction/) or  [ array
](/docs/reference/foundations/array/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a `/*[Preview](/assets/docs/yrIipb0QYzuDEgQNZF57rwAAAAAAAAAA.png)*/ ](/docs/reference/layout/grid/)
for more information on track sizing.

Default: ` (  )  `

===  ` rows `

[ auto ](/docs/reference/foundations/auto/)/*[ length ](/docs/reference/layout/length/)*/nt/) or  [ r/*[ length
](/docs/reference/layout/length/)*/) or  [ frac/*[ bool
](/docs/reference/foundations/bool/)*/  [ array
](/do/*[ auto
](/docs/reference/foundations/auto//*[ str ](/docs/reference/foundations/str/)*/n be customized for al/*[ length ](/docs/reference/layout/length/)*/set ` rule.

The r/*[ length ](/docs/reference/layout/length/)*//*[ content
](/docs/reference/foundations/content/)*/ on tr/*[ content ](/docs/reference/foundations/content/)*/
[ auto ](/docs//*[ length ](/docs/reference/layout/length/)*/docs/reference/foundations/int/) or  [ relative
](/docs/reference/layout/relative/) or  [ fraction
](/docs/reference/layout/fraction/) or  [ array
](/docs/reference/foundations/array/)

Sett/*[ bottom edge
](/docs/reference/text/text/#parameters-bottom-edge)*/ following uses o/*[ top
edge ](/docs/reference/text/text/#parameters-top-edge)*/nd columns. This is a shorthand for setting ` column-
gutter ` and ` row-gutter ` to the same value. See the [ grid documentation
](/docs/reference/layout/grid/) for more information on gutters.

Defaul/*![Preview](/assets/docs/2rQPm8gbRwbFqiITJlD6oAAAAAAAAAAA.png)*/e/foundations/auto/) or  [ int
](/docs/reference/foundations/int/) or  [ relative
](/docs/reference/layout/relative/) or  [ fraction
](/docs/reference/layout/fraction/) or  [ array
](/docs/reference/foundations/array/)

Settable

Question mark

Settable parameters can be customized for all followi/*[ length ](/docs/reference/layout/length/)*/e.

The gaps between columns. Takes precedence over ` gutter ` . See the [ grid
documentation ](/docs/reference/layout/grid/) for more information on gutters.

Default: ` (  )  `

===  ` row-gutter `

[ auto ](/docs/reference/foundations/auto/) or  [ int
](/docs/reference/foundations/int/) or  [ relative
](/docs/reference/layout/relativ/*[ ` block ` ](/docs/reference/layout/block/
"`block`")*/ or  [ array
](/docs/reference/foun/*[ ` above `
](/docs/reference/layout/block/#parameters-above)*//*[ ` below `
](/docs/reference/layout/block/#parameters-below)*/h a ` set ` rule.

The gaps between rows. Takes precedence over ` gutter ` . See the [ grid
documentation ](/docs/reference/layout/grid/) for more informati/*![Preview](/assets/docs/c2SP069qvMBzeFbrjVs8pwAAAAAAAAAA.png)*/l/)*/ocs/reference/foundations/none/) or  [ color
](/docs/reference/visualize/color/) or  [ gradient
](/docs/reference/visualize/gradient/) or  [ array
](/docs/reference/foundations/array/) or  [ pattern
](/docs/reference/vis/*[ text function's
` hyphenate ` property ](/docs/reference/text/text/#parameters-hyphenate)*/n mark

Settable parameters can be customized for all following uses of the/*[ alignment ](/docs/reference/layout/align/#parameters-
alignment)*/e a color or a function that returns a color. The function receives
the cell/*[ justified line break
](/docs/reference/text/linebreak/#parameters-justify)*/ striped tables.

Default: ` none  `

![](/*[ auto ](/docs/reference/foundations/auto/)*/p/*[ str
](/docs/reference/foundations/str/)*/ _) =>
        if calc.odd(x) { luma(240) }
        else { white },
      align: (x, y) =>
        if y == 0 { center }
        else if x == 0 { left }
        else { right },
      columns: 4,
      [], [*Q1*], [*Q2*], [*Q3*],
      [Revenue:], [1000 â¬], [2000 â¬], [3000 â¬],
      [Expenses:], [500 â¬], [1000 â¬], [1500 â¬],
      [Profit:], [500 â¬], [1000 â¬], [1500 â¬],
    )
    

![Preview](/assets/docs/HObhPJHvYkiYqHCjRK1JHwAAAAAAAAAA.png)

===  ` align `

[ auto ](/docs/reference/foundations/auto/) or  [ array
](/docs/reference/foundations/array/) or  [ alignment
]/*![â](/assets/icons/16-arrow-right.svg)*/[ function
](/docs/reference/foundations/function/)

Set/*![â](/assets/icons/16-arrow-right.svg)*/s can be customized for all following uses of the function
with a ` set ` rule.

How to align the cells/*![Docs](/assets/icons/16-docs-dark.svg)*/ alignment, an array of alignments (corresponding
to each column) or a function that returns an alignment. The function receives
the cells' column and row indices, starting from zero. If set to ` auto  ` ,
the outer alignment is used.

Default: ` auto  `

![](/assets/icons/16-arrow-right.svg) /*[Preview](/assets/docs/r-fawkmmJ6Sniwi8--ib5gAAAAAAAAAA.png)*/align: (left, center, righ/*[ length ](/docs/reference/layout/length/)*/ [A], [B], [C],
    )
    

![Preview](/assets/docs/_fBgotCl-LtVjvGU4yJFLQAAAAAAAAAA.png)

===  ` stroke `

[ none ](/docs/reference/foundations/none/) or  [ length
](/docs/reference/layout/length/) or  [ color
](/docs/reference/visualize/color/) or  [ gradient
](/docs/reference/visualize/gradient/) or  [ array
](/docs/reference/foundations/array/) or  [ stroke
](/docs/reference/visualize/stroke/) or  [ pattern
](/docs/reference/visu/*[
paragraph spacing ](/docs/reference/layout/block/#parameters-spacing)*/ry/)/*[
` leading ` ](/docs/reference/model/par/#parameters-leading)*/able

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

How t/*[ length ](/docs/reference/layout/length/)*/oke/ "stroke") the cells.

Strokes can be disabled by setting this to ` none  ` .

If it is necessary to place lines which can cross spacing between cells
produced by the ` gutter ` option, or to override the stroke bet/*[ content ](/docs/reference/foundations/content/)*/ one or more of [ ` table.hline `
](/docs/reference/model/table/#definitions-hline) and [ ` table.vline `
](/docs/reference/model/table/#definitions-vline) alongside your table cells.

See the [ grid documentation ](/docs/reference/layout/grid/#parameters-stroke)
for more information on strokes.

Default: ` 1pt  +  black `

===  ` inset `

[ relative ](/docs/reference/layout/relative/) or  [ array
](/docs/reference/foundations/array/) or  [ dictionary
](/docs/reference/foundations/dictionary/) or  [ function
](/docs/reference/foundations/function/)

Settable/*[ ` numbering ` ](/docs/reference/model/par/#definitions-line-numbering)*/ uses of the function
with a ` set ` rule.

How much to pad the cells' content.

Default: ` 0%  +  5p/*[ none ](/docs/reference/foundations/none//*[ str
](/docs/reference/foundations/str//*[ function
](/docs/reference/foundations/function/)*/    )
    
    #t/*[ auto
](/docs/reference/foundations/auto//*[ alignment
](/docs/reference/layout/alignment/)*/[Hello],
      [Wo/*[ alignment
](/docs/reference/layout/alignment/)*/NTTB02iZKKPoV_XwAAAAA/*[ auto
](/docs/reference/foundations/auto//*[ length
](/docs/reference/layout/length/)*/Required  Positional/*[ str
](/docs/reference/foundations/str/)*/e spec/*[ content ](/docs/reference/foundations/content/)*/n mark

Variadic parameters can be specified multiple times.

The contents of the table cells, plus any extra table lines speci/*[Preview](/assets/docs/b257YLHUEagbFWlPeD4gEwAAAAAAAAAA.png)*/e/#definitions-hline) and [ `
table.vline ` ](/do/*[ numbering pattern
](/docs/reference/model/numbering/)*/
==  Definitions

Question mark

Functions and types and can have associated definitions. These are accessed by
specifying the function or type, followed by a period, and then the
definition's name.

===  ` cell ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

A cell in the table. Use this to position a cell manually or to apply styling.
To do the latter, you can either use the function to override the properties
for a particular cell, or use it in show rules to apply certain styles to
multiple cells at once.

Perhaps the most important use case of ` ta/*[Preview](/assets/docs/WJNwFvR3ObvODT-MbWqflAAAAAAAAAAA.png)*/r rows with the ` colspan ` and ` rowspan ` fields.

table  .  cell  (

[ content ](/docs/reference/foundatio/*[ alignment
](/docs/reference/model/par/#definitions-line-number-align)*//*[ margin
](/docs/reference/model/par/#definitions-line-number-margin)*/e/foundations/auto/) [ int
](/docs/reference/foundations/int/) ,  colspan  :  [ int
/*[ `
numbering-scope ` ](/docs/reference/model/par/#definitions-line-numbering-
scope)*/s/int/) ,  fill  :  [ none
/*[ none ](/docs/reference/foundations/none/)*/
/*[ str
](/docs/reference/foundations/str/)*/l/*[ function
](/docs/refer/*![Preview](/assets/docs/Fl-W72wh/*[ length ](/docs/reference/layout/length/)*/
](/docs/reference/visualize/pattern/) ,  align  :  [ auto
](/docs/reference/foundations/auto/) [ alignment
](/*[ numbering pattern or function
](/docs/reference/model/numbering/)*/rence/foundations/auto/) [ relative
](/docs/reference/layout/relative/) [ dictionary
](/docs/reference/foundations/dictionary/) ,  stroke  :  [ none
](/docs/reference/foundations/none/) [ length
](/doc/*[Preview](/assets/docs/O-oJqYc-OwEoxappxK4AZAAAAAAAAAAA.png)*/ize/color/)
[ gradient/*[ auto ](/docs/reference/foundations/auto/)*/t/*[ alignment
](/docs/reference/layout/alignment/)*/ern
](/docs/reference/visualize/pattern/) [ dictionary
](/docs/reference/foundations/dictionary/) ,  breakable  :  [ auto
](/docs/reference/foundations/auto/) [ bool
](/docs/reference/foundations/bool/) ,

)  -> [ content ](/docs/reference/foundations/content/)

    
    
    #show table.cell.where(y: 0): strong
    #set table(
      stroke: (x, y) => if y == 0 {
        (bottom: 0.7pt + black)
      },
      align: (x, y) => (
        if x > 0 { center }
        else { left }
      )
    )
    
    #table(
      columns: 3,
      table.header(
        [Substance],
        [Subcritical Â°C/*[Preview](/assets/docs/XfwBMgYjt2fGeRgFr_kj4AAAAAAAAAAA.png)*/ Acid],
      [12.0], [/*[ alignment ](/docs/reference/layout/alignment/)*/6], [104],
      [Potassium Hydroxide],
      table.cell(colspan: 2)[24.7],
    )
    

![Preview](/assets/docs/2rQPm8gbRwbFqiITJlD6oAAAAAAAAAAA.png)

For example, you can override the fill, alignment or inset for a single cell:

    
    
    // You can also import those.
    #import table: cell, header
    
    #table(
      columns: 2,
      align: center,
      header(
        [*Trip progress*],
        [*Itinerary*],
      ),
      cell(
        align: right,
        fill: fuchsia.lighten(80%),
        [ð],
      ),
      [Get in, folks!],
      [ð], [Eat curbside hotdog],
      cell(align: left)[ð´ð],
      cell(
        ins/*![â](/assets/icons/16-arrow-right.svg)*/ð]/*[Preview](/assets/docs/vf0ZBrlygVUABySMskTaKQAAAAAAAAAA.pn/*![â](/assets/icons/16-arrow-
right.svg)*//docs/reference/foundations/auto/)*/e/*[ length
](/docs/reference/layout/length/)*/with /*![Docs](/assets/icons/16-docs-dark.svg)*/les based on a cell's
position:

    
    
    #show table.cell.where(x: 0): strong
    
    #table(
      columns: 3,
      gutter: 3pt,
      [Name], [Age], [Strength],
      [Hannes], [36], [Grace],
      [Irma], [50], [Resourcefulness],
      [Vikram], [49], [Perseverance],
    )
    

![Preview](/assets/docs/c2SP069qvMBzeFbrjVs8pwAAAAAAAAAA.png)

====  ` body `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional pa/*[Preview](/assets/docs/MgiUB3LoxE0JROWoHJPslgAAAAAAAAAA.png)*/body.

====  ` x `

[ aut/*[ str ](/docs/reference/foundations/str/)*/  [ int
](/docs/reference/foundations/int/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The cell's column (zero-indexed). Functions identically to the ` x ` field in
[ ` grid.cell ` ](/docs/reference/layout/grid/#definitions-cell) .

Default: ` auto  `

====  ` y `

[ auto ](/docs/reference/foundations/auto/) or  [ int
](/docs/reference/foundations/int/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The cell's row (zero-indexed). Functions identically to the ` y ` field in [ `
grid.cell ` ](/docs/reference/layout/grid/#definitions-cell) .

Default: ` auto  `

====  ` colspan `

[ int ](/docs/reference/foundations/int/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The amount of columns spann/*![â](/assets/icons/16-arrow-right.svg)*/](/assets/docs/MmmIOu-UB2sC4GlOg3oj9AAAAAAAAAAA.png)/*[Pre/*![â](/assets/icons/16-arrow-right.svg)*/AAAAAAAAAAB.png)/*[ ![â](/assets/icons/16-arrow-right.svg)*/e function
with a ` set ` rule.

T/*![Docs](/assets/icons/16-docs-dark.svg)*/icons/16-arrow-right.svg)*/  ` fill `

[ none ](/docs/reference/foundations/none/) or  [ auto
](/docs/reference/foundations/auto/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/e/color/) or  [ gradient
](/docs/reference/visualize/*[ Reference ](/docs/reference/)*/cs/reference/visualize/pattern/)

Settable
/*[ Model ](/docs/reference/model/)*/rs can be customized for all following uses/*[ Bullet List ](/docs/reference/model/list/)*/ell's [ fill ](/docs/reference/model/table/#parameters-fill) override.

Default: ` auto  `

====  ` align `

[ auto ](/docs/reference/foundations/auto/) or  [ alignment
](/docs/reference/layout/alignment/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The cell's [ alignment ](/docs/reference/model/table/#parameters-align)
override.

Default: ` auto  `

====  ` inset `

[ auto ](/docs/reference/foundations/auto/) or  [ relative
](//*[Preview](/assets/docs/dGd96M9aTTHo-jKJ9y73kwAAAAAAAAAA.png)*/ference/foundations/dictionary/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The cell's [ inset ](/docs/reference/model/table/#parameters-inset) override.

Default: ` auto  `

====  ` stroke `

[ none ](/docs/reference/foundations/none/) or  [ length
](/docs/reference/layout/length/) or  [ color
](/docs/reference/visualize/color/) or  [ gradient
](/d/*[ bool ](/docs/reference/foundations/bool/)*/roke
](/doc/*[ content
](/docs/reference/foundations/content//*[ array
](/docs/reference/foundations/array//*[ function
](/docs/reference/foundations/function/)*/y/)

Settab/*[ length
](/docs/reference/layout/length/)*/ be customized f/*[ length
](/docs/reference/layout/length/)*/ a ` set ` r/*[ auto
](/docs/reference/foundations/auto//*[ length
](/docs/reference/layout/length/)*/de.
/*[ content
](/docs/reference/foundations/content/)*/to ](//*[ content ](/docs/reference/foundations/content/)*/ocs/reference//*[ bool ](/docs/reference/foundations/bool/)*/

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

Whether rows spanned by this cell can be /*[ spacing ](/docs/reference/model/list/#parameters-
spacing)*/spanning only fixed-size rows is unbreakable, while a
cell spann/*[
paragraph spacing ](/docs/reference/model/par/#parameters-spacing)*/  `

===  ` hline ` Element

/*[ paragraph leading
](/docs/reference/model/par/#parameters-leading)*/ ` show ` rules.

A horizontal line in the table.

Overrides any per-cell stroke, including stroke specified through the table's
` stroke ` field. Can cross spacing between cells created through the table's
[ ` column-gutter ` ](/docs/reference/model/table/#parameters-column-gutter)
option.

Use this function instead of the table's ` stroke ` field if you want to
manually place a horizontal line at a specific position in a single table.
Consider using [ table's ` stroke ` ](/docs/reference/model/table/#parameters-
stroke) field or [ ` table.cell ` 's ` stroke `
](/docs/reference/model/table/#definitions-cell-stroke) field instead if the
line you want to place is part of all y/*[Preview](/assets/docs/4FUPGE5Zxz4-Z1S-m_IFCQAAAAAAAAAA.png)*/cs/reference/fo/*[ content ](/docs/reference/foundations/content/)*/o/*[ array
](/docs/reference/foundations/array/)*///*[ function
](/docs/reference/foundations/function/)*/ce/foundations/none/) [ int ](/docs/reference/foundations/int/)
,  stroke  :  [ none ](/docs/reference/foundations/none/) [ length
](/docs/reference/layout/length/) [ color ](/docs/reference/visualize/color/)
[ gradient ](/docs/reference/visualize/gradient/) [ stroke
](/docs/reference/visualize/stroke/) [ pattern
](/docs/reference/visualize/pattern/) [ dictionary
](/docs/reference/foundations/dictionary/) ,  position  :  [ alignment
](/docs/reference/layout/alignment/) ,

)  -> [ content ](/docs/reference/foundations/content/)

    
    
    #set table.hline(stroke: .6pt)
    
    #table(
      stroke: none,
  /*![Preview](/assets/docs/IHpzp-b7mQ7ctAllS/*[ content ](/docs/reference/foundations/content/)*/      [10:30], [Talk: Typst's Future],
      [11:15], [Session: Good PRs/*[Preview](/assets/docs/rGFZOVIfGIEORB3iENBotQAAAAAAAAAA.png)*/],
      table./*[ length ](/docs/reference/layout/length/)*/cked Layout],
      [15:00], [Talk: Automations],
      [16:00], [Workshop: Tables],
      table.hline(),
      [19:00], [Day 1 Attendee Mixer],
    )
    

![Preview](/assets/docs/Fl-W72wh/*[ length ](/docs/reference/layout/length/)*/

[ auto ](/docs/reference/foundations/auto/) or  [ int
](/docs/reference/foundations/int/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The/*[ auto ](/docs/reference/foundations/auto/)*/c/*[ length
](/docs/reference/layout/length/)*/o the ` y ` field in [ ` grid.hline `
](/docs/reference/layout/grid/#definitions-hline-y) .

Default: ` auto  `

====  ` start `

[ int ](/docs/reference/foundations/int/)

Settable

Question mark

Setta/*[ ` leading `
](/docs/reference/model/par/#parameters-leading)*/ function
with a ` set ` ru/*[ ` spacing ` ](/docs/reference/model/par/#parameters-spacing)*/xed, inclusive).

Default: ` 0  `

====  ` end `

[ none ](/docs/r/*[ content ](/docs/reference/foundations/content/)*/erence/foundations/int/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The column before which the horizontal line ends (zero-indexed, exclusive).

Default: ` none  `

====  ` stroke `

[ none ](/docs/reference/foundations/none/) or  [ length
](/docs/reference/layout/length/) or  [ color
](/docs/reference/visualize/color/) or  [ gradient
](/docs/reference/visualize/gradien/*[Preview](/assets/docs/scttBXkLjYOvlJchbuo00wAAAAAAAAAA.png)*/pattern
](/docs/reference/visualize/pattern/) or  [ dictionary
](/docs/reference/foundations/dictionary/)

Settable

Question mark

Settable parame/*![â](/assets/icons/16-arrow-right.svg)*/ uses of the function
with a ` set ` rule.

The line's stroke.

Specifying ` none  ` removes any lines previously placed across this line's
range, including h/*[ content ](/docs/reference/foundations/content//*![Docs](/assets/icons/16-docs-dark.svg)*/undations//*![](/assets/icons/16-arrow-right.svg)*/](/docs/reference/foundations/content/*![](/assets/icons/16-arrow-right.svg)*/or all following uses of the function
w/*![](/assets/icons/16-arrow-right.svg)*/which /*[ ![â](/assets/icons/16-arrow-right.svg)*/) - either `
top ` to draw above it or ` bottom ` to draw below /*[ ![â](/assets/icons/16-arrow-
right.svg)*/ gutter is enabled (and shouldn't be
used otherwise - prefer just increasing the ` y `/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/sition below a row becomes different from the positi/*[ Reference ](/docs/reference/)*/e spacing between both.

Default: ` top `

/*[ Model ](/docs/reference/model/)*/mark

Element functions can be customized w/*[ Emphasis ](/docs/reference/model/emph/)*/cal line in the table. See the docs for [ ` grid.vline `
](/docs/reference/layout/grid/#definitions-vline) for more information
regarding how to use this element's f/*[ text style ](/docs/reference/text/text/#parameters-style)*/cified through the table's
` stroke ` field. Can cross spacing be/*![Preview](/assets/docs/yrIipb0QYzuDEgQNZF57rwAAAAAAAAAA.png)*/ocs/reference/model/table/#parameters-row-gutter) option.

Similar to [ ` table.hline ` ](/docs/reference/model/table/#definitions-hline)
, use this function if you want to manually place a vertical line a/*[Preview](/assets/docs/p3cG/*![â](/assets/icons/16-arrow-right.svg)*/troke `
](/docs/reference/model/table/#parameters-stro/*![â](/assets/icons/16-arrow-right.svg)*/e ` ](/docs/reference/model/table/#definitions-cell-stroke) field
instead if the line you want /*![Docs](/assets/icons/16-docs-dark.svg)*/signs.

table  .  vline  (

x  :  [ auto ](/docs/reference/foundations/auto/) [ int
](/docs/reference/foundations/int/) ,  start  :/*[ content ](/docs/reference/foundations/content/)*/d  :/*[ content ](/docs/reference/foundations/content/)*/nt ](/docs/re/*[ content ](/docs/reference/foundations/content/)*//docs/reference/foundations/none/) [ length
](/docs/reference/layout/length/) [ color ](/docs/reference/visualize/color/)
[ /*[ ![â](/assets/icons/16-arrow-right.svg)*/ent/) [ stroke
](/docs/reference/visualize/stroke/) [ pa/*[ ![â](/assets/icons/16-arrow-right.svg)*/) [ dictionary
](/docs/reference/foundations/dictionary/) ,  position  :  [ alignment
](/docs//*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ontent ](/docs/reference/foundations/content/)

====/*[ Reference ](/docs/reference/)*/ce/foundations/auto/) or  [ int
](/docs/ref/*[ Model ](/docs/reference/model/)*/e

Question mark

Settable parameters can b/*[ Footnote ](/docs/reference/model/footnote/)*/nction
with a ` set ` rule.

The column before which the horizontal line is placed (zero-indexed).
Functions identically to the ` x ` field in [ ` grid.vline `
](/docs/reference/layout/grid/#definitions-vline) .

Default: ` auto  `

====  ` start `

[ int ](/docs/reference/foundations/int/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The row at which the vertical line start/*[ `
footnote.entry ` ](/docs/reference/model/footnote/#definitions-entry)*/ocs/reference/foundations/none/) or  [ int
](/docs/reference/foundations/int/)

Settable
/*[ ` super ` ](/docs/reference/text/super/ "`super`")*/d for all following uses of the function
with a ` set ` rule.

The row on top of which the vertical line ends (zero-indexed, exclusive).

Default: ` none  `

====  ` stroke `

[ none ](/docs/reference/foundati/*https://typst.app/docs]*/
](//*[Preview](/assets/docs/Rux1n4IPwOkOpn1s57WxpAAAAAAAAAAA.png)*//visualize/color/) or  [ gradient
](/docs/reference/visualize/gradient/) or  [ stroke
](/docs/reference/visualize/stroke/) or  [ pattern
](/docs/reference/visualize/pattern/) or/*[ horizontal spacing
](/docs/reference/layout/h/)*/ionary/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The l/*https://typst.app/app]*/ing ` none  ` removes any lines previously placed across this line's
range, includi/*[Preview](/assets/docs/xECSHtr0VhzFh5onpw48GQAAAAAAAAAA.png)*/lack `

====  ` position `

[ alignment ](/docs/reference/layout/alignment/)

Settable

Question mark

Settable /*[ here
](https://github.com/typst/typst/issues/1467#issuecomment-1588799440)*/ set ` rule.

The position at which the line is placed, given its column ( ` x ` ) - either
` start ` to draw before it or ` end ` to draw after it.

The values ` left ` and ` rig/*[ str ](/docs/reference/foundations/str//*[ function
](/docs/reference/foundations/function/)*//*[ label
](/docs/reference/foundations/label//*[ content
](/docs/reference/foundations/content/)*/tter i/*[ content ](/docs/reference/foundations/content/)*/er just increasing/*[ str ](/docs/reference/foundations/str/)*/h/*[ function
](/docs/reference/foundations/function/)*/om the position before
the next column due to the spacing between both.

Default: ` start `

===  ` header ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

A repeatable table header.

You should wrap your tables' heading rows in this functio/*[ counter
](/docs/reference/introspection/counter/ "counter")*/ause Typs/*[ header
](/docs/reference/layout/page/#parameters-header)*/to tables in the future and ensure universal
access to your document.

You can use the ` repeat ` parameter to control whether your table's header
will be repeated across pages.

table  .  header  (

repeat  :  [ bool ](/docs/reference/foundation/*[Preview](/assets/docs/CVlSBedIWhhzG/*![Preview](/assets/docs/r-fawkmmJ6Sniwi8--ib5gAAAAAAAAAA.png)*/rence/foundations/label/)*/t/*[ content
](/docs/reference/foundations/content/)*/  #set table(
      fill: (x, y) =>
        if x == 0 or y == 0 {
          gray.lighten(40%)
        },
      align: right,
    )
    
    #show table.cell.where(x: 0): strong
    #show table.cell.where(y: 0): strong
    
    #table(
      columns: 4,
      table.header(
        [], [Blue chip],
        [Fresh IPO], [Penny st'k],
      ),
      table.cell(
        rowspan: 6,
        align: horizon,
        rotate(-90deg, reflow: true)[
          *USD / day*
        ],
      ),
      [0.20], [104], [5],
      [3.17], [108], [4],
      [1.59], [84],  [1],
      [0.26], [98],  [15],
      [0.01], [195], [4],
      [7.34], [57],  [2],
    )
    

![Preview](/assets/docs/IHpzp-b7mQ7ctAllS/*[ content ](/docs/reference/foundations/content/)*/p-b7mQ7ctAllSx/*[ content
](/docs/reference/foundations/content/)*/docs/reference/*[ length
](/docs/reference/layout/length/)*/rk

Sett/*[ length
](/docs/reference/layout/length/)*/following u/*[ length
](/docs/reference/layout/length/)*/Whethe/*[ content ](/docs/reference/foundations/content/)*/efault: ` true  `

====  ` children `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Posit/*[Preview](/assets/docs/OQcOLIwIWFG81ucXxeuiVwAAAAAAAAAA.png)*/iadic

Question mark

Variadic parameters can be specified multiple times.

The cells and lines within the header.

===  ` footer ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

A repeatable table footer.

Just like the [ ` table.header ` ](/docs/reference/mod/*[ content ](/docs/reference/foundations/content/)*/r can repeat itself on every page of the table. This
is useful for improving legibility by adding the column labels in both the
header and footer of a large table, totals, or other information that should
be visible on every page.

No other table cells may be placed after the footer.

table  .  footer  (

repeat  :  [ bool ](/docs/reference/foundations/bool/) ,  ..  [ content
](/docs/reference/foundations/content/) ,

)  -> [ content ](/docs/reference/foundations/content/)

====  ` repeat `

[ bool ](/*[Preview](/assets/docs/pITXewKM6sSB5ed44fUp7wAAAAAAAAAA.png)*/
Settable parameter/*[ content ](/docs/reference/foundations/content/)*/ function
with a ` set ` rule.

Whether this footer should be repeated across pages.

Default: ` true  `

====  ` children `

[ content ](/docs/reference/foundati/*![â](/assets/icons/16-arrow-right.svg)*/stion mark

Positional parameters are specified in o/*![â](/assets/icons/16-arrow-right.svg)*/ mark

Variadic parameters can be specified multiple times.

The cells and lines w/*![Docs](/assets/icons/16-docs-dark.svg)*/ns/16-arrow-right.svg) Strong Emphasis  Previous page
](/docs/reference/model/strong//*[Preview](/assets/docs/2BZbfiOf16u6fje-JM2KhwAAAAAAAAAA.png)*/ page  ](/docs/refe/*[ length ](/docs/reference/layout/length/)*/odel/par.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Model ](/docs/reference/model/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Paragraph ](/docs/reference/model/par/)

=  ` par ` Element

Question mark

Element functions can be customized with ` set ` and  ` /*[Previe/*![Pr/*https://example.com"*/WJNwFvR3Obv/*https://example.com"*/A.png)

This element exposes furth/*[Preview](/assets/docs/mBfQJYO4ObjIyuLi_FjKfgAAAAAAAAAA.png)*/perties, it can also be used to explicitly render its argument onto a
paragraph of its own.

==  Example

    
    
    #set par(
      first-line-indent: 1em,
      spacing: 0.65em,
      justify: true,
    )
    
    We proceed by contradiction.
    Suppose that there exists a set
    of positive in/*[Preview](/assets/docs/3sggupXU7L_bO6KYRBDWHQAAAAAAAAAA.png)*/ $a^n + b^n = c^/*[ length ](/docs/reference/layout/length/)*/    
    Without loss of generality,
    let $a$ be the smallest of the
    three integers. Then, we ...
    

![Preview](/assets/docs/yrIipb0QYzuDEgQNZF57rwAAAAAAAAAA.png)

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

par  (

leading  :  [ length ](/docs/r/*[Preview](/assets/docs/-zkE_ejQDpF6KTPTlZZ3gwAAAAAAAAAA.png)/*[ ![â](/assets/icons/16-arrow-right.svg)*/bool
](/docs/reference/foundations/bool/) ,  linebre/*[ ![â](/assets/icons/16-arrow-right.svg)*/ns/auto/) /*![Preview](/assets/docs/O-oJqYc-OwEoxappxK4AZAAAAAAAAAAA.png)*/t  :  [ length ](/docs/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/nt  :  [ length ](/docs/reference/layout/length/) , /*[ Reference ](/docs/reference/)*/undations/content/) ,

)  -> [ content ](/d/*[ Model ](/docs/reference/model/)*//)

===  ` leading `

[ length ](/docs/refe/*[ Term List ](/docs/reference/model/terms/)*/ark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The spacing between lines.

Leading defines the spacing between the [ bottom edge
](/docs/reference/text/text/#parameters-bottom-edge) of one line and the [ top
edge ](/docs/reference/text/text/#parameters-top-edge) of the following line.
By default, these two properties are up to the font, but they can also be
configured manually with a text set ru/*[Preview](/assets/docs/qjdQTTJFa_RYtcfu42IiawAAAAAAAAAA.png)*/also configure a
consistent baseline-to-baseline distance. You could, for instance, set the
leading to ` 1em  ` , the top-edge to ` 0.8em  ` , and the bottom-edge to ` -
0.2em  ` to get a baseline gap of exactly ` 2em  ` . The exact distribution of
the top- and bottom-edge values affects the bounds of the/*[ bool ](/docs/reference/foundations/bool/)*/

===  ` spaci/*[
content ](/docs/reference/foundations/content/)*/
Settable

/*[ length
](/docs/reference/layout/length/)*/customized for all /*[ length
](/docs/reference/layout/length/)*/t ` rule.

T/*[ auto
](/docs/reference/foundations/auto//*[ length
](/docs/reference/layout/length/)*/n th/*[ content
](/docs/reference/foundations/content//*[ array
](/docs/reference/foundations/array/)*/e/*![Preview](/assets/docs/vf0ZBrlygVUAByS/*[ ![â](/assets/icons/16-arrow-right.svg)*//docs/reference/foundations/bool/)*/raph, that block's [/*![â](/assets/icons/16-arrow-right.svg)*/k/#parameters-above) or [ ` below `
](/docs/reference/layout/block/#parameters-bel/*[ spacing ](//*![Docs](/assets/icons/16-docs-dark.svg)*/
spacing)*/dings, for instance, reduce the spacing below
them by default for a b/*[ paragraph spacing ](/docs/reference/model/par/#parameters-spacing)*/eference/foundations/bool/)

/*[ paragraph leadi/*![](/ass/*[ Cite ](/docs/reference/model/cite/)*/ing)*/ll following uses of the function
with a ` set ` rule.

Whether to justify text in its line.

Hyphenation will be enabled for justified par/*![Preview](/assets/docs/MgiUB3LoxE0JROWo/*[ bibliography
](/docs/reference/model/bibliography/ "bibliography")*/set to ` auto  ` and the current language is known.

Note that the current [ alignment ](/docs/reference/layout/align/#parameters-
alignment) still has an effect on the placement of the last line except if it
ends with a [ justified line break
](/docs/reference/text/linebreak/#parameters-justify) .

Default: ` false  `

===  ` linebreaks `

[ auto ](/docs/reference/foundations/auto/) or  [ str
](/docs/reference/foundations/str/)

Settable

Question mark

/*[Preview](/assets/docs/skkuR2BgltlCHUy9cPpX7gAAAAAAAAAA.png)*/ of the function
w/*[ content ](/docs/reference/foundations/content/)*/.

When this property is set to ` auto  ` , its default value, optimized line
breaks will be used for justified paragraphs. Enabling optimized line breaks
for ra/*![](/assets/icons/16-arrow-right.svg)*/e to improve the appearance of the
text.

Variant  |  Details   
---|---  
` "  simple  " ` |  Determine the line breaks in a simple first-fit style.   
` "  optimized  " ` |  Optimize the line breaks for the /*![Preview](//*[ none
](/docs/reference/foundations/none//*[ content
](/docs/reference/foundations/content/)*/raph when calculating line breaks.   
  
De/*[Preview](/assets/docs/xyyblMI8l_99lTt1_p5kWgAAAAAAAAAA.png)*/ example

    
/*[ length ](/docs/reference/layout/length/)*/par(linebreaks: "simple")
    Some texts feature many longer
    words. Those are often exceedingly
    challenging to break in a visually
    pleasing way.
    
    #set par(lineb/*![](/assets/icons/16-arrow-right.svg)*/eference/layout/length/)*/words. Thos/*![](/assets/icons/16-arrow-right.svg)*/ng to break in a visually
    pleasing /*![](/assets/icons/16-arrow-right.svg)*/fawkmmJ6Sniwi8--ib5gAAAAAAAAAA.png)

===  ` first-line-indent `

[ length ](/docs/reference/layout/length/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The indent the first line of a paragraph should have.
/*[Preview](/assets/docs/6yYrKErT2JtRwBRmpS8r5wAAAAAAAAAA.png)*/nted (not the fi/*[ auto ](/docs/reference/foundations/auto/)*/o/*[ length
](/docs/reference/layout/length/)*/ndicated either by some space
between paragraphs or by indented first lines. Consider reducing the [
paragraph s/*![Preview](/assets/docs/dGd96M9aTTHo-jKJ9y73kwAAAAAAAAAA.png)*/ the [
` leading ` ](/docs/referenc/*[ ` leading `
](/docs/reference/model/par/#parameters-leading)*/. using ` #  set  par  (  spacin/*[ ` spacing ` ](/docs/reference/model/par/#parameters-spacing)*/t `

[ length ](/docs/reference/layout/length/)

Settable

Question ma/*[ content ](/docs/reference/foundations/content/)*/ /*[ array
](/docs/reference/foundations/array/)*/ rule.

The indent all but the first line of a paragraph should have.

Default: ` 0pt  `

===  ` body `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The contents of the paragraph.

==  Definitions

Question mark

Functions and types and can have associated definitions. These are accessed by
specifying the function or type, followed by a period, and then the
definition's name.

===  ` line ` Element

Question mark

Element functi/*[Preview](/assets/docs/wkvQM6jeTkSTRoaT9Y0lSQAAAAAAAAAA.png)*/aragraph line.

This element is exclusively used for line number configuration through set
rules and cannot be placed.

The [ ` numbering ` ](/docs/reference/model/par/#definitions-line-numbering)
option is used to enable line numbers by specifying a numbering format.

par  .  line  (

numbering  :  [ none ](/docs/reference/foundations/none/)/*[ content ](/docs/reference/foundations/content/)*//*[ content
](/docs/reference/foundations/content/)*/number/*[ content ](/docs/reference/foundations/content/)*/uto/) [ alignm/*[ content ](/docs/reference/foundations/content/)*/r-margin  :  [ alignment
](/docs/reference/layout/alignment/) ,  number-clearance  :  [ auto
](/docs/reference/foundations/auto/) [ length
](/docs/reference/l/*[ content ](/docs/reference/foundations/content/)*/cs/reference/foundations/str/) ,

)  -> [ content ](/docs/reference/foundations/content/)

    
    
    #set par.line(numberin/*[ ![â](/assets/icons/16-arrow-right.svg)*/ets are blue. \
    Typst is there for you.
    

/*[ ![â](/assets/icons/16-arrow-right.svg)*/4gEwAAAAAAAAAA.png)

The ` numbering ` option takes either a predefined [ number/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ring/) or a function returning styled conte/*![Preview](/assets/docs/4FUPGE5Zxz4-Z1S-m_IFCQAAAAAAAAAA.png)*/elements by setting the
nu/*[ Model ](/docs/reference/model/)*/et rules.

    
    
    // Styled red line/*[ Link ](/docs/reference/model/link/)*/mbering: n => text(red)[#n]
    )
    
    // Disable numbers inside figures.
    #show figure: set par.line(
      numbering: none
    )
    
    Roses are red. \
    Violets are blue.
    
    #figure(
      caption: [Without line numbers.]
    )[
      Lorem ipsum \
      dolor sit amet
    ]
    
    The text above is a sample \
    originat/*https://example.com*/mes.
    

![Pr/*https://example.com"*/WJNwFvR3Obv/*https://example.com"*/A.png)

This element exposes furth/*[Preview](/assets/docs/mBfQJYO4ObjIyuLi_FjKfgAAAAAAAAAA.png)*/e numbering, such as its/*![](/assets/icons/16-arrow-right.svg)*/par/#definitions-line-number-align) or [ margin
](/docs/reference/model/par/#definitions-line-number-margin) . In addition,
you can control whether the numbering is reset on each page through the [ `
n/*![Preview](/assets/docs/rGFZOVIfGIEORB3iENBotQAAAAAAAAAA.png)*/*[ label
](/docs/reference/foundations/label//*[ location
](/docs/reference/introspection/location//*[ dictionary
](/docs/reference/foundations/dictionary/)*//*[ content
](/docs/reference/foundations/content/)*/on/)

/*[ content ](/docs/reference/foundations/content/)*/be customized/*[ str ](/docs/reference/foundations/str/)*/i/*[ label
](/docs/reference/foundations/label/)*/A/*[ location
](/docs/reference/introspection/location/)*/r/*[ dictionary
](/docs/reference/foundations/dictionary/)*/ts/icons/16-arrow-right.svg) View example

    
    
    #set par.line(numbering: "I")
    
    Roses are red. \
    Violets are blue. \
    Typst is there for you.
    

![Preview](/assets/docs/O-oJqYc-OwEoxappxK4AZAAAAAAAAAAA.png)

====  ` number-align `

[ auto ](/docs/reference/foundations/auto/) or  [ alignment
](/docs/reference/layout/alignment/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a/*[ label ](/docs/reference/foundations/label/ "label")*/ted with each line.

The default of ` auto  ` indicates a smart default where numbers grow
horizontally a/*[ reference ](/docs/reference/model/ref/)*/ they're in and /*[ ` location ` ](/docs/reference/introspection/location/ "`location`")*/arrow-right.svg) View e/*[ ` here ` ](/docs/reference/introspection/here/ "`here`")*/*[ ` locate ` ](/docs/reference/introspection/locate/ "`locate`")*//*[ ` query/*![](/assets/icons/16-arrow-right.svg)*/ery/ "`query`")*/[Preview](/assets/docs/XfwBMgYjt2fGeRgFr_kj4AAAAA/*[ integer ](/do/*![Preview](/assets/docs/scttBXkLjYOvlJchbuo00wAAAAAAAAAA.png)*//alignme/*[ length ](/docs/reference/layout/length/ "length")*/can be customized for all following uses of the function
with a ` set ` rule.

The margin at which line numbers appear.

_Note:_ In a multi-column document, the line numbers for paragraphs inside the
last column will always appear on the ` end ` margin (right margin for left-
to-right text and left margin for right-to-l/*[Preview](/assets/docs/r-LwcI2C1K4OtUWhtvg8QgAAAAAAAAAA.png)*/ be changed a/*[ content ](/docs/reference/foundations/content/)*/cons/16-arrow-right.svg) View example

    
    
    #set par.line(
      numbering: "1",
      number-margin: right,
    )
 /*![â](/assets/icons/16-arrow-right.svg)*/ yet darker
    - Readings: Negative
    

![Preview](/assets/docs/*![â](/assets/icons/16-arrow-
right.svg)*/16-arrow-right.svg)*/arance `

[ auto ](/docs/reference/foundations/auto/) /*[ ![â](/a/*![Docs](/assets/icons/16-docs-dark.svg)*/Settable

/*![](/assets/icons/16-arrow-right.svg)*/n be customized for all following use/*![](/assets/icons/16-arrow-right.svg)*/s-dark.svg)*/stance between line number/*![](/assets/icons/16-arrow-right.svg)*/ce ](/docs/reference/)*/clearance that is adaptive to the
page widt/*[ Model ](/docs/reference/model/)*/n most cases.

Default: ` auto  `

![](/ass/*[ Cite ](/docs/reference/model/cite/)*/ample

    
    
    #set par.line(
      numbering: "1",
      number-clearance: 4pt,
    )
    
    Typesetting \
    Styling \
    Layout
    

![Preview](/assets/docs/MgiUB3LoxE0JROWo/*[ bibliography
](/docs/reference/model/bibliography/ "bibliography")*/rence/foundations/str/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

Controls/*![Preview](/assets/docs/p3cGCgaJdrkrScOita7QfgAAAAAAAAAA.png)*/ope must be uniform across each page run (a page
run/*[Preview](/assets/docs/VelsLOKdUATbBc5AK51_FgAAAAAAAAAA.png)*/ween). For this
reason, set rules for it should be defined before any page content, typically
at the very start of the document.

Variant  |  Details   
---|---  
` "  document  " ` |  Indicates the line number counter spans the whole document, that is, is never automatically reset.   
` "  page  " ` |  Indicates the line number counter /*[ References
](/docs/reference/model/ref/)*/page.   
  
Default: ` "document"  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set par.line(
      numbering: "1",
      numbering-scope: "/*![â](/assets/icons/16-arrow-right.svg)*/econd line
    #pagebreak()
   /*[ label ](/docs/reference/*![â](/assets/icons/16-arrow-right.svg)*/ none
](/docs/reference/foundations/none//*[ content
](/docs/reference/foundations/content/)*/Og/*![Docs](/assets/icons/16-docs-dark.svg)*/ations/non/*![](/assets/icons/16-arrow-right.svg)*/ns/str/)*/](/docs/re/*[ auto ](/docs//*![](/assets/icons/16-arrow-right.svg)*//docs/reference/foundations/str/)*/k  N/*![](/assets/icons/16-arrow-right.svg)*/ations/content/)*/docs/referen/*[ label ](/docs/reference/foundations/label/)*/s/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Model ](/docs/reference/model/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Bullet List ](/docs/refere/*![â](/assets/icons/16-arrow-right.svg)*/uestion mark

Element functions can be custom/*[Preview](/*![â](/assets/icons/16-arrow-right.svg)*/AAAAA.png)*/lays a sequence of /*[ none ](/docs/reference/foundations/none/)*/ /*[ content
](/docs/r/*![Docs](/assets/icons/16-docs-dark.svg)*/  - Text
    - Math
    - Layout
    - ...
    
    Multiple lines.
    - This list item spans multiple
      lines because it is indented.
    
    Function call.
    #list(
      [Foundations],
      [Calculate],
      [Construct],
      [Data Loading],
    )
    

![Preview](/assets/docs/dGd96M9aTTHo-jKJ9y73kwAAAAAAAAAA.png)

==  Syntax

This functions also h/*![Preview](/assets/docs/Rux1n4IPwOkOpn1s57WxpAAAAAAAAAAA.png)*/](/assets/docs/yJ9a0jIezaQUawq1k-YqqwAAAAAAAAAA.png)*/tain multiple/*[ none ](/docs/reference/foundations/none/)*/A/*[ str
](/docs/reference/foundations/str/)*/item's marker becomes part of that item.

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

list  (

tight  :  [ bool ](/docs/reference/foundations/bool/) ,  marker  :  [ content
](/docs/reference/foundations/content/) [ array
](/docs/referenc/*![Preview](/assets/docs/xECSHtr0VhzFh5onpw48GQAAAAAAAAAA.png)*/s/function/) ,  indent  :  [ length
](/docs/reference/layout/length/) ,  body-indent  :  [ length
](/docs/refer/*![â](/assets/icons/16-arrow-right.svg)*/to
](/docs/reference/foundations/auto/) [ length
](/do/*![â](/assets/icons/16-arrow-right.svg)*/ntent
](/docs/reference/foundations/content/) ,

)  -> [ content ](/docs/reference/foundati/*![Docs](/assets/icons/16-docs-dark.svg)*/(/docs/reference/foundations/bool/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

Defines the default [ spacing ](/docs/reference/model/list/#parameters-
spacing) of the list. If it is ` false  ` , the items are spaced/*[Preview](/assets/docs/xCamzQ_SHz1kKaOAByx_rAAAAAAAAAAA.png)*/#parameters-sp/*[ auto ](/docs/reference/foundations/auto/)*/r/*[ str
](/docs/reference/foundations/str/)*/r/#parameters-leading) instead. This makes the list
more compact, which can look better if the items are short.

In markup mode, the value of this parameter is determined based on whether
items are separated with a blank line./*[ CSL file ](https://citationstyles.org/)*/s is set to ` true  ` ; if items are separated by a blank line, this is set
to ` false  ` . The markup-defined tightness cannot be overridden with /*[ bibli/*![](/assets//*[ tables ](/docs/reference/model/table/)*/parameters-style)*/mple

    
    
    - If a list has a lot of text, and
      maybe other inline content, it
/*![Preview](/assets/docs/CVlSBedIWhhzGwE8LefQmwAAAAAAAAAA.png)*/wide, simply insert
      a blank line between the items.
    

![Preview](/assets/docs/4FUPGE5Zxz4-Z1S-m_IFCQAAAAAAAAAA.png)

===  ` marker `

[ content ](/docs/reference/foundations/content/) or  [ array
](/docs/reference/foundations/array/) or  [ function
](/docs/reference/foundations/function/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The marker which introduces each item.

Instead of plain content, you can also pass an array with multiple markers
that should be used for nested lists. If the list nesting depth exceeds the
number of markers, the markers are cycled. For total control, you may pass a
function that maps the list's nesting depth (starting from ` 0  ` ) to a
desired marker.

Default: ` (  [  â¢  ]  ,  [  â£  ]  ,  [  â  ]  )  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set list(marker: [--])
    - A more classic list
    - With en-dashes
    
    #set list(marker: ([â¢], [--]))
    - Top-level
      - Nested
      - Items
    - Items
    

![Preview](/assets/docs/rGFZOVIfGIEORB3iENBotQAAAAAAAAAA.png)

===  ` indent `

[ length ](/docs/reference/layout/length/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The indent of each item.

Default: ` 0pt  `

===  ` body-indent `

[ length ](/docs/reference/layout/length/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The spacing between the marker and the body of each item.

Default: ` 0.5em  `

===  ` spacing `

[ auto ](/docs/reference/foundations/auto/) or  [ length
](/docs/reference/layout/length/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The spacing between the items of the list.

If set to ` aut/*![](/assets/icons/16-arrow-right.svg)*/(/docs/reference/model/par/#parameters-leading) for tight lists and paragraph
[ ` spacing ` ](/docs/reference/model/par/#parameters-spacing) for wide (non-
tight) lists.

Default: ` auto  `

===  ` children `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

Variadic

Question mark

Variadic parameters can be specified multiple times.

The bullet list's children.

When using the list syntax, adjacent items are automatically collected into
lists, even through constructs like for loops.

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #for letter in "ABC" [
      - Letter #letter
    ]
    

![Preview](/assets/docs/scttBXkLjYOvlJchbuo00wAAAAAAAAAA.png)

==  Definitions

Question mark

Functions and types and can have associated definitions. These are accessed by
specifying the function or type, followed by a period, and then the
definition's name.

===  ` item ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

A bullet list item.

list  .  item  (

[ content ](/docs/reference/foundations/content/)

)  -> [ content ](/docs/reference/foundations/content/)

====  ` body `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The item's body.

[ ![â](/assets/icons/16-arrow-right.svg) Bibliography  Previous page
](/docs/reference/model/bibliography/) [ ![â](/assets/icons/16-arrow-
right.svg) Cite  Next page  ](/docs/reference/model/cite/)



= *docs/reference/model/emph.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Model /*![](/assets/icons/16-arrow-right.svg)*/sets/icons/16-arrow-right.svg)
  - [ Emphasis ](/docs/reference/model/emph/)

=  ` emph ` Element

Question mark

Element funct/*![Preview](/assets/docs/3sggupXU7L_bO6KYRBDWHQAAAAAAAAAA.png)*/hasizes content by toggling italics.

  - If the current [ text style ](/docs/reference/text/text/#parameters-style) is ` "normal"  ` , this turns it into ` "italic"  ` . 
  - If it is already ` "italic"  ` or ` "oblique"  ` , it turns it back/*![](/assets/icons/16-arrow-right.svg)*/  
    
    This is _emphasized._ \
    This is #emph[too.]
    
    #show emph: it => {
      text(blue, it.body)
    }
    
    This is _emphasized_ differently.
    

![Preview](/assets/docs/p3cGCgaJdrkrScOita7QfgAAAAAAAAAA.png)

==  Syntax

This function also has dedicated syntax: To emphasize c/*![â](/assets/icons/16-arrow-right.svg)*/ ( ` _ ` ). Note that this only works at word boundaries. To
emphasize part of a word, you have/*![Docs](/assets/icons/16-docs-dark.svg)*/Question m/*![](/assets/icons/16-arrow-right.svg)*/unction. They are specified in parent/*![](/assets/icons/16-arrow-right.svg)*/ (

[ content ](/docs/reference/foundat/*![](/assets/icons/16-arrow-right.svg)*/cs/reference/foundations/content/)

===  ` body `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The content to emphasize.

[ ![â](/assets/icons/16-arrow-right.svg) Document  Previous page
](/docs/reference/model/document/) [ ![â](/assets/icons/16-arrow-right.svg)
Figure  Next page  ](/docs/reference/model/figure/)



= *docs/reference/model/footnote.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Model ](/docs/reference/model/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Footnote ](/docs/reference/model/footnote/)

=  ` footnote ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

A footnote.

Includes additional remarks and references on the same page with footnotes. A
footnote will insert a superscript number that links to the note at the bottom
of the /*[ ![â](/assets/icons/16-arrow-right.svg)*/ughout your document and can
break across multiple page/*[ ![â](/assets/icons/16-arrow-right.svg)*/ry in the footnote listing, see [ `
footnote.entry ` ](/docs/reference/model/footnote/#definitions/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ as a normal superscript, so you can use a set rule
/*[ Reference ](/docs/reference/)*/rence/text/super/ "`super`") function to
cu/*[ Model ](/docs/reference/model/)*/show rule to customize only the footnote
ma/*[ Paragraph Break ](/docs/reference/model/parbreak/)*/Example

    
    
    Check the docs for more details.
    #footnote[https://typst.app/docs]
    

![Preview](/assets/docs/Rux1n4IPwOkOpn1s57WxpAAAAAAAAAAA.png)

The footnote automatically attaches itse/*[
for loops ](/docs/reference/scripting/#loops)*/ace before it in the markup. To force space, you can use the
string ` #  " "  ` or explicit [ horizontal spacing
](/docs/reference/layout/h/) .

By giving a label to a footnote, you c/*[Preview](/assets/docs/Ugn0Cpe50EHdh4tXrmb4YAAAAAAAAAAA.png)*/it Typst documents online.
    #footnote[https://typst.app/app] <fn>
    Checkout Typst's website. @fn
    And the online app. #footnote(<fn>)
    

![Preview](/assets/docs/xECSHtr0VhzFh5onpw48GQAAAAAAAAAA.png)

_Note:_ Set and show rules in the scop/*![](/assets/icons/16-arrow-right.svg)*/cs/reference/foundations/content/)/*[ ![â](/assets/icons/16-arrow-right.svg)*//typst/issues/1467#issuecomment-1588799440) for more/*[ ![â](/assets/icons/16-arrow-right.svg)*/rk

Parameters are the inputs to a function. They are specified in parentheses
after the /*[ ![Docs](/assets/icons/16-docs-dark.svg)*/  [ str ](/docs/reference/foundations/str/) [ functi/*[ Reference ](/docs/reference/)*/s/function/) ,  [ label
](/docs/reference/f/*[ Model ](/docs/reference/model/)*/ocs/reference/foundations/content/) ,

)  -/*[ Figure ](/docs/reference/model/figure/)*//content/)

===  ` numbering `

[ str ](/docs/reference/foundations/str/) or  [ function
](/docs/reference/foundations/function/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule/*![](/assets/icons/16-arrow-right.svg)*/lt, the footnote numbering continues throughout your document. If you
prefer per-page footnote numberi/*![Preview](/assets/docs/xyyblMI8l_99lTt1_p5kWgAAAAAAAAAA.png)*/trospection/counter/ "counter") in the page [ header
](/docs/reference/layout/page/#parameters-header) . In the future, /*[Preview](/assets/docs/udw8J1zW8CDfoYB1XTzdLgAAAAAAAAAA.png)*/"  `

![](/assets//*[ tables ](/docs/reference/model/table/)*/    
    
    #set footnote(numbering: "*")
    
    Footnotes:
    #footnote[Star],
    #footnote[Dagger]
    

![Preview](/assets/docs/CVlSBedIWhhzGwE8LefQmwAAAAAAAAAA.png)

===  ` body `

[ label ](/docs/reference/foundations/label/) or  [ content
](/docs/reference/foundations//*[Preview](/assets/docs/_RaOJik/*![](/assets/ico/*[ length ](/docs/reference/layout/length/)*/order, without names.

The content to put into the footnote. Can also be the label of another
footnote this one shou/*![Preview](/assets/docs/6yYrKErT2JtRwBRmpS8r5wAAAAAAAAAA.png)*/ypes and can have associated definitions. These are accessed by
specifying the f/*[ ` placement `
](/docs/reference/model/figure/#parameters-placement)*/.

===  ` entry ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

An entry in a footnote list.

This function is not intended to be called directly. Instead, it is used in
set and show rules to customize footnote listings.

foot/*[ block ](/docs/reference/layout/block/#parameters-breakable)*/ntent/) ,  separator  :  [ content
](/docs/reference/foundations/content/) ,  clearance  :  [ length
](/docs/reference/layout/length/) ,  gap  :  [ length
](/docs/reference/lay/*[ `
caption ` ](/docs/reference/model/figure/#definitions-caption)*/h/) ,

)  -> [ content ](/docs/reference/foundations/content/)

    
    
    #show footnote.entry: set text(red)
    
    My footnote listing
    #footnote[It's down here]
    has re/*[Preview](/assets/docs/_XYhSBTt1dmjYR9A4n_aCgAAAAAAAAAA.png)*/AAAAAAAAA/*[ ` where ` ](/docs/reference/foundations/function/#definitions-
where)*/age run (a page
run is a sequence of pages without an explicit pagebreak in between). For this
reason, set and show rules for footnote ent/*![Preview](/*[ auto ](/docs/reference/foundations/auto//*[ content
](/docs/reference/foundations/content/)*/ `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

/*[Preview](/assets/docs/5FXY-vQKID4Q1FYsR4Ix9AAAAAAAAAAA.png)*/termine the
footnote counter state.

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #show footnote.entry: it => {
      le/*[ content ](/docs/reference/foundations/content/)*/   "1: ",
    /*[ none
](/docs/reference/foundations/none//*[ auto
](/docs/reference/foundations/auto//*[ alignment
](/docs/reference/layout/alignment/)*/ld! ð]
/*[ str
](/docs/reference/foundations/str/)*/B5ed44fUp7wA/*[ none
](/docs/reference/foundations/none//*[ content
](/docs/reference/foundations/content/)*/ettable

/*[ auto
](/docs/reference/foundations/auto//*[ str ](/docs/reference/foundations/str//*[ function ](/docs/reference/foundations/function/)*/etween the docu/*![â](/assets/icons/16-arrow-right.svg)*/one//*[ auto
](/docs/reference/foundations/auto//*[ /*![â](/assets/icons/16-arrow-right.svg)*/ntent//*[ function
](/docs/reference/foundations/function/)*/t footnote.ent/*[ none
](/docs/reference/foundations/none//*[ str ](/docs/reference/foundations/str//*[ function ](/docs/reference/foundations/function/)*/ not tha//*![](/assets/icons/16-arrow-right.svg)*/ngth/)*//2BZbfiOf16u6/*[ bool
](/docs/r/*![](/assets/icons/16-arrow-right.svg)*/[ content ](/docs/reference/foundations/content/)*/le

Question /*[ content ](/docs/reference/foundations/content/)*/ll following uses of the function
with a ` set ` rule.

The amount of clearance between the document body and the separator.

Default:/*[ image
](/docs/reference/visualize/image/ "image")*/ew example

    
   /*[ none ](/docs/reference/foundations/none/)*/ /*[ auto
](/docs/reference/foundations/auto/)*/e/*[ alignment
](/docs/reference/layout/alignment/)*/[Preview](/assets/docs/jGI_-Yxsz0NqX0MjmZS_qQAAAAAAAAAA.png)

====  ` gap `

[ length ](/docs/reference/layout/length/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The gap between footnote entries.

Default: ` 0.5em  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set footnote.entry(gap: 0.8em)
    
    Footnotes:
    #footnote[Spaced],
    #footnote[Apart]
    

![Preview](/assets/docs/3sggupXU7L_bO6KYRBDWHQAAAAAAAAAA.png)

====  ` in/*[ ` clearance ` ](/docs/reference/layout/place/#parameters-clearance)*/n mark

Settable parameters can be customized for all f/*![â](/assets/icons/16-arrow-right.svg)*/et ` rule.

The indent of each footnote entry.

Defaul/*![â](/assets/icons/16-arrow-right.svg)*/right.svg) View example

    
    
    #set footnote.entry(indent: 0em)
    
    Footnotes:
    #/*![Docs](/assets/icons/16-docs-dark.svg)*/cs/AvTTV4CvkxyZB8XrzNUT3wAAAAAAAAAA.png)/*[Preview](/assets/docs/AvTTV4CvkxyZB8XrzNUT3wAAAAAAAAAB.png)*/w-right.svg) F/*[ str ](/docs/reference/foundations/str/)*/del/figure/) [ ![â](/assets/icons/16-arrow-right.svg)
Heading  Next page  ](/docs/reference/model/heading/)



= *docs/reference/model/terms.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Model ](/docs/reference/model/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Term List ](/docs/reference/model/terms/)

=  ` terms ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

A list of terms and their descriptions.

Displays a sequence of terms and their descriptions vertically. When the
descriptions span over multiple lines, they use hanging indent to communicate
the visual hierarchy.

==  Example

    
    
    / /*[Preview](/assets/docs/_zX5K9NHfd2mYYCeJmag7wAAAAAAAAAA.png)/*[Preview](/assets/docs/_zX5K9NHfd2mYYCeJmag7wAAAAAAAAAB.png)*/sets/docs/qjdQTT/*[ none ](/docs/reference/foundations/none/)*/
/*[ content
](/docs/reference/foundations/content/)*/g a line with a slash,
followed by a term, a colon and a description creates/*![](/assets/icons/16-arrow-right.svg)*/uestion mark

Parameters are the inputs to a function. They are spe/*[ auto ](/docs/reference/foundations/auto/)*/m/*[ str
](/docs/reference/foundations/str/)*/f/*[ function
](/docs/refe/*![Preview](/assets/docs/r-LwcI2C1K4OtUWhtvg8QgAAAAAAAAAA.png)*//content/) ,  indent  :  [ length
](/docs/reference/layout/length/) ,  hanging-indent  :  [ length
](/docs/reference/layout/length/) ,  spacing  :  [ auto
](/docs/reference/foundations/auto/) [ length
](/docs/reference/layout/length/) ,  ..  [ content
](/docs/reference/foundations/content/) [ array
](/docs/referenc/*[ tables
](/docs/reference/model/table/)*/ /*[ code ](/docs/reference/text/raw/)*/nt/)

===  ` tight `

[ bool ](/docs/reference//*[ image
](/docs/reference/visualize/image/ "image")*/le parameters can be customized for all following uses of the function
with a ` set ` rule.

Defines the default [ spacing ](/docs/reference/model/terms/#parameters-
sp/*[ image ](/docs/reference/visualize/image/ "image")*/i/*[ table ](/docs/reference/model/table/ "table")*//*[ code ](/docs/reference/tex/*![](/assets/icons/16-arrow-right.svg)*/rue  ` , they use [ paragraph leading
](/docs/reference/model/par/#parameters-leading) instead. This makes the list
more compact, which can look better if the items are/*[ ` table ` ](/docs/reference/model/table/)*/*[
` raw ` ](/docs/reference/text/raw/)*//*[ ` image `
](/docs/reference/visualize/image/)*/tems directly follow each other,
this is set to ` true  ` ; if items are separated by a blank line, this is set
to ` false  ` . The markup-defined tightness cannot be overridden with set
rules.

Default: ` true  `

![](/assets/icons/16-arrow-right.svg) View example

    
   /*![Preview](/assets/docs/VelsLOKdUATbBc5AK51_FgAAAAAAAAAA.png)*/)*/ybe other inline
  /*[ none ](/docs/reference/foundations/none/)*/n/*[ auto
](/docs/reference/foundations/auto/)*/p/*[ content
](/docs/reference/foundations/content/)*/e/*[ function
](/docs/reference/foundations/function/)*/PpX7gAAAAAAAAAA.png)

===  ` separator `

[ content ](/docs/reference/foundations/content/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The separator between the item and the description.

If you /*[ text language
](/docs/reference/text/text/#parameters-lang)*/e ` h  (
2cm  ,  weak  :  true  )  ` as the separator and replace ` 2cm  ` with your
desired amount of space.

Default: ` h  (  amount  :  0.6em  ,  weak  :  true  )  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set terms(separator: [: ])
    
    / Colon: A nice separator symbol.
    

![Preview](/assets/docs/xyyblMI8l_99lTt1_p5kWgAAAAAAAAAA.png)

===  ` indent `

[ length ](/docs/reference/layout/length/)

Settable

Question mar/*[Preview](/assets/docs/_ow3s-d4xSBN6VX-nVHVzQAAAAAAAAAA.png)*/ses of the functio/*[ none ](/docs/reference/foundations/none/)*/e/*[ str
](/docs/reference/foundations/str/)*/i/*[ function
](/docs/reference/foundations/function/)*/th/)

Settable

Question mark

Settable parameters can be /*![](/assets/icons/16-arrow-right.svg)*/the function
with a ` set ` rule.

The hanging indent of the de/*[ numbering pattern or function
](/docs/refer/*![Preview](/assets/docs/fyv1W7ZKnlPyBVM6_1DvjgAAAAAAAAAA.png)*/length ](/docs/reference/layout/length/)*/    
    #set terms(hanging-indent: 0pt)
    / Term: This term list does not
      make use of hanging indents.
    

![Preview](/assets/docs/6yYrKErT2JtRwBRmpS8r5wAAAAAAAAAA.png)

===  ` spacing `

[ auto ](/do/*[ bool ](/docs/reference/foundations/bool/)*/h
](/docs/reference/layout/length/)

Settable

Question mark

Settable parameters can be customized/*![](/assets/icons/16-arrow-right.svg)*/on
with a ` set ` rule.

/*[ ` outline `
](/docs/reference/model/outline/ "`outline`")*/` auto  ` , uses /*![Preview](/assets/docs/yJ9a0jIezaQUawq1k-YqqwAAAAAAAAAA.png)*/rs-leading) for tight term lists and
paragraph [ ` spacing ` ](/docs/reference/model/par/#parameters-spacing) for
wide (non-tight) term lists.

Default: ` auto  `

===  ` children `

[ content ](/docs/reference/foundations/content/) or  [ array
](/docs/reference/foundations/array/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

Variadic

Question mark

Variadic parameters can be specifie/*![â](/assets/icons/16-arrow-right.svg)*/ren.

When using the term list syntax, adjacent items are automat/*![â](/assets/icons/16-arrow-right.svg)*/hrough constructs /*[ ` where `
](/docs/reference/foundations/function/#definitions-where)*/ /*![Docs](/assets/icons/16-docs-dark.svg)*/     "1978": "TeX",
      "1984": "LaTeX",
      "2019": /*[ alignment ](/docs/reference/layout/alignment/)*/

![Preview](/*[ auto ](/docs/reference/foundations/auto//*[ content
](/docs/reference/foundations/content/)*//*[ content
](/docs/reference/foundations/content/)*/s. The/*[ content /*![](/assets/icons/16-arrow-right.svg)*//)*/e, followed by a period, and then the
definition's name.

===  ` item ` Element

Question mark

Element functions can b/*[Preview](//*![Preview](/assets/docs/xCamzQ_SHz1kKaOAByx_rAAAAAAAAAAA.png)*/ms  .  i/*[ alignment ](/docs/reference/layout/alignment/)*/content/) ,  [ content
](/docs/reference/foundations/content/) ,

)  -> [ content ](/docs/reference/foundations/content/)

====  ` term `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The term described by the list item.

====  ` description `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The description of the term.

[ ![â](/assets/icons/16-arrow-right.svg)/*![](/assets/icons/16-arrow-right.svg)*/ce/model/table/) [ ![â](/assets/icons/16-arrow-right.svg)
Te/*[Preview](/assets/docs/IdFKmiavSqMTEqn8wUXuUgAAAAAAAAAA.png)*//model/link.md*

  /*[ auto ](/docs/reference/foundations/auto/)*/ /*[ content
](/docs/reference/foundations/content/)*/)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Model ](/docs/reference/model/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Link ](/docs/reference/model/link/)

=  ` link ` Element

Question mark

Element func/*[ language
](/docs/reference/text/text/#parameters-lang)*/./*[ region
](/docs/reference/text/text/#parameters-region)*/ult, links are not styled any different from normal text. However, you
can easily apply a style of your choice with a show rule.

==  Example

    
    
    #show link: underline
    
    https://example.co/*[Preview](/assets/docs/F47AgUphmXiVn12oCb_ECAAAAAAAAAAA.png)*/://example.com/*[ content ](/docs/reference/foundations/content/)*//assets/docs/mBfQJYO4ObjIyuLi_FjKfgAAAAAAAAAA.png)

==  Syntax

This function also has dedicated syntax: Text that starts with ` http:// ` or
` https:// ` is automatically turned into a link.

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

link  (

[ str ](/docs/reference/foundations/str/) [ label
](/docs/reference/foundations/label/) [ location
](/docs/reference/introspection/location/) [ dictionary
](/docs/reference/foundations/dictionary/) /*[Preview](/assets/docs/JxID--FAnIhAECKLMVFiVwAAAAAAAAAA.png)/*[ ![â](/assets/icons/16-arrow-right.svg)*/s/content/)

===  ` dest `

[ str ](/docs/reference//*[ ![â](/assets/icons/16-arrow-right.svg)*/rence/foundations/label/) or  [ location
](/docs/reference/introspection/location/) or  [ dicti/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/onary/)

Required  Positional

Question mark

Positi/*[ Reference ](/docs/reference/)*/n order, without names.

The destination th/*[ Model ](/docs/reference/model/)*/ web pages, ` dest ` should be a valid URL /*[ Quote ](/docs/reference/model/quote/)*/` or ` tel: ` scheme and the ` body ` parameter is omitted, the email address or phone number will be the link's body, without the scheme. 

  - To link to another part of the document, ` dest ` can take one of three forms: 

    - A [ label ](/docs/reference/foundations/label/ "label") attached to an element. If you also want automatic text for the link based on the element, consider using a [ reference ](/docs/reference/model/ref/) instead. 

    - A [ ` location ` ](/docs/reference/introspection/location/ "`location`") (typically retrieved from [ ` here ` ](/docs/reference/introspection/here/ "`here`") , [ ` locate ` ](/docs/reference/introspection/locate/ "`locate`") or [ ` query ` ](/docs/reference/introspection/query/ "`query`") ). 

    - A dictionary with a ` page ` key of type [ integer ](/docs/reference/foundations/int/) /*[Preview](/assets/docs/SJpe1zkhE_liZRMF5cAy4gAAAAAAAAAA.png)*/erence/layout/length/ "length") . Pages are counted from one, and the coordinates are relative to the page's top left corner. 

![](/assets/icons/16-arrow-right.svg) View example

    
    
    = Introduction <intro>
    #link("mailto:hello@typst.app") \
    #link(<intro>)[Go to intro] \
    #link((page: 1, x: 0pt, y: 0pt))[
      Go to top
    ]
    

![Preview](/assets/docs/r-LwcI2C1K4OtUWhtvg8QgAAAAAAAAAA.png)

===  ` body `

[ content ](/docs/reference/foun/*[Preview](/assets/docs/QLNv4Pfp0zBKSvwxIfby-wAAAAAAAAAA.png)*/tional parameters are specified in order, without names.

The content that should become a link.

If ` dest ` is an URL string, the parameter can be o/*[ bool ](/docs/reference/foundations/bool/)*/ as the lin/*[ auto
](/docs/reference/foundations/auto//*[ bool
](/docs/reference/foundations/bool/)*/ence/model/headi/*[ none
](/docs/reference/foundations/none//*[ label
](/docs/reference/foundations/label//*[ content
](/docs/reference/foundations/content/)*//*[ content
](/docs/reference/foundations/content/)*/rk.svg/*[ content ](/docs/reference/foundations/content/)*/vg)
  - [ Refe/*[ bool ](/docs/reference/foundations/bool/)*/cons/16-arrow-right.svg)
  - [ Model ](/docs/reference/model/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Cite ](/docs/reference/model/cite/)

=  ` cite ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

Cite a work from the bibliography.

Before you starting citing, you need to add a [ bibliography
](/docs/reference/model/bibliography/ "bibliography") somewhere in your
document.

==  Example

    
    
    This was already noted by
    pirates long/*[Preview](/assets/docs/bYLjzIuUOzRO9HYX7xT11wAAAAAAAAAA.png)*/etwok.
    
   /*[ auto ](/docs/reference/foundations/auto/)*/c/*[ bool
](/docs/reference/foundations/bool/)*/bib")
    

![Preview](/assets/docs/VelsLOKdUATbBc5AK51_FgAAAAAAAAAA.png)

If your source name contains certain characters such as slashes, which are not
recognized by the ` <> ` syntax, you can explicitly call ` label ` instead.

    
    
    Com/*[
smartquote ](/docs/reference/text/smartquote/ "smartquote")*/ #cite(label("DBLP:books/lib/Knuth86a")).
   /*[ text ](/docs/reference/text/text/
"text")*/ dedicated syntax. [ References
](/docs/reference/model/ref/) can be used to cite works from the bibliography.
The label then corresponds to the citation key.

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

cite  (

[ label ](/docs/reference/foundations/label/) ,  supplement  :  [ none
](/docs/reference/foundations/none/) [ content
](/docs/reference/foundations/content/) ,  form  :  [ none
](/docs/reference/foundations/none/) [ str ](/docs/reference/foundations/str/)
,  style  :  [ auto ](/docs/reference/foundations/auto/) [ str
](/docs//*[Preview](/assets/docs/3Qsm4wm5qgO3MH7h3rFICAAAAAAAAAAA.png)*/ence/foundations/con/*[ none ](/docs/reference/foundations/none/)*/e/*[ label
](/docs/reference/foundations/label/)*/
/*[ content
](/docs/reference/foundations/content/)*/ed in order, without names.

The citation key that iden/*![â](/assets/icons/16-arrow-right.svg)*/t shall be
cited, as a label.

![](/assets/icons/16-arrow/*![â](/assets/icons/16-arrow-right.svg)*/// All the same
    @netwok \
    #cite(<netwok>) \
    #cite(label("netwok"))
    

![Preview](/ass/*![Docs](/assets/icons/16-docs-dark.svg)*/AA.png)

=/*![](/assets/icons/16-arrow-right.svg)*/ference/foundations/none/) or  [ cont/*![](/assets/icons/16-arrow-right.svg)*/tent/)

Settable

Question mark

Settab/*![](/assets/icons/16-arrow-right.svg)*/ll following uses of the function
with a ` set ` rule.

A supplement for the citation such as page or chapter number.

In reference syntax, the supplement can be added in square bra/*https://typst.app/home"*/  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    This has been proven. @distress[p.~7]
    
    #bibliography("works.bib")
    

![Preview](/assets/docs/yJ9a0jIezaQUawq1k-YqqwAAAAAAAAAA.png)

===  ` form `

[ none ](/docs/reference/foundations/none/) or  [ str
](/*![Preview](/assets/docs/Ugn0Cpe50EHdh4tXrmb4YAAAAAAAAAAA.png)*/ettable parameters can be customized for all following uses of the fun/*[Preview](/assets/docs/bB0B3x32glSn_oATlkF6mQAAAAAAAAAA.png)*/ Different fo/*[ content ](/docs/reference/foundations/content/)*/itation is useful as a source at the end of a sentence,
while a "prose" citation is more suitable for inclusi/*[ ![â](/as/*![â](/assets/icons/16-arrow-right.svg)*/ cited work is included in the bibliography, but
nothi/*![â](/assets/icons/16-arrow-right.svg)*/.svg)*/  
---|---  
` "  normal  " ` |  Display in the standard way for the active style.  /*![Docs](/assets/icons/16-docs-dark.svg)*/s-dark.svg/*![](/assets/icons/16-arrow-right.svg)*/nce.   
` "  full /*[ Reference ](/do/*![](/assets/icons/16-arrow-right.svg)*/mation about the cited/*[ Symbols ](/do/*![](/assets/icons/16-arrow-right.svg)*/ work's author(s).   
` "  yea/*[ General ](/docs/reference/symbols/sym/)*/r.   
  
Default: ` "normal"  `

![](/assets/icons/16-arrow-right.svg) View example

    
/*[ formulas
](/docs/reference/math/)*/se")
    show the outsized effects of
    pirate life on the human psyche.
    

![Preview](/assets/docs/xCamzQ_SHz1kKaOAByx_rAAAAAAAAAAA.png)

===  ` style `

[ auto ](/docs/reference/foundations/auto/) o/*[ symbol ](/docs/reference/symbols/symbol/)*/)

Settable

Question mark

/*[Search](/assets/icons/16-search-gray.svg)*/all following uses of the function
with a ` set ` rule.

The citation style.

Should be/*![Preview](/assets/docs/udw8J1zW8CDfoYB1XTzdLgAAAAAAAAAA.png)*/ a path
to a [ CSL file ](https://citationstyles.org/) . Some of the styles listed
below appear twice, once with their full name and once with a short alias.

When set to ` auto  ` , automatically use the [ bibliography's style
](/docs/reference/model/bibliography/#parameters-style) for the citations.

![](/assets/icons/16-arrow-right.svg) /*![Preview](/assets/docs/_RaOJik9O5UoQO8Eq6OM9gAAAAAAAAAA.png)*/ric  " ` |  Alphanumeric   
` "  american-anthropological-association  " ` |  American Anthropological Association   
` "  american-chemical-society  " ` |  American Chemical Society   
` "  american-geophysical-union  " ` |  American Geophysical Union   
` "  american-institute-of-aeronautics-and-astronautics  " ` |  American Institute of Aeronautics and Astronautics   
` "  american-institute-of-physics  " ` |  American Institute of Physics 4th edition   
` "  american-medical-association  " ` |  American Medical Association 11th edition   
` "  american-meteorological-society  " ` |  American Meteorological Society   
` "  american-physics-society  " ` |  American Physical Society   
` "  american-physiological-society  " ` |  American Physiological Society   
` "  american-political-science-association  " ` |  American Political Science Association   
` "  american-psychological-association  " ` |  American Psychological Association 7th edition   
` "  american-society-for-microbiology  " ` |  American Society for Microbiology   
` "  american-society-of-civil-engineers  " ` |  American Society of Civil /*![Preview](/assets/docs/_XYhSBTt1dmjYR9A4n_aCgAAAAAAAAAA.png)*/ ` |  American Society of Mechanical Engineers   
` "  american-sociological-association  " ` |  American Sociological Association 6th/7th edition   
` "  angewandte-chemie  " ` |  Angewandte Chemie International Edition   
` "  annual-reviews  " ` |  Annual Reviews (sorted by order of appearance)   
` "  annual-reviews-author-date  " ` |  Annual Reviews (author-date)   
` "  associacao-brasileira-de-normas-tecnicas  " ` |  AssociaÃ§Ã£o Brasileira de Normas TÃ©cnicas (PortuguÃªs - Bra/*![Preview](/assets/docs/5FXY-vQKID4Q1FYsR4Ix9AAAAAAAAAAA.png)*/ciation for Computing Machinery   
` "  biomed-central  " ` |  BioMed Central   
` "  bristol-university-press  " ` |  Bristol University Press   
` "  british-medical-journal  " ` |  BMJ   
` "  cell  " ` |  Cell   
` "  chicago-author-date  " ` |  Chicago Manual of Style 17th edition (author-date)   
` "  chicago-fullnotes  " ` |  Chicago Manual of Style 17th edition (full note)   
` "  chicago-notes  " ` |  Chicago Manual of Style 17th edition (note)   
` "  copernicus  " ` |  Copernicus Publications   
` "  council-of-science-editors  " ` |  Council of Science Editors, Citation-Sequence (numeric, brackets)   
` "  council-of-science-editors-author-date  " ` |  Council of Science Editors, Name-Year (author-date)   
` "  current-opinion  " ` |  Current Opinion journals   
` "  deutsche-gesellschaft-fÃ¼r-psychologie  " ` |  Deutsche Gesellschaft fÃ¼r Psychologie 5. Auflage (Deutsch)   
` "  deutsche-sprache  " ` |  Deutsche Sprache (Deutsch)   
` "  elsevier-harvard  " ` |  Elsevier - Harvard (with titles)   
` "  elsevier-vancouver  " ` |  Elsevier - Vancouver   
` "  elsevier-with-titles  " ` |  Elsevier (numeric, with titles)   
` "  frontiers  " ` |  Frontiers journals   
` "  future-medicine  " ` |  Future Medicine journals   
` "  future-science  " ` |  Future Science Group   
` "  gb-7714-2005-numeric  " ` |  China National Standard GB/T 7714-2005 (numeric, ä¸­æ)   
` "  gb-7714-2015-author-date  " ` |  China National Standard GB/T 7714-2015 (author-date, ä¸­æ)   
` "  gb-7714-2015-note  " ` |  China National Standard GB/T 7714-2015 (note, ä¸­æ)   
` "  gb-7714-2015-numeric  " ` |  China National Standard GB/T 7714-2015 (numeric, ä¸­æ)   
` "  gost-r-705-2008-numeric  " ` |  Russian GOST R 7.0.5-2008 (numeric)   
` "  harvard-cite-them-right  " ` |  Cite Them Right 12th edition - Harvard   
` "  institute-of-electrical-and-electronics-engineers  " ` |  IEEE   
` "  institute-of-physics-numeric  " ` |  Institute of Physics (numeric)   
` "  iso-690-author-date  " ` |  ISO-690 (author-date, English)   
` "  iso-690-numeric  " ` |  ISO-690 (numeric, English)   
` "  karger  " ` |  Karger journals   
` "  mary-ann-liebert-vancouver  " ` |  Mary Ann Liebert - Vancouver   
` "  modern-humanities-research-association  " ` |  Modern Humanitie/*![](/assets/icons/16-arrow-right.svg)*/ote with bibliography)   
` "  modern-language-association  " ` |  Modern Language Association 9th edition   
` "  modern-language-association-8  " ` |  Modern Language Association 8th edition   
` "  multid/*![Preview](/assets/docs/AvTTV4CvkxyZB8XrzNUT3wAAAAAAAAAA.png/*![Preview](/assets/docs/AvTTV4CvkxyZB8XrzNUT3wAAAAAAAAAB.png)*/Nature   
` "  pensoft  " ` |  Pensoft Journals   
` "  public-library-of-science  " ` |  Public Library of Science   
` "  royal-society-of-chemistry  " ` |  Royal Society of Chemistry   
` "  sage-vancouver  " ` |  SAGE - Vancouver   
` "  sist02  " ` |  SIST02 (æ¥æ¬èª)   
` "  spie  " ` |  SPIE journals   
` "  springer-basic  " ` |  Springer - Basic (numeric, brackets)   
` "  springer-basic-author-date  " ` |  Springer - Basic (author-date)   
` "  springer-fachzeitschriften-medizin-psychologie  " ` |  Springer - Fachzeitschriften Medizin Psychologie (Deutsch)   
`/*![](/assets/icons/16-arrow-right.svg)*/" ` |  Springer - Humanities (author-date)   
` "  springer-lecture-notes-in-computer-science  " ` |  Springer - Lecture Notes in Computer Science   
` "  springer-mathphys  " ` |  Springer - MathPhys (numeric, brackets)   
` "  springer-socp/*![Preview](/assets/docs/_zX5K9NHfd2mYYCeJmag7wAAAAAAAAAA.png/*![Preview](/assets/docs/_zX5K9NHfd2mYYCeJmag7wAAAAAAAAAB.png)*/ckets)   
` "  taylor-and-francis-chicago-author-date  " ` |  Taylor & Francis - Chicago Manual of Style (author-date)   
` "  taylor-and-francis-national-library-of-medicine  " ` |  Taylor & Francis - National Library of Medicine   
` "  the-institution-of-engineering-and-technology  " ` |  The Institution of Engineering and Technology   
` "  the-lancet  " ` |  The Lancet   
` "  thieme  " ` |  Thieme-German (Deutsch)   
` "  trends  " ` |  Trends journals   
` "  turabian-author-date  " ` |  Turabian 9th edition (author-date)   
` "  turabian-fullnote-8  " ` |  Turabian 8th edition (full note)   
` "  vancouver  " ` |  Vancouver   
` "  vancouver-superscript  " ` |  Vancouver (superscript)   
  
Default: ` auto  `

[ ![â](/assets/icons/16-arrow-right.svg) Bullet List  Previous page
](/docs/reference/model/list/) [ ![â](/assets/icons/16-arrow-right.svg)
Document  Next page  ](/docs/reference/model/document/)



= *docs/reference/model/parbreak.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Model ](/docs/reference/model/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Paragraph Break ](/docs/reference/model/parbreak/)

=  ` parbreak ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

A paragraph break.

This starts a new paragraph. Especially useful when used within code like [
for loops ](/docs/reference/scripting/#loops) . Multiple consecutive paragraph
breaks collapse into a single one.

==  Example

    
    
    #for i in range(3) {
      [Blind text #i: ]
      lorem(5)
      parbreak()/*![](/assets/icons/16-arrow-right.svg)*/Ugn0Cpe50EHdh4tXrmb4YAAAAAAAAAAA.png)

==  Syntax

Instead of calling this function, you can insert a blank line into your markup
to create a paragraph br/*![Preview](/assets/docs/gnEhUtPlQLC9DmHftY4vzQAAAAAAAAAA.png)*/s to a function. They are specified in parentheses
after the function name.

parbreak  (

)  -> [ content ](/docs/reference/foundations/content/)

[ ![â](/assets/icons/16-arrow-right.svg) Paragraph  Previous page
](/docs/reference/model/par/) [ ![â](/assets/icons/16-arrow-right.svg) Quote
Next page  ](/docs/reference/model/quote/)



= *docs/reference/model/figure.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Model ](/docs/reference/model/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Figure ](/docs/reference/model/figure/)

=  ` figure ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

A figure with an optional caption.
/*![](/assets/icons/16-arrow-right.svg)*/lect the correct counting track. For
example, figures containing images will be numbered separately from figures
containing tables.

==  Examples

The example be/*![Preview](/assets/docs/_ow3s-d4xSBN6VX-nVHVzQAAAAAAAAAA.png)*/er shows a glacier. Glaciers
    are complex systems.
    
    #figure(
      image("glacier.jpg", width: 80%),
      caption: [A curious figure.],
    ) <glacier>
    

![Preview](/assets/docs/udw8J1zW8CDfoYB1XTzdLgAAAAAAAAAA.png)

You can also insert [ tables ](/docs/reference/model/table/) into figures to
give them a caption. The figure will detect this and automatically use a
separate counter.

    
    
    #figure(
      table(
        columns: 4,
        [t], [1], [2], [3],
        [y], [0.3s], [0.4s], [0.8s],
      ),
      caption: [Timing results],
    )
    

![Preview](/assets/docs/_RaOJik9O5UoQO8Eq6OM9gAAAAAAAAAA.png)

This behaviour can be overridden by explicitly specifying the figure's ` kind
` . All figures of the same kind share a common counter.

==  Figure behaviour

By default, figures are placed within the flow of content. To make them float
to the top or bottom of the page, you can use the [ ` placement `
](/docs/reference/model/figure/#parameters-placement) argument.

If your figure is too large and its contents are breakable across pages (e.g.
if it contains a large table), then you can make the figure itself breakable
across pages as well with this show rule:

    
    
    #show figure: set block(breakable: true)
    

See the [ block ](/docs/reference/layout/block/#parameters-breakable)
documentation for more information about breakable and non-breakable blocks.

==  Caption customization

You can modify the appearance of the figure's caption with its associated [ `
caption ` ](/docs/reference/model/figure/#definitions-caption) function. In
the example below, we emphasize all captions:

    
    
    #show figure.caption: emph
    
    #figure(
      rect[Hello],
      caption: [I am emphasized!],
    )
    

![Preview](/assets/docs/_XYhSBTt1dmjYR9A4n_aCgAAAAAAAAAA.png)

By using a [ ` where ` ](/docs/reference/foundations/function/#definitions-
where) selector, we can scope such rules to specific kinds of figures. For
example, to position the caption above tables, but keep it below for all other
kinds of figures, we could write the following show-set rule:

    
    
    #show figure.where(
      kind: table
    ): set fig/*[A][/*[C][D]*/*![Preview](/assets/docs/_9Rae3k-14dcb00bWW4ciAAAAAAAAAAA.png)*/[A][B][C][D],
      caption: [I'm up here],
    )
    

![Preview](/assets/docs/5FXY-vQKID4Q1FYsR4Ix9AAAAAAAAAAA.png)

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

figure  (

[ content ](/docs/ref/*![](/assets/icons/16-arrow-right.svg)*/ment  :  [ none
](/docs/reference/foundations/none/) [ auto
](/docs/reference/foundations/auto/) [ alignment
](/docs/reference/layout/alignment/) ,  scope  :  [ str
](/docs/reference/foundations/str/) ,  caption  :  [ none
](/docs/reference/foundations/none/) [ content
](/docs/reference/foundations/content/) ,  kind  :  [ auto
](/docs/reference/foundations/auto/) [ str ](/docs/reference/foundations/str/)
[ function ](/do/*![Preview](/assets/docs/IdFKmiavSqMTEqn8wUXuUgAAAAAAAAAA.png)*/](/docs/reference/foundations/none/) [ auto
](/docs/reference/foundations/auto/) [ content
](/docs/reference/foundations/content/) [ function
](/docs/reference/foundations/function/) ,  numbering  :  [ none
](/docs/reference/foundations/none/) [ str ](/docs/reference/foundations/str/)
[ function ](/docs/reference/foundations/function/) ,  gap  :  [ length
](/docs/reference/layout/length/) ,  outlined  :  [ bool
](/docs/reference/foundations/bool/) ,

)  -> [ content ](/docs/reference/foundations/content/)

/*![](/assets/icons/16-arrow-right.svg)*/rence/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The content of t/*![Preview](/assets/docs/F47AgUphmXiVn12oCb_ECAAAAAAAAAAA.png)*/e/ "image") .

===  ` placement `

[ none ](/docs/reference/foundations/none/) or  [ auto
](/docs/reference/foundations/auto/) or  [ alignment
](/docs/reference/layout/alignment/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The figure's pl/*![](/assets/icons/16-arrow-right.svg)*/ The figure stays in-flow exactly where it was specified like other content. 
  - ` auto  ` : The figure picks ` top ` or ` bottom ` depending on which is closer. 
  - ` top ` : The figure floats to the top of the page. 
  - ` bottom ` :/*![Preview](/assets/docs/JxID--FAnIhAECKLMVFiVwAAAAAAAAAA.png)*//*![â](/assets/icons/16-arrow-right.svg)*/g figure is controlled by
the [ ` clearance ` ](/docs//*![â](/assets/icons/16-arrow-right.svg)*/ance)
argument on the ` place ` function.

Default: ` none  `

![](/assets/icons/16-arrow-right.s/*![Docs](/assets/icons/16-docs-dark.svg)*/ge(height:/*![](/assets/icons/16-arrow-right.svg)*/figure(
      placement: bottom,
    /*![](/assets/icons/16-arrow-right.svg)*/glacier.jpg", width: 60%),
    )
    #l/*![](/assets/icons/16-arrow-right.svg)*/s/AvTTV4CvkxyZB8XrzNUT3wAAAAAAAAAA.png)
![Preview](/assets/docs/AvTTV4CvkxyZB8XrzNUT3wAAAAAAAAAB.png)

===  ` scope `

[ str ](/docs/reference/foundations/str/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

Relative to which containing scope the figure is placed.

Set this to ` "parent"  ` to create a full-width figure in a two-column
document.

Has no effect if ` placement ` is ` none  ` .

Variant  |  Details   
---|---  
` "  column  " ` |  Place into the current column.   
` "  parent  " ` |  Place relative to the parent, letting the content span over all columns.   
  
Default: ` "column"  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set page(height: 250pt, columns: 2)
    
    = Introduction
    #figure(
      placement: bottom,
      scope: "parent",
      caption:/*![Preview](/assets/docs/SJpe1zkhE_liZRMF5cAy4gAAAAAAAAAA.png)*/   #lorem(60)
    

![Preview](/assets/docs/_zX5K9NHfd2mYYCeJmag7wAAAAAAAAAA.png)
![Preview](/assets/docs/_zX5K9NHfd2mYYCeJmag7wAAAAAAAAAB.png)

===  ` caption `

[ none ](/docs/reference/foundations/none/) or  [ content
](/docs/reference/foundations/content/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The figure's caption.

Default: ` none  `

===  ` kind `

[ auto ](/docs/refer/*![Preview](/assets/docs/QLNv4Pfp0zBKSvwxIfby-wAAAAAAAAAA.png)*/ns/str/) or  [ function
](/docs/reference/foundations/function/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The kind of figure this is.

All figures of the same kind share a common counter.

If set to ` auto  ` , the figure will try to automatically determine its kind
based on the type of its body. Automatically detected kinds are [ tables
](/docs/reference/model/table/) and [ code ](/docs/reference/text/raw/) . In
other cases, the inferred kind is that of an [ image
](/docs/reference/visualize/image/ "image") .

Setting this to something other than ` auto  ` will override the automatic
detection. This can be useful if

  - you wish to create a custom figure type that is not an [ image ](/docs/reference/visualize/i/*![](/assets/icons/16-arrow-right.svg)*/ference/model/table/ "table") or [ code ](/docs/reference/text/raw/) , 
  - you want to force the figure to use a specific counter regardless of its content. 

You can set the kind to be an element function or a string. If you set it to
an element function other than [ ` table ` ](/docs/*![Preview](/assets/docs/bYLjzIuUOzRO9HYX7xT11wAAAAAAAAAA.png)*/aw/) or [ ` image `
](/docs/reference/visualize/image/) , you will need to manually specify the
figure's supplement.

Default: ` auto  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #figure(
      circle(radius: 10pt),
      caption: [A curious atom.],
      kind: "atom",
      supplement: [Atom],
    )
    

![Preview](/assets/docs/gnEhUtPlQLC9DmHftY4vzQAAAAAAAAAA.png)

===  ` supplement `

[ none ](/docs/reference/foundations/none/)/*![â](/assets/icons/16-arrow-right.svg)*/s/auto/) or  [ content
](/docs/reference/foundation/*![â](/assets/icons/16-arrow-right.svg)*/ence/foundations/function/)

Settable

Question mark

Settable parameters can be customized for /*![Docs](/assets/icons/16-docs-dark.svg)*/ a ` set ` rule.

The figure's supplement.

If set to ` auto  ` , the figure will try to automatically d/*![](/assets/icons/16-arr/*[ Symbols ](/docs/reference/symbols/)*/ctive [ text language
](/docs/reference/text/text/#parameters-lang) . If you are using a custom
figure type, you will need to manually specify the supplement.

If a function is specified, it is passed the first descendant of the specified
` kind ` (typically, the figure's body) and should return content.

Default: ` auto  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #figure(
      [The contents of my figure!],
      caption: [My custom figure],
      supplement: [Bar],
      kind: "foo",
    )
    

![Preview](/assets/docs/_ow3s-d4xSBN6VX-nVHVzQAAAAAAAAAA.png)

===  ` numbering `

[ none ](/docs/reference/foundations/none/) or  [ str
](/docs/reference/foundations/str/) or  [ function
](/docs/reference/foundations/function/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` /*![](/assets/icons/16-arrow-right.svg)*/pts a [ numbering pattern or function
](/docs/reference/model/numbering/) .

Default: ` "1"  `

===  ` gap `

[ length ](/docs/reference/layout/length/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The vertical gap between the body and caption.

Default: ` 0.65em  `

===  ` outlined `

[ bool ](/docs/reference/foundations/bool/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

Whether the figure should appear in an [ ` outline `
](/docs/reference/model/outline/ "`outline`") of figures.

Default: ` true  `

==  Definitions

Question mark

Functions and types and can have associated definitions. These are acce/*![Preview](/assets/docs/bB0B3x32glSn_oATlkF6mQAAAAAAAAAA.p/*[Preview](/assets/docs/KbY7ot9pSdzC8G6YXvE_VAAAAAAAAAAA.png)*/

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

The caption of a figure. This element can /*![â](/assets/icons/16-arrow-right.svg)*/ze the appearance of captions for all figures or figures of a spe/*![â](/assets/icons/16-arrow-right.svg)*/and ` body ` , the ` caption ` also provides the
figure's ` kind ` , ` supplement ` , ` count/*![Docs](/assets/icons/16-docs-dark.svg)*/se parts c/*![](/assets/icons/16-arrow-right.svg)*/erence/foundations/function/#definiti/*![](/assets/icons/16-arrow-right.svg)*/o build a completely custom caption.

figur/*![](/assets/icons/16-arrow-right.svg)*/nment ](/docs/reference/layout/alignme/*![â](/assets/icons/16-arrow-right.svg)*/rence/foundations/auto/) [ content
](/docs/reference/f/*![â](/assets/icons/16-arrow-right.svg)*/s/reference/foundations/content/) ,

)  -> [ content ](/docs/reference/foundations/conten/*![Docs](/assets/icons/16-docs-dark.svg)*/: emph
    
    #figure(
      rect[Hello],
      caption: [A rectangle],
    )
    

![Preview](/assets/docs/_9Rae3k-14dcb00bWW4ciAAAAAAAAAAA.png)

====  ` position `

[ alignment ](/docs/reference/layout/alignment/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The caption's position in the figure. Either ` top ` or ` bottom ` .

Default: ` bottom `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #show figure.where(
      kind: table
    ):/*[A][B]*/igure.caption(position: top)
    
    #figure(
      table(columns: 2)[A][B],
      caption: [I'm up here],
    )
    
    #figure(
      rect[Hi],/*[A][B]*/ caption: [I'm down here],
    )
    
    #figure(
      table(columns: 2)[A][B],
      caption: figure.caption(
        position: bottom,
        [I'm down here too!]
      )
    )
    

![Preview](/assets/docs/IdFKmiavSqMTEqn8wUXuUgAAAAAAAAAA.png)

====  ` separator `

[ auto ](/docs/reference/foundations/auto/) or  [ content
](/docs/reference/foundations/content/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The separator which will appear between the number and body.

If set to ` auto  ` , the separator will be adapted to the current [ language
](/docs/reference/text/text/#parameters-lang) and [ region
](/docs/reference/text/text/#parameters-region) .

Default: ` auto  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set figure.caption(separator: [ --- ])
    
    #figure(
      rect[Hello],
      caption: [A rectangle],
    )
    

![Preview](/assets/docs/F47AgUphmXiVn12oCb_ECAAAAAAAAAAA.png)

====  ` body `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The caption's body.

Can be used alongside ` kind ` , ` supplement ` , ` counter ` , ` numbering `
, and ` location ` to completely customize the caption.

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #show figure.caption: it => [
      #underline(it.body) |
      #it.supplement
      #context it.counter.display(it.numbering)
    ]
    
    #figure(
      rect[Hello],
      caption: [A rectangle],
    )
    

![Preview](/assets/docs/JxID--FAnIhAECKLMVFiVwAAAAAAAAAA.png)

[ ![â](/assets/icons/16-arrow-right.svg) Emphasis  Previous page
](/docs/reference/model/emph/) [ ![â](/assets/icons/16-arrow-right.svg)
Footnote  Next page  ](/docs/reference/model/footnote/)



= *docs/reference/model/quote.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Model ](/docs/reference/model/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Quote ](/docs/reference/model/quote/)

=  ` quote ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

Displays a quote alongside an optional attribution.

==  Example

    
    
    Plato is often misquoted as the author of #quote[I know that I know
    nothing], however, this is a derivation form his original quote:
    
    #set quote(block: true)
    
    #quote(attribution: [Plato])[
      ... á¼Î¿Î¹ÎºÎ± Î³Î¿á¿¦Î½ ÏÎ¿ÏÏÎ¿Ï Î³Îµ ÏÎ¼Î¹ÎºÏá¿· ÏÎ¹Î½Î¹ Î±á½Ïá¿· ÏÎ¿ÏÏá¿³ ÏÎ¿ÏÏÏÎµÏÎ¿Ï Îµá¼¶Î½Î±Î¹, á½ÏÎ¹
      á¼ Î¼á½´ Î¿á¼¶Î´Î± Î¿á½Î´á½² Î¿á¼´Î¿Î¼Î±Î¹ Îµá¼°Î´Î­Î½Î±Î¹.
    ]
    #quote(attribution: [from the Henry Cary literal translation of 1897])[
      ... I seem, then, in just this little thing to be wiser than this man at
      any rate, that what I do not know I do not think I know either.
    ]
    

![Preview](/assets/docs/SJpe1zkhE_liZRMF5cAy4gAAAAAAAAAA.png)

By default block quotes are padded left and right by ` 1em  ` , alignment and
padding can be controlled with show rules:

    
    
    #set quote(block: true)
    #show quote: set align(center)
    #show quote: set pad(x: 5em)
    
    #quote[
      You cannot pass... I am a servant of the Secret Fire, wielder of the
      flame of Anor. You cannot pass. The dark fire will not avail you,
      flame of UdÃ»n. Go back to the Shadow! You cannot pass.
    ]
    

![Preview](/assets/docs/QLNv4Pfp0zBKSvwxIfby-wAAAAAAAAAA.png)

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

quote  (

block  :  [ bool ](/docs/reference/foundations/bool/) ,  quotes  :  [ auto
](/docs/reference/foundations/auto/) [ bool
](/docs/reference/foundations/bool/) ,  attribution  :  [ none
](/docs/reference/foundations/none/) [ label
](/docs/reference/foundations/label/) [ content
](/docs/reference/foundations/content/) ,  [ content
](/docs/reference/foundations/content/) ,

)  -> [ content ](/docs/reference/foundations/content/)

===  ` block `

[ bool ](/docs/reference/foundations/bool/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

Whether this is a block quote.

Default: ` false  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    An inline citation would look like
    this: #quote(
      attribution: [RenÃ© Descartes]
    )[
      cogito, ergo sum
    ], and a block equation like this:
    #quote(
      block: true,
      attribution: [JFK]
    )[
      Ich bin ein Berliner.
    ]
    

![Preview](/assets/docs/bYLjzIuUOzRO9HYX7xT11wAAAAAAAAAA.png)

===  ` quotes `

[ auto ](/docs/reference/foundations/auto/) or  [ bool
](/docs/reference/foundations/bool/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

Whether /*[Copy](/assets/icons/16-copy.svg)*/und this quote.

The /*[Copy](/assets/icons/16-copy.svg)*/rom the ` quot/*[Copy](/assets/icons/16-copy.svg)*/docs/reference/text/smartquote/ "smartquote") , which is
affected by t/*[ ![â](/assets/icons/16-arrow-right.svg)*/erence/text/text/
"text") .

  - ` true  ` : Wrap/*[ ![â](/assets/icons/16-arrow-right.svg)*/  ` : Do not wrap this quote in double quotes. 
  - ` auto  ` : Infer whether to wrap this quo/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/` property. If ` block ` is ` false  ` , double quot/*[ Reference ](/docs/reference/)*/efault: ` auto  `

![](/assets/icons/16-arr/*[ Symbols ](/docs/reference/symbols/)*/
    #set text(lang: "de")
    
    Ein deu/*[ Symbol ](/docs/reference/symbols/symbol/)*/mstÃ¤nden JFK:
    #quote[Ich bin ein Berliner.]
    
    #set text(lang: "en")
    
    And an english speaking one may
    translate the quote:
    #quote[I am a Berliner.]
    

![Preview]/*[ field access notation ](/docs/reference/scripting/#fields)*/attribution `

[ none ](/docs/reference/*[ ` sym ` module ](/docs/reference/symbols/sym/)*/e/foundations/label/) or  /*[ ` emoji ` module ](/docs/reference/symbols/emoji/)*/ettable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The attribution of this quote, usually the author o/*[Preview](/assets/docs/VU7JCTNOvXZ0YxOKfFCHhgAAAAAAAAAA.png)*/ any content. By default only displayed for
block quotes, but can be changed using a ` show  ` rule.

Default: ` none  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #quote(attribution: [RenÃ© Descartes])[
      cogito, ergo sum
    ]
    
    #show quote.where(block: false): it => {
      ["] + h(0/*[Preview](/assets/docs/6bpO4zHphIuAdD1km_qbDAAAAAAAAAAA.png)*/f it.attribution != none [ (#it.attribution)]
    }
    
    #quote(
      attribution: link("https://typst.app/home")[typst.com]
    )[
      Compose papers faster
    ]
    
    #s/*[ str ](/docs/reference/foundations/str//*[ array
](/docs/reference/foundations/array/)*/ass./*[ symbol ](/docs/reference/symbols/symbol/)*/ wielder of the
      flame of Anor. You cannot pass. The
      dark fire will not avail you, flame
      of UdÃ»n. Go back to the Shadow! You
      cannot pass.
    ]
    
    #bibliography("works.bib", style: "apa")
    

![Preview](/assets/docs/bB0B3x32glSn_oATlkF6mQAAAAAAAAAA.p/*[Preview](/assets/docs/KbY7ot9pSdzC8G6YXvE_VAAAAAAAAAAA.png)*/content/)

Require/*[ str ](/docs/reference/foundations/str/)*/p/*[ array
](/docs/reference/foundations/array/)*/es.

The quote.

[ ![â](/assets/icons/16-arrow-right.svg) Paragraph Break  Previous page
](/docs/reference/model/parbreak/) [ ![â](/assets/icons/16-arrow-right.svg)
Reference  Next page  ](/docs/reference/model/ref/)



= *docs/reference/symbols/sym.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Symbols ](/docs/reference/symbols/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ General ](/docs/reference/symbo/*[ ![â](/assets/icons/16-arrow-right.svg)*/For example, ` #sym.arrow ` produces the â symbol./*[ ![â](/assets/icons/16-arrow-right.svg)*/) , these symbols can be used without the ` #sym. `
prefix.

The ` d ` in an integral's/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ ` .
Outside math formulas, ` dif ` can be accessed /*[ Reference ](/docs/reference/)*/ symbol ](/docs/reference/symbols/symbol/) /*[ Symbols ](/docs/reference/symbols/)*/h](/assets/icons/16-search-gray.svg)

  - w/*[ Emoji ](/docs/reference/symbols/emoji/)*/ ` zwnj  `
  - zwsp  ` zws  `
  - â  ` lrm  `
  - â  ` rlm  `
  - â£  ` space  `
  - nbsp  ` space.  nobreak  `
  - â¯  ` space.  nobreak.  narrow  `
  - ensp  ` space.  en  `
  - emsp  ` space.  quad  `
  - â emsp  ` space.  third  `
  - Â¼emsp  /*[ symbol ](/docs/reference/symbols/symbol/)*/ sixth  `
  - mmsp  ` space./*[Search](/assets/icons/16-search-gray.svg)*/uncsp  ` space.  punct  `
  - thinsp  ` space.  thin  `
  - hairsp  ` space.  hair  `
  - (  ` paren.  l  `
  - â¦  ` paren.  l.  double  `
  - )  ` paren.  r  `
  - â¦  ` paren.  r.  double  `
  - â  ` paren.  t  `
  - â  ` paren.  b  `
  - {  ` brace.  l  `
  - â¦  ` brace.  l.  double  `
  - }  ` brace.  r  `
  - â¦  ` brace.  r.  double  `
  - â  ` brace.  t  `
  - â  ` brace.  b  `
  - [  ` bracket.  l  `
  - â¦  ` bracket.  l.  double  `
  - ]  ` bracket.  r  `
  - â§  ` bracket.  r.  double  `
  - â´  ` bracket.  t  `
  - âµ  ` bracket.  b  `
  - â²  ` shell.  l  `
  - â¬  ` shell.  l.  double  `
  - â³  ` shell.  r  `
  - â­  ` shell.  r.  double  `
  - â  ` shell.  t  `
  - â¡  ` shell.  b  `
  - |  ` bar.  v  `
  - â  ` bar.  v.  double  `
  - â¦  ` bar.  v.  triple  `
  - Â¦  ` bar.  v.  broken  `
  - â¦¶  ` bar.  v.  circle  `
  - â  ` bar.  h  `
  - â§  ` fence.  l  `
  - â§  ` fence.  l.  double  `
  - â§  ` fence.  r  `
  - â§  ` fence.  r.  double  `
  - â¦  ` fence.  dotted  `
  - â  ` angle  `
  - â¨  ` angle.  l  `
  - â§¼  ` angle.  l.  curly  `
  - â¦  ` angle.  l.  dot  `
  - ã  ` angle.  l.  double  `
  - â©  ` angle.  r  `
  - â§½  ` angle.  r.  curly  `
  - â¦  ` angle.  r.  dot  `
  - ã  ` angle.  r.  double  `
  - â¦  ` angle.  acute  `
  - â¡  ` angle.  arc  `
  - â¦  ` angle.  arc.  rev  `
  - â¦¦  ` angle.  oblique  `
  - â¦£  ` angle.  rev  `
  - â  ` angle.  right  `
  - â¯¾  ` angle.  right.  rev  `
  - â¾  ` angle.  right.  arc  `
  - â¦  ` angle.  right.  dot  `
  - â¦  ` angle.  right.  sq  `
  - â¦  ` angle.  s  `
  - â  ` angle.  spatial  `
  - â¢  ` angle.  spheric  `
  - â¦  ` angle.  spheric.  rev  `
  - â¦¡  ` angle.  spheric.  top  `
  - â  ` ceil.  l  `
  - â  ` ceil.  r  `
  - â  ` floor.  l  `
  - â  ` floor.  r  `
  - & ` amp  `
  - â   ` amp.  inv  `
  - â  ` ast.  op  `
  - *  ` ast.  basic  `
  - â  ` ast.  low  `
  - â  ` ast.  double  `
  - â  ` ast.  triple  `
  - ï¹¡  ` ast.  small  `
  - â  ` ast.  circle  `
  - â§  ` ast.  square  `
  - @  ` at  `
  - \  ` backslash  `
  - â¦¸  ` backslash.  circle  `
  - â§·  ` backslash.  not  `
  - â  ` co  `
  - :  ` colon  `
  - â·  ` colon.  double  `
  - â  ` colon.  eq  `
  - â©´  ` colon.  double.  eq  `
  - ,  ` comma  `
  - â  ` dagger  `
  - â¡  ` dagger.  double  `
  - â  ` dash.  en  `
  - â  ` dash.  em  `
  - â¸º  ` dash.  em.  two  `
  - â¸»  ` dash.  em.  three  `
  - â  ` dash.  fig  `
  - ã  ` dash.  wave  `
  - â¹  ` dash.  colon  `
  - â  ` dash.  circle  `
  - ã°  ` dash.  wave.  double  `
  - â  ` dot.  op  `
  - .  ` dot.  basic  `
  - Â·  ` dot.  c  `
  - â  ` dot.  circle  `
  - â¨  ` dot.  circle.  big  `
  - â¡  ` dot.  square  `
  - Â¨  ` dot.  double  `
  - â  ` dot.  triple  `
  - â  ` dot.  quad  `
  - !  ` excl  `
  - â¼  ` excl.  double  `
  - Â¡  ` excl.  inv  `
  - â  ` excl.  quest  `
  - ?  ` quest  `
  - â  ` quest.  double  `
  - â  ` quest.  excl  `
  - Â¿  ` quest.  inv  `
  - â½  ` interrobang  `
  - #  ` hash  `
  - â  ` hyph  `
  - \-  ` hyph.  minus  `
  - â  ` hyph.  nobreak  `
  - â§  ` hyph.  point  `
  - shy  ` hyph.  soft  `
  - %  ` percent  `
  - â°  ` permille  `
  - Â¶  ` pilcrow  `
  - â  ` pilcrow.  rev  `
  - Â§  ` section  `
  - ;  ` semi  `
  - â  ` semi.  rev  `
  - /  ` slash  `
  - â«½  ` slash.  double  `
  - â«»  ` slash.  triple  `
  - â§¸  ` slash.  big  `
  - â¯  ` dots.  h.  c  `
  - â¦  ` dots.  h  `
  - â®  ` dots.  v  `
  - â±  ` dots.  down  `
  - â°  ` dots.  up  `
  - â¼  ` tilde.  op  `
  - ~  ` tilde.  basic  `
  - â©ª  ` tilde.  dot  `
  - â  ` tilde.  eq  `
  - â  ` tilde.  eq.  not  `
  - â  ` tilde.  eq.  rev  `
  - â  ` tilde.  equiv  `
  - â  ` tilde.  equiv.  not  `
  - â  ` tilde.  nequiv  `
  - â  ` tilde.  not  `
  - â½  ` tilde.  rev  `
  - â  ` tilde.  rev.  equiv  `
  - â  ` tilde.  triple  `
  - Â´  ` acute  `
  - Ë  ` acute.  double  `
  - Ë  ` breve  `
  - â¸  ` caret  `
  - Ë  ` caron  `
  - ^  ` hat  `
  - Â¨  ` diaer  `
  - `  ` grave  `
  - Â¯  ` macron  `
  - "  ` quote.  double  `
  - '  ` quote.  single  `
  - â  ` quote.  l.  double  `
  - â  ` quote.  l.  single  `
  - â  ` quote.  r.  double  `
  - â  ` quote.  r.  single  `
  - Â«  ` quote.  angle.  l.  double  `
  - â¹  ` quote.  angle.  l.  single  `
  - Â»  ` quote.  angle.  r.  double  `
  - âº  ` quote.  angle.  r.  single  `
  - â  ` quote.  high.  double  `
  - â  ` quote.  high.  single  `
  - â  ` quote.  low.  double  `
  - â  ` quote.  low.  single  `
  - â²  ` prime  `
  - âµ  ` prime.  rev  `
  - â³  ` prime.  double  `
  - â¶  ` prime.  double.  rev  `
  - â´  ` prime.  triple  `
  - â·  ` prime.  triple.  rev  `
  - â  ` prime.  quad  `
  - \+  ` plus  `
  - â  ` plus.  circle  `
  - â´  ` plus.  circle.  arrow  `
  - â¨  ` plus.  circle.  big  `
  - â  ` plus.  dot  `
  - â§º  ` plus.  double  `
  - Â±  ` plus.  minus  `
  - ï¹¢  ` plus.  small  `
  - â  ` plus.  square  `
  - â¨¹  ` plus.  triangle  `
  - â§»  ` plus.  triple  `
  - â  ` minus  `
  - â  ` minus.  circle  `
  - â¸  ` minus.  dot  `
  - â  ` minus.  plus  `
  - â  ` minus.  square  `
  - â  ` minus.  tilde  `
  - â¨º  ` minus.  triangle  `
  - Ã·  ` div  `
  - â¨¸  ` div.  circle  `
  - Ã  ` times  `
  - â¨  ` times.  big  `
  - â  ` times.  circle  `
  - â¨  ` times.  circle.  big  `
  - â  ` times.  div  `
  - â  ` times.  three.  l  `
  - â  ` times.  three.  r  `
  - â  ` times.  l  `
  - â  ` times.  r  `
  - â  ` times.  square  `
  - â¨»  ` times.  triangle  `
  - â¶  ` ratio  `
  - =  ` eq  `
  - â  ` eq.  star  `
  - â  ` eq.  circle  `
  - â  ` eq.  colon  `
  - â  ` eq.  def  `
  - â  ` eq.  delta  `
  - â  ` eq.  equi  `
  - â  ` eq.  est  `
  - â  ` eq.  gt  `
  - â  ` eq.  lt  `
  - â  ` eq.  m  `
  - â  ` eq.  not  `
  - â  ` eq.  prec  `
  - â  ` eq.  quest  `
  - ï¹¦  ` eq.  small  `
  - â  ` eq.  succ  `
  - â¡  ` eq.  triple  `
  - â£  ` eq.  quad  `
  - > ` gt  `
  - â§  ` gt.  circle  `
  - â  ` gt.  dot  `
  - âª  ` gt.  approx  `
  - â«  ` gt.  double  `
  - â¥  ` gt.  eq  `
  - â©¾  ` gt.  eq.  slant  `
  - â  ` gt.  eq.  lt  `
  - â±  ` gt.  eq.  not  `
  - â§  ` gt.  equiv  `
  - â·  ` gt.  lt  `
  - â¹  ` gt.  lt.  not  `
  - âª  ` gt.  neq  `
  - âª  ` gt.  napprox  `
  - â©  ` gt.  nequiv  `
  - â¯  ` gt.  not  `
  - â§  ` gt.  ntilde  `
  - ï¹¥  ` gt.  small  `
  - â³  ` gt.  tilde  `
  - âµ  ` gt.  tilde.  not  `
  - â³  ` gt.  tri  `
  - âµ  ` gt.  tri.  eq  `
  - â­  ` gt.  tri.  eq.  not  `
  - â«  ` gt.  tri.  not  `
  - â  ` gt.  triple  `
  - â«¸  ` gt.  triple.  nested  `
  - < ` lt  `
  - â§  ` lt.  circle  `
  - â  ` lt.  dot  `
  - âª  ` lt.  approx  `
  - âª  ` lt.  double  `
  - â¤  ` lt.  eq  `
  - â©½  ` lt.  eq.  slant  `
  - â  ` lt.  eq.  gt  `
  - â°  ` lt.  eq.  not  `
  - â¦  ` lt.  equiv  `
  - â¶  ` lt.  gt  `
  - â¸  ` lt.  gt.  not  `
  - âª  ` lt.  neq  `
  - âª  ` lt.  napprox  `
  - â¨  ` lt.  nequiv  `
  - â®  ` lt.  not  `
  - â¦  ` lt.  ntilde  `
  - ï¹¤  ` lt.  small  `
  - â²  ` lt.  tilde  `
  - â´  ` lt.  tilde.  not  `
  - â²  ` lt.  tri  `
  - â´  ` lt.  tri.  eq  `
  - â¬  ` lt.  tri.  eq.  not  `
  - âª  ` lt.  tri.  not  `
  - â  ` lt.  triple  `
  - â«·  ` lt.  triple.  nested  `
  - â  ` approx  `
  - â  ` approx.  eq  `
  - â  ` approx.  not  `
  - âº  ` prec  `
  - âª·  ` prec.  approx  `
  - â¼  ` prec.  curly.  eq  `
  - â  ` prec.  curly.  eq.  not  `
  - âª»  ` prec.  double  `
  - âª¯  ` prec.  eq  `
  - âª³  ` prec.  equiv  `
  - âª¹  ` prec.  napprox  `
  - âª±  ` prec.  neq  `
  - âªµ  ` prec.  nequiv  `
  - â  ` prec.  not  `
  - â¨  ` prec.  ntilde  `
  - â¾  ` prec.  tilde  `
  - â»  ` succ  `
  - âª¸  ` succ.  approx  `
  - â½  ` succ.  curly.  eq  `
  - â¡  ` succ.  curly.  eq.  not  `
  - âª¼  ` succ.  double  `
  - âª°  ` succ.  eq  `
  - âª´  ` succ.  equiv  `
  - âªº  ` succ.  napprox  `
  - âª²  ` succ.  neq  `
  - âª¶  ` succ.  nequiv  `
  - â  ` succ.  not  `
  - â©  ` succ.  ntilde  `
  - â¿  ` succ.  tilde  `
  - â¡  ` equiv  `
  - â¢  ` equiv.  not  `
  - â  ` prop  `
  - â¶  ` original  `
  - â·  ` image  `
  - â  ` emptyset  `
  - â¦³  ` emptyset.  arrow.  r  `
  - â¦´  ` emptyset.  arrow.  l  `
  - â¦±  ` emptyset.  bar  `
  - â¦²  ` emptyset.  circle  `
  - â¦°  ` emptyset.  rev  `
  - â  ` nothing  `
  - â¦³  ` nothing.  arrow.  r  `
  - â¦´  ` nothing.  arrow.  l  `
  - â¦±  ` nothing.  bar  `
  - â¦²  ` nothing.  circle  `
  - â¦°  ` nothing.  rev  `
  - â  ` without  `
  - â  ` complement  `
  - â  ` in  `
  - â  ` in.  not  `
  - â  ` in.  rev  `
  - â  ` in.  rev.  not  `
  - â  ` in.  rev.  small  `
  - â  ` in.  small  `
  - â  ` subset  `
  - âª½  ` subset.  dot  `
  - â  ` subset.  double  `
  - â  ` subset.  eq  `
  - â  ` subset.  eq.  not  `
  - â  ` subset.  eq.  sq  `
  - â¢  ` subset.  eq.  sq.  not  `
  - â  ` subset.  neq  `
  - â  ` subset.  not  `
  - â  ` subset.  sq  `
  - â¤  ` subset.  sq.  neq  `
  - â  ` supset  `
  - âª¾  ` supset.  dot  `
  - â  ` supset.  double  `
  - â  ` supset.  eq  `
  - â  ` supset.  eq.  not  `
  - â  ` supset.  eq.  sq  `
  - â£  ` supset.  eq.  sq.  not  `
  - â  ` supset.  neq  `
  - â  ` supset.  not  `
  - â  ` supset.  sq  `
  - â¥  ` supset.  sq.  neq  `
  - âª  ` union  `
  - â  ` union.  arrow  `
  - â  ` union.  big  `
  - â  ` union.  dot  `
  - â¨  ` union.  dot.  big  `
  - â  ` union.  double  `
  - â©  ` union.  minus  `
  - â©  ` union.  or  `
  - â  ` union.  plus  `
  - â¨  ` union.  plus.  big  `
  - â  ` union.  sq  `
  - â¨  ` union.  sq.  big  `
  - â©  ` union.  sq.  double  `
  - â©  ` sect  `
  - â©  ` sect.  and  `
  - â  ` sect.  big  `
  - â©  ` sect.  dot  `
  - â  ` sect.  double  `
  - â  ` sect.  sq  `
  - â¨  ` sect.  sq.  big  `
  - â©  ` sect.  sq.  double  `
  - â  ` infinity  `
  - â§  ` infinity.  bar  `
  - â§  ` infinity.  incomplete  `
  - â§  ` infinity.  tie  `
  - â  ` oo  `
  - â  ` diff  `
  - â  ` partial  `
  - â  ` gradient  `
  - â  ` nabla  `
  - â  ` sum  `
  - â¨  ` sum.  integral  `
  - â  ` product  `
  - â  ` product.  co  `
  - â«  ` integral  `
  - â¨  ` integral.  arrow.  hook  `
  - â¨  ` integral.  ccw  `
  - â®  ` integral.  cont  `
  - â³  ` integral.  cont.  ccw  `
  - â²  ` integral.  cont.  cw  `
  - â±  ` integral.  cw  `
  - â¨  ` integral.  dash  `
  - â¨  ` integral.  dash.  double  `
  - â¬  ` integral.  double  `
  - â¨  ` integral.  quad  `
  - â¨  ` integral.  sect  `
  - â¨  ` integral.  slash  `
  - â¨  ` integral.  square  `
  - â¯  ` integral.  surf  `
  - â¨  ` integral.  times  `
  - â­  ` integral.  triple  `
  - â¨  ` integral.  union  `
  - â°  ` integral.  vol  `
  - â  ` laplace  `
  - â  ` forall  `
  - â  ` exists  `
  - â  ` exists.  not  `
  - â¤  ` top  `
  - â¥  ` bot  `
  - Â¬  ` not  `
  - â§  ` and  `
  - â  ` and.  big  `
  - â  ` and.  curly  `
  - â  ` and.  dot  `
  - â©  ` and.  double  `
  - â¨  ` or  `
  - â  ` or.  big  `
  - â  ` or.  curly  `
  - â  ` or.  dot  `
  - â©  ` or.  double  `
  - â  ` xor  `
  - â¨  ` xor.  big  `
  - â§  ` models  `
  - â©  ` forces  `
  - â®  ` forces.  not  `
  - â´  ` therefore  `
  - âµ  ` because  `
  - â  ` qed  `
  - â  ` compose  `
  - â  ` convolve  `
  - â¸  ` multimap  `
  - â§  ` multimap.  double  `
  - â§¾  ` tiny  `
  - â§¿  ` miny  `
  - â£  ` divides  `
  - â¤  ` divides.  not  `
  - â  ` wreath  `
  - â¥  ` parallel  `
  - â«²  ` parallel.  struck  `
  - â¦·  ` parallel.  circle  `
  - â  ` parallel.  eq  `
  - â©¨  ` parallel.  equiv  `
  - â¦  ` parallel.  not  `
  - â§£  ` parallel.  slanted.  eq  `
  - â§¤  ` parallel.  slanted.  eq.  tilde  `
  - â§¥  ` parallel.  slanted.  equiv  `
  - â«³  ` parallel.  tilde  `
  - â  ` perp  `
  - â¦¹  ` perp.  circle  `
  - â  ` diameter  `
  - â¨  ` join  `
  - â  ` join.  r  `
  - â  ` join.  l  `
  - â  ` join.  l.  r  `
  - Â°  ` degree  `
  - â  ` degree.  c  `
  - â  ` degree.  f  `
  - â¨³  ` smash  `
  - â¿  ` bitcoin  `
  - $  ` dollar  `
  - â¬  ` euro  `
  - â£  ` franc  `
  - âº  ` lira  `
  - â±  ` peso  `
  - Â£  ` pound  `
  - â½  ` ruble  `
  - â¹  ` rupee  `
  - â©  ` won  `
  - Â¥  ` yen  `
  - â  ` ballot  `
  - â  ` ballot.  cross  `
  - â  ` ballot.  check  `
  - ð¹  ` ballot.  check.  heavy  `
  - â  ` checkmark  `
  - ð¸  ` checkmark.  light  `
  - â  ` checkmark.  heavy  `
  - â  ` crossmark  `
  - â  ` crossmark.  heavy  `
  - â¦  ` floral  `
  - â  ` floral.  l  `
  - â§  ` floral.  r  `
  - â»  ` refmark  `
  - Â©  ` copyright  `
  - â  ` copyright.  sound  `
  - ð¯  ` copyleft  `
  - â¢  ` trademark  `
  - Â®  ` trademark.  registered  `
  - â  ` trademark.  service  `
  - â  ` maltese  `
  - â£  ` suit.  club.  filled  `
  - â§  ` suit.  club.  stroked  `
  - â¦  ` suit.  diamond.  filled  `
  - â¢  ` suit.  diamond.  stroked  `
  - â¥  ` suit.  heart.  filled  `
  - â¡  ` suit.  heart.  stroked  `
  - â  ` suit.  spade.  filled  `
  - â¤  ` suit.  spade.  stroked  `
  - ð  ` note.  up  `
  - ð  ` note.  down  `
  - ð   ` note.  whole  `
  - ð   ` note.  half  `
  - ð   ` note.  quarter  `
  - â©  ` note.  quarter.  alt  `
  - ð  ` note.  eighth  `
  - âª  ` note.  eighth.  alt  `
  - â«  ` note.  eighth.  beamed  `
  - ð ¡  ` note.  sixteenth  `
  - â¬  ` note.  sixteenth.  beamed  `
  - ð  ` note.  grace  `
  - ð  ` note.  grace.  slash  `
  - ð»  ` rest.  whole  `
  - ðº  ` rest.  multiple  `
  - ð©  ` rest.  multiple.  measure  `
  - ð¼  ` rest.  half  `
  - ð½  ` rest.  quarter  `
  - ð¾  ` rest.  eighth  `
  - ð¿  ` rest.  sixteenth  `
  - â®  ` natural  `
  - ð®  ` natural.  t  `
  - ð¯  ` natural.  b  `
  - â­  ` flat  `
  - ð¬  ` flat.  t  `
  - ð­  ` flat.  b  `
  - ð«  ` flat.  double  `
  - ð³  ` flat.  quarter  `
  - â¯  ` sharp  `
  - ð°  ` sharp.  t  `
  - ð±  ` sharp.  b  `
  - ðª  ` sharp.  double  `
  - ð²  ` sharp.  quarter  `
  - â¢  ` bullet  `
  - â  ` circle.  stroked  `
  - â  ` circle.  stroked.  tiny  `
  - â¬  ` circle.  stroked.  small  `
  - â¯  ` circle.  stroked.  big  `
  - â  ` circle.  filled  `
  - â¦  ` circle.  filled.  tiny  `
  - â  ` circle.  filled.  small  `
  - â¬¤  ` circle.  filled.  big  `
  - â  ` circle.  dotted  `
  - â  ` circle.  nested  `
  - â¬­  ` ellipse.  stroked.  h  `
  - â¬¯  ` ellipse.  stroked.  v  `
  - â¬¬  ` ellipse.  filled.  h  `
  - â¬®  ` ellipse.  filled.  v  `
  - â³  ` triangle.  stroked.  t  `
  - â½  ` triangle.  stroked.  b  `
  - â·  ` triangle.  stroked.  r  `
  - â  ` triangle.  stroked.  l  `
  - âº  ` triangle.  stroked.  bl  `
  - â¿  ` triangle.  stroked.  br  `
  - â¸  ` triangle.  stroked.  tl  `
  - â¹  ` triangle.  stroked.  tr  `
  - âµ  ` triangle.  stroked.  small.  t  `
  - â¿  ` triangle.  stroked.  small.  b  `
  - â¹  ` triangle.  stroked.  small.  r  `
  - â  ` triangle.  stroked.  small.  l  `
  - ð  ` triangle.  stroked.  rounded  `
  - â  ` triangle.  stroked.  nested  `
  - â¬  ` triangle.  stroked.  dot  `
  - â²  ` triangle.  filled.  t  `
  - â¼  ` triangle.  filled.  b  `
  - â¶  ` triangle.  filled.  r  `
  - â  ` triangle.  filled.  l  `
  - â£  ` triangle.  filled.  bl  `
  - â¢  ` triangle.  filled.  br  `
  - â¤  ` triangle.  filled.  tl  `
  - â¥  ` triangle.  filled.  tr  `
  - â´  ` triangle.  filled.  small.  t  `
  - â¾  ` triangle.  filled.  small.  b  `
  - â¸  ` triangle.  filled.  small.  r  `
  - â  ` triangle.  filled.  small.  l  `
  - â¡  ` square.  stroked  `
  - â«  ` square.  stroked.  tiny  `
  - â½  ` square.  stroked.  small  `
  - â»  ` square.  stroked.  medium  `
  - â¬  ` square.  stroked.  big  `
  - â¬  ` square.  stroked.  dotted  `
  - â¢  ` square.  stroked.  rounded  `
  - â  ` square.  filled  `
  - âª  ` square.  filled.  ti/*![Copy](/assets/icons/16-copy.svg)*/ small  `
  - â¼  `/*![Copy](/assets/icons/16-copy.svg)*/¬  ` square./*![Copy](/assets/icons/16-copy.svg)*/  strok/*![](/assets/icons/16-close.svg)*/oked.  v  `
  - â¬  ` rect.  /*![â](/assets/icons/16-arrow-right.svg)*/ v  `
  - â¬  ` penta.  stroked  `
  - â¬  ` penta/*![â](/assets/icons/16-arrow-right.svg)*/`
  - â¬¢  ` hexa.  filled  `
  - â  ` diamond.  stroked  `
  - â  ` diamond.  stroked.  sma/*![Docs](/assets/icons/16-docs-dark.svg)*/dium  `
  /*![](/assets/icons/16-arrow-right.svg)*/ - â  ` diamond.  filled  `
  - â¬¥/*![](/assets/icons/16-arrow-right.svg)*/â¬©  ` diamond.  filled.  small  `
  - â /*![](/assets/icons/16-arrow-right.svg)*/zenge.  stroked.  small  `
  - â¬¨  ` lozenge.  stroked.  medium  `
  - â§«  ` lozenge.  filled  `
  - â¬ª  ` lozenge.  filled.  small  `
  - â¬§  ` lozenge.  filled.  medium  `
  - â±  ` parallelogram.  stroked  `
  - â°  ` parallelogram.  filled  `
  - â  ` star.  op  `
  - â  ` star.  stroked  `
  - â  ` star.  filled  `
  - â  ` arrow.  r  `
  - â¼  ` arrow.  r.  long.  bar  `
  - â¦  ` arrow.  r.  bar  `
  - â¤·  ` arrow.  r.  curve  `
  - â®  ` arrow.  r.  turn  `
  - â¢  ` arrow.  r.  dashed  `
  - â¤  ` arrow.  r.  dotted  `
  - â  ` arrow.  r.  double  `
  - â¤  ` arrow.  r.  double.  bar  `
  - â¹  ` arrow.  r.  d/*![Preview](/assets/docs/VU7JCTNOvXZ0YxOKfFCHhgAAAAAAAAAA.png)*/
  - â  ` arrow.  r.  double.  not  `
  - â¡  ` arrow.  r.  filled  `
  - âª  ` arrow.  r.  hook  `
  - â¶  ` arrow.  r.  long  `
  - â¿  ` arrow.  r.  long.  squiggly  `
  - â¬  ` arrow.  r.  loop  `
  - â  ` arrow.  r.  not  `
  - â­  ` arrow.  r.  quad  `
  - â  ` arrow.  r.  squiggly  `
  - â¥  ` arrow./*![Preview](/assets/docs/6bpO4zHphIuAdD1km_qbDAAAAAAAAAAA.png)*/row.  r.  tail  `
  - â¥²  ` arrow.  r.  tilde  `
  - â  ` arrow.  r.  triple  `
  - â¤  ` arrow.  r.  twohead.  bar  `
  - â  ` arrow.  r.  twohead  `
  - â  ` arrow.  r.  wave  `
  - â  ` arrow.  l  `
  - â¤  ` arrow.  l.  bar  `
  - â¤¶  ` arrow.  l.  curve  `
  - â®  ` arrow.  l.  turn  `
  - â  ` arrow.  l.  dashed  `
  - â¬¸  ` arrow.  l.  dotted  `
  - â  ` arrow.  l.  double  `
  - â¤  ` arrow.  l.  double.  bar  `
  - â¸  ` arrow.  l.  double.  long  `
  - â½  ` arrow.  l.  double.  long.  bar  `
  - â  ` arrow.  l.  double.  not  `
  - â¬  ` arrow.  l.  filled  `
  - â© /*![Preview](/assets/docs/KbY7ot9pSdzC8G6YXvE_VAAAAAAAAAAA.png)*/  ` arrow.  l.  long.  bar  `
  - â¬³  ` arrow.  l.  long.  squiggly  `
  - â«  ` arrow.  l.  loop  `
  - â  ` arrow.  l.  not  `
  - â­  ` arrow.  l.  quad  `
  - â  ` arrow.  l.  squiggly  `
  - â¤  ` arrow.  l.  stop  `
  - â¦  ` arrow.  l.  stroked  `
  - â¢  ` arrow.  l.  tail  `
  - â­  ` arrow.  l.  tilde  `
  - â  ` arrow.  l.  triple  `
  - â¬¶  ` arrow.  l.  twohead.  bar  `
  - â  ` arrow.  l.  twohead  `
  - â  ` arrow.  l.  wave  `
  - â  ` arrow.  t  `
  - â¥  ` arrow.  t.  bar  `
  - â¤´  ` arrow.  t.  curve  `
  - â®  ` arrow.  t.  turn  `
  - â¡  ` arrow.  t.  dashed  `
  - â  ` arrow.  t.  double  `
  - â¬  ` arrow.  t.  /*![â](/assets/icons/16-arrow-right.svg)*/
  - â¤  ` arrow.  t.  stop  `
  - â§  ` arrow.  t. /*![â](/assets/icons/16-arrow-right.svg)*/e  `
  - â  ` arrow.  t.  twohead  `
  - â  ` arrow.  b  `
  - â§  ` arrow.  b.  bar/*![Docs](/assets/icons/16-docs-dark.svg)*/ â®  ` ar/*![](/assets/icons/16-arrow-right.svg)*/b.  dashed  `
  - â  ` arrow.  b.  /*![](/assets/icons/16-arrow-right.svg)*/ed  `
  - â±  ` arrow.  b.  quad  `
  - â¤/*![](/assets/icons/16-arrow-right.svg)*/rrow.  b.  stroked  `
  - â¤  ` arrow.  b.  triple  `
  - â¡  ` arrow.  b.  twohead  `
  - â  ` arrow.  l.  r  `
  - â  ` arrow.  l.  r.  double  `
  - âº  ` arrow.  l.  r.  double.  long  `
  - â  ` arrow.  l.  r.  double.  not  `
  - â¬  ` arrow.  l.  r.  filled  `
  - â·  ` arrow.  l.  r.  long  `
  - â®  ` arrow.  l.  r.  not  `
  - â¬  ` arrow.  l.  r.  /*![Search](/assets/icons/16-search-gray.svg)*/ `
  - â  ` arrow.  t.  b  `
  - â  ` arrow.  t.  b.  double  `
  - â¬  ` arrow.  t.  b.  filled  `
  - â³  ` arrow.  t.  b.  stroked  `
  - â  ` arrow.  tr  `
  - â  ` arrow.  tr.  double  `
  - â¬  ` arrow.  tr.  filled  `
  - â¤¤  ` arrow.  tr.  hook  `
  - â¬  ` arrow.  tr.  stroked  `
  - â  ` arrow.  br  `
  - â  ` arrow.  br.  double  `
  - â¬  ` arrow.  br.  filled  `
  - â¤¥  ` arrow.  br.  hook  `
  - â¬  ` arrow.  br.  stroked  `
  - â  ` arrow.  tl  `
  - â  ` arrow.  tl.  double  `
  - â¬  ` arrow.  tl.  filled  `
  - â¤£  ` arrow.  tl.  hook  `
  - â¬  ` arrow.  tl.  stroked  `
  - â  ` arrow.  bl  `
  - â  ` arrow.  bl.  double  `
  - â¬  ` arrow.  bl.  filled  `
  - â¤¦  ` arrow.  bl.  hook  `
  - â¬  ` arrow.  bl.  stroked  `
  - â¤¡  ` arrow.  tl.  br  `
  - â¤¢  ` arrow.  tr.  bl  `
  - âº  ` arrow.  ccw  `
  - â¶  ` arrow.  ccw.  half  `
  - â»  ` arrow.  cw  `
  - â·  ` arrow.  cw.  half  `
  - â¯  ` arrow.  zigzag  `
  - â  ` arrows.  rr  `
  - â  ` arrows.  ll  `
  - â  ` arrows.  tt  `
  - â  ` arrows.  bb  `
  - â  ` arrows.  lr  `
  - â¹  ` arrows.  lr.  stop  `
  - â  ` arrows.  rl  `
  - â  ` arrows.  tb  `
  - âµ  ` arrows.  bt  `
  - â¶  ` arrows.  rrr  `
  - â¬±  ` arrows.  lll  `
  - â  ` arrowhead.  t  `
  - â  ` arrowhead.  b  `
  - â  ` harpoon.  rt  `
  - â¥  ` harpoon.  rt.  bar  `
  - â¥  ` harpoon.  rt.  stop  `
  - â  ` harpoon.  rb  `
  - â¥  ` harpoon.  rb.  bar  `
  - â¥  ` harpoon.  rb.  stop  `
  - â¼  ` harpoon.  lt  `
  - â¥  ` harpoon.  lt.  bar  `
  - â¥  ` harpoon.  lt.  stop  `
  - â½  ` harpoon.  lb  `
  - â¥  ` harpoon.  lb.  bar  `
  - â¥  ` harpoon.  lb.  stop  `
  - â¿  ` harpoon.  tl  `
  - â¥  ` harpoon.  tl.  bar  `
  - â¥  ` harpoon.  tl.  stop  `
  - â¾  ` harpoon.  tr  `
  - â¥  ` harpoon.  tr.  bar  `
  - â¥  ` harpoon.  tr.  stop  `
  - â  ` harpoon.  bl  `
  - â¥¡  ` harpoon.  bl.  bar  `
  - â¥  ` harpoon.  bl.  stop  `
  - â  ` harpoon.  br  `
  - â¥  ` harpoon.  br.  bar  `
  - â¥  ` harpoon.  br.  stop  `
  - â¥  ` harpoon.  lt.  rt  `
  - â¥  ` harpoon.  lb.  rb  `
  - â¥  ` harpoon.  lb.  rt  `
  - â¥  ` harpoon.  lt.  rb  `
  - â¥  ` harpoon.  tl.  bl  `
  - â¥  ` harpoon.  tr.  br  `
  - â¥  ` harpoon.  tl.  br  `
  - â¥  ` harpoon.  tr.  bl  `
  - â¥¤  ` harpoons.  rtrb  `
  - â¥¥  ` harpoons.  blbr  `
  - â¥¯  ` harpoons.  bltr  `
  - â¥§  ` harpoons.  lbrb  `
  - â¥¢  ` harpoons.  ltlb  `
  - â  ` harpoons.  ltrb  `
  - â¥¦  ` harpoons.  ltrt  `
  - â¥©  ` harpoons.  rblb  `
  - â  ` harpoons.  rtlb  `
  - â¥¨  ` harpoons.  rtlt  `
  - â¥®  ` harpoons.  tlbr  `
  - â¥£  ` harpoons.  tltr  `
  - â¢  ` tack.  r  `
  - â¬  ` tack.  r.  not  `
  - â  ` tack.  r.  long  `
  - â¦  ` tack.  r.  short  `
  - â¨  ` tack.  r.  double  `
  - â­  ` tack.  r.  double.  not  `
  - â£  ` tack.  l  `
  - â  ` tack.  l.  long  `
  - â«  ` tack.  l.  short  `
  - â«¤  ` tack.  l.  double  `
  - â¥  ` tack.  t  `
  - â  ` tack.  t.  big  `
  - â««  ` tack.  t.  double  `
  - â«  ` tack.  t.  short  `
  - â¤  ` tack.  b  `
  - â  ` tack.  b.  big  `
  - â«ª  ` tack.  b.  double  `
  - â«  ` tack.  b.  short  `
  - â  ` tack.  l.  r  `
  - Î±  ` alpha  `
  - Î²  ` beta  `
  - Ï  ` beta.  alt  `
  - Ï  ` chi  `
  - Î´  ` delta  `
  - Îµ  ` epsilon  `
  - Ïµ  ` epsilon.  alt  `
  - Î·  ` eta  `
  - Î³  ` gamma  `
  - Î¹  ` iota  `
  - Ï  ` kai  `
  - Îº  ` kappa  `
  - Ï°  ` kappa.  alt  `
  - Î»  ` lambda  `
  - Î¼  ` mu  `
  - Î½  ` nu  `
  - â¦  ` ohm  `
  - â§  ` ohm.  inv  `
  - Ï  ` omega  `
  - Î¿  ` omicron  `
  - Ï  ` phi  `
  - Ï  ` phi.  alt  `
  - Ï  ` pi  `
  - Ï  ` pi.  alt  `
  - Ï  ` psi  `
  - Ï  ` rho  `
  - Ï±  ` rho.  alt  `
  - Ï  ` sigma  `
  - Ï  ` sigma.  alt  `
  - Ï  ` tau  `
  - Î¸  ` theta  `
  - Ï  ` theta.  alt  `
  - Ï  ` upsilon  `
  - Î¾  ` xi  `
  - Î¶  ` zeta  `
  - Î  ` Alpha  `
  - Î  ` Beta  `
  - Î§  ` Chi  `
  - Î  ` Delta  `
  - Î  ` Epsilon  `
  - Î  ` Eta  `
  - Î  ` Gamma  `
  - Î  ` Iota  `
  - Ï  ` Kai  `
  - Î  ` Kappa  `
  - Î  ` Lambda  `
  - Î  ` Mu  `
  - Î  ` Nu  `
  - Î©  ` Omega  `
  - Î  ` Omicron  `
  - Î¦  ` Phi  `
  - Î  ` Pi  `
  - Î¨  ` Psi  `
  - Î¡  ` Rho  `
  - Î£  ` Sigma  `
  - Î¤  ` Tau  `
  - Î  ` Theta  `
  - Î¥  ` Upsilon  `
  - Î  ` Xi  `
  - Î  ` Zeta  `
  - ×  ` aleph  `
  - ×  ` alef  `
  - ×  ` beth  `
  - ×  ` bet  `
  - ×  ` gimmel  `
  - ×  ` gimel  `
  - ×  ` daleth  `
  - ×  ` dalet  `
  - ×©  ` shin  `
  - ð¸  ` AA  `
  - ð¹  ` BB  `
  - â  ` CC  `
  - ð»  ` DD  `
  - ð¼  ` EE  `
  - ð½  ` FF  `
  - ð¾  ` GG  `
  - â  ` HH  `
  - ð  ` II  `
  - ð  ` JJ  `
  - ð  ` KK  `
  - ð  ` LL  `
  - ð  ` MM  `
  - â  ` NN  `
  - ð  ` OO  `
  - â  ` PP  `
  - â  ` QQ  `
  - â  ` RR  `
  - ð  ` SS  `
  - ð  ` TT  `
  - ð  ` UU  `
  - ð  ` VV  `
  - ð  ` WW  `
  - ð  ` XX  `
  - ð  ` YY  `
  - â¤  ` ZZ  `
  - â  ` ell  `
  - â  ` planck  `
  - â  ` planck.  reduce  `
  - â«  ` angstrom  `
  - âª  ` kelvin  `
  - â  ` Re  `
  - â  ` Im  `
  - ð¤  ` dotless.  i  `
  - ð¥  ` dotless.  j  `

###

Name: ` ` ![Copy](/assets/icons/16-copy.svg)

Escape:  ` \u  {  } ` ![Copy](/assets/icons/16-copy.svg)

Shorthand: ` ` ![Copy](/assets/icons/16-copy.svg)

Accent:  ![](/assets/icons/16-close.svg)

LaTeX: ` `

====  Variants

- [ ![â](/assets/icons/16-arrow-right.svg) Symbols  Previous page  ](/docs/reference/symbols/) [ ![â](/assets/icons/16-arrow-right.svg) Emoji  Next page  ](/docs/reference/symbols/emoji/)



= *docs/reference/symbols/symbol.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.sv/*![â](/assets/icons/16-arrow-right.svg)*/ - ![](/assets/icons/16-arrow-right.svg)
  - [ Symbols /*![â](/assets/icons/16-arrow-right.svg)*/ets/icons/16-arrow-right.svg)
  - [ Symbol ](/docs/reference/symbols/symbol/)

=  symbol

A /*![Docs](/assets/icons/16-docs-dark.svg)*/ymbols so that they can easily be written with standard
keyboards. The symbols are defined in modules, from which they can be accessed
using [ field access notation ](/docs/reference/scripting/#fields) :

  - General symbols are defined in the [ ` sym ` module ](/docs/reference/symbols/sym/)
  - Emoji are defined in the [ ` emoji ` module ](/docs/reference/symbols/emoji/)

Moreover, you can define custom symbols with this type's constructor function.

    
    
    #sym.arrow.r \
    #sym.gt.eq.not \
    $gt.eq.not$ \
    #emoji.face.halo
    

![Preview](/assets/docs/VU7JCTNOvXZ0YxOKfFCHhgAAAAAAAAAA.png)

Many symbols have different variants, which can be selected by appending the
modifiers with dot notation. The order of the modifiers is not relevant. Visit
the documentation pages of the symbol modules and click on a symbol to see its
available variants.

    
    
    $arrow.l$ \
    $arrow.r$ \
    $arrow.t.quad$
    

![Preview](/assets/docs/6bpO4zHphIuAdD1km_qbDAAAAAAAAAAA.png)

==  Constructor

Question mark

If a type has a constructor, you can call it like a function to create a new
value of the type.

Create a custom symbol with modifiers.

symbol  (

..  [ str ](/docs/reference/foundations/str/) [ array
](/docs/reference/foundations/array/)

)  -> [ symbol ](/docs/reference/symbols/symbol/)

    
    
    #let envelope = symbol(
      "ð",
      ("stamped", "ð"),
      ("stamped.pen", "ð"),
      ("lightning", "ð"),
      ("fly", "ð"),
    )
    
    #envelope
    #envelope.stamped
    #envelope.stamped.pen
    #envelope.lightning
    #envelope.fly
    

![Preview](/assets/docs/KbY7ot9pSdzC8G6YXvE_VAAAAAAAAAAA.png)

====  ` variants `

[ str ](/docs/reference/foundations/str/) or  [ array
](/docs/reference/foundations/array/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

Variadic

Question mark

Variadic parameters can be specified multiple times.

The variants of the symbol.

Can be a just a string consisting of a single character for the modifierless
variant or an array with two strings specifying the modifiers and the symbol.
Individual modifiers should be separated by dots. When displaying a symbol,
Typst selects the first from the variants that have all attached modifiers and
the minimum number of other modifiers.

[ ![â](/assets/icons/16-arrow-right.svg) Emoji  Previous page
](/docs/reference/symbols/emoji/) [ ![â](/assets/icons/16-arrow-right.svg)
Layout  Next page  ](/docs/reference/layout/)



= *d/*![â](/assets/icons/16-arrow-right.svg)*/[Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/ass/*![â](/assets/icons/16-arrow-right.svg)*/rence ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Symbols ](/docs/refe/*![Docs](/assets/icons/16-docs-dark.svg)*/6-arrow-right.svg)
  - [ Emoji ](/docs/reference/symbols/emoji/)

=  emoji

Named emoji.

For example, ` #emoji.face ` produces the ð emoji. If you frequently use
certain emojis, you can also import them from the ` emoji ` module ( ` #
import  emoji  :  face ` ) to use them without the ` #emoji. ` prefix.

Click on a [ symbol ](/docs/reference/symbols/symbol/) to copy it to the
clipboard.

![Search](/assets/icons/16-search-gray.svg)

  - ð§®  ` abacus  `
  - ð¤  ` abc  `
  - ð¡  ` abcd  `
  - ð  ` ABCD  `
  - ðª  ` accordion  `
  - â  ` aesculapius  `
  - â  ` airplane  `
  - ð¬  ` airplane.  landing  `
  - ð©  ` airplane.  small  `
  - ð«  ` airplane.  takeoff  `
  - â  ` alembic  `
  - ð½  ` alien  `
  - ð¾  ` alien.  monster  `
  - ð  ` ambulance  `
  - ðº  ` amphora  `
  - â  ` anchor  `
  - ð¢  ` anger  `
  - ð  ` ant  `
  - ð  ` apple.  green  `
  - ð  ` apple.  red  `
  - ð¦¾  ` arm.  mech  `
  - ðª  ` arm.  muscle  `
  - ð¤³  ` arm.  selfie  `
  - â¡  ` arrow.  r.  filled  `
  - âª  ` arrow.  r.  hook  `
  - ð  ` arrow.  r.  soon  `
  - â¬  ` arrow.  l.  filled  `
  - â©  ` arrow.  l.  hook  `
  - ð  ` arrow.  l.  back  `
  - ð  ` arrow.  l.  end  `
  - â¬  ` arrow.  t.  filled  `
  - â¤´  ` arrow.  t.  curve  `
  - ð  ` arrow.  t.  top  `
  - â¬  ` arrow.  b.  filled  `
  - â¤µ  ` arrow.  b.  curve  `
  - â  ` arrow.  l.  r  `
  - ð  ` arrow.  l.  r.  on  `
  - â  ` arrow.  t.  b  `
  - â  ` arrow.  bl  `
  - â  ` arrow.  br  `
  - â  ` arrow.  tl  `
  - â  ` arrow.  tr  `
  - ð  ` arrows.  cycle  `
  - *  ` ast  `
  - â³  ` ast.  box  `
  - ð§  ` atm  `
  - â  ` atom  `
  - ð  ` aubergine  `
  - ð¥  ` avocado  `
  - ðª  ` axe  `
  - ð¶  ` baby  `
  - ð¼  ` baby.  angel  `
  - ð¼  ` baby.  box  `
  - ð¼  ` babybottle  `
  - ð  ` backpack  `
  - ð¥  ` bacon  `
  - ð¦¡  ` badger  `
  - ð¸  ` badminton  `
  - ð¥¯  ` bagel  `
  - ð  ` baggageclaim  `
  - ð¥  ` baguette  `
  - ð  ` balloon  `
  - â  ` ballot.  check  `
  - ð³  ` ballotbox  `
  - ð  ` banana  `
  - ðª  ` banjo  `
  - ð¦  ` bank  `
  - ð  ` barberpole  `
  - â¾  ` baseball  `
  - ð§¢  ` basecap  `
  - ð§º  ` basket  `
  - â¹  ` basketball  `
  - ð  ` basketball.  ball  `
  - ð¦  ` bat  `
  - ð  ` bathtub  `
  - ð  ` bathtub.  foam  `
  - ð  ` battery  `
  - ðª«  ` battery.  low  `
  - ð  ` beach.  palm  `
  - ð  ` beach.  umbrella  `
  - ð¿  ` beads  `
  - ð«  ` beans  `
  - ð»  ` bear  `
  - ð¦«  ` beaver  `
  - ð  ` bed  `
  - ð  ` bed.  person  `
  - ð  ` bee  `
  - ðº  ` beer  `
  - ð»  ` beer.  clink  `
  - ð«  ` beet  `
  - ðª²  ` beetle  `
  - ð  ` beetle.  lady  `
  - ð  ` bell  `
  - ð  ` bell.  ding  `
  - ð  ` bell.  not  `
  - ð±  ` bento  `
  - ð´  ` bicyclist  `
  - ðµ  ` bicyclist.  mountain  `
  - ð²  ` bike  `
  - ð³  ` bike.  not  `
  - ð  ` bikini  `
  - ð±  ` billiards  `
  - ð  ` bin  `
  - â£  ` biohazard  `
  - ð¦  ` bird  `
  - ð¦¬  ` bison  `
  - ð©¸  ` blood  `
  - ð  ` blouse  `
  - ð¡  ` blowfish  `
  - ð«  ` blueberries  `
  - ð  ` boar  `
  - âµ  ` boat.  sail  `
  - ð£  ` boat.  row  `
  - ð¥  ` boat.  motor  `
  - ð¤  ` boat.  speed  `
  - ð¶  ` boat.  canoe  `
  - ð©  ` bolt  `
  - ð£  ` bomb  `
  - ð¦´  ` bone  `
  - ð  ` book.  red  `
  - ð  ` book.  blue  `
  - ð  ` book.  green  `
  - ð  ` book.  orange  `
  - ð  ` book.  spiral  `
  - ð  ` book.  open  `
  - ð  ` bookmark  `
  - ð  ` books  `
  - ðª  ` boomerang  `
  - ð  ` bordercontrol  `
  - ð  ` bouquet  `
  - ð¹  ` bow  `
  - ð¥£  ` bowl.  spoon  `
  - ð  ` bowl.  steam  `
  - ð³  ` bowling  `
  - ð¥  ` boxing  `
  - ð¦  ` boy  `
  - ð§  ` brain  `
  - ð  ` bread  `
  - ð§±  ` brick  `
  - ð°  ` bride  `
  - ð  ` bridge.  fog  `
  - ð  ` bridge.  night  `
  - ð¼  ` briefcase  `
  - ð©²  ` briefs  `
  - ð  ` brightness.  high  `
  - ð  ` brightness.  low  `
  - ð¥¦  ` broccoli  `
  - ð§¹  ` broom  `
  - ð  ` brush  `
  - ð¬  ` bubble.  speech.  r  `
  - ð¨  ` bubble.  speech.  l  `
  - ð­  ` bubble.  thought  `
  - ð¯  ` bubble.  anger.  r  `
  - ð«§  ` bubbles  `
  - ð§  ` bubbletea  `
  - ðª£  ` bucket  `
  - ð  ` buffalo.  water  `
  - ð  ` bug  `
  - ð·  ` builder  `
  - ð  ` burger  `
  - ð¯  ` burrito  `
  - ð  ` bus  `
  - ð  ` bus.  front  `
  - ð  ` bus.  small  `
  - ð  ` bus.  stop  `
  - ð  ` bus.  trolley  `
  - ð§  ` butter  `
  - ð¦  ` butterfly  `
  - ð²  ` button  `
  - ð³  ` button.  alt  `
  - ð  ` button.  radio  `
  - ð  ` cabinet.  file  `
  - ð  ` cablecar  `
  - ð¡  ` cablecar.  small  `
  - ðµ  ` cactus  `
  - ð  ` cake  `
  - ð¥  ` cake.  fish  `
  - ð¥®  ` cake.  moon  `
  - ð°  ` cake.  slice  `
  - ð  ` calendar  `
  - ð  ` calendar.  spiral  `
  - ð  ` calendar.  tearoff  `
  - ð«  ` camel  `
  - ðª  ` camel.  dromedar  `
  - ð·  ` camera  `
  - ð¸  ` camera.  flash  `
  - ð¥  ` camera.  movie  `
  - ð¦  ` camera.  movie.  box  `
  - ð¹  ` camera.  video  `
  - ð  ` camping  `
  - ð¥«  ` can  `
  - ð¯  ` candle  `
  - ð¬  ` candy  `
  - ð¦¯  ` cane  `
  - ð  ` car  `
  - ð  ` car.  front  `
  - ð»  ` car.  pickup  `
  - ð  ` car.  police  `
  - ð  ` car.  police.  front  `
  - ð  ` car.  racing  `
  - ðº  ` car.  rickshaw  `
  - ð  ` car.  suv  `
  - ð³  ` card.  credit  `
  - ðªª  ` card.  id  `
  - ð  ` cardindex  `
  - ð¥  ` carrot  `
  - ð  ` cart  `
  - ð¼  ` cassette  `
  - ð°  ` castle.  eu  `
  - ð¯  ` castle.  jp  `
  - ð  ` cat  `
  - ð±  ` cat.  face  `
  - ð¾  ` cat.  face.  angry  `
  - ð¿  ` cat.  face.  cry  `
  - ð»  ` cat.  face.  heart  `
  - ð¹  ` cat.  face.  joy  `
  - ð½  ` cat.  face.  kiss  `
  - ð¸  ` cat.  face.  laugh  `
  /*[Copy](/assets/icons/16-copy.svg)*/ - ðº  ` cat.  face/*[Copy](/assets/icons/16-copy.svg)*/e.  smirk  `
 /*[Copy](/assets/icons/16-copy.svg)*/ains  `
  - ðª  ` chair  `
  - ð¾  ` champagne  `
  - ð  ` char/*[ ![â](/assets/icons/16-arrow-right.svg)*/  ` chart.  down  `
  - ð¹  ` chart.  yen.  up  /*[ ![â](/assets/icons/16-arrow-right.svg)*/` checkmark.  box  `
  - ð§  ` cheese  `
  - ð  ` cherries  `
  - â  ` chess  `
  -/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ `
  - ð¥  ` chicken.  baby  `
  - ð£  ` chicken/*[ Reference ](/docs/reference/)*/icken.  baby.  head  `
  - ð  ` chicken./*[ Text ](/docs/reference/text/)*/male  `
  - ð§  ` child  `
  - ð¿  ` ch/*[ Subscript ](/docs/reference/text/sub/)*/¥¢  ` chopsticks  `
  - âª  ` church  `
  - ð  ` church.  love  `
  - ð¬  ` cigarette  `
  - ð­  ` cigarette.  not  `
  - â«  ` circle.  black  `
  - ðµ  ` circle.  blue  `
  - ð¤  ` circle.  brown  `
  - ð¢  ` circle.  green  `
/*[Preview](/assets/docs/q6m3B3bVOLKPuJFIogqIMwAAAAAAAAAA.png)*/
  - âª  ` circle.  white  `
  - ð´  ` circle.  red  `
  - ð¡  ` circle.  yellow  `
  - â­  ` circle.  stroked  `
  - ðª  ` circus  `
  - ð  ` /*[ bool ](/docs/reference/foundations/bool/)*/  ` city.  ni/*[
length ](/docs/reference/layout/length/)*/  ` cla/*[ length
](/docs/reference/layout/length/)*//*[ content
](/docs/reference/foundations/content/)*/lipboa/*[ content ](/docs/reference/foundations/content/)*/e  `
  - ð  ` clo/*[ bool ](/docs/reference/foundations/bool/)*/o  `
  - ð  ` clock.  two.  thirty  `
  - ð  ` clock.  three  `
  - ð  ` clock.  three.  thirty  `
  - ð  ` clock.  four  `
  - ð  ` clock.  four.  thirty  `
  - ð  ` clock.  five  `
  - ð  ` clock.  five.  thirty  `
  - ð  ` clock.  six  `
  - ð¡  ` clock.  six.  thirty  `
  - ð  ` clock.  seven  `
  - ð¢  ` clock.  seven.  thirty  `
  - ð  ` clock.  eight  `
  - ð£  ` clock.  eight.  thirty  `
  - ð  ` clock.  nine  `
  - ð¤  ` clock.  nine.  thirty  `
  - ð/*[Preview](/assets/docs/eGuJ4coPHcIbozTvGKvULAAAAAAAAAAA.png)*/ð  ` clock.  e/*[ length ](/docs/reference/layout/length/)*/ty  `
  - ð  ` clock.  twelve  `
  - ð§  ` clock.  twelve.  thirty  `
  - â°  ` clock.  alarm  `
  - ð°  ` clock.  old  `
  - â²  ` clock.  timer  `
  - â  ` cloud  `
  - ð¨  ` cloud.  dust  `
  - ð§  ` cloud.  rain  `
  - ð¨  ` cloud.  snow  `
  - â  ` cloud.  storm  `
  - â  ` cloud.  s/*[ length ](/docs/reference/layout/length/)*/  - ð¦  ` cloud.  sun.  rain  `
  - ð©  ` cloud.  thunder  `
  - ð§¥  ` coat  `
  - ð¥¼  ` coat.  lab  `
  - ðª³  ` cockroach  `
  - ð¸  ` cocktail.  martini  `
  - ð¹  ` cocktail.  tropical  `
  - ð¥¥  ` coconut  `
  - â  ` coffee  `
  - â°  ` coffin  `
  - ðª  ` coin  `
  - â  ` com/*[ content ](/docs/reference/foundations/content/)*/  `
  - ð±  ` computermouse  `
  - ð  ` confetti  `
  - ð§  ` construction  `
  - ð®  ` controller  `
  - ðª  ` cookie  `/*[ ![â](/assets/icons/16-arrow-right.svg)*/` cooking  `
  - ð  ` cool  `
  - Â©  ` copyright  `
  /*[ ![â](/assets/icons/16-arrow-right.svg)*/ ð  ` couch  `
  - ð  ` couple  `
  - ð  ` cow  `
  - ð®  ` cow.  face  `
  - ð¦/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/  ` crayon  `
  - ð¦  ` cricket  `
  - ð  ` cr/*[ Reference ](/docs/reference/)*/le  `
  - ð¥  ` croissant  `
  - â  ` c/*[ Text ](/docs/reference/text/)*/k.  box  `
  - ð  ` crown  `
  - ð©¼  `/*[ Text ](/docs/reference/text/text/)*/- ð¥  ` cucumber  `
  - ð¥¤  ` cup.  straw  `
  - ð§  ` cupcake  `
  - ð¥  ` curling  `
  - ð  ` curry  `
  - ð®  ` custard  `
  - ð  ` customs  `
  - ð´  ` cutlery  `
  - ð  ` cyclone  `
  - ðº  ` dancing.  man  `
  - ð  ` dancing.  woman  `
  - ð¯  ` dancing.  women.  bunny  `
  - ð¯  ` darts  `
  - ã°  ` dash.  wave.  double  `
  - ð¦  ` deer  `
  - ð  ` desert  `
  - ðµ  ` detective  `
  - ð·  ` diamond.  blue  `
  - ð¹  ` diamond.  blue.  small  `
  - ð¶  ` diamond.  oran/*[Preview](/assets/docs/TE1TKvqGw3ajR6jn3phXugAAAAAAAAAA.png)*/mond.  dot  `
  - ð²  ` die  `
  - ð¦  ` dino.  pod  `
  - ð¦  ` dino.  rex  `
  - ð¿  ` disc.  cd  `
  - ð  ` disc.  dvd  `
  - ð½  ` /*[ str ](/docs/reference/foundations/str//*[ array
](/docs/reference/foundations/array/)*/ - ð  ` do/*[ bool
](/docs/reference/foundations/bool/)*/dog.  guid/*[ str
](/docs/reference/foundations/str/)*/  ` dollar /*[ int
](/docs/reference/foundations/int//*[ str ](/docs/reference/foundations/str/)*/dove.  peace/*[ ratio ](/docs/reference/layout/ratio/)*/agon.  fa/*[ length
](/docs/reference/layout/length/)*/ss.  kimo/*[ color
](/docs/reference/visualize/color//*[ gradient
](/docs/reference/visualize/gradient//*[ pattern
](/docs/reference/visualize/pattern/)*/duck  `
  -/*[ none
](/docs/reference/foundations/none//*[ length
](/docs/reference/layout/length//*[ color ](/docs/reference/visualize/color//*[ gradient ](/docs/reference/visualize/gradient//*[ stroke
](/docs/reference/visualize/stroke//*[ pattern
](/docs/reference/visualize/pattern//*[ dictionary
](/docs/reference/foundations/dictionary/)*/ excl.  quest/*[ length
](/docs/reference/layout/length/)*/xtinguisher /*[ relative
](/docs/reference/layout/relative/)*/ð  ` face.  grin  `/*[ none
](/docs/reference/foundations/none//*[ auto
](/docs/reference/foundations/auto/)*/guish  `
  - /*[ length
](/docs/reference/layout/length/)*/e.  bandage  /*[ bool
](/docs/reference/foundations/bool/)*/ce.  blank  `/*[ length
](/docs/reference/layout/length//*[ str ](/docs/reference/foundations/str/)*/rn  `
  - ð /*[ length ](/docs/reference/layout/length//*[ str
](/docs/reference/foundations/str/)*/­  ` fac/*[ str
](/docs/reference/foundations/str/)*/le  `
  - ð/*[ none
](/docs/reference/foundations/none//*[ str ](/docs/reference/foundations/str/)*/disguise  `/*[ auto ](/docs/reference/foundations/auto//*[ str
](/docs/reference/foundations/str/)*/tted  `
/*[ auto
](/docs/reference/foundations/auto//*[ direction
](/docs/reference/layout/direction/)*/`
  - ð¤¯  ` /*[ auto
](/docs/reference/foundations/auto//*[ bool
](/docs/reference/foundations/bool/)*/¨  ` fac/*[ dictionary
](/docs/reference/foundations/dictionary/)*/  ` face.  f/*[ bool
](/docs/reference/foundations/bool/)*/  ` face.  frow/*[ bool
](/docs/reference/foundations/bool/)*/ - ð£  ` face.  /*[ none
](/docs/reference/foundations/none//*[ int ](/docs/reference/foundations/int//*[ array ](/docs/reference/foundations/array/)*/ ð¥°  ` face./*[ bool
](/docs/reference/foundations/bool/)*/ð¤  ` face.  hug  `
  - ð/*[ bool
](/docs/reference/foundations/bool/)*/ `
  - ð  ` face.  kis/*[ bool
](/docs/reference/foundations/bool/)*/ ð  ` face.  /*[ auto
](/docs/reference/foundations/auto//*[ str ](/docs/reference/foundations/str/)*/ ð¤¥  ` face.  l/*[ auto ](/docs/reference/foundations/auto//*[ str
](/docs/reference/foundations/str/)*/  `
  - ð¤  ` f/*[ bool
](/docs/reference/foundations/bool/)*/`
  - ð¤¢  ` /*[ bool
](/docs/reference/foundations/bool/)*/
  - ð  ` /*[ array
](/docs/reference/foundations/array//*[ dictionary
](/docs/reference/foundations/dictionary/)*//*[ content
](/docs/reference/foundations/content/)*//*[ str
](/docs/reference/foundations/str/)*/ ð /*[ content ](/docs/reference/foundations/content/)*/ ð±  ` face/*[ str ](/docs/reference/foundations/str/)*/ /*[ array
](/docs/reference/foundations/array/)*/  sleep  `
  - ðª  ` face.  sleepy  `
  - ð  ` face.  smile  `
  - ð  ` face.  smile.  slight  `
  - ð  ` face.  smile.  sweat  `
  - ð¥²  ` face.  smile.  tear  `
  - ð  ` face.  smirk  `
  - ð¤§  ` face.  sneeze  `
  - ð«¢  ` face.  speak.  not  `
  - ð  ` face.  squint  `
  - ð¤©  ` face.  stars  `
  - ð  ` face.  straight  `
  - ð  ` face.  suffer  `
  - ð¯  ` face.  surprise  `
  - ð¤¬  ` face.  symbols  `
  - ð¢  ` face.  tear  `
  - ð¥  ` face.  tear.  relief  `
  - ð¥¹  ` face.  tear.  withheld  `
  - ð¬  ` face.  teeth  `
  - ð¤  ` face.  think  `
  - ð«©  ` face.  tired  `
  - ð  ` face.  tongue  `
  - ð  ` face.  tongue.  squint  `
  - ð  ` face.  tongue.  wink  `
  - ð¤  ` face.  triumph  `
  - ð  ` face.  unhappy  `
  - ð¤®  ` face.  vomit  `
  - ð©  ` face.  weary  `
  - ð  ` face.  wink  `
  - ð¥´  ` face.  woozy  `
  - ð  ` face.  worry  `
  - ð®  ` face.  wow  `
  - ð¥±  ` face.  yawn  `
  - ð¤  ` face.  zip  `
  - ð­  ` factory  `
  - ð§  ` fairy  `
  - â  ` faith.  christ  `
  - â¸  ` faith.  dharma  `
  - âª  ` faith.  islam  `
  - â¡  ` faith.  judaism  `
  - ð  ` faith.  menorah  `
  - ð  ` faith.  om  `
  - â¦  ` faith.  orthodox  `
  - â®  ` faith.  peace  `
  - ð¯  ` faith.  star.  dot  `
  - ð  ` faith.  worship  `
  - â¯  ` faith.  yinyang  `
  - ð§  ` falafel  `
  - ðª  ` family  `
  - ð  ` fax  `
  - ðª¶  ` feather  `
  - ð¤±  ` feeding.  breast  `
  - ð¤º  ` fencing  `
  - ð¡  ` ferriswheel  `
  - ð  ` filebox  `
  - ð  ` filedividers  `
  - ð  ` film  `
  - ð  ` finger.  r  `
  - ð  ` finger.  l  `
  - ð  ` finger.  t  `/*[Preview](/assets/docs/yZSlTN4UXKYq5EjwCcVgvwAAAAAAAAAA.png)*/- ð«µ  ` finger./*[ bool ](/docs/reference/foundations/bool/)*/«  ` fingerprint  `
  - ð¤  ` fingers.  cross  `
  - ð¤  ` fingers.  pinch  `
  - ð«°  ` fingers.  snap  `
  - ð¥  ` fire  `
  - ð§¨  ` firecracker  `
  - ð  ` fireengine  `
  - ð  ` fireworks  `
  - ð  ` fish  `
  - ð  ` fish.  tropical  `
  - ð£  ` fishing  `
  - ð  ` fist.  front  `
  - ð¤  ` fist.  r  `
  - ð¤  ` fist.  l  `
  - â  ` fist.  raised  `
  - ð´  ` flag.  black  `
  - ð³  ` flag.  white  `
  - ð  ` flag.  goal  `
  - â³  ` flag.  golf  `
  - ð©  ` flag.  red  `
  - ð  ` flags.  jp.  crossed  `
  - ð¦©  ` flamingo  `
  - ð¦  ` flashlight  `
  - ð«  ` flatbread  `
  - â  ` fleur  `
  - ð¾  ` floppy  `
  - ðº  ` flower.  hibiscus  `
  - ðª·  ` flower.  lotus  `
  - ð¸  ` flower.  pink  `
  - ð¹  ` flower.  rose  `
  - ð»  ` flower.  sun/*[Preview](/assets/docs/sa8VqsYbdClSlqi08qJyhAAAAAAAAAAA.png)*/  `
  - ð¥  /*[ str ](/docs/reference/foundations/str/)*/ yellow  `
  - ðª°  ` fly  `
  - ð«  ` fog  `
  - ð  ` folder  `
  - ð  ` folder.  open  `
  - ð«  ` fondue  `
  - ð¦¶  ` foot  `
  - â½  ` football  `
  - ð  ` football.  am  `
  - ð±  ` forex  `
  - â²  ` fountain  `
  - ð¦  ` fox  `
  - ð  ` free  `
  - ð  ` fries  `
  - ð¥  ` frisbee  `
  - ð¸  ` frog.  face  `
  - â½  ` fuelpump  `
  - ð§  ` garlic  `
  - â  ` gear  `
  - ð  ` gem  `
  - ð§  ` genie  `
  - ð»  ` ghost  `
  - ð¦  ` giraffe  `
  - ð§  ` girl  `
  - ð¥  ` glass.  clink  `
  - ð¥  ` glass.  milk  `
  - ð«  ` glass.  pour  `
  - ð¥  /*[ emph
](/docs/reference/model/emph/ "emph")*/  - ð¶  ` glasses.  sun  `
  - ð  ` globe.  am  `
  - ð  ` globe.  as.  au  `
  - ð  ` globe.  eu.  af  `
  - ð  ` globe.  meridian  `
  - ð§¤  ` gloves  `
  - ð¥  ` goal  `
  - ð  ` goat  `
  - ð¥½  ` goggles  `
  - ð  ` golfing  `
  - ð¦  ` gorilla  `
  - ð  ` grapes  `
  - ð  ` guard.  man  `
  - ð¸  ` guitar  `
  - ð¤¸  ` gymnastics  `
  - ð  ` haircut  `
  - ð¨  ` hammer  `
  - â  ` hammer.  pick  `
  - ð  ` hammer.  wrench  `
  - ðª¬  ` hamsa  `
  - ð¹  ` hamster.  face  `
  - â  ` hand.  raised  `
 /*[Preview](/assets/docs/S5xaZcVoGLtnT_0XwbPSUQAAAAAAAAAA.png)*/- ð«²  ` hand./*[ int ](/docs/reference/foundations/int/)*/`/*[ str
](/docs/reference/foundations/str/)*/ ð¤  ` hand.  call  `
  - ð¤  ` hand.  love  `
  - ð  ` hand.  part  `
  - â  ` hand.  peace  `
  - ð¤  ` hand.  pinch  `
  - ð¤  ` hand.  rock  `
  - ð  ` hand.  splay  `
  - ð  ` hand.  wave  `
  - â  ` hand.  write  `
  - ð  ` handbag  `
  - ð¤¾  ` handball  `
  - ð¬  ` handholding.  man.  man  `
  - ð«  ` handholding.  woman.  man  `
  - ð­  ` handholding.  woman.  woman  `
  - ð  ` hands.  fo/*[
strong ](/docs/reference/model/strong/ "strong")*/ands.  clap  `
  - ð«¶  ` hands.  heart  `
  - ð  ` hands.  open  `
  - ð  ` hands.  raised  `
  - ð¤  ` hands.  shake  `
  - ðª  ` harp  `
  - #  ` hash  `
  - ð  ` hat.  ribbon  `
  - ð©  ` hat.  top  `
  - ð§  ` headphone  `
  - â¤  ` heart  `
  - ð  ` heart.  arrow  `
  - ð  ` heart.  beat  `
  - ð¤  ` heart.  black  `
  - ð  ` heart.  blue  `
  - ð  ` heart.  box  `
  - ð  ` heart.  broken  `
  - ð¤  ` heart.  brown  `
  - ð  ` heart.  double  `
  - â£  ` heart.  excl  `
  - ð  ` heart.  green  `
  - ð  ` heart.  grow  `
  - ð§¡  ` heart.  orange  `
  - ð  ` heart.  purple  `
  - ð«  ` heart.  real  `
  - ð  ` heart.  revolve  `
  - ð  ` heart.  ribbon  `
  - ð  ` heart.  spark  `
  - ð¤  ` heart.  white  `
  - ð  ` heart.  yellow  `
  - ð¦  ` hedgehog  `
  - ð  ` helicopter  `
  - ð§¬  ` hel/*[Preview](/assets/docs/HLYJEJyYVhBAwk1NcGJZjQAAAAAAAAAA.png)*/tary  `
  - ð¦/*[ ratio ](/docs/reference/layout/ratio/)*/³  ` hole  `
  - ð¯  ` honey  `
  - ð§§  ` hongbao  `
  - ðª  ` hook  `
  - ð¯  ` horn.  postal  `
  - ð  ` horse  `
  - ð  ` horse.  carousel  `
  - ð´  ` horse.  face  `
  - ð  ` horse.  race  `
  - ð¥  ` hospital  `
  - ð­  ` hotdog  `
  - ð¨  ` hotel  `
  - ð©  ` hotel.  love  `
  - â¨  ` hotspring  `
  - â  ` hourglass  `
  - â³  ` hourglass.  flow  `
  - ð  ` house  `
  - ð  ` house.  derelict  `
  - ð¡  ` house.  garden  `
  - ð  ` house.  multiple  `
  - ð¯  `/*[ ` tracking `
](/docs/reference/text/text/#parameters-tracking)*/ecream  `
  - ð§  ` icecream.  shaved  `
  - ð¦  ` icecream.  soft  `
  - ð  ` icehockey  `
  - ð  ` id  `
  - â¹  ` info  `
  - ð®  ` izakaya  `
  - ð«  ` jar /*[Preview](/assets/docs/QhcCPECtjtdl-HaT2kdIoQAAAAAAAAAA.png)*/ystick  `
  -/*[ length ](/docs/reference/layout/length/)*/  - ð  ` kaaba  `
  - ð  ` kadomatsu  `
  - ð¦  ` kangaroo  `
  - ð·  ` gachi  `
  - ð´  ` go  `
  - ã  ` hi  `
  - ð  ` ka  `
  - ð¹  ` kachi  `
  - ð³  ` kara  `
  - ð²  ` kon  `
  - ð¨  ` man  `
  - ð¹  ` man.  box  `
  - ð¤´  ` man.  crown  `
  - ð²  ` man.  guapimao  `
  - ð´  ` man.  levitate  `
  - ð´  ` man.  old  `
  - ð«  ` man.  pregnant  `
  - ð³  ` man.  turban  `
  - ð¤µ  ` man.  tuxedo  `
  - ð  ` muryo  `
  - ð¸  ` shin  `/*[Preview](/assets/docs/blheA65DgOU1lkslOoHidgAAAAAAAAAA.png)*/ - ð¯  ` yu/*[ color ](/docs/reference/visualize/color/)*/ /*[ gradient
](/docs/reference/visualize/gradient/)*//*[ pattern
](/docs/reference/visualize/pattern/)*/keyboard  `
  - ð  ` kiss  `
  - ð  ` kissmark  `
  - ðª  ` kite  `
  - ð¥  ` kiwi  `
  - ðª  ` knife  `
  - ð¡  ` knife.  dagger  `
  - ðª¢  ` knot  `
  - ð¨  ` koala  `
  - ð  ` koinobori  `
  - ð·  ` label  `
  - ð¥  ` lacrosse  `
  - ðª  ` ladder  `
  - ðª  `/*[Preview](/assets/docs/hjdTrz3B1HnAtRXCRTTtGAAAAAAAAAAA.png)*/  ` ab  `
  /*[ none ](/docs/reference/foundations/none/)*/`/*[ length
](/docs/reference/layout/length/)*/ /*[ color
](/docs/reference/visualize/color/)*/ /*[ gradient
](/docs/reference/visualize/gradient/)*/ð/*[ stroke
](/docs/reference/visualize/stroke/)*/d/*[ pattern
](/docs/reference/visualize/pattern/)*/`/*[ dictionary
](/docs/reference/foundations/dictionary/)*/  ` leopard  `
  - ð  ` letter.  love  `
  - ð½  ` liberty  `
  - ð¡  ` lightbulb  `
  - â¡  ` lightning  `
  - ð¦  ` lion  `
  - ð  ` lipstick  `
  - ð®  ` litter  `
  - ð¯  ` litter.  not  `
  - ð¦  ` lizard  `
  - ð¦  ` llama  `
  - ð¦  ` lobster  `/*[Preview](/assets/docs/9XI8EQ1M6rOusSDRRIbaPQAAAAAAAAAA.png)*/ock.  open  `
  -/*[ length ](/docs/reference/layout/length/)*/p  `
  - ð§´  ` lotion  `
  - ð§³  ` luggage  `
  - ð«  ` lungs  `
  - ð§  ` mage  `
  - ð§²  ` magnet  `
  - ð  ` magnify.  r  `
  - ð  ` magnify.  l  `
  - ð  ` mahjong.  dragon.  red  `
  - â  ` mail  `
  - ð©  ` mail.  arrow  `
  - ðª  ` mailbox.  closed.  empty  `
  - ð«  ` mailbox.  closed./*[Preview](/assets/docs/_W5ZMMvgiXlv5B8vI6sbcQAAAAAAAAAA.png)*/mailbox.  open. /*[ relative ](/docs/reference/layout/relative/)*/ngo  `
  - ðº  ` map.  world  `
  - ð¾  ` map.  jp  `
  - ð¥  ` martialarts  `
  - ð­  ` masks  `
  - ð§  ` mate  `
  - ðª  ` matryoshka  `
  - ð¥©  ` meat  `
  - ð  ` meat.  bone  `
  - ð¥  ` medal.  first  `
  - ð¥  ` medal.  second  `
  - ð¥  ` medal.  third  `
  - ð  ` medal.  sports  `
  - ð  ` medal.  military  `
  /*[ ` tracking ` ](/docs/reference/text/text/#parameters-
tracking)*/  ` melon  `
  - ð§  ` merperson  `
  - â  ` metro  `
  - ð¦  ` microbe  `
  - ð¤  ` microphone  `
  - ð  ` microphone.  studio  `
  - ð¬  ` microscope  `
  - /*[Preview](/assets/docs/NLatl7xe_PftXpK8eI1WSgAAAAAAAAAA.png)*/ `
  - ð°  ` money.  bag/*[ none ](/docs/reference/foundations/none/)*/ /*[ auto
](/docs/reference/foundations/auto/)*/  `
  - ð´  ` money.  yen  `
  - ð¸  ` money.  wings  `
  - ð  ` monkey  `
  - ðµ  ` monkey.  face  `
  - ð  ` monkey.  hear.  not  `
  - ð  ` monkey.  see.  not  `
  - ð  ` monkey.  speak.  not  `
  - ð  ` moon.  crescent  `
  - ð  ` moon.  full  `
  - ð  ` moon.  full.  face  `
  - ð  ` moon.  new  `
  - ð  ` moon.  new.  face  `
  - ð  ` moon.  wane.  one  `
  - ð  ` moon.  wane.  two  `
  - ð/*[Preview](/assets/docs/VxUeM1bvsLzygleocZmQUAAAAAAAAAAA.png)*/three  `
  - ð/*[ length ](/docs/reference/layout/length/)*/ wax.  two  `
  - ð  ` moon.  wax.  two.  face  `
  - ð  ` moon.  wax.  three  `
  - ð  ` mortarboard  `
  - ð  ` mosque  `
  - ð¦  ` mosquito  `
  - ð  ` motorcycle  `
  - ð£  ` motorway  `
  - â°  ` mountain  `
  - ð»  ` mountain.  fuji  `
  - ð  ` mountain.  snow  `
  -/*[Preview](/assets/docs/Kc1E9Ts9m1i30dvtf5ymQgAAAAAAAAAA.png)*/  ` mouse.  face /*[ bool ](/docs/reference/foundations/bool/)*/th  `
  - ð«¦  ` mouth.  bite  `
  - ð¿  ` moyai  `
  - ð  ` museum  `
  - ð  ` mushroom  `
  - ð¼  ` musicalscore  `
  - ð  ` nails.  polish  `
  - ð  ` namebadge  `
  - ð§¿  ` nazar  `
  - ð  ` necktie  `
  - ðª¡  ` needle  `
  - ðª¹  ` nest.  empty  `
  - ðªº  ` nest.  eggs  `
  - ð  ` new  `
  - ð°  ` newspaper  `
  - ð  ` newspaper.  rolled  `
  - ð  ` ng  `
  - ð  ` ningyo  `
  - ð¥·  ` ninja  `
  - â  ` noentry  `
  - ð  ` nose  `
  - ð  ` notebook  `
  - ð  ` notebook.  deco  `
  - ð  ` notepad  `
  - ðµ  ` notes  `
  - ð¶  ` notes.  triple  `
  - ð¢  ` numbers  `
  - ð  ` octopus  `
  - ð¢  ` office  `
  - ð¢  ` oil  `
  - ð  ` ok  `
  -/*[Preview](/assets/docs/MnBRs6VvAtjUYVDK-btjfgAAAAAAAAAA.png)*/ ð¦§  ` oranguta/*[ length ](/docs/reference/layout/length/)*/ /*[ str
](/docs/reference/foundations/str/)*/
  - ð¦  ` package  `
  - ð¥  ` paella  `
  - ð  ` page  `
  - ð  ` page.  curl  `
  - ð  ` page.  pencil  `
  - ð  ` pager  `
  - ð  ` pages.  tabs  `
  - ð¼  ` painting  `
  - ð¨  ` palette  `
  - ð¥  ` pancakes  `
  - ð¼  ` panda  `
  - ðª  ` parachute  `
  - ð  ` park  `
  - ð ¿  ` parking  `
  - ð¦  ` parrot  `
  - ã½  ` partalteration  `
  - ð  ` party  `
  - ð  ` peach  `
  - ð¦  ` peacock  `
  - ð¥  ` peanuts  `
  - ð  ` pear  `
  - ð¶  ` pedestrian  `
  - ð·  ` pedestrian.  not  `
  - ð  ` pen.  ball  `
  - ð  ` pen.  fountain  `
  - â  ` pencil  `
  - ð§  ` penguin  `
  - ð«  ` pepper  `
  - ð¶  ` pepper.  hot  `
  - ð§  ` person  `
  - ð  ` person.  angry  `
  - ð§  ` person.  beard  `
  - ð±  ` person.  blonde  `
  - ð  ` person.  bow  `
  - ð«  ` person.  crown  `
  - ð§  ` person.  deaf  `
  - ð¤¦  ` person.  facepalm  `
  - ð  ` person.  frown  `
  - ð§ /*[Preview](/assets/docs/LDeMc2Iiqb_9L3aj1lNrpgAAAAAAAAAA.png)*/ ` person.  lotus  `/*[ length ](/docs/reference/layout/length/)*/`/*[ str
](/docs/reference/foundations/str/)*/`
  - ð§  ` person.  old  `
  - ð«  ` person.  pregnant  `
  - ð  ` person.  raise  `
  - ð  ` person.  sassy  `
  - ð¤·  ` person.  shrug  `
  - ð§  ` person.  stand  `
  - ð§  ` person.  steam  `
  - ð§«  ` petri  `
  - ð±  ` phone  `
  - ð²  ` phone.  arrow  `
  - â  ` phone.  classic  `
  - ðµ  ` phone.  not  `
  - ð´  ` phone.  off  `
  - ð  ` phone.  receiver  `
  - ð¶  ` phone.  signal  `
  - ð³  ` phone.  vibrate  `
  - ð¹  ` piano  `
  - â  ` pick  `
  - ð¥§  ` pie  `
  - ð  ` pig  `
  - ð·  ` pig.  face  `
  - ð½  ` pig.  nose  `
  - ð  ` pill  `
  - ð  ` pin  `
  - ð  ` pin.  round  `
  - ðª  ` pinata  `
  - ð  ` pineapple  `
  - ð  ` pingpong  `
  - ð«  ` pistol  `
  - ð  ` pizza  `
  -/*![Copy](/assets/icons/16-copy.svg)*/anet  `
  - ðª´/*[P/*![Copy](/assets/icons/16-copy.svg)*/-bDPX7pEQAAAA/*![Copy](/assets/icons/16-copy.svg)*/](/docs/*![](/assets/icons/16-close.svg)*/k.  eject  `
  - â©  ` playback.  forward  `
  - â¸  ` playback.  pause  `
  - âº  ` playback.  record  `
  - ð  ` pla/*[ ISO 639-1/*![â](/assets/icons/16-arrow-right.svg)*/ia.org/wiki/ISO_639)*/layback.  repeat.  v  `
  - â®  ` playback.  restart  `
  - âª  ` pl/*![Docs](/assets/icons/16-docs-dark.svg)*/.  shuffle/*![](/assets/icons/16-arrow-right.svg)*/ â¹  ` playback.  stop  `
  - â¯  `/*![](/assets/icons/16-arrow-right.svg)*/text/smartquote/)*/- ð´  ` playingc/*![](/assets/icons/16-arrow-right.svg)*/rd.  joker  `
  - ðª  ` plunger  `
  - ð®  ` policeofficer  `
  - ð©  ` poo  `
  - ð¿  ` popcorn  `
  - ð¤  ` post.  eu  `
  - ð£  ` post.  jp  `
  - ð®  ` postbox  `
  - ð¥  ` potato  `
  - ð  ` potato.  sw/*[Preview](/assets/docs/pV_uneCLTlX_ftfk4ZJI1QAAAAAAAAAA.png)*/  ` present  `/*[ none ](/docs/reference/foundations/none/)*/ /*[ str
](/docs/reference/foundations/str/)*/ ` prints.  paw  `
  - ð«  ` prohibited  `
  - ð½  ` projector  `
  - ð  ` pumpkin.  lantern  `
  - ð  ` purse  `
 /*[ ISO 3166-1 alpha-2 region code.
](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)*/it.  face  `
  - ð¦  ` raccoon  `
  - ð»  ` radio  `
  - â¢  ` radioactive  `
  - ð¤  ` railway /*[ auto ](/docs/reference/foundations/auto/)*/`/*[ str
](/docs/reference/foundations/str/)*/  - ð§¾  ` receipt  `
  - â»  ` recycling  `
  - Â®  ` reg  `
  - ð»  ` restroom  `
  - ð¦  ` rhino  `
  - ð  ` ribbon  `
  - ð  ` ribbon.  remind  `
  - ð  ` rice  `
  - ð  ` rice.  cracker  `
  - ð¾  ` rice.  ear  `
  - ð  ` rice.  onigiri  `
  - ð  ` ring  `
  - ð  ` ringbuoy  `
  - ð¤  ` robot  `
  - ðª¨  ` rock  `
  - ð  ` rocket  `
  - ð¢  ` rollercoaster  `
  - ðµ  ` rosette  `
  - ð/*![](/assets/icons/16-arrow-right.svg)*/- ð  ` ruler.  triangle  `
  - ð  ` running  `
  - ð§·  ` safetypin  `
  - ð¦º  ` sa/*![Preview](/assets/docs/eGuJ4coPHcIbozTvGKvULAAAAAAAAAAA.png)*/  ` salt  `
  - ð¥ª  ` sandwich  `
  - ð  ` santa.  man  `
  - ð¤¶  ` santa.  woman  `
  - ð¡  ` satdish  `
  - ð°  ` satellite  `
  - ðª  ` saw  `
  - ð·  ` saxophone  `
  - â  ` scales  `
  - ð§£  ` scarf  `
  - ð«  ` school  `
  - â  ` scissors  `
  - ð´  ` scooter  `
  - ðµ  ` scooter.  motor  `
  - ð¦  ` scorpion  `
  - ðª  ` screwdriver  `
 /*[Preview](/assets/docs/IJovpbe1c5rRr9DM_KRhvgAAAAAAAAAA.png)*/
  - ð±  `/*[ auto ](/docs/reference/foundations/auto/)*/ /*[ direction
](/docs/reference/layout/direction/)*/¡  ` shield  `
  - ð¢  ` ship  `
  - ð³  ` ship.  cruise  `
  - â´  ` ship.  ferry  `
  - ð½  ` shirt.  sports  `
  - ð  ` shirt.  t  `
  - ð  ` shoe  `
  - ð©°  ` shoe.  ballet  `
  - ð¥¿  ` shoe.  flat  `
  - ð  ` shoe.  heel  `
  - ð¥¾  ` shoe.  hike  `
  - â¸  ` shoe.  ice  `
  - ð¼  ` shoe.  roller  `
  - ð¡  ` shoe.  sandal.  heel  `
  - /*![â](/assets/icons/16-arrow-right.svg)*/ sneaker  `
  - ð¢  ` shoe.  tall  `
  /*[ text language ]/*![â](/assets/icons/16-arrow-right.svg)*/ang)*/ shorts  `
  - ð°  ` shoshinsha  `
  - ðª  ` shovel  `
  - ð¿  ` shower  `
  - ð¦/*![Docs](/assets/icons/16-docs-dark.svg)*/ed  `
  - /*![](/assets/icons/16-arrow-right.svg/*[Preview](/assets/docs/6iCMWj0AW9bSFKBJ48tdiwAAAAAAAAAA.png)*/ `
  - ð¥  ` silhouette.  double  `
  - ð«  ` silhouette.  hug  `
  - ð£  ` silhouette.  speak  `
  - ð¨  ` siren  `
  - ð¹  ` skateboard  `
  - ð¡  ` skewer.  dango  `
  - ð¢  ` skewer.  oden  `
  - â·  ` skiing  `
  - ð  ` skull  `
  - â  ` skull.  bones  `
  - ð¦¨  ` skunk  `
  - ð·  ` sled  `
  - ð/*[ Forum
](https://forum.typst.app/)*/*[ Discord server
](https://discord.gg/2uDybryKPe)*/  ` /*[ contact form
](https://typst.app/contact)*/nowboarding  `
  - â  ` snowflake  `
  - â  ` snowman  `
  - â  ` snowman.  snow  `
  - ð§¼  ` soap  `
  - ð§¦  ` socks  `
  -/*[Preview](/assets/docs/KrWAMeKAPNsts-l34CremAAAAAAAAAAA.png)*/  - ð/*![Preview](/assets/docs/TE1TKvqGw3ajR6jn3phXugAAAAAAAAAA.png)*//*[ bool
](/docs/reference/foundations/bool/)*/  ` speaker  `
  - ð  ` speaker.  not  `
  - ð  ` speaker.  wave  `
  - ð  ` speaker.  waves  `
  - ð·  ` spider  `
  - ð¸  ` spiderweb  `
  - ð¥¬  ` spinach  `
  - ð«  ` splatter  `
  - ð§½  ` sponge  `
  - ð¥  ` spoon  `
  - â¬  ` square.  blac/*[ text language ](/docs/reference/text/text/#parameters-lang)*/black.  small  `
  - â¼  ` square.  black.  medium  `
  - â¬  ` square.  white  `
  - â«  ` square.  white.  tiny  `
  - â½  ` square.  white.  small  `
  - â»  ` square.  white.  medium  `
  - ð¦  ` square.  blue  `
  - ð«  ` square.  brown  `
  - ð©  ` square.  green  `
  - ð§  ` square.  orange  `
  - ðª  ` square.  purple  `
  - ð¥  ` square.  red  `
  - ð¨  ` square.  yellow  `
  - ð¦/*[Preview](/assets/docs/4Pafis8Dv1GSWE8dIkAx2wAAAAAAAAAA.png)*/«  ` star.  /*[ dictionary ](/docs/reference/foundations/dictionary/)*/  `
  - ð  ` star.  shoot  `
  - ð©º  ` stethoscope  `
  - ð¬  ` store.  big  `
  - ðª  ` store.  small  `
  - ð  ` strawberry  `
  - â£  ` suit.  club  `
  - â¦  ` suit.  diamond  `
  - â¥  ` suit.  heart  `
  - â  ` suit.  spade  `
  - â  ` sun  `
  - ð¤  ` sun.  cloud  `
  - ð  ` sun.  face  `
  - ð  ` sunrise  `
  - ð¦¸  ` superhero  `
  - ð¦¹  ` supervillain  `
  - ð  ` surfing  `
  - ð£  ` sushi  `
  - ð¦¢  ` swan  `
  - ð  ` swimming  `
  - ð©±  ` swimsuit  `
  - â  ` swords  `
  - ð£  ` symbols  `
  - ð  ` synagogue  `
  - ð  ` syringe  `
  - ð®  ` taco  `
  - ð¥¡  ` /*![â](/assets/icons/16-arrow-right.svg)*/  ` tanabata  `
  - ð  ` tangerine  `
  - ð°  ` tap/*![â](/assets/icons/16-arrow-right.svg)*/ taxi  `
  - ð  ` taxi.  front  `
  - ðµ  ` teacup  `
  - ð«  ` teapot  `
  - ð§¸  ` tedd/*![Docs](/assets/icons/16-docs-dark.svg)*/ ` temple  `
  - ð  ` ten  `
  - ðº  ` tengu  `
  - ð¾  ` tennis  `
  - âº  ` tent  `
  - ð§ª  ` testtube  `
  - ð¡  ` thermometer  `
  - ð§µ  ` thread  `
  - ð  ` thumb.  up  `
  - ð  ` thumb.  down  `
  - ð  ` ticket.  event  `
  - ð«  ` ticket.  travel  `
  - ð  ` tiger  `
  - ð¯  ` tiger.  face  `
  - â¢  ` tm  `
  - ð½  ` toilet  `
  - ð§»  ` toiletpaper  `
  - ð  ` tomato  `
  - ðª¦  ` tombstone  `
  - ð  ` tongue  `
  - ð§°  ` toolbox  `
  - ð¦·  ` tooth  `
  - ðª¥  ` toothbrush  `
  - ðª  ` tornado  `
  - ð¼  ` tower.  tokyo  `
  - ð²  ` trackball  `
  - ð  ` tractor  `
  - ð¦  ` trafficlight.  v  `
  - ð¥  ` trafficlight.  h  `
  - ð  ` train  `
  - ð  ` train.  car  `
  - ð  ` train.  light  `
  - ð  ` train.  metro  `
  - ð  ` train.  mono  `
  - ð  ` train.  mountain  `
  - ð  ` train.  speed  `
  - ð  ` train.  speed.  bullet  `
  - ð  ` train.  steam  `
  - ð  ` train.  stop  `
  - ð  ` train.  suspend  `
  - ð  ` train.  tram  `
  - ð/*![â](/assets/icons/16-arrow-right.svg)*/Yrnv50nAAAAAAAAAAA.png)*/  ` tray.  inbox/*[ bool ]/*![â](/assets/icons/16-arrow-right.svg)*/y.  outbox  `
  - ð³  ` tree.  deciduous  `
  - ð²  ` tree.  evergreen  `
  - ðª¾  ` tree.  lea/*![Docs](/assets/icons/16-docs-dark.svg)*/ ð  ` tree.  xmas  `
  - â¶  ` triangle.  r  `
  - â  ` triangle.  l  `
  - ð¼  ` triangle.  t  `
  - ð½  ` triangle.  b  `
  - ðº  ` triangle.  t.  red  `
  - ð»  ` triangle.  b.  red  `
  - ð±  ` trident  `
  - ð§  ` troll  `
  - ð  ` trophy  `
  - ð  ` truck  `
  - ð  ` truck.  trailer  `
  - ðº  ` trumpet  `
  - ð  ` tsukimi  `
  - ð¦  ` turkey  `
  - ð¢  ` turtle  `
  - ðº  ` tv  `
  - ð¸  ` ufo  `
  - â  ` umbrella.  open  `
  - ð  ` umbrella.  c/*[Preview](/assets/docs/7Gj4TjnwP0QfSOeJi7dKdAAAAAAAAAAA.png)*/ sun  `
  - ð¦  `/*[ bool ](/docs/reference/foundations/bool/)*/  ` up  `
  - â±  ` urn  `
  - ð§  ` vampire  `
  - ð»  ` violin  `
  - ð  ` volcano  `
  - ð  ` volleyball  `
  - ð  ` vs  `
  - ð§  ` waffle  `
  - ðª  ` wand  `
  - â  ` warning  `
  - â  ` watch  `
  - â±  ` watch.  stop  `
  - ð  ` watermelon  `
  - ð¤½  ` waterpolo  `
  - ð  ` wave  `
  - ð¾  ` wc  `
  - ð  ` weightlifting  `
  - ð  ` whale  `
  - ð³  ` whale.  spout  `
  - ð  ` wheel  `
  - ð¦½  ` wheelchair  `
  - â¿  ` wheelchair.  box  `
  - ð¦¼  ` wheelchair.  motor  `
  - ð¬  ` wind  `
  - /*[Preview](/assets/docs/I0B88ggX_x3jq5W1mvWVIgAAAAAAAAAA.png)*/ `
  - ðº  ` wolf  `/*[ none ](/docs/reference/foundations/none/)*/o/*[ int
](/docs/reference/foundations/int/)*/µ/*[ array
](/docs/reference/foundations/array/)*/nt  `
  - ðªµ  ` wood  `
  - ðª±  ` worm  `
  - ð§  ` wrench  `
  - ð¤¼  ` wrestling  `
  - ð©»  ` xray  `
  - ð§¶  ` yarn  `
  - ðª  ` yoyo  `
  - ð¦  ` zebra  `
  - â  ` zodiac.  aquarius  `
  - â  ` zodiac.  aries  `
  - â  ` zodiac.  cancer  `
  - â  ` zodiac.  capri  `
  - â  ` zodiac.  gemini  `
  - â  ` zodiac.  leo/*![](/assets/icons/16-arrow-right.svg)*/â  ` zodiac.  ophi  `
  - â  ` zodiac.  pisces  `
  - â  ` zodiac.  sagit  `
  - â  ` zodiac.  scorpio  `
  - â  ` zodiac.  taurus  `
  - â  ` zodiac.  virgo  `
  - ð§  ` zombie  `
  - ð¤  ` zzz  `
/*![Preview](/assets/docs/yZSlTN4UXKYq5EjwCcVgvwAAAAAAAAAA.png)*/` \u  {  } ` ![Copy](/assets/icons/16-copy.svg)

Shorthand: ` ` ![Copy](/assets/icons/16-copy.svg)

Accent:  ![](/assets/icons/16-close.svg)

LaTeX/*[Preview](/assets/docs/W4bB6oEym3iwH_NdeQRsEAAAAAAAAAAA.png)*/ht.svg) General  P/*[ bool ](/docs/reference/foundations/bool/)*//) [ ![â](/assets/icons/16-arrow-right.svg) Symbol  Next page  ](/docs/reference/symbols/symbol/)



= *docs/reference/text/sub.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Text ](/docs/reference/text/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Subscript ](/docs/reference/text/sub/)

=  /*![](/assets/icons/16-arrow-right.svg)*/nt functions can be customized with ` set ` and  ` show ` rules.

Renders text in subscript.

The text i/*[Preview](/assets/docs/IQnLFKoKsoxRyhR3pSbfiwAAAAAAAAAA.png)*/

    
    
    Revenue#sub[year/*[ bool ](/docs/reference/foundations/bool/)*/LKPuJFIogqIMwAAAAAAAAAA.png)

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

sub  (

typographic  :  [ bool ](/docs/reference/foundations/bool/) ,  baseline  :  [
length ](/docs/reference/layout/length/) ,  size  :  [ le/*[ bool ](/docs/reference/foundations/bool/)*/ content
](/docs/reference/foundations/content/) ,

)  -> [ content ](/docs/reference/foundations/content/)

===  ` typographic `

[ bool ](/docs/reference/foundations/bool/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function/*[ auto ](/docs/reference/foundations/auto/)*/e/*[ str
](/docs/reference/foundations/str/)*/nt.

If this is enabled, Typst first tries to transform the text to subscript
codepoints. If that fails, it falls back to rendering lowered and shrunk
normal letters.

Default: ` true  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    N#sub(typographic: true)[1]
    N#sub(typographic: false)[1]
    

![Preview](/assets/docs/eGuJ4coPHcIboz/*![](/assets/icons/16-arrow-right.svg)*/ine `

[ length ](/docs/reference/layout/length/)

Settable

Question mark

Settable parameters can be customized for all following uses of the fu/*![Preview](/asset/*[Preview](/assets/docs/bSqE_vffbQfTFgF9cX2J6AAAAAAAAAAA.png)*//*![â](/assets/icons/16-arrow-right.svg)*/ the font has subscript codepoints for the given ` body ` .

Def/*![â](/assets/icons/16-arrow-right.svg)*/I_4pX3UbcVjqxI5_QAAAAAAAAAA.png)*/gth/)

Settable

Ques/*[ auto ](/docs/reference/foundations/auto/)*//*![Docs](/assets/icons/16-docs-dark.svg)*/str/)*/on
with a ` set ` rule.

The font size for synthetic subscripts. Does not apply if ` typographic ` is
true and the font has subscript codepoints for the given ` body ` .

Default: ` 0.6em  `

===  ` body `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The text to display in subscript.

[ ![â](/assets/icons/16-arrow-right.svg) Strikethrough  Previous page
](/docs/reference/text/strike/) [ ![â](/assets/icons/16-arrow-right.svg)
Superscript  Next page  ](/docs/reference/text/super/)



= *docs/reference/text/text.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg/*[Preview](/assets/docs/6iCMWj0AW9bSFKBJ48tdiwAAAAAAAAAA.png)*/16-arrow-right.svg)
 /*[ bool ](/docs/reference/foundations/bool/)*//assets/icons/16-arrow-right.svg)
  - [/*![](/assets/icons/16-arrow-right.svg)*/=  ` text ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

Customizes the look and layout of text in a variety of ways.

This function is used frequently, both with set rules and directly. While the
set rule is often the simpler choice, callin/*[Preview](/assets/docs/NqkvE1KDtvrmSgKJnmfRWwAAAAAAAAAA.png)*/text as an argumen/*[ bool ](/docs/reference/foundations/bool/)*/   
    #set text(18pt)
    With a set rule.
    
    #emph(text(blue)[
      With a function call.
    ])
    

![Preview](/assets/docs/TE1TKvqGw3ajR6jn3phXugAAAAAAAAAA.png)

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

text  (

font  :  [ str ](/docs/reference/foundations/str/) [ array
](/docs/reference/foundations/array/) ,  fallback  :  [ bool
](/docs/reference/found/*![â](/assets/icons/16-arrow-right.svg)*//reference/foundations/str/) ,  weight  :  [ int
](/*[Previ/*![â](/assets/icons/16-arrow-right.svg)*/AAAAAAAAA.png)*/undations/str/)
,/*[ array ](/docs/reference/foundations/array/)*/t/*[ dictio/*![Docs](/assets/icons/16-docs-dark.svg)*/ionary/)*/length/) ,  fill  :  [ color
](/docs/reference/visualize/color/) [ gradient
](/docs/reference/visualize/gradient/) [ pattern
](/docs/reference/visualize/pattern/) ,  stroke  :  [ none
](/docs/reference/foundations/none/) [ length
](/docs/reference/layout/length/) [ color ](/docs/reference/visualize/color/)
[ gradient ](/docs/reference/visualize/gradient/) [ stroke
](/docs/reference/visualize/stroke/) [ pattern
](/docs/reference/visualize/pattern/) [ dictionary
](/docs/reference/foundations/dictionary/) ,  tracking  :  [ le/*[Preview](/assets/docs/YY_AfHqvOwZWtTBzfgDvMwAAAAAAAAAA.png)*/tive
](/docs//*[ c/*![Preview](/assets/docs/blheA65DgOU1lkslOoHidgAAAAAAAAAA.png)*//docs/reference/foundations/none/) [ auto
](/docs/reference/foundations/auto/) ,  baseline  :  [ length
](/docs/reference/layout/length/) ,  overhang  :  [ bool
](/docs/r/*[ str ](/docs/reference/foundations/str/)*/:  [ length
](/docs/reference/layout/length/) [ str ](/docs/reference/foundations/str/) ,
bottom-edge  :  [ /*[ ![â](/assets/icons/16-arrow-right.svg)*/ str
](/docs/reference/foundations/str/) ,  lang  :  [ /*[ ![â](/assets/icons/16-arrow-right.svg)*/ region  :  [ none
](/docs/reference/foundations/none/) [ str ](/docs/reference/foundations/str/*[ ![Docs](/assets/icons/16-docs-dark.svg)*//foundations/auto/) [ str
](/docs/reference/foundati/*[ Reference ](/docs/reference/)*/docs/reference/foundations/auto/) [ directi/*[ Text ](/docs/reference/text/)*/ection/) ,  hyphenate  :  [ auto
](/docs/re/*[ Lowercase ](/docs/reference/text/lower/)*/reference/foundations/bool/) ,  costs  :  [ dictionary
](/docs/reference/foundations/dictionary/) ,  kerning  :  [ bool
](/docs/reference/foundations/bool/*[Preview](/assets/docs/zbgdZcwg4Knc-ePylT0zpQAAAAAAAAAA.png)*/ol/) ,  stylistic-set  :  [ none
](/docs/reference/foundations/none/) [ int ](/docs/reference/foundations/int/)
[ array ](/docs/reference/fo/*[ str ](/docs/reference/foundations/str///*![Preview](/assets/docs/9XI8EQ1M6rOusSDRRIbaPQAAAAAAAAAA.png)*/tr ](/docs/reference/foundations/str//*[ content
](/docs/reference/foundations/content/)*/ :  [ bool
](/*[ str ](/docs/reference/foundations/str/)*/b/*[ content
](/docs/reference/foundations/content/)*/auto/) [ str ](/docs/reference/foundations/str/)
,  number-width  :  [ auto ](/docs/reference/foundations/auto/) [ str
](/docs/refer/*[ ![â](/assets/icons/16-arrow-right.svg)*/ [ bool
](/docs/reference/foundations/bool/) ,  f/*[ ![â](/assets/icons/16-arrow-right.svg)*/dations/bool/) ,  features  :  [ array
](/docs/reference/foundations/array/) [ dictionary
](/docs//*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ontent
](/docs/reference/foundations/content/) ,  [ /*[ Reference ](/docs/reference/)*/ns/str/) ,

)  -> [ content ](/docs/referen/*[ Text ](/docs/reference/text/)*/` font `

[ str ](/docs/reference/foundatio/*[ Smartquote ](/docs/reference/text/smartquote/)*/ns/array/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.
/*![](/assets/icons/16-arrow-right.svg)*/of font family names.

When processing text, Typst tries all specified font /*[ text language ](/docs/reference/text/text/#parameters-lang)*/y glyphs. In the example below, the font
` Inria Serif ` is preferred, but since it does not contain Arabic glyphs, the
arabic text uses ` Noto Sans Arabic ` instead.

The collection o/*[Preview](/assets/docs/dhrUjSwC3cH8VIWvplWrzwAAAAAAAAAA.png)*/you can see the list of available fonts by clicking on the "Ag" button. You can provide additional fonts by upl/*![](/assets/icons/16-arrow-right.svg)*/o your project. They will be discovered automatically. The priority is: project fonts > server fonts. 

  - Locally, Typst uses your installed system fonts /*[ bool ](/docs/reference/*![Preview](/assets/docs/VxUeM1bvsLzygleocZmQUAAAAAAAAAAA.png)*/oundations/bool/)*/puter Modern Mat/*[ bool
](/docs/reference/foundations/bool/)*/n, you can /*[ auto
](/docs/reference/foundations/auto//*[ str ](/docs/reference/foundations/str//*[ array ](/docs/reference/foundations/array//*[ dictionary
](/doc/*![](/assets/icons/16-arrow-right.sv/*[Preview](/assets/docs/33w6KWiqvSrMq41iE5ob_QAAAAAAAAAA.png)*/onts that Typst/*[ bool ](/docs/reference/foundations/bool/)*/ou can pass the ` --ignore-system-fonts ` parameter to the CLI to ensure Typst won't search for system fonts. 

Default: ` "libertinus serif"  `

![](/assets/icons/16-arrow-right.svg) View example

  /*[ bool ](/docs/reference/foundations/bool/)*/This is sans-serif.
    
    #set text(font: (
      "Inria Serif",
      "Noto Sans Arabic",
    ))
    
    Th/*![](/assets/icons/16-arrow-right.svg)*/   

![Preview](/assets/docs/yZSlTN4UXKYq5EjwCcVgvwAAAAAAAAAA.png)

===  ` fallback `

[ bool ](/docs/reference/foundations/bool/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` r/*[Preview](/assets/docs/ykeeFPAnOBNAwmLXSDxTqAAAAAAAAAAA.png)*/imary font list cont/*[ bool ](/docs/reference/foundations/bool/)*/gh all available fonts for the most
similar one that has the necessary glyphs.

_Note:_ Currently, there are no warnings when fallback is disabled and no
glyphs are found. Instead, your text shows up in the form of "tofus": Small
boxes that indicate the lack of an appropriate glyph. In the future, you will
be able to instruct Typst to issue warnings so you know something is up.

Default: ` true  `

![](/assets/icons/16-arrow-right.svg) View example

    
/*[Preview](/assets/docs/lyTPNxNjIzyFJbp-JlBMpgAAAAAAAAAA.png)*/    
    #set t/*[ auto ](/docs/reference/foundations/auto/)*/ /*[ str
](/docs/reference/foundations/str/)*/i/*[ array
](/docs/reference/foundations/array/)*/ /*[ dictionary
](/docs/reference/foundations/dictionary/)*/ mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The desired font style.

When an italic style is requested and only an oblique one is ava/*![](/assets/icons/16-arrow-right.svg)*/s/reference/text/text/#parameters-lang)*/tand in for an
oblique one. When neither an italic nor an oblique style is available, Typst
selects the normal style/*[ string ](/docs/reference/foundations/str/)*/ in an
italic or oblique style, the difference between italic and oblique style is
rarely observable.

If you want to emphasize your text, you sho/*[ array ](/docs/reference/foundati/*![â](/assets/icons/16-arrow-right.svg)*/n instead. This makes it easy to
adapt the s/*![â](/assets/icons/16-arrow-right.svg)*/tions/dictionary/ "dictionary")*/

Variant  |  Details   
---|---  
` "  normal  " ` |  The defau/*![Docs](/assets/icons/16-docs-dark.svg)*/alic  " ` |  A cursive style with custom letterform.   
` "  oblique  " ` |  Just a slanted version of the normal style.   
  
Default: ` "normal"  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #text(font: "Libertinus Serif", style: "italic")[Italic]
    #text(font: "DejaVu Sans", style: "oblique")[Obl/*![](/assets/icons/16-arrow-right.svg)*/ew](/assets/docs/bSqE_vffbQfTFgF9cX2J6AAAAAAAAAAA.png)/*[ ![â](/assets/icons/16-arrow-right.svg)*/nt/) or  [ str
](/docs/reference/foundations/str/)

Settable

/*[ ![â](/assets/icons/16-arrow-right.svg)*/customized for all/*![Preview](/assets/docs/l4WLB64gFfplM-bDPX7pEQAAAAAAAAAA.png)*/ired thickness of the/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/n ` 100
` and ` 900  ` or one of the predefined weig/*[ Reference ](/docs/reference/)*/ht
is not available, Typst selects the font/*[ Text ](/docs/reference/text/)*/t in
weight.

If you want to strongly empha/*[ Line Break ](/docs/reference/text/linebreak/)*/rong ](/docs/reference/model/strong/ "strong") function instead. This makes
it easy to adapt the style later if you change your mind about how to signify
the strong emphasis./*![â](/assets/icons/16-arrow-right.svg)*/thin  " ` |  Thin weight (100).   
` "  extralight  " ` |  E/*![â](/assets/icons/16-arrow-right.svg)*/" `/*![](/assets/icons/16-arrow-right.svg)*/ar  " ` |  Regular weight (400).   
` "  medium  "/*![Docs](/assets/icons/16-docs-dark.svg)*/Th7Qcp7OAAAAAAAAAAA.png)*/wei/*![Preview](/assets/do/*[ Reference ](/docs/reference/)*/` "  extrabold  " ` |  Extrabold weight (800).   
` "  black  " ` |  Black weight (900).   
  
Default: ` "regular"  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set text(font: "IBM Plex Sans")
    
    #text(weight: "light")[Light] \
    #tex/*[ bool ](/docs/reference/foundations/bool/)*/eigh/*[ content ](/docs/reference/foundations/content/)*/ium] \
    #text/*[ bool ](/docs/reference/foundations/bool/)*/sets/docs/HLYJEJyYVhBAwk1NcGJZjQAAAAAAAAAA.png)

===  ` stretch `

[ ratio ](/docs/reference/layout/ratio/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The desired width of the glyphs. Accepts a ratio between ` 50%  ` and ` 200%
` . When the desired width is not available, Typst selects the font from the
family that is closest in stretch. This will only stretch the text if a
condensed or expanded version of the font is available.

If you want to adjust th/*[Preview](/assets/docs/RlJnAEDPiPVRCZ7poOHTOwAAAAAAAAAA.png)/*[ ![â](/assets/icons/16-arrow-right.svg)*/
](/docs/reference/text/text/#parameters-tracking) proper/*[ ![â](/assets/icons/16-arrow-right.svg)*/ts/icons/16-arrow-right.svg) View example

    
    
    #text(stretch: 75%)[Condensed] \
 /*[ ![Docs](/assets/icons/16-docs-dark.svg)*/review](/assets/docs/QhcCPECtjtdl-HaT2kdIoQAAAAAAAAA/*[ Reference ](/docs/reference/)*/ ](/docs/reference/layout/length/)

Settabl/*[ Text ](/docs/reference/text/)*/meters can be customized for all following /*[ Highlight ](/docs/reference/text/highlight/)*/ size of the glyphs. This value forms th/*![Preview](/assets/docs/IJovpbe1c5rRr9DM_KRhvgAAAAAAAAAA.png)*/ size.

You can also give the font size itself in ` em ` units. Then, it is relative
to the previous font size.

Def/*[Preview](/assets/docs/QtpA6ir9UWFHeXPRr2gD9AAAAAAAAAAA.png)*/example

    
    
    #set text(size: 20pt)
    very #text(1.5em)[big] text
    

![Preview](/assets/docs/blheA65DgOU1lkslOoHidgAAAAAAAAAA.png)

===  ` /*[ none ](/docs/reference/foundations/none//*[ color
](/docs/reference/visualize/color//*[ gradient
](/docs/reference/visualize/gradient//*[ pattern
](/docs/reference/visualize/pattern/)*/tion mark

/*[ none
](/docs/reference/foundations/none//*[ length
](/docs/reference/layout/length//*[ color ](/docs/reference/visualize/color//*[ gradient ](/docs/reference/visualize/gradient//*[ stroke
](/docs/reference/visualize/stroke//*[ pattern
](/docs/reference/visualize/pattern//*[ dictionary
](/docs/reference/foundations/dictionary/)*/CRTTtGAAAAAAA/*[ length
](/docs/reference/layout/length//*[ str ](/docs/reference/foundations/str/)*/ngth
](/docs/re/*[ length ](/docs/reference/layout/length//*[ str
](/docs/reference/foundations/str/)*/adient
](/d/*[ length
](/docs/reference/layout/length/)*/troke
](/do/*[ relative
](/docs/reference/layout/relative//*[ dictionary
](/docs/reference/foundations/dictionary/)*//*[ content
](/docs/reference/foundations/content/)*/ttable/*[ content ](/docs/reference/foundations/content/)*/mized for all/*[ none/*![](/assets/icons/16-arrow-right.svg)*/*/t/*[ color
](/docs/reference/visualize/color/)*/ /*[ gradient
](/docs//*![Preview](/assets/docs/KrWAMeKAPNsts-l34CremAAAAAAAAAAA.png)*/e/visualize/pattern/)*/+ red)[Stroked]
    

![Preview](/assets/docs/9XI8EQ1M6rOusSDRRIbaPQAAAAAAAAAA.png)

===  ` tracking `

[ length ](/docs/reference/layout/length/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The amount of space that should be added between characters.

Defau/*[Preview](/assets/docs/oW--DyYpfs3nP_lZOIl65gAAAAAAAAAA.png)*/mple

    
    /*[ none ](/docs/reference/foundations/none/)*/ /*[ length
](/docs/reference/layout/leng/*![](/assets/icons/16-arrow-right.svg)*/sualize/color/)*/i/*[ gradient
](/docs/reference/visualize/gradient/)*/e/*[ stroke
](/docs/reference/visualize/stroke/)*/e/*[ pattern
](/docs/reference/visualize/pattern/)*/t/*[ dictionary
](/docs/reference/foundations/dictionary/)*/etween words.

Can be given as an absolute length, but also relative to /*![Preview](/assets/docs/4Pafis8Dv1GSWE8dIkAx2wAAAAAAAAAA.png)*/ adj/*![â](/assets/icons/16-arrow-right.svg)*/ocumentation
](/docs/reference/visualize/rect/#parameters-str/*![â](/assets/icons/16-arrow-right.svg)*/roperty instead.

Default: ` 100%  +  0pt  `

![](/assets/icons/16-arrow-right.svg) View /*![Docs](/assets/icons/16-docs-dark.svg)*/g: 200%)
    Text with /*[Preview](/assets/docs/VdZlBJnkRgdzR_4L65zKzQAAAAAAAAAA.png)*/8eI1WSgAAAAAAAAAA/*[ length ](/docs/reference/layout/length/)*/]/*[ str
](/docs/reference/foundations/str/)*/ auto
](/docs/reference/foundations/auto/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

Whether to automatically insert spacing between CJK and Latin characters.

Default: ` auto  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set text(cjk-latin-spacing: auto)
    ç¬¬4ç« ä»ç»äºåºæ¬çAPIã
    
    #set text(cjk-latin-spacing: none)
    ç¬¬4ç« ä»ç»äºåºæ¬çAPIã
    

![Preview](/assets/docs/VxUeM1bvsLzygleocZmQUAAAAAAAAAAA.png)

===  ` baseline `

[ length ](/docs/reference/layout/length/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

An amount to shift the text baseline by.

Default: ` 0pt  `

![](/assets/icons/16-arrow-right.sv/*[Preview](/assets/docs/33w6KWiqvSrMq41iE5ob_QAAAAAAAAAA.png)*/d]
    word.
    

!/*[ length ](/docs/reference/layout/length/)*/m/*[ str
](/docs/reference/foundations/str/)*/ool ](/docs/reference/foundations/bool/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

Whether certain glyphs can hang over into the margin in justified text. This
can make justification visually more pleasing.

Defaul/*![](/assets/icons/16-arrow-right.svg)*/row-right.svg) View example

    
    
    #set par(justify: true)
    This justified text has a hyphen in
    the paragraph's first line. Hanging
    the hyphen slightly into the margin
    results in a clearer paragraph edge.
    
    #set/*![Preview](/assets/docs/k9JLw8qIVUINakYrnv50nAAAAAAAAAAA.png)*/n
    the paragraph's first line. Hanging
    the hyp/*[Preview](/assets/docs/tZTem6RAQXJ8OFzIrL6AnAAAAAAAAAAA.png)*/aph edge.
    
/*[ length ](/docs/reference/layout/length/)*/btjfgAAAAAAAAAA.png)

===  ` top-edge `

[ length ](/docs/reference/layout/length/) or  [ str
](/docs/reference/foundations/str/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The top end of the conceptual frame around the text used for layout and
positioning. This affects the size/*[Preview](/assets/docs/L2wf2ozgvgMg2iI3FR9LdQAAAAAAAAAA.png)*/--  
` "  ascen/*[ relative ](/docs/reference/layout/relative/)*/l/*[ dictionary
](/docs/reference/foundations/diction/*![Previe/*[ alignment ](/docs/reference/layout/alignment/)*/.   
` "  x-height  " ` |  The approximate height of non-ascending lowercase letters.   
` "  baseline  " ` |  The baselin/*[ rectangle's documentation
](/docs/reference/visualize/rect/#parameters-radius)*/bounding box.   
  
Default: ` "cap-height"  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set rect(inset: 0pt)
    #set text(size: 20pt)
    
    #set text(top-edge: "ascender")
 /*[Preview](/assets/docs/MdD0cA7uGh7p2/*![](/assets/icons/16-arrow-right.svg)*/  /*[ content ](/docs/reference/foundations/content/)*/ts/docs/LDeMc2Iiqb_9L3aj1lNrpgAAAAAAAAAA.png)

===  ` bottom-edge `

[ length ](/docs/reference/layout/length/) or/*![Preview](/assets/docs/I0B88ggX_x3jq5W1mvWVIgAAAAAAAAAA.png)*/ht.svg)*/rk

Settable parameters can be customized /*[ ![â](/assets/icons/16-arrow-right.svg)*/h a ` set ` rule.

The bottom end of the conceptual frame around the text used for layout and
p/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ainers that hold text.

Variant  |  Details   
---|-/*[ Reference ](/docs/reference/)*/baseline on which the letters rest.   
` " /*[ Text ](/docs/reference/text/)*/escender, which typically exceeds the depth/*[ Lorem ](/docs/reference/text/lorem/)*/ The bottom edge of the glyph's bounding box.   
  
Default: ` "baseline"  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set rect(inset: 0pt)
    #set text(size: 20pt)
    
    #set text(bottom-edge: "baseline")
    #rect(fill: aqua)[Typst]
    
    #set /*![](/assets/icons/16-arrow-right.svg)*/ect(fill: aqua)[Typst]
    

![Preview](/assets/docs/l4WLB64gFfplM-bDPX7pEQAAAAAAAAAA.png)

===/*[Preview](/assets/docs/ivKswpaSkeLwjU6-8qNTjgAAAAAAAAAA.png)*/ble

Questio/*![Preview](/assets/docs/W4bB6oEym3iwH_NdeQRsEAAAAAAAAAAA.png)*/ng uses of the function
with a ` set ` rule.

An [ ISO 639-1/2/3 la/*[ int ](/docs/reference/foundations/int/)*/iki//*[ str ](/docs/reference/foundations/str/)*/fects various /*[ int ](/docs/reference/foundations/int/)*/pipeline can make more informed choices. 
  - Hyphenation will use the correct patterns for the language. 
  - [ Smart quotes ](/docs/ref/*[ ![â](/assets/icons/16-arrow-right.svg)*/rrect quotes for the language. 
  - And all other things w/*[ ![â](/assets/icons/16-arrow-right.svg)*/  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set text(lang: "de")/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/ In diesem/*![Preview](/assets/docs/IQnLFKoKsoxRyhR3pSbfiwAAAAAAAAAA.png)*/cs/reference/)*/AAAA.png)

===  ` region `

[ none ](/docs//*[ Text ](/docs/reference/text/)*/  [ str
](/docs/reference/foundations/str/)/*[ Strikethrough ](/docs/reference/text/strike/)*/can be customized for all following uses of the function
with a ` set ` rule.

An [ ISO 3166-1 alpha-2 region code.
](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)

This lets the text process/*[Preview](/assets/docs/gYmGRzTLJUGSNzHzEZFB3gAAAAAAAAAA.png)*/

===  ` script `

[ auto ](/docs/reference/foundations/auto/) or  [ str
](/docs/reference/foundations/str/)

Settable

Question mark

Settable paramete/*[ auto ](/docs/reference/foundations/auto//*[ length
](/docs/reference/layout/length//*[ color ](/docs/reference/visualize/color//*[ gradient ](/docs/reference/visualize/gradient//*[ stroke
](/docs/reference/visualize/stroke//*[ pattern
](/docs/reference/visualize/pattern//*[ dictionary
](/docs/reference/foundations/dictionary/)*/r, and the /*[ auto
](/docs/reference/foundations/auto//*[ length
](/docs/reference/layout/length/)*/

When set /*[ length
](/docs/reference/layout/length/)*/ setting, an ap/*[ bool
](/docs/reference/foundations/bool/)*//*[ content
](/docs/reference/foundations/content/)*/erty.
/*[ content ](/docs/reference/foundations/content/)*/ight.svg) View /*[ auto ](/docs/reference/foundations/auto/)*/t/*[ length/*![](/assets/icons/16-arrow-right.svg)*//*[ color
](/docs/reference/visualize/color/)*/l/*[ gradient
](/docs/reference/visualize/gradient/)*/r/*[ stroke
](/docs/reference/visualize/stroke/)*/ /*[ pattern
](/docs/reference/visualize/pattern/)*/s/*[ dictionary
](/docs/reference/foundations/dictionary/)*/![Preview](/assets/docs/IJovpbe1c5rRr9DM_KRhvgAAAAAAAAAA.png)

===  ` dir `

[ auto ](/docs/reference/foundations/auto/) or  [ di/*[ stroke ](/docs/reference/visualize/stroke/ "stroke")*/

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The dominant direction for text and inline objects. Possible values are:

  - ` auto  ` : Automatically infer the direction from the ` lang ` property. 
  - ` ltr ` : Layout text from left to right. 
  - ` rtl ` : Layout text from right to left. 

When writing in right-to-l/*![](/assets/i/*[ none ](/docs/reference/foundations/none/)*/.png)*/language ](/doc/*[ auto ](/docs/reference/foundations/auto/)*/d/*[ length
](/docs/reference/layout/length/)*/e automatically layouted in the
correct direction, setting the dominant direction gives the b/*![Preview](/assets/docs/6iCMWj0AW9bSFKBJ48tdiwAAAAAAAAAA.png)*/o correctly place punctuation
and inline objects. Furthermore, setting the direction affects the alignment
values ` start ` and ` end ` , which are equivalent to ` left ` and ` right `
in ` ltr ` text and the other way around in ` rtl ` text.

If you set this to ` rtl ` and experience bugs or in some way bad looking
output, please g/*![](/assets/icons/16-a/*[ ` text ` ](/docs/reference/text/text/ "`text`")*/g)*/iscord server
]/*[ length ](/docs/reference/layout/length/)*/ contact form
](https://typst.app/contact) .

Default: ` auto  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set text(dir: rtl)
    ÙØ°Ø§ Ø¹Ø±Ø¨Ù.
    

![Preview](/assets/docs/KrWAMeKAPNsts-l34CremAAAAAAAAAAA.png)

===  ` hyphenate `

[ auto ](/docs/reference/foundations/auto/) or  [ bool
](/docs/reference/foundations/bool/)

Settable

Question mark

Settable parameters can be /*[Preview](/assets/docs/EqeD8OvCZeei8kbI8T5T0AAAAAAAAAAA.png)*/et ` rule.

Whether/*[ bool ](/docs/reference/foundations/bool/)*/. When /*![](/assets/icons/16-arrow/*[Preview](/assets/docs/_3ndU0y1KsOpDAMv999GwwAAAAAAAAAA.png)*/e [ text language ](/docs/reference/text/text/#parameters-lang)
ensures that the correct hyphenation patterns are used.

Default: ` auto  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set page(width: 200pt)
    
    #set par(justify: true)
    This text illustrates how/*[Preview](/assets/docs/5BzB-6LlvrhILN951-2KuQAAAAAAAAAA.png)*/ 
    #set te/*[ content ](/docs/reference/foundations/content/)*/w
    enabling hyphenation can
    improve justification.
    

![Preview](/assets/docs/4Pafis8Dv1GSWE8dIkAx2wAAAAAAAAAA.png)

==/*[ ![â](/assets/icons/16-arrow-right.sv/*![](/assets/icons/16-arrow-right.svg)*/able

Question mark

Setta/*[ ![â](/assets/icons/16-arrow-right.svg)*/ollowing uses of the function
with a ` se/*![Preview](/assets/docs/YY_AfHqvOwZWtTBzfgDvMwAAAAAAAAAA.png)*/sets/icons/16-docs-dark.svg)*/layout engine will make the choice less often. Costs/*[ Reference ](/docs/reference/)*/e default cost, so ` 50%  ` will make text /*[ Text ](/docs/reference/text/)*/ given choice, while ` 200%  ` will make it/*[ Raw Text / Code ](/docs/reference/text/raw/)*/s can be customized:

  - ` hyphenation ` : splitting a word across multiple lines 
  - ` runt ` : ending a paragraph with a line with a single word 
  - ` widow ` : leaving a single line of paragraph on the next page 
  - ` orphan ` : leaving single line of paragraph on the previous page 

Hyphenation is generally avoided by placing the whole word on the next line,
so a higher hyphenation cost can result in awkward justification spaci/*![](/assets/icons/16-arrow-right.svg)*/e or fewer words on previous lines, s/*![](/assets/icons/16-arrow-right.svg)*/re awkward in justification spacing.
/*![](/a/*[ int ](/docs/reference/foundations/int/)*/lt because they are /*[Preview](/assets/docs/HG5qpETGRO7ndBI1Qrek9gAAAAAAAAAA.png)*/exts they are allowed
b/*[ ` raw ` ](/docs/reference/text/raw/ "`raw`")*/ne to the next page, can result
in an uneven number of lines between pages. The ` w/*[ ` lang ` ](/docs/reference/text/raw/#parameters-lang)*/ications. (Currently, ` 0%  ` allows
widows/orphans; anything else, in/*[Preview](/assets/docs/MNABiMKxTxPPaXzIwfuPPQAAAAAAAAAA.png)*/ed cost specification for these modifications is planned for
the future.)

Default: `/*![â](/assets/icons/16-arrow-right.svg)*/0%  ,  widow  :  100%  ,
orphan  :  100%  ,  )  `

![](/a/*![â](/assets/icons/16-arrow-right.svg)*/mple

    
    
    #set text(hyphenate: true, size: 11.4pt)
    #set par(justify: true)
    
    #lorem(1/*![Docs](/assets/icons/16-docs-dark.svg)*/imes the normal cost.
    #set text(costs: (h/*![â/*[ Reference ](/docs/reference/)*/)
    

![Preview](/assets/docs/k9JLw8qIVUINakYrnv50nAAAAAAAAAAA.png)

===  ` kerning `

[ bool ](/docs/reference/foundations/bool/)

Settable

Question mark

Settable parameters can be customized for all foll/*![Docs](/assets/icons/16-docs-dark.svg)*/ ` rule.

/*![](/assets/icons/16-arrow-right.svg)*/ed, specific letter pairings move clo/*![](/assets/icons/16-arrow-right.svg)*/ore visually pleasing result. The example below demonstrates how
decreasing the gap between the "T" and "o" results in a more natural look.
Setting this to ` false  ` disables kerning by turning off the OpenType ` kern
` fo/*[ str ](/docs/reference/foundations/str/)*/ets/icons//*[ bool
](/docs/reference/foundations/bool/)*/
    #set/*[ none
](/docs/reference/foundations/none//*[ str ](/docs/reference/foundations/str/)*/

![Previe/*[ alignment ](/docs/reference/layout/alignment/)*/.png)

===  /*[ str ](/docs/reference/foundations/str//*[ array
](/docs/reference/foundations/array/)*/k

Settabl/*[ none
](/docs/reference/founda/*![Preview](/ass/*[ show rule ](/docs/reference/styling/#show-rules)*/ocs/reference/foundations/str/)*/ternates.

So/*[ int ](/docs/reference/foundations/int/)*/for th/*[ content ](/docs/reference/foundations/content/)*/hes to these /*[ str ](/docs/reference/foundations/str/)*/ature.

Default: ` false  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set text(
      font: "IBM Plex Sans",
      size: 20pt,
    )
    
    0, a, g, Ã
    
    #set text(alternates: true)
    0, a, g, Ã
    

![Preview](/assets/docs/I0B88ggX_x3jq5W1mvWVIgAAAAAAAAAA.png)

===  ` stylistic-set `

[ none ](/docs/reference/foundations/none/) or  [ int
](/docs/reference/foundations/int/) or  [ array
](/docs/reference/foundations/array/)

Settable

Question mark

Settable parameters can be customized for all following uses o/*[Preview](/assets/docs/6VperjQoP8Ey0LiUk5m0HQAAAAAAAAAA.png)*/ apply. Font d/*[ bool ](/docs/reference/foundations/bool/)*/forms into stylistic sets. As/*![â](/assets/icons/16-arrow-right.svg)*/
need to consult your font to know which sets are available/*![â](/assets/icons/16-arrow-right.svg)*/rray of integers, all of which must be
between ` 1  ` and ` 20  ` , enabling the corresponding Open/*![Docs](/assets/icons/16-docs-dark.svg)*/ ` . Setting this to ` none  ` will disable all
stylistic sets.

Default: ` (  )  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set text(font: "IBM Plex Serif")
    Ã vs #text(stylistic-set: 5)[Ã] \
    10 years ago vs #text(stylistic-set: (1, 2, 3/*![Preview](/assets/docs/ykeeFPAnOBNAwmLXSDxTqAAAAAAAAAAA.png)*/NdeQRsEAAAAAAAAAAA.png)

===  ` ligatures `

[ bool ](/docs/reference/foundations/bool/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

Whether standard ligatures are active.

Certain letter combinations like "fi" are often displayed as a single merged
glyph called a /*![](/assets/icons/16-arrow-right.s/*[ bool ](/docs/reference/foundations/bool/)*/*[Preview](/assets/docs/PgXCmmr2Cn53ZnpWQOnMwwAAAAAAAAAA.png)*/ ` true  `

!/*[ none ](/docs/reference/foundations/none/)*/x/*[ str
](/docs/reference/foundations/str/)*/)
    A fine ligature.
    
    #set text(ligatures: false)
    A fine ligature.
    

![Preview](/assets/docs/IQnLFKoKsoxRyhR3pSbfiwAAAAAAAAAA.png)

===  ` discretionary-ligatures `

[ bool ](/docs/reference/foundations/bool/)

Settable

Question mark

Settable parameters can be cus/*[ Typst markup
](/docs/reference/syntax/#markup)*/*[ Typst code
](/docs/reference/syntax/#code)*/ sh/*[ Typst math
](/docs/reference/syntax/#math)*/his to `
true  ` enables the OpenType ` dlig ` font feature.

Default: ` false  `

===  ` historical-ligatures `

[ bool ](/docs/reference/foundations/bool/)

Settable

Question mark

Settable par/*[Preview](/assets/docs/bjU3PMlFs9msUi72QThHnAAAAAAAAAAA.png)*/tion
with a ` /*[ alignment ](/docs/reference/layout/alignment/)*/tive. Setting this to ` true  ` enables the
OpenType ` hlig ` font feature.

Default: ` false  `

===  ` number-type `

[ auto ](/docs/reference/foundations/auto/) or  [ str
](/docs/reference/foundations/str/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

Which kind of numbers / figures to select. When set to `/*![](/assets/icons/16-arrow-right.svg)*/e font are used.

Variant  |  Details   
---|---  
` "  lining  " ` |  Numbers that fit well with capital text (the OpenType ` lnum ` font feature).   
` "  old-style  " ` |  Numbers that fit well into a flow of upper- and lowercase text (the OpenType ` onum ` font feature).   
  
Default: ` au/*![Preview](/assets/docs/bSqE_vffbQfTFgF9cX2J6AAAAAAAAAAA.png)*//*![â](/assets/icons/16-arrow-right.svg)*/BTr8mvwwAAAAAAAAAA.png)*/nu/*![â](/assets/icons/16-arrow-right.svg)*//foundations/str/)*/m/*[ array
](/docs/reference/foun/*![â](/assets/icons/16-arrow-right.svg)*/l5yPI_4pX3UbcVjqxI5_QAAAAAAAAAA.png)

===  ` numbe/*![Docs](/assets/icons/16-docs-dark.s/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/nce/foundations/str/)

Settable

Question mark

Settable paramete/*[ ` sublime-syntax ` file format
](https://www.sublimetext.com/docs/syntax.html)*/

The width of numbers / figures. When set to ` auto  ` , the default numbers
for the font are used.

Variant  |  Details   
---|---  
` "  proportional  " ` |  Numbers with glyph-specific widths (the OpenType ` pnum ` font feature).   
` "  tabular  " ` |  Numbers of equal width (th/*[Preview](/assets/docs/f1wEtKdjbuwy-LVNGIZ_igAAAAAAAAAA.png)*/
![](/assets/i/*[ none ](/docs/reference/foundations/none/)*/
/*[ auto
](/docs/reference/foundations/auto/)*/
/*[ str
](/docs/reference/foundation/*![Preview](/assets/docs/O/*[ auto ](/docs/reference/foundations/auto//*[ length
](/docs/reference/layout/length//*[ color ](/docs/reference/visualize/color//*[ gradient ](/docs/reference/visualize/gradient//*[ stroke
](/docs/reference/visualize/stroke//*[ pattern
](/docs/reference/visualize/pattern//*[ dictionary
](/docs/reference/foundations/dictionary/)*/ction
with a ` set ` rule.

Whether to have a slash through the zero glyph. Setting this to ` true  `
enables the OpenType ` zero ` font feature.

Default: ` false  `

![](/assets/icons/16-a/*[ ` text ` ](/docs/reference/text/text/ "`text`")*/ext(slashed-zero: true)[0]
    
/*[ filled block
](/docs/reference/layout/block/#parameters-fill)*/
===  ` fractions `

[/*[ `
xml ` ](/docs/reference/data-loading/xml/ "`xml`")*/Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

Whether to turn numbers into fractions. Setting this to ` true  ` enables the
OpenType ` frac ` font feature.

It is not advisable to enable this property globally as it will mess with all
appearances of numbers after a slash (e.g., in URLs). Instead, enable it
locally when you want/*![Preview](/assets/docs/RlJnAEDPiPVRCZ7poOHTOwAAAAAAAAAA.png)*//*![â/*[ stroke ](/docs/reference/visualize/stroke/ "stroke")*/)*/tions: true)[1/2]/*[ int ](/docs/refere/*![â](/assets/icons/16-arrow-right.svg)*/AAAAA.png)

===  ` features `

[ array ](/docs/reference/foundations/array/) or  [ dictionary/*![Docs](/assets/icons/16-docs-dark.svg)*/ry/)

Sett/*![](/assets/icons/16-arrow-right.svg)*/ers can be customized for all following uses of the function
with a ` set ` rule.

Raw OpenType features to apply.

  - If given an array of strings, sets the features identified by the strings to ` 1  ` . 
  - If given a dictionary m/*[Preview](/assets/docs/OAN98lLQ4wUhrTrjbVCTywAAAAAAAAAA.png)*/to the values. 

Default: ` (  :  )  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    // Enable the `frac` feature ma/*![Preview](/assets/docs/QtpA6ir9UWFHeXPRr2gD9AAAAAAAAAAA.png)*/eview](/assets/docs/YY_AfHqvOwZWtTBzfgDvMwAAAAAAAAAA.png)

===  ` body `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are s/*[ ` raw `
](/docs/reference/text/raw/ "`raw`")*/which all text is styled according to the other arguments.

===  ` text `

[ str ](/docs/reference/foundations/str/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

T/*[ int ](/docs/reference/foundations/int/)*//*[ int
](/docs/reference/foundations/int/)*//*[ str
](/docs/reference/foundations/str/)*//*[ content
](/docs/reference/foundations/content/)*/ge  ](/*[ content ](/docs/reference/foundations/content/)*/ence/text/lower./*[ int ](/docs/reference/foundations/int/)*/dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Text ](/docs/reference/text/)
  - ![](/a/*[ int ](/docs/reference/foundations/int/)*/ercase ](/docs/reference/text/lower/)

=  ` lower `

Converts a string or content to lowercase.

==  Example

    
    
    #lower("ABC") \
    #lower[_My Tex/*[ str ](/docs/reference/foundations/str/)*/view](/assets/docs/zbgdZcwg4Knc-ePylT0zpQAAAAAAAAAA.png)

==  Parameters

Question mark

Parameters are the inputs to a function. They a/*[ content ](/docs/reference/foundations/content/)*/me.

lower  (

[ str ](/docs/reference/foundations/str/) [ content
](/docs/reference/foundations/content/)

)  -> [ str ](/d/*[ ![â](/assets/icons/16-arrow-right.svg)*/](/docs/reference/foundations/content/)

===  ` text `
/*[ ![â](/assets/icons/16-arrow-right.svg)*/ or  [ content
](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional /*[ ![Docs](/assets/icons/16-docs-dark.svg)*/t names.

The text to convert to lowercase.

[ ![â/*[ Reference ](/docs/reference//*![â](/assets/icons/16-arrow-right.svg)*/erence/*[ Text ](/docs/reference/text/)*/icons/16/*![â](/assets/icons/16-arrow-right.svg)*/mall Capitals ](/docs/reference/text/smallcaps/)*/ference/text/smartquote.md*

  - [ ![Docs](/as/*![Docs](/assets/icons/16-docs-dark.svg)*/ - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - /*[Preview](/assets/docs/2GDSP4AltxmHWBvxVXZrwQAAAAAAAAAA.png)*/ow-right.svg)
  - [ Smartquote ](/docs/reference/text/smartquote/)

=  ` smartquote ` Element

Question mark

Element functions can be customized with `/*![](/assets/icons/16-arrow-right.svg)*/ge-aware quote that reacts to its context.

Automatically turns into an appropriate opening or closing quote based on the
active [ text language ](/docs/reference/text/text/#parameters-lang) .

==  Example

    
    
    "This is in quotes."
    
    #set text(lang: "de")
    "Das ist in AnfÃ¼hrungszeichen."
    
    #set text(lang: "fr")
    "C'est entre guillemets."
    

![Preview](/ass/*[ show rule ](/docs/reference/styling/#show-rules)*/  Syntax

This function also has dedicated syntax: The normal quote characters ( ` ' `
and ` " ` ). Typst automatically makes your quotes smart.

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

smartquote  (

double  :  [ bool ](/docs/reference/foundations/bool/) ,  enabled  :  [ bool
](/docs/reference/fo/*[Preview](/assets/docs/f0e4HVzW7NKFp4uqk6LvqgAAAAAAAAAA.png)*//foundations/bool/) ,  quotes  :  [ auto
](/docs/reference/foundations/auto/) [ str ](/docs/reference/foundations/str/)
[ array ](/docs/referenc/*[ content ](/docs/reference/foundations/content/)*/nce//*[ content ](/docs/reference/foundations/content/)*/cs/reference//*[ content ](/docs/reference/foundations/content/)*//docs/reference/foundations/bool/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
wi/*[ ![â](/assets/icons/16-arrow-right.svg)*/ a double quote.

Default: ` true  `

===  ` enabled `

[/*[ ![â](/assets/icons/16-arrow-right.svg)*/

Settable

Question mark

Settable parameters can be customized for all following uses of the fu/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/t quotes are enabled.

To disable smartness for a si/*[ Reference ](/docs/reference/)*/ it with a
backslash.

Default: ` true  `

/*[ Text ](/docs/reference/text/)*/t.svg) View example

 /*![](/assets/icons/16-arrow-right.svg)*/](/docs/reference/text/super/)*/dumb" quotes.
    

![Preview](/assets/docs/ykeeFPAnOBNAwmLXSDxTqAAAAAAAAAAA.png)

===  ` alternative `

[ bool ](/docs/reference/foundations/bool/)

Settable

Questio/*![Preview](/assets/docs/tZTem6RAQXJ8OFzIrL6AnAAAAAAAAAAA.png)*/ng uses of the fu/*[Preview](/assets/docs/052zwKrkvVHtZVzW65WFdQAAAAAAAAAA.png)*/es.

Does nothing for languages that don't have alternative quotes, or if explicit
quotes were set.

Default: ` false  `

![](/assets/icons/16-arrow-right.s/*[ bool ](/docs/reference/foundations/bool/)*/ang: "de")
  /*[
length ](/docs/reference/layout/length/)*/    "Das /*[ length
](/docs/reference/layout/length/)*//*[ content
](/docs/reference/f/*![Preview](/assets/docs/L2wf2ozgvgMg2iI3FR9LdQAAAAAAAAAA.png)*/ndations/content/)*//foundations/auto/) /*[ bool ](/docs/reference/foundations/bool/)*//) or  [ array
](/docs/reference/foundations/array/) or  [ dictionary
](/docs/reference/foundations/dictionary/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The quotes to use.

  - When set to ` auto  ` , the appropriate single quotes for the [ text language ](/docs/reference/text/text/#parameters-lang) will be used. This is the default. 
  - Custom quotes can be passed as a string, array, or dictionary of either 
    - [/*![Preview](/assets/docs/MdD0cA7uGh7p2z32380_kAAAAAAAAAAA.png)*/AAA.png)*/f two characters /*[ length ](/docs/reference/layout/length/)*/quotes (characters here refer to Unicode grapheme clusters) 
    - [ array ](/docs/reference/foundations/array/ "array") : an array containing the opening and closing double quotes 
    - [ dictionary ](/docs/reference/foundations/dictionary/ "dictionary") : an array containing the double and single quotes, each sp/*[ length ](/docs/reference/layout/length/)*/rray 

D/*![Docs](/assets/icons/16-docs-dark.svg)*/-arrow-rig/*![](/assets/icons/16-arrow-right.svg)*/set text(lang: "de")
    'Das sind no/*![](/assets/icons/16-arrow-right.svg)*/set smartquote(quotes: "()")
    "Das/*![](/assets/icons/16-arrow-right.svg)*/ 
    #set smartquote(quotes: (single: ("[[", "]]"),  double: auto/*[ content ](/docs/reference/foundations/content/)*/

![Preview](/assets/docs/bSqE_vffbQfTFgF9cX2J6AAAAAAAAAAA.png)

[ ![â](/assets/icons/16-arrow-right.svg) Small Capitals  Previous p/*[ ![â](/assets/icons/16-arrow-right.svg)*/[â](/assets/icons/16-arrow-right.svg)
Strikethrou/*[ ![â/*![â](/assets/icons/16-arrow-right.svg)*/)



= *docs/reference/text/linebreak.md*

  - [ ![Docs/*![â](/assets/icons/16-arrow-right.svg)*/](/assets/icons/16-docs-dark.svg)*/ow-right.svg)
  - [ Reference ](/docs/reference/)
  /*[ Refere/*![Docs](/assets/icons/16-docs-dark.svg)*/ Text ](/docs/reference/text//*[ Text ](/docs/reference/text/)*/w-right.svg)
  - [ Line Break ](/docs/refer/*[ Underline ](/docs/reference/text/underline/)*/t

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

Inserts a line break.

Advances the paragraph to the next line. A single trailing line break a/*![â](/assets/icons/16-arrow-right.svg)*/8zwdVIfyHyOpdk_9AAAAAAAAAAA.png)*/nal empty
lines.

==  Example

    
    
    _Date:_ 26.12.2022 \
    _Topic:_ Infrastructure Test \
    _Severity:_ High \
    

![Preview](/assets/docs/O/*[ auto ](/d/*![Docs](/assets/icons/16-/*[ str ](/docs/reference/foundations/str//*[ content
](/docs/reference/foundations/content/)*//*[ gradient ](/docs/reference/visualize/gradient//*[ stroke
](/docs/reference/visualize/stroke//*[ pat/*![](/as/*[ str ](/docs/reference/foundations/str/)*/onary
](/docs/reference/foundations/dictionary/)*/theses
afte/*[ auto
](/docs/reference/foundations/auto//*[ length
](/docs/reference/layout/length/)*/ns/bool/)

/*[ length
](/docs/referen/*![â](/assets/icons/16-arrow-right.svg)*/(/docs/refere/*![Preview](/assets/docs/gYmGRzTLJUGSNzHzEZ/*[ ![â](/assets/icons/16-arrow-right.svg)*//*[ content
](/docs/reference/foundations/content/)*/ses of/*[ content ](/docs/reference/foundations/content/)*/stify the line /*[ auto ](/docs/reference/foundations/auto/)*/u/*[ length
](/docs/reference/layout/length/)*/ /*[ color
](/docs/reference/visualize/color/)*/f/*[ gradient
](/docs/reference/visualize/gradient/)*/e/*[ stroke
](/docs/reference/visualize/stroke/)*/u/*[ pattern
](/docs/reference/visualize/pattern/)*/ /*[ dictionary
](/docs/reference/foundations/dictionary/)*/s paragraph #jb
    for an _interesting_ result. #jb
    

![Preview](/assets/docs/RlJnAEDPiPVRCZ7poOHTOwAAAAAAAAAA.png)

[ ![â/*[ stroke ](/docs/reference/visualize/stroke/ "stroke")*/s page
](/docs/reference/text/highlight/) [ ![â](/assets/icons/16-arrow-right.svg)
Lorem  Next page  ](/docs/reference/text/lorem/)



= *docs/reference/text/highlight.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ /*[Preview](/assets/docs/tbLKc9iYaghdhC9NcJaJOQAAAAAAAAAA.png)*/-right.svg)
  -/*[ auto ](/docs/reference/foundations/auto/)*/s/*[ length
](/docs/reference/layout/length/)*/ight ](/docs/reference/text/highlight/)

=  ` highlight ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

Highlights text with a background color.

==  Example

    
    
    This is #highlight[important].
    

![Preview](/assets/docs/QtpA6ir9UWFHeXPRr2gD9AAAAAAAAAAA.png)

==  Parameters

Question mark

Parameters are the in/*[Preview](/assets/docs/p2tUWXcYq-E_ZbDtwzCDrAAAAAAAAAAA.png)*/the fu/*![](/assets/icons/16-arrow-right.svg)*//layout/length/)*//reference/foundations/none/) [ color
](/docs/reference/visualize/color/) [ gradient
](/docs/reference/visualize/gradient/*![Preview](/assets/docs/z5bibL2s5nJ9Rg5dVQco5QAAAAAAAAAA.png)*/ :  [ none
](/docs/reference/foundations/none/) [ length
](/docs/reference/layout/length/) [ color ](/docs/reference/visualize/color/)
[ gradient ](/docs/reference/visualize/gra/*[Preview](/assets/docs/tbT2BOLPtcXW-alQPb8q6wAAAAAAAAAA.png)*/ern
](/docs/re/*[ bool ](/docs/reference/foundations/bool/)*//docs/reference/foundations/dictionary/) ,  top-edge  :  [ length
](/docs/reference/layout/length/) [ str ](/docs/*![](/assets/icons/16-arrow-right.svg)*/-edge  :  [ length ](/docs/reference/layout/length/) [ str
](/docs/reference/foundations/str/) ,  extent  :  [ length
](/docs/reference/layout/length/) ,/*![Preview](/assets/docs/1OEdd7_f0OE1q_8jKEVHmQAAAAAAAAAA.png)*/ dictionary
](/do/*[Preview](/assets/docs/PaJc2qUpoh1s97E6NZYz0QAAAAAAAAAA.png)*/eference/foundation/*[ bool ](/docs/reference/foundations/bool/)*/rence/foundations/content/)

===  ` fill `

[ none ](/docs/reference/foundations/none/) or  [ color
](/docs/reference/visualize/color/) or /*![](/assets/icons/16-arrow-right.svg)*/ze/gradient/) or  [ pattern
](/docs/reference/visualize/pattern/)

Settable

Question mark

Settable parameters can be customized for all fo/*![Preview](/assets/docs/EqeD8OvCZeei8kbI8T5T0AAAAAAAAAAA.png)*/to highlight the text with.

Default: ` rgb  (  "#fffd11a1"  )  `

![](/assets/icons/1/*[Preview](/assets/docs/W98M7AlnFoSVnlt9g5bIsAAAAAAAAAAA.png)*/light(
      /*[ content ](/docs/reference/foundations/content/)*/Preview](/assets/docs/oW--DyYpfs3nP_lZOIl/*![](/assets/icons/16-arrow-right.svg)*/[ none ](/docs/reference/foundations/none/) or/*[ ![â](/assets/icons/16-arrow-right.svg)*//) or  [ color
](/docs/reference/visualize/colo/*[ ![â](/asse/*![Preview](/assets/docs/5BzB-6LlvrhILN951-2KuQAAAAAAAAAA.png)*//docs/reference/visualize/stroke/) or  [ pattern
](/docs/refere/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/](/docs/reference/foundations/dictionary/)

Settable/*[ Reference ](/docs/reference/)*/et/*![â](/assets/icons/16-arrow-right.svg)*/u/*[ Text ](/docs/reference/text/)*/t ` rule.

The highlight'/*![â](/assets/icons/16-arrow-right.svg)*/eference/text/overline/)*/ference/visualize/rect/#parameters-stroke) for more details.

D/*![Docs](/assets/icons/16-docs-dark.svg)*//16-arrow-/*![](/assets/icons/16-arrow-right.svg)*/  This is a #highlight(
      stroke:/*![](/assets/icons/16-arrow-right.svg)*/mJqK4pMIkZOu3QEFxsZAAAAAAAAAAA.png)*//*![](/assets/icons/16-arrow-right.svg)*/===  ` top-edge `

[ length ](/docs/reference/layout/length/) or  [ str
](/docs/reference/foundations/str/)

Settable/*[ auto ](/docs/reference/foundations/auto//*[ length
](/docs/reference/layout/length//*[ color ](/docs/reference/visualize/color//*[ gradient ](/docs/reference/visualize/gradient//*[ stroke
](/docs/reference/visualize/stroke//*[ pattern
](/docs/reference/visualize/pattern//*[ dictionary
](/docs/reference/foundations/dictionary/)*/` |  The ap/*[ auto
](/docs/reference/foundations/auto//*[ length
](/docs/reference/layout/length/)*/ight of non/*[ length
](/docs/reference/layout/length/)*/line  " ` /*[ bool
](/docs/reference/foundations/bool/)*/  
` "  bounds /*[ bool
](/docs/referenc/*![Preview](/assets/docs/HG5qpETGRO7ndBI1Qrek9gAAAAAAAAAA.png)*/ns/content/)*/s/icon/*[ content ](/docs/reference/foundations/content/)*/ #set highlight/*[ auto ](/docs/reference/foundations/auto/)*/i/*[ length
](/docs/reference/layout/length/)*/d/*[ color
](/docs/reference/visualize/color/)*/t/*[ gradient
](/docs/reference/visualize/gradient/)*//*![Preview](/assets/docs/MNABiMKxTxPPaXzIwfuPPQAAAAAAAAAA.png)*/n
](/docs/reference/visualize/pattern/)*/ /*[ dictionary
](/docs/reference/foundations/dictionary/)*/estion mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The bottom end of/*[ stroke ](/docs/reference/visualize/stroke/ "stroke")*/|---  
` "  baseline  " ` |  The baseline on which the letters rest.   
` "  descender  " ` |  The font's descender, which typically exceeds the depth of all glyphs.   
` "  bounds  " ` |  The bottom edge of the glyph's bounding box.   
  
Default: ` "descender"  `

![](/assets/icons/16-arrow-right.svg) View example

/*[Preview](/assets/docs/jXEAZxd9NFnCtgcbDVlzIQAAAAAAAAAA.png)*/highlight[a] #h/*[ auto ](/docs/reference/foundations/auto/)*/-/*[ length
](/docs/reference/layout/length/)*/ight[ap]
    

![Preview](/assets/docs/tZTem6RAQXJ8OFzIrL6AnAAAAAAAAAAA.png)

===  ` extent `

[ length ](/docs/reference/layout/length/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The amount by which to extend the background to the sides beyond (or within if
negative) the content.

Default: ` /*[Preview](/assets/docs/AUBIhMOFPefmpe2mV6TTrgAAAAAAAAAA.png)*/    
    
    A/*[ length ](/docs/reference/layout/length/)*/
    

![Preview](/assets/docs/L2wf2ozgvgMg2iI3FR9LdQAAAAAAAAAA.png)

===  ` radius `

[ relative ](/docs/reference/layout/relative/) or  [ dictionary
](/docs/reference/foundations/dictionary/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

How much to round the highlight's corners. See the [ rectangle's documentation
](/*[Preview](/assets/docs/11dFhng73-PPcouY1kGuxAAAAAAAAAAA.png)*/details.

Defa/*[ bool ](/docs/reference/foundations/bool/)*/ow-right.svg) View example

    
    
    Listen #highlight(
      radius: 5pt, extent: 2pt
    )[carefully], it will /*![](/assets/icons/16-arrow-right.svg)*/ets/docs/MdD0cA7uGh7p2z32380_kAAAAAAAAAAA.png)

===  ` body `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The content that should be highlight/*[Preview](/assets/docs/4typb8n1rt84GcGKwEvmQAAAAAAAAAAA.png)*/*![Preview](/assets/docs/6VperjQoP8Ey0LiUk5m0HQAAAAAAAAAA.png)*/ol/)*/ow-right.svg) Line Break
Next page  ](/docs/reference/text/linebreak/)



= *docs/reference/text/lorem.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Text ](/docs/reference/text/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Lorem ](/docs/reference/text/lorem/)

=  ` lorem `

Creates bli/*![](/assets/icons/16-arrow-right.svg)*/ew](/assets/docs/J1qF0GrkgS3hBoWTovrZ_AAAAAAAAAAA.png)*/r of words. T/*[ content ](/docs/reference/foundations/content/)*/ always the
same but randomly chosen. As usual for blind texts, it does not make any
sense. Use it as a placeholder to try layouts/*[ ![â](/assets/icons/16-arrow-right.svg)*/
    #lorem(30)
    
    = More Blind Text
    #lorem/*[ ![â](/assets/icons/16-arrow-right.svg)*/SkeLwjU6-8qNTjgAAAAAAAAAA.png)

==  Parameters

Question mark

Parameters are the inputs to a f/*[ ![Docs](/assets/icons/16-docs-dark.svg)*/s
after the function name.

lorem  (

[ int ](/docs//*[ Reference ](/docs/reference/)*/ -> [ str ](/docs/refere/*![Preview](/assets/docs/PgXCmmr2Cn53ZnpWQOnMwwAAAAAAAAAA.png)*/rence/foundations/int/)

Required  P/*[ Uppercase ](/docs/reference/text/upper/)*/eters are specified in order, without names.

The length of the blind text in words.

[ ![â](/assets/icons/16-arrow-right.svg) Line Break  Previous page
/*[Preview](/assets/docs/0rcLdDpP-7G0hFWoW3-J-wAAAAAAAAAA.png)*/-arrow-right.svg)
Lowercase  Next page  ](/docs/reference/text/lower/)



= *docs/reference/text/strike.md*

  - [ ![Docs](/assets/icons/16-/*[ str ](/docs/reference/foundations/str//*[ content
](/docs/reference/foundations/content/)*/cs/r/*[ str ](/docs/reference/foundati/*![](/assets/icons/16-arrow-right.svg)*//foundations/content/)*/)
  - ![](/as/*[ str ](/docs/reference/foundations/str/)*/k/*[ content
](/docs/reference/foundat/*![Preview](/assets/docs/bjU3PMlFs9msUi72QThHnAAAAAAAAAAA.png)*/ons can be customized with ` set ` and  ` show ` rules.

Strikes through text.

==  Exa/*[ ![â](/assets/icons/16-arrow-right.svg)*/elevant.
    

![Preview](/assets/docs/gYmGRzTLJUGSNzHzEZ/*[ ![â](/assets/icons/16-arrow-right.svg)*/ion mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

strike  (

stroke  :  [ auto ](/docs/reference/foundations/auto/) [ length
](/docs/reference/layout/length/) [ color ](/docs/reference/visualize/color/)
[ gradient ](/docs/reference/visualize/gradient/) [ stroke
](/docs/reference/visualize/stroke/) [ pattern
](/docs/reference/visualize/pattern/) [ dictionary
](/docs/reference/foundations/dic/*![](/assets/icons/16-arrow-right.svg)*/s/reference/foundations/auto/) [ length
](/docs/reference/layout/length/) ,  extent  :  [ length
](/docs/reference/layo/*![Preview](/assets/docs/QoY61HWjc7MIUABTr8mvwwAAAAAAAAAA.png)*/tions/bool/) ,  [ content
](/docs/reference/foundations/content/) ,

)  -> [ content ](/docs/reference/foundations/content/)

===  ` stroke `

[ auto ](/docs/reference/foundations/auto/) or  [ length
](/docs/reference/layout/length/) or  [ color
](/docs/reference/visualize/color/) or  [ gradient
](/docs/reference/visualize/gradient/) or  [ stroke
](/docs/reference/visualize/stroke/) or  [ pattern
](/docs/reference/visualize/patte/*![](/assets/icons/16-arrow-right.svg)*/ce/foundations/dictionary/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

How to [ stroke ](/docs/reference/visualize/stroke/ "stroke") the lin/*![Preview](/assets/docs/f1wEtKdjbuwy-LVNGIZ_igAAAAAAAAAA.png)*/ckness defined in the
current font.

_Note:_ Please don't use this for real redaction as you can still copy paste
the text.

Default: ` auto  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    This is #strike(stroke: 1.5pt + red)[very stricken through]. \
    This is #strike(stroke: 10pt)[redacted].
    

![Preview](/assets/docs/z5bibL2s5nJ9Rg5dVQco5QAAAAAAAAAA.png)

===  ` offset `

[ auto ](/docs/reference/foundations/auto/) or  [ length
](/docs/reference/layout/length/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The position of the line relative to the baseline. Read from the font tables
if ` auto  ` .

This is useful if you are unhappy with the offset your font provides.

Default: ` auto  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set text(font: "Inria Serif")
    This is #strike(offset: auto)[low-ish]. \
    This is #strike(offset: -3.5pt)[on-top].
    

![Preview](/assets/docs/1OEdd7_f0OE1q_8jKEVHmQAAAAAAAAAA.png)

===  ` ex/*![](/assets/icons/16-arrow-right.svg)*/yout/length/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The amount by which to extend the line beyond (or within if negative) the
content.

Default: ` 0pt  `

![](/assets/icons/16-arrow-r/*![Preview](/assets/docs/_3ndU0y1KsOpDAMv999GwwAAAAAAAAAA.png)*/pt)[skips] parts of the word.
    This #strike(extent: 2pt)[extends] beyond the word.
    

![Preview](/assets/docs/EqeD8OvCZeei8kbI8T5T0AAAAAAAAAAA.png)

===  ` background `

[ bool ](/docs/reference/foundations/bool/)

Settable

Question mark

Settable parameters can be customized for all following uses of the funct/*![](/assets/icons/16-arrow-right.svg)*/ line is placed behind the content.

Default: ` false  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set st/*![Preview](/assets/docs/OAN98lLQ4wUhrTrjbVCTywAAAAAAAAAA.png)*/d.] \
    #strike(background: false)[This is in front.]
    

![Preview](/assets/docs/5BzB-6LlvrhILN951-2KuQAAAAAAAAAA.png)

===  ` body `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The content to strike through.

[ ![â](/assets/icons/16-arrow-right.svg) Smartquote  Previous page
](/docs/reference/text/smartquote/) [ ![â](/assets/icons/16-arrow-right.svg)
Subscript  Next page  ](/docs/reference/text/sub/)



= *docs/reference/text/raw.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Text ](/docs/reference/text/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Raw Text / Code ](/docs/reference/text/raw/)

=  ` raw ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

Raw text with optional syntax highlighting.

Displays the text verbatim and in a monospace font. This is typically used to
embed computer code into your document.

==  Example

    
    
    Adding `rbx` to `rcx` gives
    the desired result.
    
    What is ```rust fn main()``` in Rust
    would be ```c int main()``` in C.
    
    ```rust
    fn main() {
        println!("Hello World!");
    }
    ```
    
    This has ``` `backticks` ``` in it
    (but the spaces are trimmed). And
    ``` here``` the leading space is
    also trimmed.
    

![Preview](/assets/docs/HG5qpETGRO7ndBI1Qrek9gAAAAAAAAAA.png)

You can also construct a [ ` raw ` ](/docs/reference/text/raw/ "`raw`")
element programmatically from a string (and provide the la/*![â](/assets/icons/16-arrow-right.svg)*/(/docs/reference/text/raw/#parameters-lang) argument).

 /*![â](/assets/icons/16-arrow-right.svg)*/ang: "rust")
    

![Preview](/assets/docs/MNABiMKxTxPPaXzIwfuPPQAAAAAAAAAA.png)

==  Syntax

This functio/*![Docs](/assets/icons/16-docs-dark.svg)*/close text/*![](/assets/icons/16-arrow-right.svg)*/ke it raw. Two backticks produce empt/*![](/assets/icons/16-arrow-right.svg)*/ and code.

When you use three or mor/*![](/assets/icons/16-arrow-right.svg)*/cify a language
tag for syntax highlighting directly after the opening backticks. Within raw
blocks, everything (except for the language tag, if applicable) is rendered as
is, in particular, there are no escape sequences.

The language tag is an identifier that d/*![Preview](/assets/docs/2GDSP4AltxmHWBvxVXZrwQAAAAAAAAAA.png)*/ or more backticks. If your text starts with something
that looks like an identifier, but no syntax highlighting is needed, start the
text with a single space (which will be trimmed) or use the single backtick
syntax. If your text should start or end with a backtick, put a space before
or after it (it will be trimmed).

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

raw  (

[ str ](/docs/reference/foundations/str/) ,  block  :  [ bool
](/docs/reference/foundations/bool/) ,  lang  :  [ none
](/docs/reference/foundations/none/) [ str ](/docs/reference/foundations/str/)
,  align  :  [ alignment ](/docs/reference/layout/alignment/) ,  syntaxes  :
[ str ](/docs/reference/foundations/str/) [ array
](/docs/reference/foundations/array/) ,  theme  :  [ none
](/docs/reference/foundations/none/) [ auto
](/docs/reference/foundations/auto/) [ str ](/docs/reference/foundations/str/)
,  tab-size  :  [ int ](/docs/reference/foundations/int/)/*![Preview](/assets/docs/f0e4HVzW7NKFp4uqk6LvqgAAAAAAAAAA.png)*/===  ` text `

[ str ](/docs/reference/foundations/str/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The raw text.

You can also use raw blocks creatively to create custom syntaxes for your
automations.

![](/assets/icons/16-arrow-right.svg) View example

    
    
    // Parse numbers in raw blocks with the
    // `mydsl` tag and sum them up.
    #show raw.where(lang: "mydsl"): it => {
      let sum = /*![â](/assets/icons/16-arrow-right.svg)*/
        sum += int(part.trim())
      }
      sum
    }
  /*![â](/assets/icons/16-arrow-right.svg)*/  ```
    

![Preview](/assets/docs/6VperjQoP8Ey0LiUk5m0HQAAAAAAAAAA.png)

===  ` block `

[ bool ]/*![Docs](/assets/icons/16-docs-dark.svg)*/ttable

Qu/*![](/assets/icons/16-arrow-right.svg)*/be customized for all following uses /*![](/assets/icons/16-arrow-right.svg)*/
Whether the raw text is displayed as/*![](/assets/icons/16-arrow-right.svg)*/sing one-backtick notation makes this ` false  ` . Using
three-backtick notation makes it ` true  ` if the enclosed content contains at
least one line break.

Default: ` false  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    // Display inline code in a small box
    // th/*![Preview](/assets/docs/052zwKrkvVHtZVzW65WFdQAAAAAAAAAA.png)*/alse): box.with(
      fill: luma(240),
      inset: (x: 3pt, y: 0pt),
      outset: (y: 3pt),
      radius: 2pt,
    )
    
    // Display block code in a larger block
    // with more padding.
    #show raw.where(block: true): block.with(
      fill: luma(240),
      inset: 10pt,
      radius: 4pt,
    )
    
    With `rg`, you can search through your files quickly.
    This example searches the current directory recursively
    for the text `Hello World`:
    
    ```bash
    rg "Hello World"
    ```
    

![Preview](/assets/docs/PgXCmmr2Cn53ZnpWQOnMwwAAAAAAAAAA.png)

===  ` lang `

[ none ](/docs/reference/foundations/none/) or  [ str
](/docs/reference/foundations/str/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The language to syntax-highlight in.

Apart from typical langua/*![](/assets/icons/16-arrow-right.svg)*/ports the `
"typ"  ` , ` "typc"  ` , and ` "typm"  ` tags for [ Typst markup
](/docs/reference/s/*![Preview](/assets/docs/1_zKQkbZObDWVLT4k-2LKQAAAAAAAAAA.png)*/ , and [ Typst math
](/docs/reference/syntax/#math) , respectively.

Default: ` none  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    ```typ
    This is _Typst!_
    ```
    
    This is ```typ also _Typst_```, but inline!
    

![Preview](/assets/docs/bjU3PMlFs9msUi72QThHnAAAAAAAAAAA.png)

===  ` align `

[ alignment ](/docs/reference/layout/alignment/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The horizontal alignment that each line in a raw block should have. This
option is ignored if this is not a raw block (if specified ` block: false ` or
single backticks were used in markup mode).

By default, this is set to ` start ` , meaning that raw text is aligned
towards the start of the text direction inside the block by default,
regardless of the current context's alignment (allowing you to center the raw
blo/*![â](/assets/icons/16-arrow-right.svg)*/ide it, for example).

Default: ` start `

![](/asset/*![â](/assets/icons/16-arrow-right.svg)*/

    
    
    #set raw(align: center)
    
    ```typc
    let f(x) = x
    code = "cent/*![Docs](/assets/icons/16-docs-dark.svg)*/docs/QoY61/*![](/assets/icons/16-arrow-right.svg)*/  ` syntaxes `

[ str ](/docs/referen/*![](/assets/icons/16-arrow-right.svg)*/ocs/reference/foundations/array/)

Se/*![](/assets/icons/16-arrow-right.svg)*/eters can be customized for all following uses of the function
with a ` set ` rule.

One or multiple additional syntax definitions to load. The syntax definitions
should be in the [ ` sublime-syntax ` file format
](https://www.sublimetext.com//*![Preview](/assets/docs/xV-Fy8zwdVIfyHyOpdk_9AAAAAAAAAAA.png)*/-arrow-right.svg) View example

    
    
    #set raw(syntaxes: "SExpressions.sublime-syntax")
    
    ```sexp
    (defun factorial (x)
      (if (zerop x)
        ; with a comment
        1
        (* x (factorial (- x 1)))))
    ```
    

![Preview](/assets/docs/f1wEtKdjbuwy-LVNGIZ_igAAAAAAAAAA.png)

===  ` theme `

[ none ](/docs/reference/foundations/none/) or  [ auto
](/docs/reference/foundations/auto/) or  [ str
](/docs/reference/foundations/str/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The theme to use for syntax highlighting. Theme files should be in the [ `
tmTheme ` file format
](https://www.sublimetext.com/docs/color_schemes_tmtheme.html) .

Applying a theme only affects the color of specifically highlighted text. It
does not consider the theme's foreground and background properties, so that
you retain control over the color of raw text. You can apply the foreground
color yourself with the [ ` text ` ](/docs/reference/text/text/ "`text`")
function and the background with a [ filled block
](/docs/reference/layout/block/#parameters-fill) . You could also use the [ `
xml ` ](/docs/reference/data-loading/xml/ "`xml`") function to extract these
properties from the theme.

Additionally, you can set the theme to ` none  ` to disable highlighting.

Default: ` auto  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set raw(theme: "halcyon.tmTheme")
    #show raw: it => block(
      fill: rgb("#1d2433"),
      inset: 8pt,
      /*![](/assets/icons/16-arrow-right.svg)*/2aabc"), it)
    )
    
    ```typ
    = Chapter 1
    #let hi = "Hello World"
    ```
    

![Preview](/assets/do/*![Preview](/assets/docs/tbLKc9iYaghdhC9NcJaJOQAAAAAAAAAA.png)*/[ int ](/docs/reference/foundations/int/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The size for a tab stop in spaces. A tab is replaced with enough spaces to
align with the next multiple of the size.

Default: ` 2  `

![](/assets/icons/16-arrow-right.svg) View/*![](/assets/icons/16-arrow-right.svg)*/size: 8)
    ```tsv
    Year	Month	Day
    2000	2	3
    2001	2	1
    2002	3	10
    ```
    

![Pr/*![Preview](/assets/docs/p2tUWXcYq-E_ZbDtwzCDrAAAAAAAAAAA.png)*/  Definitions

Question mark

Functions and types and can have associated definitions. These are accessed by
specifying the function or type, followed by a period, and then the
definition's name.

===  ` line ` Element

Question mark

Element functions can be customized with ` set ` an/*![](/assets/icons/16-arrow-right.svg)*/e of raw text.

This is a helper element that is synthesized by [ ` raw `
](/docs/reference//*![Preview](/assets/docs/tbT2BOLPtcXW-alQPb8q6wAAAAAAAAAA.png)*/ properties of the line, such as the line
number, the raw non-highlighted text, the highlighted text, and whether it is
the first or last line of the raw block.

raw  .  line  (

[ int ](/docs/reference/foundations/int/) ,  [ int
](/docs/reference/foundations/int/) ,  [ str
](/d/*![](/assets/icons/16-arrow-right.svg)*/content
](/docs/reference/foundations/content/) ,

)  -> [ content ](/docs/reference/foundations/content/)

====  ` numbe/*![Preview](/assets/docs/PaJc2qUpoh1s97E6NZYz0QAAAAAAAAAA.png)*/itional

Question mark

Positional parameters are specified in order, without names.

The line number of the raw line inside of the raw block, starts at 1.

====  ` count `

[ int ](/docs/reference/foundations/int/)

Required  Positional

Question mark

Positional parame/*![](/assets/icons/16-arrow-right.svg)*/names.

The total number of lines in the raw block.

====  ` text `

[ str ](/docs/reference/foundations/str/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The l/*![Preview](/assets/docs/W98M7AlnFoSVnlt9g5bIsAAAAAAAAAAA.png)*//foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The highlighted raw text.

[ ![â](/assets/icons/16-arrow-right.svg)/*![â](/assets/icons/16-arrow-right.svg)*/ce/text/overline/) [ ![â](/assets/icons/16-arro/*![â](/assets/icons/16-arrow-right.svg)*/](/docs/reference/text/smallcaps/)



= *docs/reference/text/smallcaps.md*

  - [ ![Docs](/asset/*![Docs](/assets/icons/16-docs-dark.svg)*/![](/asset/*![](/assets/icons/16-arrow-right.svg)*/erence ](/docs/reference/)
  - ![](/a/*![](/assets/icons/16-arrow-right.svg)*/ Text ](/docs/reference/text/)
  - ![/*![](/assets/icons/16-arrow-right.svg)*/ - [ Small Capitals ](/docs/reference/text/smallcaps/)

=  ` smallcaps ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

Displays text in small capitals.

==  Example

    
    
    Hello \
    #sm/*![Preview](/assets/docs/BQmJqK4pMIkZOu3QEFxsZAAAAAAAAAAA.png)*/VXZrwQAAAAAAAAAA.png)

==  Smallcaps fonts

By default, this enables the OpenType ` smcp ` feature for the font. Not all
fonts support this feature. Sometimes smallcaps are part of a dedicated font.
This is, for example, the case for the _Latin Modern_ family of fonts. In
those cases, you can use a show-set rule to customize the appearance of the
text in smallcaps:

    
    
    #show smallcaps: set text(font: "Latin Modern Roman Caps")
    

In the future, this function will support synthesizing smallcaps from normal
letters, but this is not yet implemented.

==  Smallcaps headings

You can use a [ show rule ](/docs/reference/styling/#show-rules) to apply
smallcaps formatting to all your headings. In the example below, we also
center-align our headings and disable the standard bold font.

    
    
    #set par(justify: true)
    #set heading(numbering: "I.")
    
    #show heading: smallcaps
    #show heading: set align(center)
    #show heading: set text(
      weight: "regular"
    )
    
    = Introduction
    #lorem(40)
    

![Preview](/assets/docs/f0e4HVzW7NKFp4uqk6LvqgAAAAAAAAAA.png)

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

smallcaps  (

[ content ](/docs/reference/foundations/content/)

)  -> [ content ](/docs/reference/foundations/content/)

===  ` body `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The content to display in sm/*![](/assets/icons/16-arrow-right.svg)*//16-arrow-right.svg) Raw Text / Code  Previous page
](/docs/reference/text/raw/) [ ![â](/assets/icons/16-arrow-right.svg)
Smartquote  Next page  ](/docs//*![Preview](/assets/docs/jXEAZxd9NFnCtgcbDVlzIQAAAAAAAAAA.png)*/d*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Text ](/docs/reference/text/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Superscript ](/docs/reference/text/super/)

=  ` super ` Element

Question mark

/*![](/assets/icons/16-arrow-right.svg)*/ith ` set ` and  ` show ` rules.

Renders text in superscript.

The text is rendered smaller and its/*![Preview](/assets/docs/AUBIhMOFPefmpe2mV6TTrgAAAAAAAAAA.png)*/try!
    

![Preview](/assets/docs/052zwKrkvVHtZVzW65WFdQAAAAAAAAAA.png)

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

super  (

typographic  :  [ bool ](/docs/reference/foundations/bool/) ,  baselin/*![](/assets/icons/16-arrow-right.svg)*/ut/length/) ,  size  :  [ length
](/docs/reference/layout/length/) ,  [ content
](/docs/reference/foundations/content/) ,

)  -> [ co/*![Preview](/assets/docs/11dFhng73-PPcouY1kGuxAAAAAAAAAAA.png)*/phic `

[ bool ](/docs/reference/foundations/bool/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

Whether to prefer the dedicated superscript characters of the font.

If this is enabled, Typst first t/*![](/assets/icons/16-arrow-right.svg)*/ript
codepoints. If that fails, it falls back to rendering raised and shrunk normal
letters.

Default: ` true  `

![](/assets/icons/16-arrow-rig/*![Preview](/assets/docs/4typb8n1rt84GcGKwEvmQAAAAAAAAAAA.png)*/)[1]
    N#super(typographic: false)[1]
    

![Preview](/assets/docs/1_zKQkbZObDWVLT4k-2LKQAAAAAAAAAA.png)

===  ` baseline `

[ length ](/docs/reference/layout/length/)

Settable

Question mark

Settable parameters can be customized for all following uses of the funct/*![](/assets/icons/16-arrow-right.svg)*/e shift for synthetic superscripts. Does not apply if ` typographic
` is true and the font has superscript codepoints for the given ` body ` .

Default: ` -  0.5em  `

===  ` size `

[ length ](/docs/reference/lay/*![Preview](/assets/docs/J1qF0GrkgS3hBoWTovrZ_AAAAAAAAAAA.png)*/n be customized for all following uses of the function
with a ` set ` rule.

The font size for synthetic superscripts. Does not apply if ` typographic ` is
true and the font has superscript codepoin/*![â](/assets/icons/16-arrow-right.svg)*/0.6em  `

===  ` body `

[ content ](/docs/reference/fo/*![â](/assets/icons/16-arrow-right.svg)*/l

Question mark

Positional parameters are specified in order, without names.

The text to displ/*![Docs](/assets/icons/16-docs-dark.svg)*/ons/16-arr/*![](/assets/icons/16-arrow-right.svg)*/e
](/docs/reference/text/sub/) [ ![â/*![](/assets/icons/16-arrow-right.svg)*/Text
Next page  ](/docs/reference/tex/*![](/assets/icons/16-arrow-right.svg)*/derline.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Text ](/*![Preview](/assets/docs/0rcLdDpP-7G0hFWoW3-J-wAAAAAAAAAA.png)*/vg)
  - [ Underline ](/docs/reference/text/underline/)

=  ` underline ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

Underlines text.

==  Example

    
    
    This is #underline[important].
    

![Preview](/assets/docs/xV-Fy8zwdVIfyHyOpdk_9AAAAAAAAAAA.png)

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

underline  (

stroke  :  [ auto ](/docs/reference/foundations/auto/) [ length
](/docs/reference/layout/length/) [ color ](/docs/referen/*![â](/assets/icons/16-arrow-right.svg)*/reference/visualize/gradient/) [ stroke
](/docs/reference/v/*![â](/assets/icons/16-arrow-right.svg)*/rence/visualize/pattern/) [ dictionary
](/docs/reference/foundations/dictionary/) ,  offset  :  [ auto
](/docs/reference/foundations/auto/) [ length
](/docs/reference/layout/length/) ,  extent  :  [ length
](/docs/reference/layout/length/) ,  evade  :  [ bool
](/docs/reference/foundations/bool/) ,  background  :  [ bool
](/docs/reference/foundations/bool/) ,  [ content
](/docs/reference/foundations/content/) ,

)  -> [ content ](/docs/reference/foundations/content/)

===  ` stroke `

[ auto ](/docs/reference/foundations/auto/) or  [ length
](/docs/reference/layout/length/) or  [ color
](/docs/reference/visualize/color/) or  [ gradient
](/docs/reference/visualize/gradient/) or  [ stroke
](/docs/reference/visualize/stroke/) or  [ pattern
](/docs/reference/visualize/pattern/) or  [ dictionary
](/docs/reference/foundations/dictionary/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

How to [ stroke ](/docs/reference/visualize/stroke/ "stroke") the line.

If set to ` auto  ` , takes on the text's color and a thickness defined in the
current font.

Default: ` auto  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    Take #underline(
      stroke: 1.5pt + red,
      offset: 2pt,
      [care],
    )
    

![Preview](/assets/docs/tbLKc9iYaghdhC9NcJaJOQAAAAAAAAAA.png)

===  ` offset `

[ auto ](/docs/reference/foundations/auto/) or  [ length
](/docs/reference/layout/length/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The position of the line relative to the baseline, read from the font tables
if ` auto  ` .

Default: ` auto  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #underline(offset: 5pt)[
      The Tale Of A Faraway Line I
    ]
    

![Preview](/assets/docs/p2tUWXcYq-E_ZbDtwzCDrAAAAAAAAAAA.png)

===  ` extent `

[ length ](/docs/reference/layout/length/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The amount by which to extend the line beyond (or within if negative) the
content.

Default: ` 0pt  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #align(center,
      underline(extent: 2pt)[Chapter 1]
    )
    

![Preview](/assets/docs/tbT2BOLPtcXW-alQPb8q6wAAAAAAAAAA.png)

===  ` evade `

[ bool ](/docs/reference/foundations/bool/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

Whether the line skips sections in which it would collide with the glyphs.

Default: ` true  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    This #underline(evade: true)[is great].
    This #underline(evade: false)[is less great].
    

![Preview](/assets/docs/PaJc2qUpoh1s97E6NZYz0QAAAAAAAAAA.png)

===  ` background `

[ bool ](/docs/reference/foundations/bool/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

Whether the line is placed behind the content it underlines.

Default: ` false  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set underline(stroke: (thickness: 1em, paint: maroon, cap: "round"))
    #underline(background: true)[This is stylized.] \
    #underline(background: false)[This is partially hidden.]
    

![Preview](/assets/docs/W98M7AlnFoSVnlt9g5bIsAAAAAAAAAAA.png)

===  ` body `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The content to underline.

[ ![â](/assets/icons/16-arrow-right.svg) Text  Previous page
](/docs/reference/text/text/) [ ![â](/assets/icons/16-arrow-right.svg)
Uppercase  Next page  ](/docs/reference/text/upper/)



= *docs/reference/text/overline.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Text ](/docs/reference/text/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Overline ](/docs/reference/text/overline/)

=  ` overline ` Element

Question mark

Element functions can be customized with ` set ` and  ` show ` rules.

Adds a line over text.

==  Example

    
    
    #overline[A line over text.]
    

![Preview](/assets/docs/BQmJqK4pMIkZOu3QEFxsZAAAAAAAAAAA.png)

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

overline  (

stroke  :  [ auto ](/docs/reference/foundations/auto/) [ length
](/docs/reference/layout/length/) [ color ](/docs/reference/visualize/color/)
[ gradient ](/docs/reference/visualize/gradient/) [ stroke
](/docs/reference/visualize/stroke/) [ pattern
](/docs/reference/visualize/pattern/) [ dictionary
](/docs/reference/foundations/dictionary/) ,  offset  :  [ auto
](/docs/reference/foundations/auto/) [ length
](/docs/reference/layout/length/) ,  extent  :  [ length
](/docs/reference/layout/length/) ,  evade  :  [ bool
](/docs/reference/foundations/bool/) ,  background  :  [ bool
](/docs/reference/foundations/bool/) ,  [ content
](/docs/reference/foundations/content/) ,

)  -> [ content ](/docs/reference/foundations/content/)

===  ` stroke `

[ auto ](/docs/reference/foundations/auto/) or  [ length
](/docs/reference/layout/length/) or  [ color
](/docs/reference/visualize/color/) or  [ gradient
](/docs/reference/visualize/gradient/) or  [ stroke
](/docs/reference/visualize/stroke/) or  [ pattern
](/docs/reference/visualize/pattern/) or  [ dictionary
](/docs/reference/foundations/dictionary/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

How to [ stroke ](/docs/reference/visualize/stroke/ "stroke") the line.

If set to ` auto  ` , takes on the text's color and a thickness defined in the
current font.

Default: ` auto  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set text(fill: olive)
    #overline(
      stroke: green.darken(20%),
      offset: -12pt,
      [The Forest Theme],
    )
    

![Preview](/assets/docs/jXEAZxd9NFnCtgcbDVlzIQAAAAAAAAAA.png)

===  ` offset `

[ auto ](/docs/reference/foundations/auto/) or  [ length
](/docs/reference/layout/length/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The position of the line relative to the baseline. Read from the font tables
if ` auto  ` .

Default: ` auto  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #overline(offset: -1.2em)[
      The Tale Of A Faraway Line II
    ]
    

![Preview](/assets/docs/AUBIhMOFPefmpe2mV6TTrgAAAAAAAAAA.png)

===  ` extent `

[ length ](/docs/reference/layout/length/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

The amount by which to extend the line beyond (or within if negative) the
content.

Default: ` 0pt  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set overline(extent: 4pt)
    #set underline(extent: 4pt)
    #overline(underline[Typography Today])
    

![Preview](/assets/docs/11dFhng73-PPcouY1kGuxAAAAAAAAAAA.png)

===  ` evade `

[ bool ](/docs/reference/foundations/bool/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

Whether the line skips sections in which it would collide with the glyphs.

Default: ` true  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #overline(
      evade: false,
      offset: -7.5pt,
      stroke: 1pt,
      extent: 3pt,
      [Temple],
    )
    

![Preview](/assets/docs/4typb8n1rt84GcGKwEvmQAAAAAAAAAAA.png)

===  ` background `

[ bool ](/docs/reference/foundations/bool/)

Settable

Question mark

Settable parameters can be customized for all following uses of the function
with a ` set ` rule.

Whether the line is placed behind the content it overlines.

Default: ` false  `

![](/assets/icons/16-arrow-right.svg) View example

    
    
    #set overline(stroke: (thickness: 1em, paint: maroon, cap: "round"))
    #overline(background: true)[This is stylized.] \
    #overline(background: false)[This is partially hidden.]
    

![Preview](/assets/docs/J1qF0GrkgS3hBoWTovrZ_AAAAAAAAAAA.png)

===  ` body `

[ content ](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The content to add a line over.

[ ![â](/assets/icons/16-arrow-right.svg) Lowercase  Previous page
](/docs/reference/text/lower/) [ ![â](/assets/icons/16-arrow-right.svg) Raw
Text / Code  Next page  ](/docs/reference/text/raw/)



= *docs/reference/text/upper.md*

  - [ ![Docs](/assets/icons/16-docs-dark.svg) ](/docs)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Reference ](/docs/reference/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Text ](/docs/reference/text/)
  - ![](/assets/icons/16-arrow-right.svg)
  - [ Uppercase ](/docs/reference/text/upper/)

=  ` upper `

Converts a string or content to uppercase.

==  Example

    
    
    #upper("abc") \
    #upper[_my text_] \
    #upper[ALREADY HIGH]
    

![Preview](/assets/docs/0rcLdDpP-7G0hFWoW3-J-wAAAAAAAAAA.png)

==  Parameters

Question mark

Parameters are the inputs to a function. They are specified in parentheses
after the function name.

upper  (

[ str ](/docs/reference/foundations/str/) [ content
](/docs/reference/foundations/content/)

)  -> [ str ](/docs/reference/foundations/str/) [ content
](/docs/reference/foundations/content/)

===  ` text `

[ str ](/docs/reference/foundations/str/) or  [ content
](/docs/reference/foundations/content/)

Required  Positional

Question mark

Positional parameters are specified in order, without names.

The text to convert to uppercase.

[ ![â](/assets/icons/16-arrow-right.svg) Underline  Previous page
](/docs/reference/text/underline/) [ ![â](/assets/icons/16-arrow-right.svg)
Math  Next page  ](/docs/reference/math/)

